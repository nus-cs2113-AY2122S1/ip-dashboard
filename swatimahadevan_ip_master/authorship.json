[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"import command.Command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"import exceptions.DukeInvalidArgumentException;","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import ui.UI;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":" * Function for Duke class.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    private static final String FILEPATH \u003d \"data/saveData.txt\";","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     * Load save data if the save file exists.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     * If file npt available, create one.","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    public Duke(String filePath){","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        try{","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"            tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"            UI.printFileNotFoundMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     * Parses user input and executes it until \"bye\" command is encountered.","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    public void run(){","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        UI.printGreetMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        while(!isExit){","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"            try {","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"                String input \u003d UI.getUserInput();","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"                Command c \u003d Parser.parse(tasks, input);","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"                c.execute(tasks, storage);","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"            } catch (DukeInvalidArgumentException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"     * Main method that runs Duke when called.","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"        new Duke(FILEPATH).run();","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":4,"swatimahadevan":51}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import ui.UI;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":" * Represents bye command given by user to exit application.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"     * Saves the data and gives the user","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"     * an appropriate exit message.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList  List of Tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage    the storage object to save the data","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(TaskList tasksList, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"            storage.saveData(tasksList.getTasks());","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"            UI.printByeMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"            UI.printFailToWriteMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     * Returns a boolean to check whether to exit application or not.","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"     * @return true This tells the application to exit.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":41}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import exceptions.DukeInvalidArgumentException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" * Represents a command to be executed.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"     * Format for subclasses to execute methods.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    public abstract void execute(TaskList tasks, Storage storage) throws DukeInvalidArgumentException;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     * Format for isExit() method for subclasses.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":21}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":" * Represents the delete command given by user to delete a task.","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    private int index;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"     * Deletes task from list.","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage Storage object to save the data","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(TaskList tasksList, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        // index - 1 will be done at task.TaskList.deleteFromList","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        tasksList.deleteFromList(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     * Returns a boolean to check whether to exit application or not.","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     * @return false To continue taking user commands","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":37}},{"path":"src/main/java/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import exceptions.DukeInvalidArgumentException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" * Represents the done command given by user","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" * to mark a task as complete.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    private int index;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     * Marks task in list as done.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage Storage object to save the data","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(TaskList tasksList, Storage storage) throws DukeInvalidArgumentException {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"            tasksList.markTaskAsDone(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"            throw new DukeInvalidArgumentException();","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     * Returns a boolean to check whether to exit application or not.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     * @return false To continue taking user commands","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":42}},{"path":"src/main/java/command/EventAndDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import task.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" * Represents event and deadline commands given by user","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":" * as task to be completed by a certain date (deadline),","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":" * or a task to be completed at some day (event).","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"public class EventAndDeadlineCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    private String type;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    private String description;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    private String timeOfEvent;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    public EventAndDeadlineCommand(String type, String description, String timeOfEvent) {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        this.timeOfEvent \u003d timeOfEvent;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     * Adds event or deadline task to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage Storage object to save the data","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(TaskList tasksList, Storage storage){","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        if (type.equals(\"event\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"            Event event \u003d new Event(description, timeOfEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"            tasksList.addToList(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"            Deadline deadline \u003d new Deadline(description, timeOfEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"            tasksList.addToList(deadline);","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"     * Returns a boolean to check whether to exit application or not.","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     * @return false To continue taking user commands","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"        return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":51}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import ui.UI;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":" * Represents the find command given by user","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":" * to display list of tasks that match a keyword.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    private String filter;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    public FindCommand(String filter) {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"        this.filter \u003d filter;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     * Displays a list of tasks that match the keyword","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     * given by the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage Storage object to save the data","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(TaskList tasksList, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d tasksList.findTasks(filter);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        UI.printFindTasksList(filteredTasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"     * Returns a boolean to check whether to exit application or not.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     * @return false To continue taking user commands","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":43}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import ui.UI;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" * Represents the list command given by user","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" * to list all current tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"     * Lists all the current taks","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage Storage object to save the data","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(TaskList tasksList, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"        UI.printTasksList(tasksList.getTasks());","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     * Returns a boolean to check whether to exit application or not.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * @return false To continue taking user commands","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":33}},{"path":"src/main/java/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import task.ToDo;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" * Represents todo command given by user to","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" * as task without time.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    private String description;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     * Adds todo task to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage Storage object to save the data","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(TaskList tasksList, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        tasksList.addToList(new ToDo(description));","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     * Returns a boolean to check whether to exit application or not.","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     * @return false To continue taking user commands","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":38}},{"path":"src/main/java/command/UnknownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package command;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import ui.UI;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" * Represents an unrecognised command input by the user","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" * that cannot be parsed by the program.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"public class UnknownCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"    String description;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    public UnknownCommand(String description) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     * Gives user an appropriate error for a command not found.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     * @param storage Storage object to save data","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    public void execute(TaskList tasksList, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        UI.printUnknownCommandMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     * Returns a boolean to check whether to exit application or not.","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     * @return false To continue taking user commands","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":38}},{"path":"src/main/java/exceptions/DukeInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package exceptions;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":" * Represents the exception thrown for invalid arguments given by the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"public class DukeInvalidArgumentException extends Exception{","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"swatimahadevan":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import command.*;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import exceptions.DukeInvalidArgumentException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import ui.UI;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" * Represents class that parses user input for commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"public class Parser {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"     * Parses user input and returns Command object to be executed.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"     * If no command has been found, return unknownCommand object.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     * @param input User input","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     * @throws DukeInvalidArgumentException If argument is in wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     * @return Respective Command object","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    public static Command parse(TaskList tasksList, String input) throws DukeInvalidArgumentException {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"        if (input.trim().equals(\"list\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"        if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"            int index \u003d -1;","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"            index \u003d Integer.parseInt(input.split(\"done\")[1].trim());","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"            if(index \u003c 1 || index \u003e tasksList.getTasks().size()){","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"                throw new DukeInvalidArgumentException();","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"            int index \u003d -1;","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"            try {","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"                index \u003d Integer.parseInt(input.split(\"delete\")[1].trim());","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"            }  catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"                UI.printTaskNotInListMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"            if(index \u003c 1 || index \u003e tasksList.getTasks().size()){","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"                throw new DukeInvalidArgumentException();","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"            String description;","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"            try {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"                description \u003d input.trim().split(\"todo\")[1].trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"                UI.printNoDescriptionFoundMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"                throw new DukeInvalidArgumentException();","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"            return new ToDoCommand(description);","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"        if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"            final String TYPE \u003d \"deadline\";","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"            String deadlineDetails;","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"            try {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"                deadlineDetails \u003d input.trim().split(\"deadline\")[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"                UI.printNoDescriptionFoundMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"                throw new DukeInvalidArgumentException();","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"            String description, by;","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"            try {","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"                description \u003d deadlineDetails.split(\"/by\")[0].trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"                by \u003d deadlineDetails.split(\"/by\")[1].trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"                UI.printInvalidNumberOfParametersMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"                throw new DukeInvalidArgumentException();","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"            return new EventAndDeadlineCommand(TYPE, description, by);","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"        if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"            final String TYPE \u003d \"event\";","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"            String eventDetails;","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"            try {","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"                eventDetails \u003d input.trim().split(\"event\")[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"                UI.printNoDescriptionFoundMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"                throw new DukeInvalidArgumentException();","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"            String description, at;","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"            try {","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"                description \u003d eventDetails.split(\"/at\")[0].trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"                at \u003d eventDetails.split(\"/at\")[1].trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"                UI.printInvalidNumberOfParametersMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"                throw new DukeInvalidArgumentException();","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"swatimahadevan"},"content":"            return new EventAndDeadlineCommand(TYPE, description, at);","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"swatimahadevan"},"content":"        if (input.startsWith(\"find\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"swatimahadevan"},"content":"            String filter;","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"swatimahadevan"},"content":"            filter \u003d input.split(\"find\")[1].trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"            return new FindCommand(filter);","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"swatimahadevan"},"content":"        return new UnknownCommand(input);","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":113}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import task.Event;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import task.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import task.ToDo;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"import java.io.File;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":" * Represents storage for writing and loading tasks from a save file.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"public class Storage {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    private static final String FILEPATH \u003d \"data/savedData.txt\";","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    private static final String SAVEDIR \u003d \"data\";","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     * Serializes each task into a string and writes onto a save file.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * @throws IOException If the system failed to write data onto save file","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    public static void saveData(ArrayList\u003cTask\u003e tasksList) throws IOException {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        StringBuilder line \u003d new StringBuilder();","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"        for (Task task: tasksList) {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"            line.append(serializeTask(task));","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        FileWriter fw \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        fw.write(line.toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        fw.close();","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"     * Deserializes the tasks stored in the save file in string format","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"     * and returns the entire list.","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     * @return List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     * @throws FileNotFoundException If save file was not found","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    public static ArrayList\u003cTask\u003e loadData() throws FileNotFoundException {","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"        File directory \u003d new File(SAVEDIR);","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        if (!directory.exists() \u0026\u0026 directory.mkdir()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println(\"Successfully created a new directory for save file\");","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"            File f \u003d new File(FILEPATH);","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"                tasks.add(deserializeTask(s.nextLine()));","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"        return tasks;","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"     * Deserializes the task from string format into parsable commands","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"     * @param serializedTask Task to be deserialized from string format","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"    private static Task deserializeTask(String serializedTask) {","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"        String[] splitTask \u003d serializedTask.split(\"\\\\|\");","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"        String taskType \u003d splitTask[0];","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"        boolean isDone \u003d splitTask[1].equals(\"1\");","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d splitTask[2].trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"            case \"T\":","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"            task \u003d new ToDo(description, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"            case \"D\":","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"            String by \u003d splitTask[3].trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"            task \u003d new Deadline(description, by, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"            case \"E\":","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"            String at \u003d splitTask[3].trim();","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"            task \u003d new Event(description, at, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"        return task;","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"     * Serializes the task to strings in a format delimited by \"|\"","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"     * @param task Task to be delimited","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"    private static String serializeTask(Task task) {","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"        result +\u003d task.getTaskType() + \"|\";","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"        result +\u003d (task.getDoneStatus() ? 1 : 0) + \"|\";","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"        result +\u003d task.getDescription();","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"swatimahadevan"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"            result +\u003d \"|\" + ((Deadline) task).getBy();","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"swatimahadevan"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"swatimahadevan"},"content":"            result +\u003d \"|\" + ((Event) task).getAt();","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"        return result + \"\\n\";","lastModifiedDate":"2021-09-10"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"swatimahadevan":111}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":" * Represents class for deadline tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    public static final String type \u003d \"D\";","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    public Deadline(String description, String by){","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        this.by \u003d LocalDate.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     * Returns the time by which the deadline task has to be completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     * @return Time of deadline task as a LocalDate","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"        return by;","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     * Overrides the toString method to print the deadline task.","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"     * @return [D] + statusIcon + description + (at: d MMM yyyy)","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        return \"[\" + type + \"]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     * Returns the type of deadline tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     * @return Task type \"D\"","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"        return type;","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"swatimahadevan":51}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":" * Represents class for event tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    protected String at;","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    public static final String type \u003d \"E\";","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"    public Event( String description, String at, boolean isDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     * Returns the time at which the event task will take place.","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     * @return Time of event task as a String","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    public String getAt(){","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"        return at;","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     * Overrides the toString method to print the event task.","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     * @return [E] + statusIcon + description + (at: \" \")","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"        return \"[\" + type + \"]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     * Returns the type of event tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"     * @return Task type \"E\"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"        return type;","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"swatimahadevan":47}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":" * Represents the Task object","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"public class Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    protected String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"    Task(String description) {","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     * Gets the status icon of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     * @return X or \" \"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     * An \u0027abstract\u0027 class, to be overridden by subclasses.","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    public String getTaskType(){","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"        return \"To be overridden by subclass\";","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"     * @return Description of the task","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"        return description;","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     * Gets task isDone status.","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     * @return isDone","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"    public boolean getDoneStatus(){","lastModifiedDate":"2021-09-10"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"        return isDone;","lastModifiedDate":"2021-09-10"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"     * Sets isDone to true.","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"     * Overrides the toString method to print the tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"     * @return status icon + task description","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"swatimahadevan":70}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import ui.UI;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import exceptions.DukeInvalidArgumentException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" * Represents the list of tasks and basic functionalities","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":" * to be performed on the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"public class TaskList {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"     * Add task to list and gives message to the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"     * @param task Task to be added to list","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    public void addToList(Task task) {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"        UI.printAddTaskMessage(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"     * Deletes task from list gives message to the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"     * @param index Index of task to be deleted","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"    public void deleteFromList(int index) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        String deletedTask \u003d tasks.get(index - 1).toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        tasks.remove(index - 1);","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"        int size \u003d tasks.size();","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"        UI.printDeleteTaskMessage(deletedTask, size);","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"     * Marks a task as done by setting isDone to true.","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"     * @param index Index of the task to be marked as done","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"     * @throws DukeInvalidArgumentException If index is invalid","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"    public void markTaskAsDone(int index) throws DukeInvalidArgumentException {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"            tasks.get(index - 1).markAsDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"            throw new DukeInvalidArgumentException();","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"        String description \u003d tasks.get(index - 1).toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"        UI.printDoneMessage(description);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"        return tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"     * Compile a list of tasks that math \"find\" command keyword.","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"     * @param keyword Keyword to be checked against list of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"     * @return ArrayList List of keyword-matching tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"    public ArrayList\u003cTask\u003e findTasks(String keyword){","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"        return tasks.stream()","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"                .filter(task -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"swatimahadevan":75}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":" * Represents class for todo tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"    public static final String type \u003d \"T\";","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     * Overrides the toString method to print the todo task.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     * @return [T] + statusIcon + description","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"        return \"[\" + type + \"]\" + super.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     * Returns the type of todo tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"     * @return Task type \"T\"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"        return type;","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"swatimahadevan":36}},{"path":"src/main/java/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"package ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"import task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"swatimahadevan"},"content":" * Represents the user interface for Duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"swatimahadevan"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"public class UI {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"swatimahadevan"},"content":"    private static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"swatimahadevan"},"content":"    private static void printDividerLine() {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"swatimahadevan"},"content":"     * Reads and returns the input from the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"swatimahadevan"},"content":"     * @return Input given by the user","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"swatimahadevan"},"content":"    public static String getUserInput() {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"swatimahadevan"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"swatimahadevan"},"content":"     * Prints the welcome message.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"swatimahadevan"},"content":"    public static void printGreetMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"swatimahadevan"},"content":"        String logo \u003d \" _____    ______      \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"swatimahadevan"},"content":"                + \"|_   _|   |  _  \\\\     \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"swatimahadevan"},"content":"                + \"  | | ___ | | | |___  \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"swatimahadevan"},"content":"                + \"  | |/ _ \\\\| | | / _ \\\\ \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"swatimahadevan"},"content":"                + \"  | | (_) | |/ / (_) |\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"swatimahadevan"},"content":"                + \"  \\\\_/\\\\___/|___/ \\\\___/ \\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Hello, I\u0027m ToDo, your personal planner!\\n\" + \"What\u0027s on today\u0027s agenda?\");","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"swatimahadevan"},"content":"     * Prints the exit message.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"swatimahadevan"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Bye!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"swatimahadevan"},"content":"     * Prints message after task is added to list.","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"swatimahadevan"},"content":"    public static void printAddTaskMessage(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(tasksList.get(tasksList.size() - 1));","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Now you have \" + tasksList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"swatimahadevan"},"content":"     * Prints message for invalid input by the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"swatimahadevan"},"content":"    public static void printUnknownCommandMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"swatimahadevan"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"swatimahadevan"},"content":"    public static void printTasksList(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"swatimahadevan"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"swatimahadevan"},"content":"        for (Task item: tasksList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println((i++) + \". \" + item);","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"swatimahadevan"},"content":"     * Prints error message when user does not give the task description","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"swatimahadevan"},"content":"     * for todo, event, or deadline commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"swatimahadevan"},"content":"    public static void printNoDescriptionFoundMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"☹ OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"swatimahadevan"},"content":"     * Prints error message when user does not give the","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"swatimahadevan"},"content":"     * entire details for event or deadline commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"swatimahadevan"},"content":"    public static void printInvalidNumberOfParametersMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"☹ I cannot help you unless you provide the details!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"swatimahadevan"},"content":"     * Prints message after task has been marked as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"swatimahadevan"},"content":"     * @param description Task description","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"swatimahadevan"},"content":"    public static void printDoneMessage(String description) {","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(description);","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"swatimahadevan"},"content":"     * Prints error message when user is trying to access task","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"swatimahadevan"},"content":"     * not in list.","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"swatimahadevan"},"content":"    public static void printTaskNotInListMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"☹ OOPS!!! No such item in the list :-(\");","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"swatimahadevan"},"content":"     * Prints message after task has been deleted from list.","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"swatimahadevan"},"content":"     * @param description Task description","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"swatimahadevan"},"content":"     * @param size Size of ArrayList for tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"swatimahadevan"},"content":"    public static void printDeleteTaskMessage(String description, int size) {","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Got it! I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"swatimahadevan"},"content":"     * Prints error message when data is not successfully","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"swatimahadevan"},"content":"     * written to the storage file.","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"swatimahadevan"},"content":"    public static void printFailToWriteMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Failed to write data\");","lastModifiedDate":"2021-09-17"},{"lineNumber":151,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":152,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":153,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":154,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"swatimahadevan"},"content":"     * Prints error message when storage file not found.","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":157,"author":{"gitId":"swatimahadevan"},"content":"    public static void printFileNotFoundMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":158,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":159,"author":{"gitId":"swatimahadevan"},"content":"        System.out.println(\"Error: save file not found\");","lastModifiedDate":"2021-09-17"},{"lineNumber":160,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":161,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":162,"author":{"gitId":"swatimahadevan"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":163,"author":{"gitId":"swatimahadevan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":164,"author":{"gitId":"swatimahadevan"},"content":"     * Prints list of tasks matching the keyword input by the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"swatimahadevan"},"content":"     * If a matching task cannot be found, prints a message.","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"swatimahadevan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"swatimahadevan"},"content":"     * @param tasksList List of matching tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"swatimahadevan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"swatimahadevan"},"content":"    public static void printFindTasksList(ArrayList\u003cTask\u003e tasksList) {","lastModifiedDate":"2021-09-18"},{"lineNumber":170,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":171,"author":{"gitId":"swatimahadevan"},"content":"        if (!tasksList.isEmpty()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"swatimahadevan"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"swatimahadevan"},"content":"            for (Task item : tasksList) {","lastModifiedDate":"2021-09-18"},{"lineNumber":174,"author":{"gitId":"swatimahadevan"},"content":"                System.out.println((i++) + \". \" + item);","lastModifiedDate":"2021-09-18"},{"lineNumber":175,"author":{"gitId":"swatimahadevan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"swatimahadevan"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":177,"author":{"gitId":"swatimahadevan"},"content":"            System.out.println(\"Could not find matching tasks!\");","lastModifiedDate":"2021-09-18"},{"lineNumber":178,"author":{"gitId":"swatimahadevan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":179,"author":{"gitId":"swatimahadevan"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":180,"author":{"gitId":"swatimahadevan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":181,"author":{"gitId":"swatimahadevan"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"swatimahadevan":181}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swatimahadevan"},"content":"todo borrow book","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"swatimahadevan"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"swatimahadevan"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"swatimahadevan"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"swatimahadevan"},"content":"done 1","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"swatimahadevan"},"content":"done 2","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"swatimahadevan"},"content":"list","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"swatimahadevan":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"swatimahadevan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"swatimahadevan":1}}]
