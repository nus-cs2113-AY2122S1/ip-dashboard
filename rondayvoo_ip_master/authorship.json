[{"path":"data/saveDuke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"[ ] | T | this","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"[X] | E | that | Jun 21 2018","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"[ ] | D | those | Mar 03 2012","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"import duke.util.Parser;","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.util.Storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"import duke.util.UI;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":" * This class is the main body of the Duke task manager. It contains a Storage class to read and write Task files from","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":" * disk, a TaskList class to store Tasks and perform actions on the task list, a Parser class to process user input,","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":" * and a UI class to print information to the command line.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"    private final UI ui;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"    public Duke() {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"        ui \u003d new UI();","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"        storage \u003d new Storage(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"     * Prints a starting message to the command line. The function then runs in a loop, taking user input and","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"     * processing it until a command to end the program is issued by the user. If the program does not end, the","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"     * command output by the Scanner is executed if it is not null. The list of tasks is then saved to a file.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"     * When the program ends, it prints an ending message to the command line.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"rondayvoo"},"content":"    public void run() {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"rondayvoo"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"rondayvoo"},"content":"        while (parser.parseNextLine()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"rondayvoo"},"content":"            Command c \u003d parser.processCommands(ui);","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"rondayvoo"},"content":"            if (c !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"rondayvoo"},"content":"                c.execute(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"rondayvoo"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"rondayvoo"},"content":"            ui.printDivLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"rondayvoo"},"content":"            storage.saveTasks(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"rondayvoo"},"content":"        ui.printFarewell();","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"rondayvoo"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rondayvoo":43,"-":4}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":" * Represents the command to add a new Task to the task list. Contains addedTask, the task to be added.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"    Task addedTask;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"    public AddCommand(Task addedTask) {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"        this.addedTask \u003d addedTask;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"     * Adds the stored task to the specified list of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"     * @param tl The list of tasks that the task is added to.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"        tl.addNewTask(addedTask);","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":25}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":" * Represents a command that the user issues to Duke.","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"    public abstract void execute(TaskList tl);","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":13}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":" * Represents the command to delete an existing Task from the task list. Contains index, the index of the task to be","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":" * deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"    int index;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"     * Deletes the task at the specified index from the given list of Tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"     * @param tl The list of tasks that the task is deleted from.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"        tl.deleteTask(index);","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":25}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":" * Represents the command to mark an existing Task in the task list as done. Contains index, the index of the task to","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":" * be marked done.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"    int index;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"     * Marks the task at the specified index from the given list of Tasks as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"     * @param tl The list of tasks that the task is marked done.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"            tl.markTaskDone(index);","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"            System.out.println(\"DukeException: \" + e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":29}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":" * Represents the command to find tasks in a list with a given String key.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"    String key;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"    public FindCommand(String key) {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"        this.key \u003d key;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"     * Finds all the tasks containing the String key in a given list of Tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"     * @param tl The list of tasks to be searched.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"        ArrayList\u003cTask\u003e results \u003d tl.findTasks(key);","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"        if (results.size() \u003e 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"            System.out.println(\"Here are the tasks matching your key:\");","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"            for (int i \u003d 0; i \u003c results.size(); i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"                System.out.println((i + 1) + \". \" + results.get(i));","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"rondayvoo"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"rondayvoo"},"content":"            System.out.println(\"No tasks match your key.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":34}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import duke.util.TaskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":" * Represents the command to print all Tasks in a list of Tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"     * Prints all Tasks in the given list of Tasks to the command line.","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"     * @param tl The list of tasks to be printed.","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"        tl.listTasks();","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":18}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":" * This class handles exceptions thrown by the program.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":" * Also contains definitions for common program-related exceptions that may be triggered by user input.","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"    public static final String TASK_ALREADY_DONE \u003d \"Task already completed.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"    public static final String TASK_ARRAY_FULL \u003d \"No more memory to store tasks.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"    public static final String INDEX_OOB \u003d \"Index outside range.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"    public static final String INDEX_INVALID \u003d \"Index is not a valid integer.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"    public static final String COMMAND_INVALID \u003d \"Command given cannot be recognized.\";","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"    public static final String DATE_INVALID \u003d \"Date given has the wrong format.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"    public static final String TODO_BLANK_DESC \u003d \"Description of todo is blank.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"    public static final String DEADLINE_BLANK_DESC \u003d \"Description of deadline is blank.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"    public static final String DEADLINE_NO_SLASH \u003d \"Deadline command does not include \u0027/\u0027 character.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"    public static final String DEADLINE_BLANK_DATE \u003d \"Date of deadline is blank.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"    public static final String EVENT_BLANK_DESC \u003d \"Description of event is blank.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"    public static final String EVENT_NO_SLASH \u003d \"Event command does not include \u0027/\u0027 character.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"    public static final String EVENT_BLANK_DATE \u003d \"Date of event is blank.\";","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"     * Throws an exception with a specified message.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"     * @param errorMessage The message included when the exception is thrown.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"rondayvoo"},"content":"    public DukeException (String errorMessage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"rondayvoo"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"rondayvoo":34}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":" * Represents a Deadline task and has a type of D. It is defined by a description String and a date String.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"    public Deadline(String description, LocalDate date) {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"        this.type \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"    public String toString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"        String prefix;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"        if (type \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"            prefix \u003d \" (by: \";","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"            prefix \u003d \" (at: \";","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"        return super.toString() + prefix + date.format(DateTimeFormatter.ofPattern(Task.DATE_FORMAT)) + \")\";","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"rondayvoo"},"content":"    public String saveString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"rondayvoo"},"content":"        return super.saveString() + \" | \" + date.format(DateTimeFormatter.ofPattern(Task.DATE_FORMAT));","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"rondayvoo":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":" * Represents an Event task and has a type of D. It is defined by a description String and a date String.","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"public class Event extends Deadline {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"    public Event(String description, LocalDate date) {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"        super(description, date);","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"        this.type \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"    public String toString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"        return super.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"rondayvoo":18}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":" * Represents a task that the user has added into Duke. A \u003ccode\u003eTask\u003c/code\u003e object is defined by its description String.","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":" * It also has a char type which indicates if it is a Todo, Event or Deadline. The boolean isDone is true if the Task","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":" * is done. The static int totalTasks represents the total number of tasks in circulation.","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"    public static final String DATE_FORMAT \u003d \"MMM dd yyyy\";","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"    protected String description;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"    protected char type;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"    protected static int totalTasks \u003d 0;","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"        totalTasks++;","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"     * Returns the String interpretation of this Task.","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"     * @return String The String interpretation of this Task.","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"    public String toString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"            return \"[\" + type + \"][X] \" + description;","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"rondayvoo"},"content":"            return \"[\" + type + \"][ ] \" + description;","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"rondayvoo"},"content":"     * Returns the String interpretation of this Task when it is saved.","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"rondayvoo"},"content":"     * @return String The interpretation of this Task when it is saved.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"rondayvoo"},"content":"    public abstract String saveString();","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"rondayvoo"},"content":"     * Marks this task complete.","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"rondayvoo"},"content":"     * @exception DukeException If the Task is already done.","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"rondayvoo"},"content":"    public void markComplete() throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":45,"author":{"gitId":"rondayvoo"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-04"},{"lineNumber":46,"author":{"gitId":"rondayvoo"},"content":"            throw new DukeException(DukeException.TASK_ALREADY_DONE);","lastModifiedDate":"2021-09-04"},{"lineNumber":47,"author":{"gitId":"rondayvoo"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"rondayvoo"},"content":"            isDone \u003d true;","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":50,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"rondayvoo"},"content":"     * Returns the total number of Tasks in circulation.","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"rondayvoo"},"content":"     * @return int The total number of Tasks in circulation.","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"rondayvoo"},"content":"    public static int getTotalTasks() {","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"rondayvoo"},"content":"        return totalTasks;","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"rondayvoo"},"content":"     * Returns the description of this Task.","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"rondayvoo"},"content":"     * @return String The description of this Task.","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"rondayvoo"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"rondayvoo"},"content":"        return description;","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"rondayvoo"},"content":"     * Decrements the number of total Tasks by one.","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"rondayvoo"},"content":"    public void decrementTaskNumber() {","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"rondayvoo"},"content":"        totalTasks--;","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"rondayvoo":74}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":" * Represents a Todo task and has a type of T. It is defined by a description String.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"        this.type \u003d \u0027T\u0027;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"    public String saveString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"            output +\u003d \"[X] | \";","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"            output +\u003d \"[ ] | \";","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"        output +\u003d type + \" | \" + description;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"        return output;","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rondayvoo":23}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":" * Processes user input and translates it into a Command which can be executed for various results. Uses a Scanner","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":" * userInput to get input from the user, and stores it in a String userInputString for further processing.","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"public class Parser {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"    static final int MAX_STORED_TASKS \u003d 100;","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"    static final int TODO_OFFSET \u003d 5;","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"    static final int DEADLINE_OFFSET \u003d 9;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"    static final int EVENT_OFFSET \u003d 6;","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"    static final int DATE_OFFSET \u003d 4;","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"    static final int FIND_OFFSET \u003d 5;","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"rondayvoo"},"content":"    private final Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"rondayvoo"},"content":"    private String userInputString;","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"rondayvoo"},"content":"     * Gets the next line of user input from the user. If the user command closes the program, this function returns","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"rondayvoo"},"content":"     * true, and false otherwise.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"rondayvoo"},"content":"     * @return boolean Returns true if the command issued closes the program, false otherwise.","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"rondayvoo"},"content":"    public boolean parseNextLine() {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"rondayvoo"},"content":"        userInputString \u003d userInput.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"rondayvoo"},"content":"        return !userInputString.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"rondayvoo"},"content":"     * Tries to translate the String given by the user into a Command that can be executed.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"rondayvoo"},"content":"     * Returns null if no command can be recognised.","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"rondayvoo"},"content":"     * @param ui The UI class from the main program.","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"rondayvoo"},"content":"     * @return Command The command that is obtained from processing the user string.","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"rondayvoo"},"content":"    public Command processCommands(UI ui) {","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(UI.DIVIDING_LINE);","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"rondayvoo"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"rondayvoo"},"content":"            if (userInputString.equals(\"list\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"rondayvoo"},"content":"                return new ListCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"rondayvoo"},"content":"            } else if (userInputString.startsWith(\"done \")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"rondayvoo"},"content":"                String[] words \u003d userInputString.split(\" \");","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"rondayvoo"},"content":"                int completeIndex;","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"rondayvoo"},"content":"                try {","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"rondayvoo"},"content":"                    completeIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"rondayvoo"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"rondayvoo"},"content":"                    throw new DukeException(DukeException.INDEX_INVALID);","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"rondayvoo"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"rondayvoo"},"content":"                if (completeIndex \u003e\u003d 0 \u0026\u0026 completeIndex \u003c Task.getTotalTasks()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"rondayvoo"},"content":"                    return new DoneCommand(completeIndex);","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"rondayvoo"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"rondayvoo"},"content":"                    throw new DukeException(DukeException.INDEX_OOB);","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"rondayvoo"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"rondayvoo"},"content":"            } else if (userInputString.startsWith(\"delete \")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"rondayvoo"},"content":"                String[] words \u003d userInputString.split(\" \");","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"rondayvoo"},"content":"                int deleteIndex;","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"rondayvoo"},"content":"                try {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"rondayvoo"},"content":"                    deleteIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"rondayvoo"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"rondayvoo"},"content":"                    throw new DukeException(DukeException.INDEX_INVALID);","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"rondayvoo"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"rondayvoo"},"content":"                if (deleteIndex \u003e\u003d 0 \u0026\u0026 deleteIndex \u003c Task.getTotalTasks()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"rondayvoo"},"content":"                    return new DeleteCommand(deleteIndex);","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"rondayvoo"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"rondayvoo"},"content":"                    throw new DukeException(DukeException.INDEX_OOB);","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"rondayvoo"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"rondayvoo"},"content":"            } else if (userInputString.startsWith(\"find \")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"rondayvoo"},"content":"                String key \u003d userInputString.substring(FIND_OFFSET).trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"rondayvoo"},"content":"                return new FindCommand(key);","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"rondayvoo"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"rondayvoo"},"content":"                if (Task.getTotalTasks() \u003e\u003d MAX_STORED_TASKS) {","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"rondayvoo"},"content":"                    throw new DukeException(DukeException.TASK_ARRAY_FULL);","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"rondayvoo"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"rondayvoo"},"content":"                int slashIndex \u003d userInputString.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"rondayvoo"},"content":"                String taskSubstring;","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"rondayvoo"},"content":"                String timeSubstring \u003d userInputString.substring(slashIndex + DATE_OFFSET);","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"rondayvoo"},"content":"                LocalDate parsedDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"rondayvoo"},"content":"                if (userInputString.startsWith(\"todo \")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"rondayvoo"},"content":"                    taskSubstring \u003d userInputString.substring(TODO_OFFSET);","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"rondayvoo"},"content":"                    if (taskSubstring.isBlank()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"rondayvoo"},"content":"                        throw new DukeException(DukeException.TODO_BLANK_DESC);","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"rondayvoo"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"rondayvoo"},"content":"                    return new AddCommand(new Todo(taskSubstring));","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"rondayvoo"},"content":"                } else if (userInputString.startsWith(\"deadline \")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"rondayvoo"},"content":"                    if (slashIndex \u003c 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"rondayvoo"},"content":"                        throw new DukeException(DukeException.DEADLINE_NO_SLASH);","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"rondayvoo"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"rondayvoo"},"content":"                    if (timeSubstring.isBlank()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"rondayvoo"},"content":"                        throw new DukeException(DukeException.DEADLINE_BLANK_DATE);","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"rondayvoo"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"rondayvoo"},"content":"                    if (DEADLINE_OFFSET \u003e\u003d slashIndex - 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"rondayvoo"},"content":"                        throw new DukeException(DukeException.DEADLINE_BLANK_DESC);","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"rondayvoo"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"rondayvoo"},"content":"                    try {","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"rondayvoo"},"content":"                        parsedDate \u003d LocalDate.parse(timeSubstring);","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"rondayvoo"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"rondayvoo"},"content":"                        throw new DukeException(DukeException.DATE_INVALID);","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"rondayvoo"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"rondayvoo"},"content":"                    taskSubstring \u003d userInputString.substring(DEADLINE_OFFSET, slashIndex - 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"rondayvoo"},"content":"                    return new AddCommand(new Deadline(taskSubstring, parsedDate));","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"rondayvoo"},"content":"                } else if (userInputString.startsWith(\"event \")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"rondayvoo"},"content":"                    if (slashIndex \u003c 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"rondayvoo"},"content":"                        throw new DukeException(DukeException.EVENT_NO_SLASH);","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"rondayvoo"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"rondayvoo"},"content":"                    if (timeSubstring.isBlank()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"rondayvoo"},"content":"                        throw new DukeException(DukeException.EVENT_BLANK_DATE);","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"rondayvoo"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"rondayvoo"},"content":"                    if (EVENT_OFFSET \u003e\u003d slashIndex - 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"rondayvoo"},"content":"                        throw new DukeException(DukeException.EVENT_BLANK_DESC);","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"rondayvoo"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"rondayvoo"},"content":"                    try {","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"rondayvoo"},"content":"                        parsedDate \u003d LocalDate.parse(timeSubstring);","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"rondayvoo"},"content":"                    } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"rondayvoo"},"content":"                        throw new DukeException(DukeException.DATE_INVALID);","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"rondayvoo"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"rondayvoo"},"content":"                    taskSubstring \u003d userInputString.substring(EVENT_OFFSET, slashIndex - 1);","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"rondayvoo"},"content":"                    return new AddCommand(new Event(taskSubstring, parsedDate));","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"rondayvoo"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"rondayvoo"},"content":"                    throw new DukeException(DukeException.COMMAND_INVALID);","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"rondayvoo"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"rondayvoo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"rondayvoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"rondayvoo"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":146,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":147,"author":{"gitId":"rondayvoo"},"content":"        return null;","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":149}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":" * Manages the loading and saving of the list of user tasks to a text file, saveDuke.txt, in a folder in the same","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":" * directory, /data.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"public class Storage {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"    public static final String PATHNAME \u003d Paths.get(\"data/saveDuke.txt\").toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"     * Tries to load the save file from PATHNAME. If the directory does not exist, creates the folder /data in the","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"     * same directory. If the file does not exist, creates the file saveDuke.txt within /data. If the file exists, the","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"     * function loads the Tasks into the given list.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"     * @param userTasks The list of Tasks that the Tasks are loaded into.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"rondayvoo"},"content":"    public Storage(TaskList userTasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"rondayvoo"},"content":"        File load \u003d new File(PATHNAME);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"rondayvoo"},"content":"        if (!load.getParentFile().exists()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"rondayvoo"},"content":"            load.getParentFile().mkdir();","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"rondayvoo"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"rondayvoo"},"content":"            Scanner loadScanner \u003d new Scanner(load);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"rondayvoo"},"content":"            String currTask;","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"rondayvoo"},"content":"            while (loadScanner.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"rondayvoo"},"content":"                currTask \u003d loadScanner.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"rondayvoo"},"content":"                String[] atomArray \u003d currTask.split(\" \\\\| \");","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"rondayvoo"},"content":"                if (atomArray[1].equals(\"T\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"rondayvoo"},"content":"                    userTasks.taskList.add(new Todo(atomArray[2]));","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"rondayvoo"},"content":"                } else if (atomArray[1].equals(\"D\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"rondayvoo"},"content":"                    LocalDate parsedDate \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"rondayvoo"},"content":"                            LocalDate.parse(atomArray[3], DateTimeFormatter.ofPattern(Task.DATE_FORMAT));","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"rondayvoo"},"content":"                    userTasks.taskList.add(new Deadline(atomArray[2], parsedDate));","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"rondayvoo"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"rondayvoo"},"content":"                    LocalDate parsedDate \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"rondayvoo"},"content":"                            LocalDate.parse(atomArray[3], DateTimeFormatter.ofPattern(Task.DATE_FORMAT));","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"rondayvoo"},"content":"                    userTasks.taskList.add(new Event(atomArray[2], parsedDate));","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"rondayvoo"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"rondayvoo"},"content":"                if (atomArray[0].equals(\"[X]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"rondayvoo"},"content":"                    userTasks.taskList.get(Task.getTotalTasks() - 1).markComplete();","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"rondayvoo"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"rondayvoo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"rondayvoo"},"content":"            System.out.println(UI.DIVIDING_LINE);","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"rondayvoo"},"content":"            System.out.println(\"Previous session restored.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"rondayvoo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"rondayvoo"},"content":"            System.out.println(\"DukeException:\" + e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"rondayvoo"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"rondayvoo"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"rondayvoo"},"content":"                load.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"rondayvoo"},"content":"            } catch (IOException ex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"rondayvoo"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"rondayvoo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"rondayvoo"},"content":"     * Writes the specified list of Tasks to a text file.","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"rondayvoo"},"content":"     * @param userTasks The list of Tasks to be saved.","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"rondayvoo"},"content":"    public void saveTasks(TaskList userTasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"rondayvoo"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"rondayvoo"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"rondayvoo"},"content":"            output.append(userTasks.taskList.get(i).saveString());","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"rondayvoo"},"content":"            output.append(System.lineSeparator());","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"rondayvoo"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"rondayvoo"},"content":"            FileWriter writer \u003d new FileWriter(PATHNAME);","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"rondayvoo"},"content":"            writer.write(output.toString());","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"rondayvoo"},"content":"            writer.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"rondayvoo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"rondayvoo"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":91}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":" * Represents a list of Tasks. Also has various functions to modify the list of tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"public class TaskList {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"    public ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"     * Prints all Tasks in taskList to the command line.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"    public void listTasks() {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"     * Marks the task at the specified index in taskList as done.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"     * @param index The index of the task to be marked done.","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"rondayvoo"},"content":"     * @throws DukeException If the task is already done.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"rondayvoo"},"content":"    public void markTaskDone(int index) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"rondayvoo"},"content":"        taskList.get(index).markComplete();","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(\"Task \" + taskList.get(index).getDescription() + \" marked as complete.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"rondayvoo"},"content":"     * Deletes the task at the specified index in taskList.","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"rondayvoo"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"rondayvoo"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"rondayvoo"},"content":"        String taskStorage \u003d taskList.get(index).toString();","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"rondayvoo"},"content":"        taskList.get(index).decrementTaskNumber();","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"rondayvoo"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(\"Alright. I\u0027ve deleted this task:\");","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(taskStorage);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(\"You have a total of \" + Task.getTotalTasks() + \" tasks now.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"rondayvoo"},"content":"     * Adds a Task to the end of taskList.","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"rondayvoo"},"content":"     * @param task The Task to be added to the list.","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"rondayvoo"},"content":"    public void addNewTask(Task task) {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"rondayvoo"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(\"Gotcha. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(taskList.get(Task.getTotalTasks() - 1));","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(\"You have a total of \" + Task.getTotalTasks() + \" tasks now.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"rondayvoo"},"content":"     * Finds a task in a list of Tasks given a String key.","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"rondayvoo"},"content":"     * @param key The String to match when searching in the list of Tasks.","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"rondayvoo"},"content":"     * @return ArrayList The list of Tasks matching the given key.","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"rondayvoo"},"content":"    public ArrayList\u003cTask\u003e findTasks(String key) {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"rondayvoo"},"content":"        ArrayList\u003cTask\u003e keyMatch \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"rondayvoo"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"rondayvoo"},"content":"            if (t.getDescription().contains(key)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"rondayvoo"},"content":"                keyMatch.add(t);","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"rondayvoo"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"rondayvoo"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"rondayvoo"},"content":"        return keyMatch;","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":77}},{"path":"src/main/java/duke/util/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"package duke.util;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":" * Represents most of the visuals of the program. Has various functions to print text to the command line.","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"public class UI {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"    public static final String DIVIDING_LINE \u003d \"________________________________________\";","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"     * Prints the opening message to the command line.","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"    public void printGreeting() {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(DIVIDING_LINE);","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(\"Greetings, human! I\u0027m Duke. \\nWhat can I do for you?\");","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(DIVIDING_LINE);","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"     * Prints the closing message to the command line.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"    public void printFarewell() {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(DIVIDING_LINE);","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(\"Closing Duke. Have a nice day!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(DIVIDING_LINE);","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"rondayvoo"},"content":"     * Prints a dividing line.","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"rondayvoo"},"content":"    public void printDivLine() {","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(DIVIDING_LINE);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"rondayvoo"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"rondayvoo"},"content":"     * Shows an error on the command line whenever a DukeException is thrown.","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"rondayvoo"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"rondayvoo"},"content":"    public void showError(String error) {","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"rondayvoo"},"content":"        System.out.println(\"DukeException: \" + error);","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"rondayvoo"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"rondayvoo"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"rondayvoo":40}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rondayvoo"},"content":"todo meet my mom","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"rondayvoo"},"content":"water plants","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"rondayvoo"},"content":"deadline CS2113 coding exercise /by 2021-10-15","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"rondayvoo"},"content":"event saw con 2021 /at 4-6pm tomorrow","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"rondayvoo"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"rondayvoo"},"content":"done 2","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"rondayvoo"},"content":"done -1024","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"rondayvoo"},"content":"done abcdefg","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"rondayvoo"},"content":"deadline error management by Sunday","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"rondayvoo"},"content":"deadline carboncents disagree meeting /by 2021-09-05","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"rondayvoo"},"content":"event ////////","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"rondayvoo"},"content":"deadline / / / / / / / /","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"rondayvoo"},"content":"event tour de france /at 2021-11-03","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"rondayvoo"},"content":"done 2","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"rondayvoo"},"content":"done 5","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"rondayvoo"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"rondayvoo"},"content":"delete 2","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"rondayvoo"},"content":"delete 44","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"rondayvoo"},"content":"delete lmnop","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"rondayvoo"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"rondayvoo"},"content":"find meet","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"find z","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"bye","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rondayvoo":23}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"rondayvoo"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"rondayvoo"},"content":"PAUSE","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"rondayvoo":2,"-":21}}]
