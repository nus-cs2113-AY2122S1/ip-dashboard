[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"# Unker project template","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"3. After that, locate the `src/main/java/Unker.java` file, right-click it, and choose `Run Unker.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kelvneo":2,"-":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"    protected String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    public Task(String task) {","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"        this.description \u003d task;","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"        return description;","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"        return isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"     * Formats a string indicating if the task is done and the description of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"     * @return A string indicating if the task is done and the description of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"    public String getStatusString() {","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"        return String.format(\"[%c] %s\", isDone() ? \u0027X\u0027 : \u0027 \u0027 ,this.getDescription());","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"kelvneo":29}},{"path":"src/main/java/Unker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kelvneo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"kelvneo"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"kelvneo"},"content":"public class Unker {","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"kelvneo"},"content":"    private static final ArrayList\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"kelvneo"},"content":"        String logo \u003d  \"  _    _       _             \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"kelvneo"},"content":"                + \" | |  | |     | |            \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"kelvneo"},"content":"                + \" | |  | |_ __ | | _____ _ __ \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"kelvneo"},"content":"                + \" | |  | | \u0027_ \\\\| |/ / _ \\\\ \u0027__|\\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"kelvneo"},"content":"                + \" | |__| | | | |   \u003c  __/ |   \\n\"","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"kelvneo"},"content":"                + \"  \\\\____/|_| |_|_|\\\\_\\\\___|_|   \\n\";","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"kelvneo"},"content":"        System.out.println(\"Loading your digital\\n\" + logo);","lastModifiedDate":"2021-08-23"},{"lineNumber":15,"author":{"gitId":"kelvneo"},"content":"        printSection(\"Harlo, you can call me Unker.\", \"What can Unker do for you today?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"kelvneo"},"content":"        // Initialize a scanner to read in user input","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"kelvneo"},"content":"        // Keep listening for new commands","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"kelvneo"},"content":"        while (true) {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"kelvneo"},"content":"            // Read the input of the user","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"kelvneo"},"content":"            String cmd \u003d scanner.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"kelvneo"},"content":"            System.out.println();","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"kelvneo"},"content":"            // Check if the user wishes to exit the program.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"kelvneo"},"content":"            if (!parseCommands(cmd)) {","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"kelvneo"},"content":"                break;","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"kelvneo"},"content":"            // Otherwise, ask the user for more commands","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"kelvneo"},"content":"            System.out.println(\"--\");","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"kelvneo"},"content":"            System.out.println(\"Anything else you wan Unker to help you with?\");","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"kelvneo"},"content":"        // Cleanup and print exit message","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"kelvneo"},"content":"        printSection(\"Bye bye, see you soon again arh!\");","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":40,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-16"},{"lineNumber":41,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-08-16"},{"lineNumber":42,"author":{"gitId":"kelvneo"},"content":"     * Prints the bot name and given data provided.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"kelvneo"},"content":"     * If no data is provided, it will print a horizontal line with the bot name.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-08-16"},{"lineNumber":45,"author":{"gitId":"kelvneo"},"content":"     * @param data The string(s) to print to console.","lastModifiedDate":"2021-08-16"},{"lineNumber":46,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-08-16"},{"lineNumber":47,"author":{"gitId":"kelvneo"},"content":"    private static void printSection(String ...data) {","lastModifiedDate":"2021-08-16"},{"lineNumber":48,"author":{"gitId":"kelvneo"},"content":"        System.out.println(\"--// Unker //----------------------------------------------\");","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"kelvneo"},"content":"        for (String s: data) {","lastModifiedDate":"2021-08-16"},{"lineNumber":50,"author":{"gitId":"kelvneo"},"content":"            System.out.println(s);","lastModifiedDate":"2021-08-16"},{"lineNumber":51,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-08-16"},{"lineNumber":52,"author":{"gitId":"kelvneo"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"kelvneo"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"kelvneo"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"kelvneo"},"content":"     * Interprets the commands sent by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"kelvneo"},"content":"     *","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"kelvneo"},"content":"     * @param cmdString The command sent by the user.","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"kelvneo"},"content":"     * @return Returns true if the program should continue executing.","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"kelvneo"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"kelvneo"},"content":"    private static boolean parseCommands(String cmdString) {","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"kelvneo"},"content":"        String[] cmdParts \u003d cmdString.split(\" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"kelvneo"},"content":"        switch (cmdParts[0].toLowerCase()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"kelvneo"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"kelvneo"},"content":"            return false;","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"kelvneo"},"content":"        case \"list\":","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"kelvneo"},"content":"            if (TASKS.isEmpty()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":67,"author":{"gitId":"kelvneo"},"content":"                printSection(\"Wah seh, you got nothing in your to-do list leh.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"kelvneo"},"content":"            } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"kelvneo"},"content":"                printSection(\"This is what you give me:\");","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"kelvneo"},"content":"                int toBeCompleted \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"kelvneo"},"content":"                for (int i \u003d 0; i \u003c TASKS.size(); i++) {","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"kelvneo"},"content":"                    Task task \u003d TASKS.get(i);","lastModifiedDate":"2021-08-23"},{"lineNumber":73,"author":{"gitId":"kelvneo"},"content":"                    if (!task.isDone()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"kelvneo"},"content":"                        toBeCompleted++;","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"kelvneo"},"content":"                    }","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"kelvneo"},"content":"                    System.out.printf(\"%d. %s\\n\", i + 1, task.getStatusString());","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"kelvneo"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"kelvneo"},"content":"                System.out.printf(\"\\nYou still got %d task(s) left to do.\\n\", toBeCompleted);","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"kelvneo"},"content":"            return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"kelvneo"},"content":"        case \"done\":","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"kelvneo"},"content":"            int taskNo \u003d Integer.parseInt(cmdParts[1]);","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"kelvneo"},"content":"            if (taskNo \u003c 1 || taskNo \u003e TASKS.size()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"kelvneo"},"content":"                printSection(\"Aiyo, you give me a task number that I don\u0027t have.\");","lastModifiedDate":"2021-08-23"},{"lineNumber":85,"author":{"gitId":"kelvneo"},"content":"            } else  {","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"kelvneo"},"content":"                Task task \u003d TASKS.get(taskNo - 1);","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"kelvneo"},"content":"                if (!task.isDone()) {","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"kelvneo"},"content":"                    task.setDone(true);","lastModifiedDate":"2021-08-23"},{"lineNumber":89,"author":{"gitId":"kelvneo"},"content":"                    printSection(\"Good job, this task finish already:\",","lastModifiedDate":"2021-08-23"},{"lineNumber":90,"author":{"gitId":"kelvneo"},"content":"                            \"\\t\" + task.getStatusString(), \"\");","lastModifiedDate":"2021-08-18"},{"lineNumber":91,"author":{"gitId":"kelvneo"},"content":"                } else {","lastModifiedDate":"2021-08-18"},{"lineNumber":92,"author":{"gitId":"kelvneo"},"content":"                    printSection(\"You finish this task already leh:\", \"\\t\" + task.getStatusString(), \"\");","lastModifiedDate":"2021-08-23"},{"lineNumber":93,"author":{"gitId":"kelvneo"},"content":"                }","lastModifiedDate":"2021-08-18"},{"lineNumber":94,"author":{"gitId":"kelvneo"},"content":"            }","lastModifiedDate":"2021-08-18"},{"lineNumber":95,"author":{"gitId":"kelvneo"},"content":"            return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":96,"author":{"gitId":"kelvneo"},"content":"        default:","lastModifiedDate":"2021-08-18"},{"lineNumber":97,"author":{"gitId":"kelvneo"},"content":"            Task t \u003d new Task(cmdString);","lastModifiedDate":"2021-08-23"},{"lineNumber":98,"author":{"gitId":"kelvneo"},"content":"            TASKS.add(t);","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"kelvneo"},"content":"            printSection(\"Okay Unker help you add this to your to-do list:\", \"\\t\" + t.getStatusString());","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"kelvneo"},"content":"            return true;","lastModifiedDate":"2021-08-18"},{"lineNumber":101,"author":{"gitId":"kelvneo"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kelvneo":100,"-":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kelvneo"},"content":"java -classpath ..\\bin Unker \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kelvneo":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"kelvneo"},"content":"java -classpath ../bin Unker \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kelvneo":1,"-":37}}]
