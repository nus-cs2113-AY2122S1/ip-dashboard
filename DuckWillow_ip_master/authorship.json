[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DuckWillow":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"# DUKE User Guide","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"Hello~ DUKE is a CLI (Command Line Interface) app to help you record your tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"![Image of Duke](https://upload.wikimedia.org/wikipedia/commons/5/5d/Duke_%28Java_mascot%29_waving.svg)","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"### Feature- edit task","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"You can edit your tasks with given task types(todo, deadline, event).","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"### Feature- save/load","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"After you quit the app, your task list is stored in your computer.","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"### Open DUKE","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"![PictureGuide](PictureGuide.png)","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"List of the keywords are shown below:","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"DuckWillow"},"content":"`bye`-Exit the program.","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"DuckWillow"},"content":"`list`-See all existing tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"DuckWillow"},"content":"`done`+ _number_ -Mark task as done.","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"DuckWillow"},"content":"\u003eExample: `done 1`","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"DuckWillow"},"content":"`todo`+ _task_ Add a todo task","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"DuckWillow"},"content":"`deadline` + _task_ + `/by` -Add a deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"DuckWillow"},"content":"\u003eExample: `deadline return book /by Sunday`","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"DuckWillow"},"content":"`event` + _task_ + `/at` -Add an event","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"DuckWillow"},"content":"`delete` + _number_ -Delete the number task","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"DuckWillow"},"content":"`find` + _keyword_ -Find tasks with the keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"DuckWillow"},"content":"\u003eExample: `find book`","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"DuckWillow"},"content":"## Example of usage:","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"DuckWillow"},"content":"\u003e`deadline return book /by Sunday`","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"DuckWillow"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"DuckWillow"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"DuckWillow"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"DuckWillow"},"content":"\u003e`event project meeting /at Mon 2-4pm`","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"DuckWillow"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"DuckWillow"},"content":"[E][ ] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"DuckWillow"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"DuckWillow"},"content":"\u003e`done 2`","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"DuckWillow"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"DuckWillow"},"content":"[E][X] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"DuckWillow"},"content":"\u003e`list`","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"DuckWillow"},"content":"1. [D][ ] return book (by: Sunday)","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"DuckWillow"},"content":"2. [E][X] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"DuckWillow"},"content":"\u003e`delete 1`","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"DuckWillow"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"DuckWillow"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"DuckWillow"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"DuckWillow"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"DuckWillow"},"content":"\u003e`list`","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"DuckWillow"},"content":"1. [E][X] project meeting (at: Mon 2-4pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"DuckWillow"},"content":"____________________________________________________________","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"DuckWillow":70,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"     * at the beginning of Duke class, create a file using Storage class","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"     * then load the TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"     * @param filePath by default is \"data/duke.txt\"","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"     * @throws IOException ensure it reads the file","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"        tasks \u003d new TaskList(storage.loadFileContents());","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"DuckWillow"},"content":"     * Execute the user command.","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"     * @param c new Parser object to understand user input","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"DuckWillow"},"content":"     * @param tasks stores all the tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"DuckWillow"},"content":"     * @param storage deal with file storing and loading","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"DuckWillow"},"content":"    public static void executeCommand(Parser c, TaskList tasks, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"DuckWillow"},"content":"        switch (c.getCommand()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"DuckWillow"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"DuckWillow"},"content":"            Ui.showBye();","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DuckWillow"},"content":"        case \"list\":","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"DuckWillow"},"content":"            tasks.printTaskList();","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DuckWillow"},"content":"        case \"done\":","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"DuckWillow"},"content":"            tasks.markTaskAsDone(c.getDescription());","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"DuckWillow"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"DuckWillow"},"content":"            tasks.addToDoTaskToList(c.getDescription());","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"DuckWillow"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"DuckWillow"},"content":"            tasks.addDeadlineTaskToList(c.getDescription());","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"DuckWillow"},"content":"        case \"event\":","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"DuckWillow"},"content":"            tasks.addEventTaskToList(c.getDescription());","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"DuckWillow"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"DuckWillow"},"content":"            tasks.deleteTask(c.getDescription());","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"DuckWillow"},"content":"        case \"find\":","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"DuckWillow"},"content":"            tasks.findTaskList(c.getDescription());","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"DuckWillow"},"content":"        default:","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"DuckWillow"},"content":"            throw new DukeException(\"Oops, command not recognised!\");","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"DuckWillow"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"DuckWillow"},"content":"     * Main program runs here, terminate when isExit \u003d\u003d true","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"DuckWillow"},"content":"    public void run() {","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"DuckWillow"},"content":"        Ui.showWelcome();","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"DuckWillow"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"DuckWillow"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"DuckWillow"},"content":"            try {","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"DuckWillow"},"content":"                String fullCommand \u003d Ui.readCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"DuckWillow"},"content":"                Ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"DuckWillow"},"content":"                Parser c \u003d new Parser(fullCommand);","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"DuckWillow"},"content":"                c.parse();","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"DuckWillow"},"content":"                executeCommand(c,tasks,storage);","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"DuckWillow"},"content":"                isExit \u003d c.getIsExit();","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"DuckWillow"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"DuckWillow"},"content":"                Ui.showError(\"OOPS!!! The description after this command word cannot be empty.\");","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"DuckWillow"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"DuckWillow"},"content":"                Ui.showError(\"OOPS!!! It\u0027s out of range.\");","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"DuckWillow"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"DuckWillow"},"content":"                Ui.showError(\"OOPS!!! Input after done/delete must be a number.\");","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"DuckWillow"},"content":"            }catch (DukeException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"DuckWillow"},"content":"                Ui.showError(e.getMessage());","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"DuckWillow"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"DuckWillow"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"DuckWillow"},"content":"            } finally {","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"DuckWillow"},"content":"                Ui.showLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"DuckWillow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"DuckWillow"},"content":"     * Create a new Duke class and begin the \u0027run\u0027 method","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"DuckWillow"},"content":"     * @param args don\u0027t need to input","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"DuckWillow"},"content":"     * @throws IOException ensure it reads a file","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"DuckWillow"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":101,"author":{"gitId":"DuckWillow"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":103,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"DuckWillow":104,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":" * Understand user input. Separate input into command + description, and output to execution.","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"public class Parser {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"    protected String input;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"    protected String command;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"    protected String description;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"    protected Boolean isExit;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"     * command by default \u003d \"default\"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"     * @param input takes user input","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"    public Parser(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":"        this.command \u003d \"default\";","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"     * @return obtain the Exit status","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"DuckWillow"},"content":"    public Boolean getIsExit(){","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"DuckWillow"},"content":"        return isExit;","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"DuckWillow"},"content":"     * separate user input into command + description","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"DuckWillow"},"content":"     * @throws DukeException deadline and event inputs must contain /by and /at","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"DuckWillow"},"content":"    public void parse() throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"DuckWillow"},"content":"        if(input.equals(\"bye\")){","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"DuckWillow"},"content":"            isExit \u003d true;","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"DuckWillow"},"content":"            command \u003d  \"bye\";","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"DuckWillow"},"content":"        }else if(input.equals(\"list\")){","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"DuckWillow"},"content":"            command \u003d  \"list\";","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"DuckWillow"},"content":"        } else if(input.startsWith(\"done\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"DuckWillow"},"content":"            command \u003d \"done\";","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"DuckWillow"},"content":"            description \u003d input.substring(5).trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"DuckWillow"},"content":"        }else if(input.startsWith(\"todo\")){","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"DuckWillow"},"content":"            command \u003d  \"todo\";","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"DuckWillow"},"content":"            description \u003d input.substring(5).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"DuckWillow"},"content":"        }else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"DuckWillow"},"content":"            command \u003d  \"deadline\";","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"DuckWillow"},"content":"            description \u003d input.substring(input.indexOf(\"deadline\") + 9).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"DuckWillow"},"content":"            if(!description.contains(\"/by\")){","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"DuckWillow"},"content":"                throw new DukeException(\"OOPS!!! The description of a deadline must have /by.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"DuckWillow"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"DuckWillow"},"content":"        }else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"DuckWillow"},"content":"            command \u003d  \"event\";","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"DuckWillow"},"content":"            description \u003d input.substring(input.indexOf(\"event\") + 6).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"DuckWillow"},"content":"            if(!description.contains(\"/at\")){","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"DuckWillow"},"content":"                throw new DukeException(\"OOPS!!! The description of a event must have /at.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"DuckWillow"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"DuckWillow"},"content":"        }else if(input.startsWith(\"delete\")){","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"DuckWillow"},"content":"            command \u003d  \"delete\";","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"DuckWillow"},"content":"            description \u003d input.substring(7).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"DuckWillow"},"content":"        }else if(input.startsWith(\"find\")){","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"DuckWillow"},"content":"            command \u003d  \"find\";","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"DuckWillow"},"content":"            description \u003d input.substring(5).trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"DuckWillow"},"content":"    public String getCommand(){","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"DuckWillow"},"content":"        return command;","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"DuckWillow"},"content":"     * @return remove the command word","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"DuckWillow"},"content":"     * @throws DukeException prevent empty input after command words","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"DuckWillow"},"content":"    public String getDescription() throws DukeException {","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"DuckWillow"},"content":"        if(description.isEmpty()){","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"DuckWillow"},"content":"            throw new DukeException(\"OOPS!!! The description cannot be empty.\");","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"DuckWillow"},"content":"        return description;","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"DuckWillow":85}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"import java.nio.file.FileAlreadyExistsException;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"import java.io.File;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":" * Storage class deal with the interaction with local files, including saving and loading","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"public class Storage {","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"DuckWillow"},"content":"    private static String filepath;","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"DuckWillow"},"content":"     * If there is no file (with folder), create a file at beginning of the program.","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"DuckWillow"},"content":"     * @param filePath by default is \"data/duke.txt\"","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"DuckWillow"},"content":"     * @throws IOException ensure find some files","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"DuckWillow"},"content":"    public Storage(String filePath) throws IOException{","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"DuckWillow"},"content":"        this.filepath \u003d filePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"DuckWillow"},"content":"        //create duke.txt in folder named \u0027data\u0027","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"DuckWillow"},"content":"        //idea from https://stackoverflow.com/questions/2833853/create-whole-path-automatically-when-writing-to-a-new-file","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"DuckWillow"},"content":"        //author: cdmihai","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"DuckWillow"},"content":"        Path pathToFile \u003d Paths.get(filepath);","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"DuckWillow"},"content":"        Files.createDirectories(pathToFile.getParent());","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"DuckWillow"},"content":"        try{","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"DuckWillow"},"content":"            Files.createFile(pathToFile);","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"DuckWillow"},"content":"        } catch (FileAlreadyExistsException e){","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"DuckWillow"},"content":"            Ui.fileAlreadyExist();","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"DuckWillow"},"content":"     * Some Load usage. with minor modifications","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"DuckWillow"},"content":"     * @author {siyuancheng178}-reused","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"DuckWillow"},"content":"     * @return A new TaskList object to be copied","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"DuckWillow"},"content":"     * @throws FileNotFoundException if file not found","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"DuckWillow"},"content":"    public static TaskList loadFileContents() throws FileNotFoundException {","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"DuckWillow"},"content":"        File f \u003d new File(filepath); // create a File for the given file path","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"DuckWillow"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"DuckWillow"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"DuckWillow"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"DuckWillow"},"content":"            String[] split \u003d s.nextLine().split(\"]\");","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"DuckWillow"},"content":"            //Example:","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"DuckWillow"},"content":"            //split [D][X] return book (by: Sunday)","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"DuckWillow"},"content":"            //split[0] \u003d [D","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"DuckWillow"},"content":"            //split[1] \u003d [X","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"DuckWillow"},"content":"            //split[2] \u003d  return book (by: Sunday)","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"DuckWillow"},"content":"            //description: return book /by Sunday","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"DuckWillow"},"content":"            String description \u003d split[2].strip().replace(\u0027(\u0027,\u0027/\u0027).replace(\u0027)\u0027,\u0027:\u0027).replaceAll(\":\",\"\");","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"DuckWillow"},"content":"            switch (split[0].charAt(1)){","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"DuckWillow"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"DuckWillow"},"content":"                Task t \u003d new Task(split[2].trim(),split[1].charAt(1)\u003d\u003d\u0027X\u0027);","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"DuckWillow"},"content":"                tasks.addTask(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"DuckWillow"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"DuckWillow"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"DuckWillow"},"content":"                String[] splitBy \u003d description.split(\"/by\");","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"DuckWillow"},"content":"                Task d \u003d new Deadline(splitBy[0].trim(),splitBy[1].trim(),split[1].charAt(1)\u003d\u003d\u0027X\u0027);","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"DuckWillow"},"content":"                tasks.addTask(d);","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"DuckWillow"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"DuckWillow"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"DuckWillow"},"content":"                String[] splitAt \u003d description.split(\"/at\");","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"DuckWillow"},"content":"                Task e \u003d new Event(splitAt[0].trim(),splitAt[1].trim(),split[1].charAt(1)\u003d\u003d\u0027X\u0027);","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"DuckWillow"},"content":"                tasks.addTask(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"DuckWillow"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"DuckWillow"},"content":"            default:","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"DuckWillow"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"DuckWillow"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"DuckWillow"},"content":"        s.close();","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"DuckWillow"},"content":"        return tasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"DuckWillow"},"content":"     * @param tasks take the TaskList object and write","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"DuckWillow"},"content":"     * @throws IOException ensure find some files","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"DuckWillow"},"content":"    public static void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"DuckWillow"},"content":"        FileWriter fw \u003d new FileWriter(filepath);","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"DuckWillow"},"content":"        fw.write(tasks.save());","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"DuckWillow"},"content":"        fw.close();","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"DuckWillow":102}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":" * This class stores all the tasks into \u0027todo\u0027.","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"public class TaskList {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"    private ArrayList\u003cTask\u003e todo;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"    private int todo_index;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"     * Create an empty TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":"        this.todo \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"        this.todo_index \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"     * Copy a TaskList from stored file","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"DuckWillow"},"content":"     * @param stored previously saved TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"DuckWillow"},"content":"    public TaskList(TaskList stored) {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"DuckWillow"},"content":"        this.todo \u003d stored.getTodo();","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"DuckWillow"},"content":"        this.todo_index \u003d stored.getTodoIndex();","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"DuckWillow"},"content":"    public ArrayList\u003cTask\u003e getTodo(){","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"DuckWillow"},"content":"        return todo;","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"DuckWillow"},"content":"    public int getTodoIndex(){","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"DuckWillow"},"content":"        return todo_index;","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"DuckWillow"},"content":"     * Print 0 task message when there is no task.","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"DuckWillow"},"content":"    public void printTaskList(){","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"DuckWillow"},"content":"        if(todo_index\u003d\u003d0){","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"DuckWillow"},"content":"            Ui.printTaskNumberMessage(todo_index);","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"DuckWillow"},"content":"        for (int i \u003d 0; i \u003c todo_index; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"DuckWillow"},"content":"            System.out.println(i + 1 + \". \" + todo.get(i).toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"DuckWillow"},"content":"     * Find all tasks (including time) contain the key word","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"DuckWillow"},"content":"     * @param item","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"DuckWillow"},"content":"    public void findTaskList(String item){","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"DuckWillow"},"content":"        Ui.printFindTaskMessage();","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"DuckWillow"},"content":"        for (int i \u003d 0; i \u003c todo_index; i++) {","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"DuckWillow"},"content":"            if(todo.get(i).toString().contains(item)){","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"DuckWillow"},"content":"                System.out.println(i + 1 + \". \" + todo.get(i).toString());","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"DuckWillow"},"content":"            }","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"DuckWillow"},"content":"     * Mark task done + number","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"DuckWillow"},"content":"     * @param description user input an integer, but is in String format","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"DuckWillow"},"content":"    public void markTaskAsDone(String description){","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"DuckWillow"},"content":"        int i \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"DuckWillow"},"content":"        todo.get(i - 1).markAsDone();","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"DuckWillow"},"content":"        Ui.showDone();","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(todo.get(i - 1).toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"DuckWillow"},"content":"     * Loading the tasks, shows no output message","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"DuckWillow"},"content":"     * @param task from stored file","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"DuckWillow"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"DuckWillow"},"content":"        this.todo.add(task);","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"DuckWillow"},"content":"        todo_index+\u003d1;","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"DuckWillow"},"content":"     * Add todo","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"DuckWillow"},"content":"     * @param input task information","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"DuckWillow"},"content":"    public void addToDoTaskToList(String input){","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"DuckWillow"},"content":"        todo.add(new Task(input,false));","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"DuckWillow"},"content":"        todo_index+\u003d1;","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"DuckWillow"},"content":"        Ui.printAddedTaskMessage();","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(todo.get(todo_index-1).toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"DuckWillow"},"content":"        Ui.printTaskNumberMessage(todo_index);","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"DuckWillow"},"content":"     * Add deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"DuckWillow"},"content":"     * @param input task information (must contain /by)","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"DuckWillow"},"content":"    public void addDeadlineTaskToList(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"DuckWillow"},"content":"        String description \u003d input.substring(0, input.indexOf(\"/by\") - 1);","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"DuckWillow"},"content":"        String by \u003d input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"DuckWillow"},"content":"        todo.add(new Deadline(description, by, false));","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"DuckWillow"},"content":"        todo_index+\u003d1;","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"DuckWillow"},"content":"        Ui.printAddedTaskMessage();","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(todo.get(todo_index-1).toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"DuckWillow"},"content":"        Ui.printTaskNumberMessage(todo_index);","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"DuckWillow"},"content":"     * Add event","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"DuckWillow"},"content":"     * @param input task information (must contain /at)","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"DuckWillow"},"content":"    public void addEventTaskToList(String input) {","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"DuckWillow"},"content":"        String description \u003d input.substring(0, input.indexOf(\"/at\") - 1);","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"DuckWillow"},"content":"        String at \u003d input.substring(input.indexOf(\"/at\") + 4);","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"DuckWillow"},"content":"        todo.add(new Event(description, at, false));","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"DuckWillow"},"content":"        todo_index+\u003d1;","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"DuckWillow"},"content":"        Ui.printAddedTaskMessage();","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(todo.get(todo_index-1).toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"DuckWillow"},"content":"        Ui.printTaskNumberMessage(todo_index);","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"DuckWillow"},"content":"     * Delete task + number","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"DuckWillow"},"content":"     * @param description user input an integer, but is in String format","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"DuckWillow"},"content":"    public void deleteTask(String description){","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"DuckWillow"},"content":"        int i \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"DuckWillow"},"content":"        Task deleted \u003d todo.get(i - 1);","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"DuckWillow"},"content":"        todo.remove(i-1);","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"DuckWillow"},"content":"        todo_index -\u003d 1;","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"DuckWillow"},"content":"        Ui.printDeletedTaskMessage();","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(deleted.toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"DuckWillow"},"content":"        Ui.printTaskNumberMessage(todo_index);","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"DuckWillow"},"content":"     * Save all tasks in to local file","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"DuckWillow"},"content":"     * @return Everything into a single String","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"DuckWillow"},"content":"    public String save(){","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"DuckWillow"},"content":"        String saved \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"DuckWillow"},"content":"        for (int i \u003d 0; i \u003c todo_index; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"DuckWillow"},"content":"            saved +\u003d todo.get(i).toString()+\"\\n\";","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"DuckWillow"},"content":"        return saved;","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"DuckWillow":154}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":" * User interface, all inputs and outputs come out from here","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":" * @author {fansxx}-reused","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":" * {Some Ui usage. with minor modifications}","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"public class Ui {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"    public static final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"     * Print welcome message","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"    public static void showWelcome() {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"DuckWillow"},"content":"     * Print bye message before exit","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"DuckWillow"},"content":"    public static void showBye() {","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"DuckWillow"},"content":"     * Print a line","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"DuckWillow"},"content":"    public static void showLine() {","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"DuckWillow"},"content":"     * @return get user input","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"DuckWillow"},"content":"    public static String readCommand() {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"DuckWillow"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"DuckWillow"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"DuckWillow"},"content":"     * Print error message","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"DuckWillow"},"content":"     * @param meg obtained from DukeException message","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"DuckWillow"},"content":"    public static void showError(String meg) {","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(meg);","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"DuckWillow"},"content":"     * Print task is done message","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"DuckWillow"},"content":"    public static void showDone() {","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"DuckWillow"},"content":"     * Print task added message","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"DuckWillow"},"content":"    public static void printAddedTaskMessage() {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"DuckWillow"},"content":"     * Print number of tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"DuckWillow"},"content":"     * @param todo_index number of tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"DuckWillow"},"content":"    public static void printTaskNumberMessage(int todo_index) {","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(\"Now you have \" + todo_index + \" tasks in the list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"DuckWillow"},"content":"     * Print delete task message","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"DuckWillow"},"content":"    public static void printDeletedTaskMessage() {","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"DuckWillow"},"content":"     * Print find stored file message","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"DuckWillow"},"content":"    public static void fileAlreadyExist() {","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(\"Detected a previous saved file.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"DuckWillow"},"content":"     * Print find task message","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"DuckWillow"},"content":"    public static void printFindTaskMessage() {","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"DuckWillow":103}},{"path":"src/main/java/duke/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":" * DukeException is the super class of all possible exceptions that might happen during the execution of Duke","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"DuckWillow":11}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"    protected String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"     * @param description task information","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"     * @param by by what time","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"     * @param isDone true of false","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"        super(description,isDone);","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"        this.taskType \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"DuckWillow":22}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"    protected String at;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"     * @param description task information","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"     * @param at at what time","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"     * @param isDone true of false","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"        super(description,isDone);","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"        this.taskType \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":"        return super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"DuckWillow":23}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"public class Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"    protected String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"    protected Character taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"     * @param description task information","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"     * @param isDone true of false","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"    public Task(String description,boolean isDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"        this.taskType \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":"     * @return \"X\" for task is done","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"DuckWillow"},"content":"     * @return task information","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"DuckWillow"},"content":"    public String getDescription(){","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"DuckWillow"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"DuckWillow"},"content":"     * @return the type of task","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"DuckWillow"},"content":"    public Character getTaskType(){","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"DuckWillow"},"content":"        return taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"DuckWillow"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"DuckWillow"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"DuckWillow"},"content":"     * @return a readable String for the task","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"DuckWillow"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"DuckWillow"},"content":"    public String toString(){","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"DuckWillow"},"content":"        return \"[\"+ getTaskType() +\"]\" + \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"DuckWillow"},"content":"    public void markAsDone(){","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"DuckWillow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"DuckWillow":56}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"todo","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"todo borrow book","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DuckWillow":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\bin ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DuckWillow":4,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"if [ ! -d \"../bin2\" ]","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"    mkdir ../bin2","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin2 ../src/main/java/duke/command*.java ../bin2 ../src/main/java/duke/task*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"java -classpath ../bin2 Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DuckWillow":5,"-":29}}]
