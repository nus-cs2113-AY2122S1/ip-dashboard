[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DuckWillow":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"        String logo \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"                + \"Hello! I\u0027m duke.Duke\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"                + \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"        Task[] todo \u003d new Task[100];","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"        int todo_index \u003d 0;","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":"        while (true) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":"            if (input.substring(0, 4).equals(\"done\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"                int i \u003d Integer.parseInt(input.substring(5));","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"                todo[i - 1].markAsDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"DuckWillow"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"DuckWillow"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"                System.out.println(todo[i - 1].toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"DuckWillow"},"content":"                System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"DuckWillow"},"content":"            } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"DuckWillow"},"content":"                switch (input) {","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"DuckWillow"},"content":"                case \"list\":","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"DuckWillow"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"DuckWillow"},"content":"                    for (int i \u003d 0; i \u003c todo_index; i++) {","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"DuckWillow"},"content":"                        System.out.println(i + 1 + \". \" + todo[i].toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"DuckWillow"},"content":"                    }","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"DuckWillow"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"DuckWillow"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"DuckWillow"},"content":"                case \"blah\":","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"DuckWillow"},"content":"                    logo \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"DuckWillow"},"content":"                            + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"DuckWillow"},"content":"                            + \"____________________________________________________________\\n\";","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"DuckWillow"},"content":"                    System.out.println(logo);","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"DuckWillow"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"DuckWillow"},"content":"                case \"bye\":","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"DuckWillow"},"content":"                    logo \u003d \"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"DuckWillow"},"content":"                            + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"DuckWillow"},"content":"                            + \"____________________________________________________________\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"DuckWillow"},"content":"                    System.out.println(logo);","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"DuckWillow"},"content":"                    break;","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"DuckWillow"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"DuckWillow"},"content":"                    if(input.substring(0, 4).equals(\"todo\")){","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"DuckWillow"},"content":"                        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"DuckWillow"},"content":"                            String description \u003d input.substring(5);","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"DuckWillow"},"content":"                            todo[todo_index] \u003d new Task(description);","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(todo[todo_index].toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"DuckWillow"},"content":"                            todo_index +\u003d 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"DuckWillow"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"DuckWillow"},"content":"                        }","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"DuckWillow"},"content":"                    }else if(input.startsWith(\"deadline\")){","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"DuckWillow"},"content":"                        int descriptionIndex \u003d 9;","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"DuckWillow"},"content":"                        String task \u003d  \"deadline\";","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"DuckWillow"},"content":"                        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"DuckWillow"},"content":"                            ExceptionTry(task,input);","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"DuckWillow"},"content":"                            String description \u003d input.substring(input.indexOf(\"deadline\") + descriptionIndex, input.indexOf(\"/by\") - 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"DuckWillow"},"content":"                            String by \u003d input.substring(input.indexOf(\"/by\") + 4);","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"DuckWillow"},"content":"                            todo[todo_index] \u003d new Deadline(description, by);","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(todo[todo_index].toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"DuckWillow"},"content":"                            todo_index +\u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"DuckWillow"},"content":"                        } catch (DukeException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"OOPS!!! The description of a deadline must have /by.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"DuckWillow"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"DuckWillow"},"content":"                        }","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"DuckWillow"},"content":"                    }else if(input.startsWith(\"event\")){","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"DuckWillow"},"content":"                        int descriptionIndex \u003d 6;","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"DuckWillow"},"content":"                        String task \u003d  \"event\";","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"DuckWillow"},"content":"                        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"DuckWillow"},"content":"                            ExceptionTry(task,input);","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"DuckWillow"},"content":"                            String description \u003d input.substring(input.indexOf(\"event\") + descriptionIndex, input.indexOf(\"/at\") - 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"DuckWillow"},"content":"                            String at \u003d input.substring(input.indexOf(\"/at\") + 4);","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"DuckWillow"},"content":"                            todo[todo_index] \u003d new Event(description, at);","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(todo[todo_index].toString());","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"DuckWillow"},"content":"                            todo_index +\u003d 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"DuckWillow"},"content":"                        }catch (DukeException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"OOPS!!! The description of a event must have /at.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"DuckWillow"},"content":"                        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"DuckWillow"},"content":"                            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"DuckWillow"},"content":"                        }","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"DuckWillow"},"content":"                    }","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"DuckWillow"},"content":"                    System.out.println(\"Now you have \"+ todo_index  +\" tasks in the list.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"DuckWillow"},"content":"                    System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-02"},{"lineNumber":110,"author":{"gitId":"DuckWillow"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":111,"author":{"gitId":"DuckWillow"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"DuckWillow"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":113,"author":{"gitId":"DuckWillow"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":114,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"DuckWillow"},"content":"    private static void ExceptionTry(String task, String input) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"DuckWillow"},"content":"        //throw duke.command.DukeException here if descriptor don\u0027t have /by or /at","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"DuckWillow"},"content":"        switch (task){","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"DuckWillow"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"DuckWillow"},"content":"            if(!input.contains(\"/by\")){","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"DuckWillow"},"content":"                throw new DukeException();","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"DuckWillow"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"DuckWillow"},"content":"        case \"event\":","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"DuckWillow"},"content":"            if(!input.contains(\"/at\")){","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"DuckWillow"},"content":"                throw new DukeException();","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"DuckWillow"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"DuckWillow"},"content":"        default:","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"DuckWillow"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"DuckWillow"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DuckWillow":130,"-":4}},{"path":"src/main/java/duke/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke.command;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"DuckWillow":5}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"    protected String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"        this.taskType \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"        return super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"DuckWillow":19}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"    protected String at;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"        this.taskType \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"        return super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"DuckWillow":19}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"public class Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"    protected String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"    protected Character taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"DuckWillow"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"DuckWillow"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"        this.taskType \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"DuckWillow"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"DuckWillow"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"DuckWillow"},"content":"    public String getDescription(){","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"DuckWillow"},"content":"    public Character getTaskType(){","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"        return taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"DuckWillow"},"content":"    public String toString(){","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"        return \"[\"+ getTaskType() +\"]\" + \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"DuckWillow"},"content":"    public void markAsDone(){","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"DuckWillow"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"DuckWillow"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"DuckWillow"},"content":"}","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"DuckWillow"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"DuckWillow":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DuckWillow"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"DuckWillow"},"content":"todo","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"DuckWillow"},"content":"todo borrow book","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"DuckWillow"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"DuckWillow":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"DuckWillow"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"DuckWillow"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\bin ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"DuckWillow"},"content":"..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"DuckWillow"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DuckWillow":4,"-":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"DuckWillow"},"content":"if [ ! -d \"../bin2\" ]","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"DuckWillow"},"content":"    mkdir ../bin2","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"DuckWillow"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin2 ../src/main/java/duke/command*.java ../bin2 ../src/main/java/duke/task*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"DuckWillow"},"content":"java -classpath ../bin2 Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"DuckWillow"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DuckWillow":5,"-":29}}]
