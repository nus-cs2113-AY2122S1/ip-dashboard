[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Teckwhye"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Teckwhye"},"content":"   \u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"Teckwhye"},"content":"   Hello! I\u0027m Gaben.","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"Teckwhye"},"content":"   Steam sales is coming! Prepare your wallet.","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"Teckwhye"},"content":"   Anyways, what can I do for you today?","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"Teckwhye"},"content":"   \u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":17,"Teckwhye":6}},{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"public enum Commands {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"    LIST, BYE, DONE, TODO, DEADLINE, EVENT, DELETE","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Teckwhye":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Teckwhye"},"content":"import java.security.InvalidParameterException;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Teckwhye"},"content":"import java.util.Locale;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Teckwhye"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Teckwhye"},"content":"    /* User input is seperated by an empty space */","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Teckwhye"},"content":"    public static final String USER_INPUT_SEPERATOR \u003d \" \";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"Teckwhye"},"content":"    /* User command list */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Teckwhye"},"content":"    public static final String USER_COMMAND_LIST \u003d \"LIST\";","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Teckwhye"},"content":"    public static final String USER_COMMAND_TODO \u003d \"TODO\";","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Teckwhye"},"content":"    public static final String USER_COMMAND_DEADLINE \u003d \"DEADLINE\";","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Teckwhye"},"content":"    public static final String USER_COMMAND_EVENT \u003d \"EVENT\";","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Teckwhye"},"content":"    public static final String USER_COMMAND_DONE \u003d \"DONE\";","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Teckwhye"},"content":"    public static final String USER_COMMAND_BYE \u003d \"BYE\";","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Teckwhye"},"content":"    public static final String USER_COMMAND_HELP \u003d \"HELP\";","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Teckwhye"},"content":"    public static final String USER_COMMAND_DELETE \u003d \"DELETE\";","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Teckwhye"},"content":"    /* A nicely formatted line */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Teckwhye"},"content":"    private static final String LINE \u003d \"\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d\";","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Teckwhye"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello! I\u0027m Gaben.\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"Teckwhye"},"content":"            + \"Steam sales is coming! Prepare your wallet.\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"Teckwhye"},"content":"            + \"Anyways, what can I do for you today?\";","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"Teckwhye"},"content":"    private static final String EXIT_MESSAGE \u003d \"Thank you for using Gaben.\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":31,"author":{"gitId":"Teckwhye"},"content":"            + \"Remember to keep your wallet stacked before using me again!\";","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"Teckwhye"},"content":"    private static final String HELP_MESSAGE \u003d \"The following commands accepted are: \"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Teckwhye"},"content":"            + \"LIST (Show the list of task)\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Teckwhye"},"content":"            + \"TODO \u003cdescription\u003e (Create a task with todo tag)\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"Teckwhye"},"content":"            + \"DEADLINE \u003cdescription\u003e /by \u003cdate and time\u003e (Create a task with deadline tag)\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"Teckwhye"},"content":"            + \"EVENT \u003cdescription\u003e /at \u003cdate and time\u003e (Create a task with event tag)\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Teckwhye"},"content":"            + \"DONE \u003cindex of task\u003e (To mark indicated task as completed)\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"Teckwhye"},"content":"            + \"BYE (End program)\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"Teckwhye"},"content":"            + \"HELP (List out available commands)\";","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"Teckwhye"},"content":"     * Prints given string in the middle of 2 horizontal lines.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"Teckwhye"},"content":"     * @param message String to be printed","lastModifiedDate":"2021-08-25"},{"lineNumber":46,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"Teckwhye"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"Teckwhye"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"Teckwhye"},"content":"        System.out.println(message);","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"Teckwhye"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"Teckwhye"},"content":"    public static void main(String[] args) throws InvalidParameterException {","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"Teckwhye"},"content":"        // Print welcome message to user","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Teckwhye"},"content":"        printMessage(WELCOME_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":58,"author":{"gitId":"Teckwhye"},"content":"        // Create task manager to manage task given by user","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Teckwhye"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Teckwhye"},"content":"        taskManager.loadData();","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"Teckwhye"},"content":"        // Create a scanner to read user input","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Teckwhye"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"Teckwhye"},"content":"        // Boolean to allow continuous listening of user input","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Teckwhye"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"Teckwhye"},"content":"        // Listen for user input and do commands given by user till user wants to exit program","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Teckwhye"},"content":"        while (!exit) {","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Teckwhye"},"content":"            String userInput \u003d in.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"Teckwhye"},"content":"            String[] userInputArray \u003d userInput.split(USER_INPUT_SEPERATOR, 2);","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"Teckwhye"},"content":"            String userCommand \u003d userInputArray[0].toUpperCase(Locale.ROOT);","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"Teckwhye"},"content":"            try {","lastModifiedDate":"2021-09-09"},{"lineNumber":74,"author":{"gitId":"Teckwhye"},"content":"                switch (userCommand) {","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"Teckwhye"},"content":"                case USER_COMMAND_LIST:","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"Teckwhye"},"content":"                    taskManager.listTask();","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"Teckwhye"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"Teckwhye"},"content":"                case USER_COMMAND_BYE:","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"Teckwhye"},"content":"                    exit \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"Teckwhye"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"Teckwhye"},"content":"                case USER_COMMAND_DEADLINE:","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"Teckwhye"},"content":"                    taskManager.addTask(userInputArray, TaskType.DEADLINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"Teckwhye"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"Teckwhye"},"content":"                case USER_COMMAND_EVENT:","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"Teckwhye"},"content":"                    taskManager.addTask(userInputArray, TaskType.EVENT);","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"Teckwhye"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":87,"author":{"gitId":"Teckwhye"},"content":"                case USER_COMMAND_TODO:","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"Teckwhye"},"content":"                    taskManager.addTask(userInputArray, TaskType.TODO);","lastModifiedDate":"2021-09-09"},{"lineNumber":89,"author":{"gitId":"Teckwhye"},"content":"                    break;","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"Teckwhye"},"content":"                case USER_COMMAND_DONE:","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"Teckwhye"},"content":"                    taskManager.completeTask(Integer.parseInt(userInputArray[1]));","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"Teckwhye"},"content":"                    break;","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"Teckwhye"},"content":"                case USER_COMMAND_DELETE:","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"Teckwhye"},"content":"                    taskManager.deleteTask(Integer.parseInt(userInputArray[1]));","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"Teckwhye"},"content":"                    break;","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"Teckwhye"},"content":"                case USER_COMMAND_HELP:","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"Teckwhye"},"content":"                    printMessage(HELP_MESSAGE);","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"Teckwhye"},"content":"                    break;","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"Teckwhye"},"content":"                default:","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"Teckwhye"},"content":"                    throw new InvalidCommandException(\"Invalid Command Given.\\n\" + HELP_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"Teckwhye"},"content":"                }","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"Teckwhye"},"content":"            } catch (InvalidCommandException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":104,"author":{"gitId":"Teckwhye"},"content":"                printMessage(e.getMessage());","lastModifiedDate":"2021-09-09"},{"lineNumber":105,"author":{"gitId":"Teckwhye"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"Teckwhye"},"content":"                printMessage(\"Please give a number for the following command: \" + userCommand + \" \u003cnumber\u003e\");","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"Teckwhye"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"Teckwhye"},"content":"                printMessage(\"Please give command in the following format, you are missing something.\\n\" + HELP_MESSAGE);","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"Teckwhye"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":111,"author":{"gitId":"Teckwhye"},"content":"        taskManager.saveData();","lastModifiedDate":"2021-09-16"},{"lineNumber":112,"author":{"gitId":"Teckwhye"},"content":"        printMessage(EXIT_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"Teckwhye":112}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke.exception;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"    public InvalidCommandException(String message) {","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Teckwhye"},"content":"        super(message);","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Teckwhye"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Teckwhye":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"    /* Dateline of task */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Teckwhye"},"content":"    protected String by;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Teckwhye"},"content":"     * Constructor for deadline type task","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Teckwhye"},"content":"     * @param description Description of the deadline task processed by TaskManager","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Teckwhye"},"content":"     * @param by          Date and time of deadline processed by TaskManager","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Teckwhye"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Teckwhye"},"content":"        super(description, \u0027D\u0027);","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Teckwhye"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Teckwhye"},"content":"    /* Getter for deadline of deadline task */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Teckwhye"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Teckwhye"},"content":"        return by;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Teckwhye"},"content":"     * Formats description of deadline task type to be displayed to user","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Teckwhye"},"content":"     * @return Formatted string of an deadline task type","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Teckwhye"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Teckwhye"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Teckwhye"},"content":"        return super.toString() + String.format(\" (by: %s)\", this.getBy());","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"Teckwhye"},"content":"     * Formats description of task to be saved as txt","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"Teckwhye"},"content":"     * @return Formatted string of a task","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"Teckwhye"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"Teckwhye"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"Teckwhye"},"content":"        return String.format(\"%s,%d,%s,%s\", this.getType(), this.getIsDone(), this.getDescription(),","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"Teckwhye"},"content":"                this.getBy());","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"Teckwhye"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Teckwhye":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"    /* Date and time of event */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Teckwhye"},"content":"    protected String during;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Teckwhye"},"content":"     * Constructor for event type task","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Teckwhye"},"content":"     * @param description Description of the event task processed by TaskManager","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Teckwhye"},"content":"     * @param during      Date and time of event processed by TaskManager","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"Teckwhye"},"content":"    public Event(String description, String during) {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Teckwhye"},"content":"        super(description, \u0027E\u0027);","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Teckwhye"},"content":"        this.during \u003d during;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Teckwhye"},"content":"    /* Getter for date and time of event */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Teckwhye"},"content":"    public String getDuring() {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Teckwhye"},"content":"        return during;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Teckwhye"},"content":"     * Formats description of event task type to be displayed to user","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Teckwhye"},"content":"     * @return Formatted string of an event task type","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Teckwhye"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Teckwhye"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Teckwhye"},"content":"        return super.toString() + String.format(\" (at: %s)\", this.getDuring());","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"Teckwhye"},"content":"     * Formats description of task to be saved as txt","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"Teckwhye"},"content":"     * @return Formatted string of a task","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"Teckwhye"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"Teckwhye"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"Teckwhye"},"content":"        return String.format(\"%s,%d,%s,%s\", this.getType(), this.getIsDone(), this.getDescription(),","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"Teckwhye"},"content":"                this.getDuring());","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"Teckwhye"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Teckwhye":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"    /* Description of task */","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Teckwhye"},"content":"    protected String description;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Teckwhye"},"content":"    /* Status of task. Is completed when is true */","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Teckwhye"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Teckwhye"},"content":"    /* Type of task: T, D or E */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Teckwhye"},"content":"    protected char type;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Teckwhye"},"content":"     * Constructor for any type of task","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Teckwhye"},"content":"     * @param description Description of the task processed by TaskManager","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Teckwhye"},"content":"     * @param type        Type of task processed by TaskManager","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Teckwhye"},"content":"    public Task(String description, char type) {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Teckwhye"},"content":"        setDescription(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Teckwhye"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Teckwhye"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Teckwhye"},"content":"    /* Getter for boolean if task is done */","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"Teckwhye"},"content":"    public int getIsDone() {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"Teckwhye"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"Teckwhye"},"content":"     * Set isDone based on integer given. True \u003d 1, False \u003d 0","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"Teckwhye"},"content":"     * @param booleanValue either 1 or 0 according to what was saved in data.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"Teckwhye"},"content":"    public void setIsDone(int booleanValue) {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"Teckwhye"},"content":"        this.isDone \u003d booleanValue \u003d\u003d 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"Teckwhye"},"content":"    /* Getter for task type */","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"Teckwhye"},"content":"    public char getType() {","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"Teckwhye"},"content":"        return type;","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Teckwhye"},"content":"    /* Getter for task description */","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"Teckwhye"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"Teckwhye"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Teckwhye"},"content":"    /* Setter for task name */","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Teckwhye"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"Teckwhye"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Teckwhye"},"content":"     * Return the icon of status to show if task is completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Teckwhye"},"content":"     * @return Icon of status","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"Teckwhye"},"content":"    public char getStatusIcon() {","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"Teckwhye"},"content":"        return (isDone ? \u0027X\u0027 : \u0027 \u0027);","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Teckwhye"},"content":"     * Set status of task to be completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Teckwhye"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Teckwhye"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"Teckwhye"},"content":"     * Formats description of task to be displayed to user","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"Teckwhye"},"content":"     * @return Formatted string of a task","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"Teckwhye"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"Teckwhye"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":78,"author":{"gitId":"Teckwhye"},"content":"        return String.format(\"[%c][%c] %s\", this.getType(), this.getStatusIcon(), this.getDescription());","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"Teckwhye"},"content":"     * Formats description of task to be saved as txt","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"Teckwhye"},"content":"     * @return Formatted string of a task","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"Teckwhye"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"Teckwhye"},"content":"        return String.format(\"%s,%d,%s\", this.getType(), this.getIsDone(), this.getDescription());","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":91,"author":{"gitId":"Teckwhye"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Teckwhye":91}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"import duke.task.exception.InvalidParameterException;","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"Teckwhye"},"content":"import java.io.File;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"Teckwhye"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"Teckwhye"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"Teckwhye"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"Teckwhye"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Teckwhye"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Teckwhye"},"content":"    /* Types of tasks */","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"Teckwhye"},"content":"    public static final char CHAR_TYPE_TODO \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"Teckwhye"},"content":"    public static final char CHAR_TYPE_DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"Teckwhye"},"content":"    public static final char CHAR_TYPE_EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"Teckwhye"},"content":"    /* Types of string split regex  */","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Teckwhye"},"content":"    public static final String EVENT_STRING_SPLIT_REGEX \u003d \"/at \";","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Teckwhye"},"content":"    public static final String DEADLINE_STRING_SPLIT_REGEX \u003d \"/by \";","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"Teckwhye"},"content":"    public static final String DATA_TEXT_SEPERATOR \u003d \",\";","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"Teckwhye"},"content":"    /* Error messages */","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"Teckwhye"},"content":"    private static final String DEADLINE_ERROR_MESSAGE \u003d \"Sorry please input a valid DEADLINE TASK with date and time \"","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"Teckwhye"},"content":"            + \"by using \u003cdescription\u003e /by \u003cdate and time\u003e\";","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"Teckwhye"},"content":"    private static final String EVENT_ERROR_MESSAGE \u003d \"Sorry please input a EVENT TASK with date and time by using \"","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"Teckwhye"},"content":"            + \"\u003cdescription\u003e /at \u003cdate time\u003e\";","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"Teckwhye"},"content":"    private static final String EMPTY_DESCRIPTION_ERROR_MESSAGE \u003d \"Please do not input an empty description.\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"Teckwhye"},"content":"            + \"Input a TODO/DEADLINE/EVENT TASK with a valid description by using\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Teckwhye"},"content":"            + \"TODO \u003cdescription\u003e\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"Teckwhye"},"content":"            + \"DEADLINE \u003cdescription\u003e /by \u003cdate and time\u003e\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"Teckwhye"},"content":"            + \"EVENT \u003cdescription\u003e /at \u003cdate and time\u003e\";","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"Teckwhye"},"content":"    private static final String TASK_DOES_NOT_EXIST_MESSAGE \u003d \"Sorry, task selected does not exist! Please double \"","lastModifiedDate":"2021-09-09"},{"lineNumber":35,"author":{"gitId":"Teckwhye"},"content":"            + \"check if task number exist with the list command.\";","lastModifiedDate":"2021-09-09"},{"lineNumber":36,"author":{"gitId":"Teckwhye"},"content":"    private static final String DELETE_TASK_MESSAGE \u003d \"Why would you delete the following task? But anyways I have \"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"Teckwhye"},"content":"            + \"removed the following task.\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"Teckwhye"},"content":"            + \"%s\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"Teckwhye"},"content":"            + \"Now you have left %d tasks in the list.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"Teckwhye"},"content":"    private static final String COMPLETE_TASK_MESSAGE \u003d \"Good lad, you have finally completed the task you needed \"","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"Teckwhye"},"content":"            + \"to do.\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"Teckwhye"},"content":"            + \"%s\";","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"Teckwhye"},"content":"    private static final String ADD_TASK_MESSAGE \u003d \"Gaben have seen and will add the following task for you:\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"Teckwhye"},"content":"            + \"%s\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"Teckwhye"},"content":"            + \"You now have %d task in the list\";","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"Teckwhye"},"content":"    private static final String FILE_IO_ERROR_MESSAGE \u003d \"Sorry, there was some issues regarding the data files.\";","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":49,"author":{"gitId":"Teckwhye"},"content":"    /* List of tasks */","lastModifiedDate":"2021-09-02"},{"lineNumber":50,"author":{"gitId":"Teckwhye"},"content":"    private final ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2021-09-02"},{"lineNumber":51,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Teckwhye"},"content":"    /* Constructor for task manager */","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Teckwhye"},"content":"    public TaskManager() {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Teckwhye"},"content":"        tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"Teckwhye"},"content":"        Duke.printMessage(\"Gaben\u0027s Task Manager is here to assist you!\");","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Teckwhye"},"content":"     * Creates a new task based on type given","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"Teckwhye"},"content":"     * @param userParameter Description of task and its parameter given by user","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"Teckwhye"},"content":"     * @param type          type of task","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"Teckwhye"},"content":"     * @return return task","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"Teckwhye"},"content":"     * @throws InvalidParameterException If deadline/event task do not have the corresponding regex such as /by and /at","lastModifiedDate":"2021-09-09"},{"lineNumber":65,"author":{"gitId":"Teckwhye"},"content":"     *                                   or when no description is given after the regex","lastModifiedDate":"2021-09-09"},{"lineNumber":66,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"Teckwhye"},"content":"    public Task createTask(String userParameter, char type) throws InvalidParameterException {","lastModifiedDate":"2021-09-09"},{"lineNumber":68,"author":{"gitId":"Teckwhye"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"Teckwhye"},"content":"        String[] userArguments \u003d null;","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"Teckwhye"},"content":"        boolean regexNotFound \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"Teckwhye"},"content":"        boolean emptyDescription \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"Teckwhye"},"content":"        switch (type) {","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"Teckwhye"},"content":"        case CHAR_TYPE_TODO:","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"Teckwhye"},"content":"            task \u003d new Todo(userParameter);","lastModifiedDate":"2021-09-09"},{"lineNumber":75,"author":{"gitId":"Teckwhye"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"Teckwhye"},"content":"        case CHAR_TYPE_EVENT:","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"Teckwhye"},"content":"            userArguments \u003d userParameter.split(EVENT_STRING_SPLIT_REGEX, 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"Teckwhye"},"content":"            regexNotFound \u003d userArguments.length !\u003d 2;","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"Teckwhye"},"content":"            emptyDescription \u003d userArguments[0].isBlank();","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"Teckwhye"},"content":"            if (emptyDescription || regexNotFound) {","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"Teckwhye"},"content":"                throw new InvalidParameterException(EVENT_ERROR_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":83,"author":{"gitId":"Teckwhye"},"content":"            task \u003d new Event(userArguments[0], userArguments[1]);","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"Teckwhye"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"Teckwhye"},"content":"        case CHAR_TYPE_DEADLINE:","lastModifiedDate":"2021-09-02"},{"lineNumber":86,"author":{"gitId":"Teckwhye"},"content":"            userArguments \u003d userParameter.split(DEADLINE_STRING_SPLIT_REGEX, 2);","lastModifiedDate":"2021-09-09"},{"lineNumber":87,"author":{"gitId":"Teckwhye"},"content":"            regexNotFound \u003d userArguments.length !\u003d 2;","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"Teckwhye"},"content":"            emptyDescription \u003d userArguments[0].isBlank();","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"Teckwhye"},"content":"            if (emptyDescription || regexNotFound) {","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"Teckwhye"},"content":"                throw new InvalidParameterException(DEADLINE_ERROR_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":91,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":92,"author":{"gitId":"Teckwhye"},"content":"            task \u003d new Deadline(userArguments[0], userArguments[1]);","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"Teckwhye"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":94,"author":{"gitId":"Teckwhye"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"Teckwhye"},"content":"        return task;","lastModifiedDate":"2021-09-02"},{"lineNumber":96,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"Teckwhye"},"content":"     * Adds a newly created task with given task description and type to tasks list","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"Teckwhye"},"content":"     * @param userInputArray Command and parameters given by user","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"Teckwhye"},"content":"     * @param type           Type of task given by user input","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"Teckwhye"},"content":"    public void addTask(String[] userInputArray, TaskType type) {","lastModifiedDate":"2021-09-09"},{"lineNumber":106,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"Teckwhye"},"content":"        // Check for empty description and return if no description","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"Teckwhye"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"Teckwhye"},"content":"            boolean emptyDescription \u003d userInputArray[1].isBlank();","lastModifiedDate":"2021-09-09"},{"lineNumber":110,"author":{"gitId":"Teckwhye"},"content":"            if (emptyDescription) {","lastModifiedDate":"2021-09-02"},{"lineNumber":111,"author":{"gitId":"Teckwhye"},"content":"                Duke.printMessage(EMPTY_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":112,"author":{"gitId":"Teckwhye"},"content":"                return;","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":114,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":115,"author":{"gitId":"Teckwhye"},"content":"            // Create tasks","lastModifiedDate":"2021-09-09"},{"lineNumber":116,"author":{"gitId":"Teckwhye"},"content":"            Task task \u003d null;","lastModifiedDate":"2021-09-09"},{"lineNumber":117,"author":{"gitId":"Teckwhye"},"content":"            switch (type) {","lastModifiedDate":"2021-09-02"},{"lineNumber":118,"author":{"gitId":"Teckwhye"},"content":"            case TODO:","lastModifiedDate":"2021-09-02"},{"lineNumber":119,"author":{"gitId":"Teckwhye"},"content":"                task \u003d createTask(userInputArray[1], CHAR_TYPE_TODO);","lastModifiedDate":"2021-09-09"},{"lineNumber":120,"author":{"gitId":"Teckwhye"},"content":"                break;","lastModifiedDate":"2021-09-02"},{"lineNumber":121,"author":{"gitId":"Teckwhye"},"content":"            case EVENT:","lastModifiedDate":"2021-09-02"},{"lineNumber":122,"author":{"gitId":"Teckwhye"},"content":"                task \u003d createTask(userInputArray[1], CHAR_TYPE_EVENT);","lastModifiedDate":"2021-09-09"},{"lineNumber":123,"author":{"gitId":"Teckwhye"},"content":"                break;","lastModifiedDate":"2021-09-02"},{"lineNumber":124,"author":{"gitId":"Teckwhye"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-02"},{"lineNumber":125,"author":{"gitId":"Teckwhye"},"content":"                task \u003d createTask(userInputArray[1], CHAR_TYPE_DEADLINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":126,"author":{"gitId":"Teckwhye"},"content":"                break;","lastModifiedDate":"2021-09-02"},{"lineNumber":127,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":128,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":129,"author":{"gitId":"Teckwhye"},"content":"            // As long as task is valid, add to task list and inform user","lastModifiedDate":"2021-09-02"},{"lineNumber":130,"author":{"gitId":"Teckwhye"},"content":"            if (task !\u003d null) {","lastModifiedDate":"2021-09-02"},{"lineNumber":131,"author":{"gitId":"Teckwhye"},"content":"                tasksList.add(task);","lastModifiedDate":"2021-09-02"},{"lineNumber":132,"author":{"gitId":"Teckwhye"},"content":"                Duke.printMessage(String.format(ADD_TASK_MESSAGE, task, tasksList.size()));","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":135,"author":{"gitId":"Teckwhye"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":136,"author":{"gitId":"Teckwhye"},"content":"            Duke.printMessage(EMPTY_DESCRIPTION_ERROR_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":137,"author":{"gitId":"Teckwhye"},"content":"        } catch (InvalidParameterException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":138,"author":{"gitId":"Teckwhye"},"content":"            Duke.printMessage(e.getMessage());","lastModifiedDate":"2021-09-09"},{"lineNumber":139,"author":{"gitId":"Teckwhye"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":142,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":143,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"Teckwhye"},"content":"     * Prints the entire list of tasks currently in tasks list. Will let user know if there is no task in tasks list.","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"Teckwhye"},"content":"    public void listTask() {","lastModifiedDate":"2021-08-26"},{"lineNumber":147,"author":{"gitId":"Teckwhye"},"content":"        int tasksListSize \u003d tasksList.size();","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"Teckwhye"},"content":"        String message \u003d \"\";","lastModifiedDate":"2021-08-26"},{"lineNumber":149,"author":{"gitId":"Teckwhye"},"content":"        switch (tasksListSize) {","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"Teckwhye"},"content":"        case 0:","lastModifiedDate":"2021-08-26"},{"lineNumber":151,"author":{"gitId":"Teckwhye"},"content":"            message \u003d \"Oh! You have no tasks left!\";","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"Teckwhye"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"Teckwhye"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":154,"author":{"gitId":"Teckwhye"},"content":"            message \u003d \"Total of \" + tasksListSize + \" task(s)\\n\";","lastModifiedDate":"2021-08-26"},{"lineNumber":155,"author":{"gitId":"Teckwhye"},"content":"            int counter \u003d 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":156,"author":{"gitId":"Teckwhye"},"content":"            for (Task task : tasksList) {","lastModifiedDate":"2021-09-02"},{"lineNumber":157,"author":{"gitId":"Teckwhye"},"content":"                message +\u003d String.format(\"%d.%s\\n\", counter, task.toString());","lastModifiedDate":"2021-09-02"},{"lineNumber":158,"author":{"gitId":"Teckwhye"},"content":"                counter++;","lastModifiedDate":"2021-09-02"},{"lineNumber":159,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":160,"author":{"gitId":"Teckwhye"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":161,"author":{"gitId":"Teckwhye"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"Teckwhye"},"content":"        Duke.printMessage(message);","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":164,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":165,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":166,"author":{"gitId":"Teckwhye"},"content":"     * Check if task exist","lastModifiedDate":"2021-09-09"},{"lineNumber":167,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":168,"author":{"gitId":"Teckwhye"},"content":"     * @param taskNumber Task Number given by user","lastModifiedDate":"2021-09-09"},{"lineNumber":169,"author":{"gitId":"Teckwhye"},"content":"     * @return Corresponding task index fpr task number","lastModifiedDate":"2021-09-09"},{"lineNumber":170,"author":{"gitId":"Teckwhye"},"content":"     * @throws InvalidParameterException If task index does not exist in the current task list","lastModifiedDate":"2021-09-09"},{"lineNumber":171,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":172,"author":{"gitId":"Teckwhye"},"content":"    public int checkTaskExist(int taskNumber) throws InvalidParameterException {","lastModifiedDate":"2021-09-09"},{"lineNumber":173,"author":{"gitId":"Teckwhye"},"content":"        boolean isNotWithinSizeLimit \u003d taskNumber \u003c 1 || taskNumber \u003e tasksList.size();","lastModifiedDate":"2021-09-09"},{"lineNumber":174,"author":{"gitId":"Teckwhye"},"content":"        if (isNotWithinSizeLimit) {","lastModifiedDate":"2021-09-09"},{"lineNumber":175,"author":{"gitId":"Teckwhye"},"content":"            throw new InvalidParameterException(TASK_DOES_NOT_EXIST_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":176,"author":{"gitId":"Teckwhye"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":177,"author":{"gitId":"Teckwhye"},"content":"        return taskNumber - 1;","lastModifiedDate":"2021-09-09"},{"lineNumber":178,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":179,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":180,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":181,"author":{"gitId":"Teckwhye"},"content":"     * Set the task to be completed by marking it done.","lastModifiedDate":"2021-08-26"},{"lineNumber":182,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":183,"author":{"gitId":"Teckwhye"},"content":"     * @param taskNumber task number given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":185,"author":{"gitId":"Teckwhye"},"content":"    public void completeTask(int taskNumber) {","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"Teckwhye"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":187,"author":{"gitId":"Teckwhye"},"content":"            int taskNumberIndex \u003d checkTaskExist(taskNumber);","lastModifiedDate":"2021-09-09"},{"lineNumber":188,"author":{"gitId":"Teckwhye"},"content":"            Task task \u003d tasksList.get(taskNumberIndex);","lastModifiedDate":"2021-08-26"},{"lineNumber":189,"author":{"gitId":"Teckwhye"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":190,"author":{"gitId":"Teckwhye"},"content":"            Duke.printMessage( String.format(COMPLETE_TASK_MESSAGE,task));","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"Teckwhye"},"content":"        } catch (InvalidParameterException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":192,"author":{"gitId":"Teckwhye"},"content":"            Duke.printMessage(e.getMessage());","lastModifiedDate":"2021-09-09"},{"lineNumber":193,"author":{"gitId":"Teckwhye"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":195,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":196,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"Teckwhye"},"content":"     * Delete task as request by user.","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"Teckwhye"},"content":"     * @param taskNumber task number given by user","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"Teckwhye"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"Teckwhye"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"Teckwhye"},"content":"            int taskNumberIndex \u003d checkTaskExist(taskNumber);","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"Teckwhye"},"content":"            Task task \u003d tasksList.get(taskNumberIndex);","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"Teckwhye"},"content":"            tasksList.remove(taskNumberIndex);","lastModifiedDate":"2021-09-15"},{"lineNumber":206,"author":{"gitId":"Teckwhye"},"content":"            Duke.printMessage(String.format(DELETE_TASK_MESSAGE, task, tasksList.size()));","lastModifiedDate":"2021-09-17"},{"lineNumber":207,"author":{"gitId":"Teckwhye"},"content":"        } catch (InvalidParameterException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":208,"author":{"gitId":"Teckwhye"},"content":"            Duke.printMessage(e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"Teckwhye"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":210,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":211,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":212,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":213,"author":{"gitId":"Teckwhye"},"content":"     * Save all task data to ./data/task.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":214,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":215,"author":{"gitId":"Teckwhye"},"content":"    public void saveData() {","lastModifiedDate":"2021-09-16"},{"lineNumber":216,"author":{"gitId":"Teckwhye"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":217,"author":{"gitId":"Teckwhye"},"content":"            File taskFileDirectory \u003d new File(\"data\");","lastModifiedDate":"2021-09-16"},{"lineNumber":218,"author":{"gitId":"Teckwhye"},"content":"            File taskFile \u003d new File(\"data\" + File.separator + \"task.txt\");","lastModifiedDate":"2021-09-16"},{"lineNumber":219,"author":{"gitId":"Teckwhye"},"content":"            // Create directory and file","lastModifiedDate":"2021-09-16"},{"lineNumber":220,"author":{"gitId":"Teckwhye"},"content":"            if (!taskFileDirectory.exists()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":221,"author":{"gitId":"Teckwhye"},"content":"                taskFileDirectory.mkdir();","lastModifiedDate":"2021-09-16"},{"lineNumber":222,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":223,"author":{"gitId":"Teckwhye"},"content":"            if (!taskFile.exists()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":224,"author":{"gitId":"Teckwhye"},"content":"                taskFile.createNewFile();","lastModifiedDate":"2021-09-16"},{"lineNumber":225,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":226,"author":{"gitId":"Teckwhye"},"content":"            FileWriter myWriter \u003d new FileWriter(\"data\" + File.separator + \"task.txt\");","lastModifiedDate":"2021-09-16"},{"lineNumber":227,"author":{"gitId":"Teckwhye"},"content":"            for (Task task : tasksList) {","lastModifiedDate":"2021-09-16"},{"lineNumber":228,"author":{"gitId":"Teckwhye"},"content":"                myWriter.write(task.toSave() + \"\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":229,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":230,"author":{"gitId":"Teckwhye"},"content":"            myWriter.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":231,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":232,"author":{"gitId":"Teckwhye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":233,"author":{"gitId":"Teckwhye"},"content":"            Duke.printMessage(FILE_IO_ERROR_MESSAGE);","lastModifiedDate":"2021-09-16"},{"lineNumber":234,"author":{"gitId":"Teckwhye"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":235,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":236,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":237,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":238,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":239,"author":{"gitId":"Teckwhye"},"content":"     * Load all task data from ./data/task.txt to task manager","lastModifiedDate":"2021-09-16"},{"lineNumber":240,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":241,"author":{"gitId":"Teckwhye"},"content":"    public void loadData() {","lastModifiedDate":"2021-09-16"},{"lineNumber":242,"author":{"gitId":"Teckwhye"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":243,"author":{"gitId":"Teckwhye"},"content":"            File taskFile \u003d new File(\"data\" + File.separator + \"task.txt\");","lastModifiedDate":"2021-09-16"},{"lineNumber":244,"author":{"gitId":"Teckwhye"},"content":"            if (taskFile.exists()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":245,"author":{"gitId":"Teckwhye"},"content":"                BufferedReader bufferedReader \u003d new BufferedReader(new FileReader(taskFile));","lastModifiedDate":"2021-09-16"},{"lineNumber":246,"author":{"gitId":"Teckwhye"},"content":"                String line;","lastModifiedDate":"2021-09-16"},{"lineNumber":247,"author":{"gitId":"Teckwhye"},"content":"                Task task;","lastModifiedDate":"2021-09-16"},{"lineNumber":248,"author":{"gitId":"Teckwhye"},"content":"                while ((line \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-16"},{"lineNumber":249,"author":{"gitId":"Teckwhye"},"content":"                    String[] userInputArray \u003d line.split(DATA_TEXT_SEPERATOR);","lastModifiedDate":"2021-09-16"},{"lineNumber":250,"author":{"gitId":"Teckwhye"},"content":"                    switch (userInputArray[0].charAt(0)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":251,"author":{"gitId":"Teckwhye"},"content":"                    case CHAR_TYPE_TODO:","lastModifiedDate":"2021-09-16"},{"lineNumber":252,"author":{"gitId":"Teckwhye"},"content":"                        task \u003d new Todo(userInputArray[2]);","lastModifiedDate":"2021-09-16"},{"lineNumber":253,"author":{"gitId":"Teckwhye"},"content":"                        task.setIsDone(Integer.parseInt(userInputArray[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":254,"author":{"gitId":"Teckwhye"},"content":"                        tasksList.add(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":255,"author":{"gitId":"Teckwhye"},"content":"                        break;","lastModifiedDate":"2021-09-16"},{"lineNumber":256,"author":{"gitId":"Teckwhye"},"content":"                    case CHAR_TYPE_DEADLINE:","lastModifiedDate":"2021-09-16"},{"lineNumber":257,"author":{"gitId":"Teckwhye"},"content":"                        task \u003d new Deadline(userInputArray[2], userInputArray[3]);","lastModifiedDate":"2021-09-16"},{"lineNumber":258,"author":{"gitId":"Teckwhye"},"content":"                        task.setIsDone(Integer.parseInt(userInputArray[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":259,"author":{"gitId":"Teckwhye"},"content":"                        tasksList.add(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":260,"author":{"gitId":"Teckwhye"},"content":"                        break;","lastModifiedDate":"2021-09-16"},{"lineNumber":261,"author":{"gitId":"Teckwhye"},"content":"                    case CHAR_TYPE_EVENT:","lastModifiedDate":"2021-09-16"},{"lineNumber":262,"author":{"gitId":"Teckwhye"},"content":"                        task \u003d new Event(userInputArray[2], userInputArray[3]);","lastModifiedDate":"2021-09-16"},{"lineNumber":263,"author":{"gitId":"Teckwhye"},"content":"                        task.setIsDone(Integer.parseInt(userInputArray[1]));","lastModifiedDate":"2021-09-16"},{"lineNumber":264,"author":{"gitId":"Teckwhye"},"content":"                        tasksList.add(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":265,"author":{"gitId":"Teckwhye"},"content":"                        break;","lastModifiedDate":"2021-09-16"},{"lineNumber":266,"author":{"gitId":"Teckwhye"},"content":"                    }","lastModifiedDate":"2021-09-16"},{"lineNumber":267,"author":{"gitId":"Teckwhye"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":268,"author":{"gitId":"Teckwhye"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":269,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":270,"author":{"gitId":"Teckwhye"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":271,"author":{"gitId":"Teckwhye"},"content":"            Duke.printMessage(FILE_IO_ERROR_MESSAGE);","lastModifiedDate":"2021-09-16"},{"lineNumber":272,"author":{"gitId":"Teckwhye"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":273,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":274,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":275,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":276,"author":{"gitId":"Teckwhye"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Teckwhye":276}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"public enum TaskType {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"    DEADLINE, TODO, EVENT","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Teckwhye":5}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Teckwhye"},"content":"     * Constructor for todo type task","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Teckwhye"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Teckwhye"},"content":"     * @param description Description of the todo task processed by TaskManager","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Teckwhye"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Teckwhye"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Teckwhye"},"content":"        super(description, \u0027T\u0027);","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"Teckwhye"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Teckwhye":13}},{"path":"src/main/java/duke/task/exception/InvalidParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"package duke.task.exception;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"public class InvalidParameterException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"    public InvalidParameterException(String message) {","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Teckwhye"},"content":"        super(message);","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Teckwhye"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Teckwhye"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Teckwhye":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Teckwhye"},"content":"help","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"Teckwhye"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"Teckwhye"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"Teckwhye"},"content":"todo eat","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"Teckwhye"},"content":"todo sleep","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"Teckwhye"},"content":"todo play","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"Teckwhye"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"Teckwhye"},"content":"deadline project /at","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"Teckwhye"},"content":"deadline project /by 3pm","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"Teckwhye"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"Teckwhye"},"content":"event concert /at 5pm","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"Teckwhye"},"content":"delete 5","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Teckwhye"},"content":"delete 0","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Teckwhye"},"content":"delete asda","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Teckwhye"},"content":"done asdas","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Teckwhye"},"content":"done 5","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Teckwhye"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"Teckwhye"},"content":"done 0","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"Teckwhye"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"Teckwhye"},"content":"done 2","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"Teckwhye"},"content":"delete 2","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Teckwhye"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"Teckwhye"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"Teckwhye":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Teckwhye"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java  ../src/main/java/duke/task/*.java ../src/main/java/duke/task/exception/*.java ../src/main/java/duke/exception/*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Teckwhye"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"Teckwhye":2}}]
