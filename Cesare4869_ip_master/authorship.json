[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cesare4869"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Cesare4869"},"content":"import java.util.List;","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Cesare4869"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"Cesare4869"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Cesare4869"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"Cesare4869"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"Cesare4869"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"Cesare4869"},"content":"    private static void writeToFile(String filePath, List\u003cString\u003e lists, String[] taskType, String[] doneTasks, String[] dates, int number) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Cesare4869"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"Cesare4869"},"content":"        for(int i \u003d 0; i \u003c number; i++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"Cesare4869"},"content":"            fw.write(taskType[i] + \" | \" + doneTasks[i] + \" | \" + lists.get(i) + \" | \" + dates[i] + \"\\n\" );","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Cesare4869"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"Cesare4869"},"content":"        fw.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"Cesare4869"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"Cesare4869"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"Cesare4869"},"content":"        final String DIVIDER \u003d \"    ——————————————————————————————————————————————————————————————\";","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Cesare4869"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"Cesare4869"},"content":"        System.out.println(\"    Hello! I\u0027m Duke\\n    What can I do for you?\");","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Cesare4869"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Cesare4869"},"content":"        String line;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"Cesare4869"},"content":"        String[] taskType \u003d new String[100];","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Cesare4869"},"content":"        String[] doneTasks \u003d new String[100];","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Cesare4869"},"content":"        String[] dates \u003d new String[100];","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Cesare4869"},"content":"        List\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Cesare4869"},"content":"        Arrays.fill(doneTasks,\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Cesare4869"},"content":"        Arrays.fill(dates,\" \");","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"Cesare4869"},"content":"        int number \u003d 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"Cesare4869"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"Cesare4869"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"Cesare4869"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"Cesare4869"},"content":"            if (line.substring(0,4).equals(\"list\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"Cesare4869"},"content":"                try {","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"Cesare4869"},"content":"                    if (line.length() \u003e 4) {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"Cesare4869"},"content":"                        throw new Exception();","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"Cesare4869"},"content":"                    }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"Cesare4869"},"content":"                } catch (Exception e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\"    ☹ OOPS!!! The description of list must be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"Cesare4869"},"content":"                    line \u003d in.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"Cesare4869"},"content":"                    continue;","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    \" + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"Cesare4869"},"content":"                for(int i \u003d 0; i \u003c number; i++) {","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"Cesare4869"},"content":"                    System.out.print(\"    \" + (i + 1) + \". \" + \"[\" + taskType[i] + \"]\"","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"Cesare4869"},"content":"                            + \"[\" + doneTasks[i] + \"] \" + tasks.get(i));","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"Cesare4869"},"content":"                    if(taskType[i].equals(\"D\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"Cesare4869"},"content":"                        System.out.println(\" (by: \" + dates[i] + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"Cesare4869"},"content":"                    } else if (taskType[i].equals(\"E\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"Cesare4869"},"content":"                        System.out.println(\" (at: \" + dates[i] + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"Cesare4869"},"content":"                    } else {","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"Cesare4869"},"content":"                        System.out.println(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"Cesare4869"},"content":"                    }","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"Cesare4869"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"Cesare4869"},"content":"            }  else if (line.contains(\"done\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"Cesare4869"},"content":"                try {","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"Cesare4869"},"content":"                    int taskDone \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"Cesare4869"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\"    ☹ OOPS!!! The description of done cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"Cesare4869"},"content":"                    line \u003d in.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"Cesare4869"},"content":"                    continue;","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"Cesare4869"},"content":"                int taskDone \u003d Integer.parseInt(line.substring(5));","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"Cesare4869"},"content":"                doneTasks[taskDone - 1] \u003d \"X\";","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"Cesare4869"},"content":"                System.out.print(\"      [\" + taskType[taskDone - 1] + \"][X] \" + tasks.get(taskDone - 1));","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"Cesare4869"},"content":"                if(taskType[taskDone - 1].equals(\"D\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\" (by: \" + dates[taskDone - 1] + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"Cesare4869"},"content":"                } else if (taskType[taskDone - 1].equals(\"E\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\" (at: \" + dates[taskDone - 1] + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"Cesare4869"},"content":"                } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Cesare4869"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"Cesare4869"},"content":"            } else if (line.contains(\"todo\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"Cesare4869"},"content":"                try {","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"Cesare4869"},"content":"                    String task \u003d line.substring(5);","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"Cesare4869"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\"    ☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"Cesare4869"},"content":"                    line \u003d in.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"Cesare4869"},"content":"                    continue;","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"Cesare4869"},"content":"                String task \u003d line.substring(5);","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"Cesare4869"},"content":"                taskType[number++] \u003d \"T\";","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"Cesare4869"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"      [T][ ] \" + task);","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    Now you have \" + number + \" tasks in the list\");","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"Cesare4869"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"Cesare4869"},"content":"            } else if (line.contains(\"deadline\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"Cesare4869"},"content":"                try {","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"Cesare4869"},"content":"                    if (!line.contains(\"/by\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"Cesare4869"},"content":"                        throw new Exception();","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"Cesare4869"},"content":"                    }","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"Cesare4869"},"content":"                } catch (Exception e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\"    ☹ OOPS!!! The description of a deadline must have \u0027/by\u0027 to indicate time.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"Cesare4869"},"content":"                    line \u003d in.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"Cesare4869"},"content":"                    continue;","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"Cesare4869"},"content":"                int taskEnd \u003d line.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"Cesare4869"},"content":"                String task \u003d line.substring(9,taskEnd);","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"Cesare4869"},"content":"                dates[number] \u003d line.substring(taskEnd + 4);","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"Cesare4869"},"content":"                taskType[number++] \u003d \"D\";","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"Cesare4869"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"      [D][ ] \" + task + \" (by: \" + dates[number - 1] + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    Now you have \" + number + \" tasks in the list\");","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-30"},{"lineNumber":125,"author":{"gitId":"Cesare4869"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":126,"author":{"gitId":"Cesare4869"},"content":"            } else if (line.contains(\"event\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"Cesare4869"},"content":"                try {","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"Cesare4869"},"content":"                    if (!line.contains(\"/at\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"Cesare4869"},"content":"                        throw new Exception();","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"Cesare4869"},"content":"                    }","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"Cesare4869"},"content":"                } catch (Exception e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\"    ☹ OOPS!!! The description of a event must have \u0027/at\u0027 to indicate time.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"Cesare4869"},"content":"                    line \u003d in.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"Cesare4869"},"content":"                    continue;","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"Cesare4869"},"content":"                int taskEnd \u003d line.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"Cesare4869"},"content":"                String task \u003d line.substring(6,taskEnd);","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"Cesare4869"},"content":"                dates[number] \u003d line.substring(taskEnd + 4);","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"Cesare4869"},"content":"                taskType[number++] \u003d \"E\";","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"Cesare4869"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":144,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-08-30"},{"lineNumber":145,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"      [E][ ] \" + task + \" (by: \" + dates[number - 1] + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    Now you have \" + number + \" tasks in the list\");","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":148,"author":{"gitId":"Cesare4869"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":149,"author":{"gitId":"Cesare4869"},"content":"            } else if (line.contains(\"delete\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"Cesare4869"},"content":"                try {","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"Cesare4869"},"content":"                    int taskDelete \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"Cesare4869"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\"    ☹ OOPS!!! The description of a delete cannot be empty.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(DIVIDER);","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"Cesare4869"},"content":"                    line \u003d in.nextLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"Cesare4869"},"content":"                    continue;","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"Cesare4869"},"content":"                int taskDelete \u003d Integer.parseInt(line.substring(7));","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"Cesare4869"},"content":"                System.out.print(\"      [\" + taskType[taskDelete - 1] + \"][\" + doneTasks[taskDelete - 1] + \"] \" + tasks.get(taskDelete - 1));","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"Cesare4869"},"content":"                if(taskType[taskDelete - 1].equals(\"D\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\" (by: \" + dates[taskDelete - 1] + \")\");","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"Cesare4869"},"content":"                } else if (taskType[taskDelete - 1].equals(\"E\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\" (at: \" + dates[taskDelete - 1] + \")\");","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"Cesare4869"},"content":"                } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"Cesare4869"},"content":"                    System.out.println(\" \");","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    Now you have \" + --number + \" tasks in the list.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"Cesare4869"},"content":"                tasks.remove(taskDelete);","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"Cesare4869"},"content":"                for (int i \u003d taskDelete - 1; i \u003c number; i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"Cesare4869"},"content":"                    taskType[i] \u003d taskType[i + 1];","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"Cesare4869"},"content":"                for (int i \u003d taskDelete - 1; i \u003c number; i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"Cesare4869"},"content":"                    doneTasks[i] \u003d doneTasks[i + 1];","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"Cesare4869"},"content":"                for (int i \u003d taskDelete - 1; i \u003c number; i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"Cesare4869"},"content":"                    dates[i] \u003d dates[i + 1];","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"Cesare4869"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"Cesare4869"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":183,"author":{"gitId":"Cesare4869"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":184,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-06"},{"lineNumber":186,"author":{"gitId":"Cesare4869"},"content":"                System.out.println(DIVIDER);","lastModifiedDate":"2021-09-06"},{"lineNumber":187,"author":{"gitId":"Cesare4869"},"content":"                line \u003d in.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":188,"author":{"gitId":"Cesare4869"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":189,"author":{"gitId":"Cesare4869"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":190,"author":{"gitId":"Cesare4869"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":191,"author":{"gitId":"Cesare4869"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"Cesare4869"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-08-22"},{"lineNumber":193,"author":{"gitId":"Cesare4869"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":194,"author":{"gitId":"Cesare4869"},"content":"            writeToFile(\"./src/Duke.txt\", tasks, taskType, doneTasks, dates, number);","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"Cesare4869"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":196,"author":{"gitId":"Cesare4869"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":197,"author":{"gitId":"Cesare4869"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Cesare4869":195,"-":4}}]
