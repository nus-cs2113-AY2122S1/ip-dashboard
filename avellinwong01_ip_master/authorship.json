[{"path":"Duke/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"T | 1 | homework","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"avellinwong01":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"avellinwong01"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"avellinwong01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"avellinwong01"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"avellinwong01"},"content":"            tasks \u003d Storage.readFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"avellinwong01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"            System.out.println(\"Data file not found\");","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"avellinwong01"},"content":"        int currCount \u003d tasks.size(); // index of next element to be added","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"avellinwong01"},"content":"        new Parser(tasks, currCount);","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"avellinwong01"},"content":"        Parser.executeCommands();","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"avellinwong01"},"content":"        Ui.printGoodBye();","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"avellinwong01":23,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"    DukeException(String message) {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"        super(message);","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"avellinwong01"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"avellinwong01":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"avellinwong01"},"content":"// Command Manager","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"public class Parser {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"avellinwong01"},"content":"    private static final int MAX_TASKS \u003d 100;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"avellinwong01"},"content":"    private static final int TODO_MIN_LENGTH \u003d 6;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"avellinwong01"},"content":"    private static final int TODO_DESCRIPTION_START \u003d 5;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"avellinwong01"},"content":"    private static final String TODO_DESCRIPTION_ERROR \u003d \"The todo description cannot be empty\";","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"avellinwong01"},"content":"    private static final int EVENT_MIN_LENGTH \u003d 7;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"    private static final int EVENT_DESCRIPTION_START \u003d 6;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"avellinwong01"},"content":"    private static final String EVENT_EMPTY_ERROR \u003d \"The event must contain an \u0027/at\u0027\";","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"avellinwong01"},"content":"    private static final String EVENT_DESCRIPTION_ERROR \u003d \"The event description cannot be empty\";","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"avellinwong01"},"content":"    private static final int DEADLINE_MIN_LENGTH \u003d 10;","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"avellinwong01"},"content":"    private static final int DEADLINE_DESCRIPTION_START \u003d 9;","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"avellinwong01"},"content":"    private static final String DEADLINE_EMPTY_ERROR \u003d \"The deadline must contain a \u0027/by\u0027\";","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"avellinwong01"},"content":"    private static final String DEADLINE_DESCRIPTION_ERROR \u003d \"The deadline description cannot be empty\";","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"avellinwong01"},"content":"    private static final int EVENT_DEADLINE_TIME \u003d 3;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"avellinwong01"},"content":"    private static final int DONE_DELETE_MIN_LENGTH \u003d 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"avellinwong01"},"content":"    private static final String DONE_DESCRIPTION_ERROR \u003d \"The task to be marked as done cannot be empty\";","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"avellinwong01"},"content":"    private static final String DONE_EXCEED_ERROR \u003d \"The task to be marked as done does not exist in the list of tasks\";","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"avellinwong01"},"content":"    private static final String DELETE_DESCRIPTION_ERROR \u003d \"The task to be deleted cannot be empty\";","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"avellinwong01"},"content":"    private static final String DELETE_EXCEED_ERROR \u003d \"The task to be deleted does not exist in the list of tasks\";","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"avellinwong01"},"content":"    private static final String COMMAND_ERROR \u003d \"Sorry, I don\u0027t understand what you are saying\";","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"avellinwong01"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(MAX_TASKS);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"avellinwong01"},"content":"    private static int currCount;","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"avellinwong01"},"content":"    public Parser(ArrayList\u003cTask\u003e tasks, int currCount) {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"avellinwong01"},"content":"        Parser.tasks \u003d tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"avellinwong01"},"content":"        Parser.currCount \u003d currCount;","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"avellinwong01"},"content":"    public static void markAsDone(String line) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"avellinwong01"},"content":"        String[] input \u003d line.split(\" \");","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"avellinwong01"},"content":"        if (input.length \u003c DONE_DELETE_MIN_LENGTH) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"avellinwong01"},"content":"            throw new DukeException(DONE_DESCRIPTION_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"avellinwong01"},"content":"        int index \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"avellinwong01"},"content":"        if (index \u003e\u003d currCount || index \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"avellinwong01"},"content":"            throw new DukeException(DONE_EXCEED_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"avellinwong01"},"content":"        tasks.get(index).markAsDone();","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"avellinwong01"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" \" + tasks.get(index).toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"avellinwong01"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"avellinwong01"},"content":"        Storage.writeToFile(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"avellinwong01"},"content":"    public static void deleteTask(String line) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"avellinwong01"},"content":"        String[] input \u003d line.split(\" \");","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"avellinwong01"},"content":"        if (input.length \u003c DONE_DELETE_MIN_LENGTH) {","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"avellinwong01"},"content":"            throw new DukeException(DELETE_DESCRIPTION_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"avellinwong01"},"content":"        int index \u003d Integer.parseInt(input[1]) - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"avellinwong01"},"content":"        if (index \u003e\u003d currCount || index \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"avellinwong01"},"content":"            throw new DukeException(DELETE_EXCEED_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"avellinwong01"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" \" + tasks.get(index).toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"avellinwong01"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"avellinwong01"},"content":"        int numTasks \u003d currCount - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"avellinwong01"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"avellinwong01"},"content":"        currCount -\u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"avellinwong01"},"content":"        Storage.writeToFile(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"avellinwong01"},"content":"    public static void printList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"avellinwong01"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"avellinwong01"},"content":"        int taskCount \u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"avellinwong01"},"content":"        for (Task elem : tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"avellinwong01"},"content":"            System.out.println(\" \" + taskCount + \". \" + elem.toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"avellinwong01"},"content":"            taskCount +\u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"avellinwong01"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"avellinwong01"},"content":"    public static void completeAddTask() {","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"avellinwong01"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" \" + tasks.get(currCount).toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"avellinwong01"},"content":"        int numTasks \u003d currCount + 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" Now you have \" + numTasks + \" tasks in the list.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"avellinwong01"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"avellinwong01"},"content":"        currCount +\u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"avellinwong01"},"content":"        Storage.writeToFile(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"avellinwong01"},"content":"    public static void processEventCommand(String line) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"avellinwong01"},"content":"        if (line.length() \u003c EVENT_MIN_LENGTH) {","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"avellinwong01"},"content":"            throw new DukeException(EVENT_DESCRIPTION_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"avellinwong01"},"content":"        if (!line.contains(\"/at\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"avellinwong01"},"content":"            throw new DukeException(EVENT_EMPTY_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"avellinwong01"},"content":"        String[] input \u003d line.substring(EVENT_DESCRIPTION_START).split(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"avellinwong01"},"content":"        tasks.add(currCount, TaskList.addEvent(input[0], input[1].substring(EVENT_DEADLINE_TIME)));","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"avellinwong01"},"content":"    public static void processDeadlineCommand(String line) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"avellinwong01"},"content":"        if (line.length() \u003c DEADLINE_MIN_LENGTH) {","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"avellinwong01"},"content":"            throw new DukeException(DEADLINE_DESCRIPTION_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"avellinwong01"},"content":"        if (!line.contains(\"/by\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"avellinwong01"},"content":"            throw new DukeException(DEADLINE_EMPTY_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"avellinwong01"},"content":"        String[] input \u003d line.substring(DEADLINE_DESCRIPTION_START).split(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"avellinwong01"},"content":"        // first elem: description, second elem: deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"avellinwong01"},"content":"        tasks.add(currCount, TaskList.addDeadline(input[0], input[1].substring(EVENT_DEADLINE_TIME)));","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"avellinwong01"},"content":"    public static void processTodoCommand(String line) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"avellinwong01"},"content":"        if (line.length() \u003c TODO_MIN_LENGTH) {","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"avellinwong01"},"content":"            throw new DukeException(TODO_DESCRIPTION_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"avellinwong01"},"content":"        // take the description part of the input string","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"avellinwong01"},"content":"        tasks.add(currCount, TaskList.addTodo(line.substring(TODO_DESCRIPTION_START)));","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"avellinwong01"},"content":"    public static void executeCommands() {","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"avellinwong01"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"avellinwong01"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"avellinwong01"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"avellinwong01"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"avellinwong01"},"content":"                if (line.contains(\"done\")) { // mark task as done","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"avellinwong01"},"content":"                    markAsDone(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"avellinwong01"},"content":"                } else if (line.contains(\"delete\")) { // delete task","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"avellinwong01"},"content":"                    deleteTask(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"avellinwong01"},"content":"                } else if (line.contains(\"todo\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"avellinwong01"},"content":"                    processTodoCommand(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"avellinwong01"},"content":"                    completeAddTask();","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"avellinwong01"},"content":"                } else if (line.contains(\"deadline\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"avellinwong01"},"content":"                    processDeadlineCommand(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"avellinwong01"},"content":"                    completeAddTask();","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"avellinwong01"},"content":"                } else if (line.contains(\"event\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"avellinwong01"},"content":"                    processEventCommand(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"avellinwong01"},"content":"                    completeAddTask();","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"avellinwong01"},"content":"                } else if (line.equals(\"list\")){ // print the list","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"avellinwong01"},"content":"                    printList();","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"avellinwong01"},"content":"                } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"avellinwong01"},"content":"                    throw new DukeException(COMMAND_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"avellinwong01"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"avellinwong01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"avellinwong01"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"avellinwong01"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"avellinwong01"},"content":"                Ui.printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"avellinwong01"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"avellinwong01"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"avellinwong01"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"avellinwong01":159}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"avellinwong01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"avellinwong01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"avellinwong01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"avellinwong01"},"content":"// File Manager","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"avellinwong01"},"content":"public class Storage {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"    public static ArrayList\u003cTask\u003e readFile() throws FileNotFoundException {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"avellinwong01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"avellinwong01"},"content":"        File dir \u003d new File(\"Duke\");","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"avellinwong01"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"avellinwong01"},"content":"            dir.mkdir();","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"avellinwong01"},"content":"        File data \u003d new File(\"Duke/data.txt\");","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"avellinwong01"},"content":"        if (data.exists()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"avellinwong01"},"content":"            Scanner s \u003d new Scanner(data);","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"avellinwong01"},"content":"            int currCount \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"avellinwong01"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"avellinwong01"},"content":"                parseDataFromFile(tasks, s.nextLine(), currCount); //Array List is passed by reference","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"avellinwong01"},"content":"                currCount +\u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"avellinwong01"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"avellinwong01"},"content":"        else {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"avellinwong01"},"content":"            System.out.println(\"Creating new data file....\");","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"avellinwong01"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"avellinwong01"},"content":"                data.createNewFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"avellinwong01"},"content":"                System.out.println(\"New data file created\");","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"avellinwong01"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"avellinwong01"},"content":"                System.out.println(\"Unable to create new data file\");","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"avellinwong01"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"avellinwong01"},"content":"        return tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"avellinwong01"},"content":"    private static void parseDataFromFile(ArrayList\u003cTask\u003e tasks, String nextLine, int currCount) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"avellinwong01"},"content":"        String[] input \u003d nextLine.split(\"\\\\|\"); // necessary to escape regex meta character","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"avellinwong01"},"content":"        String[] trimmedInput \u003d new String[input.length];","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"avellinwong01"},"content":"        for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"avellinwong01"},"content":"            trimmedInput[i] \u003d input[i].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"avellinwong01"},"content":"        switch (trimmedInput[0]) {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"avellinwong01"},"content":"        case \"T\":","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"avellinwong01"},"content":"            tasks.add(currCount, TaskList.addTodo(trimmedInput[2]));","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"avellinwong01"},"content":"            if (trimmedInput[1].equals(\"1\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"avellinwong01"},"content":"                tasks.get(currCount).markAsDone();","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"avellinwong01"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"avellinwong01"},"content":"            break;","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"avellinwong01"},"content":"        case \"D\":","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"avellinwong01"},"content":"            tasks.add(currCount, TaskList.addDeadline(trimmedInput[2], trimmedInput[3]));","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"avellinwong01"},"content":"            if (trimmedInput[1].equals(\"1\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"avellinwong01"},"content":"                tasks.get(currCount).markAsDone();","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"avellinwong01"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"avellinwong01"},"content":"            break;","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"avellinwong01"},"content":"        case \"E\":","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"avellinwong01"},"content":"            tasks.add(currCount, TaskList.addEvent(trimmedInput[2], trimmedInput[3]));","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"avellinwong01"},"content":"            if (trimmedInput[1].equals(\"1\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"avellinwong01"},"content":"                tasks.get(currCount).markAsDone();","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"avellinwong01"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"avellinwong01"},"content":"            break;","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"avellinwong01"},"content":"    public static void writeToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"avellinwong01"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"avellinwong01"},"content":"            FileWriter fw \u003d new FileWriter(\"Duke/data.txt\");","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"avellinwong01"},"content":"            for (Task t: tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"avellinwong01"},"content":"                // System.out.println(t.parseDataIntoString());","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"avellinwong01"},"content":"                String fileOutput \u003d t.parseDataIntoString() + System.lineSeparator();","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"avellinwong01"},"content":"                fw.write(fileOutput);","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"avellinwong01"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"avellinwong01"},"content":"            fw.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"avellinwong01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"avellinwong01"},"content":"            System.out.println(\"Unable to write to file\");","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"avellinwong01"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"avellinwong01"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"avellinwong01":84}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"public class Ui {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"avellinwong01"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"avellinwong01"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"avellinwong01"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"avellinwong01"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"avellinwong01"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"avellinwong01"},"content":"    public static void printGoodBye() {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"avellinwong01"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"avellinwong01"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"avellinwong01"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"avellinwong01"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"avellinwong01":28}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"    protected String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"avellinwong01"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"avellinwong01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"avellinwong01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"avellinwong01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"avellinwong01"},"content":"    public String parseDataIntoString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"avellinwong01"},"content":"        return \"D\" + super.parseDataIntoString() + \" | \" + this.by;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"avellinwong01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"avellinwong01":20}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"    protected String at;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"avellinwong01"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"avellinwong01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"avellinwong01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"avellinwong01"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"avellinwong01"},"content":"    public String parseDataIntoString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"avellinwong01"},"content":"        return \"E\" + super.parseDataIntoString() + \" | \" + this.at;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"avellinwong01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"avellinwong01":20}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"public class Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"avellinwong01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"avellinwong01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"avellinwong01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"avellinwong01"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"avellinwong01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"avellinwong01"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"avellinwong01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"avellinwong01"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"avellinwong01"},"content":"    public String parseDataIntoString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"avellinwong01"},"content":"        char isDoneChar \u003d this.isDone ? \u00271\u0027: \u00270\u0027;","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"avellinwong01"},"content":"        return \" | \" + isDoneChar + \" | \" + this.description;","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"avellinwong01"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"avellinwong01":29}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"// Task Manager","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"public class TaskList {","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"    public static Task addEvent(String description, String at) {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"        return new Event(description, at);","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"    public static Task addDeadline(String description, String by) {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"avellinwong01"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"avellinwong01"},"content":"    public static Task addTodo(String description) {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"avellinwong01"},"content":"        return new Todo(description);","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"avellinwong01"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"avellinwong01":17}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"avellinwong01"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"avellinwong01"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"avellinwong01"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"avellinwong01"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"avellinwong01"},"content":"    public String parseDataIntoString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"        return \"T\" + super.parseDataIntoString();","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"avellinwong01"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"avellinwong01"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"avellinwong01":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"avellinwong01"},"content":"todo borrow book","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"avellinwong01"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"avellinwong01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"avellinwong01"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"avellinwong01"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"avellinwong01"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"avellinwong01"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"avellinwong01":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"avellinwong01"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"avellinwong01":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"avellinwong01"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"avellinwong01":1,"-":37}}]
