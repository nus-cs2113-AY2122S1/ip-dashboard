[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"## Usage","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"### `java -jar ip.jar` - Starting the Duke chat-bot","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"Enter the following command into the terminal to start the chat-bot","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"Make sure the ip.jar file is in the current directory in the terminal","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"Example of usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"java -jar ip.jar","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"### `todo` - adding a new todo task ","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"adds a new todo task to the current task list and to the duke text file.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"arguments:","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"1. taskDescription : description of the todo task","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"todo \u003ctaskDescription\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"xingyuan123"},"content":"### `deadline` - adding a new deadline task","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"xingyuan123"},"content":"adds a new deadline task to the current task list and to the duke text file.","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"xingyuan123"},"content":"arguments:","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xingyuan123"},"content":"1. taskDescription : description of the deadline task","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xingyuan123"},"content":"2. taskDeadline : the deadline time of the task ","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"xingyuan123"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"xingyuan123"},"content":"todo \u003ctaskDescription\u003e /by \u003ctaskDeadline\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"xingyuan123"},"content":"### `event` - adding a new event task","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"xingyuan123"},"content":"adds a new event task to the current task list and to the duke text file.","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"xingyuan123"},"content":"arguments:","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"xingyuan123"},"content":"1. taskDescription : description of the event task","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"xingyuan123"},"content":"2. taskEvent : the event time of the task","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"xingyuan123"},"content":"event \u003ctaskDescription\u003e /at \u003ctaskEvent\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"xingyuan123"},"content":"### `list` - listing all tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"xingyuan123"},"content":"lists all tasks in the task list","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"xingyuan123"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"xingyuan123"},"content":"list","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"xingyuan123"},"content":"### `done` - marking a task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"xingyuan123"},"content":"marks a task as done on the current task list and on the duke text file.  ","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"xingyuan123"},"content":"arguments:","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"xingyuan123"},"content":"1. taskNumber : task number corresponding to the task in task list to be marked as done.","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"xingyuan123"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"xingyuan123"},"content":"done \u003ctaskNumber\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"xingyuan123"},"content":"### `delete` - deleting a task ","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"xingyuan123"},"content":"deletes a task off the current task list and off the duke text file.","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"xingyuan123"},"content":"arguments:","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"xingyuan123"},"content":"1. taskNumber : task number corresponding to the task in task list to be marked as done.","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"xingyuan123"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"xingyuan123"},"content":"delete \u003ctaskNumber\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"xingyuan123"},"content":"### `find` - finding a task","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"xingyuan123"},"content":"find a task on the current task list based on the keyword entered.","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"xingyuan123"},"content":"arguments:","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"xingyuan123"},"content":"1. keyword : keyword to be searched in the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"xingyuan123"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"xingyuan123"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"xingyuan123"},"content":"### `bye` - terminating the chat-bot","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"xingyuan123"},"content":"terminates and quits the duke chat-bot","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"xingyuan123"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"xingyuan123"},"content":"bye","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"xingyuan123"},"content":"```","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"xingyuan123":73,"-":23}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class Command {","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    private static final int TODO_INDEX \u003d 5;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"    private static final int DEADLINE_INDEX \u003d 9;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"    private static final int EVENT_INDEX \u003d 6;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"    private static final int DELETE_INDEX \u003d 7;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"    private static final int DONE_INDEX \u003d 5;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"    private static final int FIND_INDEX \u003d 5;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"     * This method calls the printTaskList method to print all current tasks in the TaskList.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"    public static void handleListCommand(TaskList list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"        list.printTaskList();","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"     * This method calls the markIsDne method to mark a task as done and","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"     * writes to the duke text file to visually indicate the task has been done on the text file.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"     * @param line the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"xingyuan123"},"content":"    public static void handleDoneCommand(TaskList list, String line) {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"xingyuan123"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"xingyuan123"},"content":"            list.markIsDone(Integer.parseInt(line.substring(DONE_INDEX).trim()));","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"xingyuan123"},"content":"            Storage.writeDukeTextFile(list);","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"xingyuan123"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"xingyuan123"},"content":"            Ui.printOutOfBounds();","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"xingyuan123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"xingyuan123"},"content":"            Ui.printWrongFormat();","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"xingyuan123"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"xingyuan123"},"content":"            Ui.printOutOfBounds();","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"xingyuan123"},"content":"     * This method calls the createToDoTask method to create a todo task and","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"xingyuan123"},"content":"     * writes to the duke text file to add the newly created todo task.","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"xingyuan123"},"content":"     * @param line the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"xingyuan123"},"content":"    public static void handleTodoCommand(TaskList list, String line) {","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"xingyuan123"},"content":"        String InputType \u003d \"Todo\";","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"xingyuan123"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"xingyuan123"},"content":"            createToDoTask(line, list);","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"xingyuan123"},"content":"            Storage.writeDukeTextFile(list);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"xingyuan123"},"content":"        } catch (TodoEmptyException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"xingyuan123"},"content":"            Ui.printInputEmpty(InputType);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"xingyuan123"},"content":"     * This method calls the createDeadlineTask method to create a deadline task and","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"xingyuan123"},"content":"     * writes to the duke text file to add the newly created deadline task.","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"xingyuan123"},"content":"     * @param line the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"xingyuan123"},"content":"    public static void handleDeadlineCommand(TaskList list, String line) {","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"xingyuan123"},"content":"        String InputType \u003d \"Deadline\";","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"xingyuan123"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"xingyuan123"},"content":"            createDeadlineTask(line, list);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"xingyuan123"},"content":"            Storage.writeDukeTextFile(list);","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"xingyuan123"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"xingyuan123"},"content":"            Ui.printDeadlineNoDate();","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"xingyuan123"},"content":"        } catch (DeadlineEmptyException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"xingyuan123"},"content":"            Ui.printInputEmpty(InputType);","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"xingyuan123"},"content":"     * This method calls the handleEventCommand method to create an event task and","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"xingyuan123"},"content":"     * writes to the duke text file to add the newly created event task.","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"xingyuan123"},"content":"     * @param line the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"xingyuan123"},"content":"    public static void handleEventCommand(TaskList list, String line) {","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"xingyuan123"},"content":"        String InputType \u003d \"Event\";","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"xingyuan123"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"xingyuan123"},"content":"            createEventTask(line, list);","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"xingyuan123"},"content":"            Storage.writeDukeTextFile(list);","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"xingyuan123"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"xingyuan123"},"content":"            Ui.printEventNoDate();","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"xingyuan123"},"content":"        } catch (EventEmptyException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"xingyuan123"},"content":"            Ui.printInputEmpty(InputType);","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"xingyuan123"},"content":"     * This method calls the handleDeleteCommand method to delete task and","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"xingyuan123"},"content":"     * writes to the duke text file to delete the specified task.","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"xingyuan123"},"content":"     * @param line the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"xingyuan123"},"content":"    public static void handleDeleteCommand(TaskList list, String line) {","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"xingyuan123"},"content":"        String InputType \u003d \"Delete\";","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"xingyuan123"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"xingyuan123"},"content":"            list.deleteTask(Integer.parseInt(line.substring(DELETE_INDEX).trim()));","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"xingyuan123"},"content":"            Storage.writeDukeTextFile(list);","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"xingyuan123"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"xingyuan123"},"content":"            Ui.printOutOfBounds();","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"xingyuan123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"xingyuan123"},"content":"            Ui.printWrongFormat();","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"xingyuan123"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"xingyuan123"},"content":"            Ui.printInputEmpty(InputType);","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"xingyuan123"},"content":"     * This method calls the handleFindCommand method to find tasks with matching keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"xingyuan123"},"content":"     * @param line the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"xingyuan123"},"content":"    public static void handleFindCommand(TaskList list, String line) {","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"xingyuan123"},"content":"        String InputType \u003d \"Find\";","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"xingyuan123"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"xingyuan123"},"content":"            list.findTask(line.substring(FIND_INDEX).trim());","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"xingyuan123"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"xingyuan123"},"content":"            Ui.printOutOfBounds();","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"xingyuan123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"xingyuan123"},"content":"            Ui.printWrongFormat();","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"xingyuan123"},"content":"        } catch (FindEmptyException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"xingyuan123"},"content":"            Ui.printInputEmpty(InputType);","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"xingyuan123"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"xingyuan123"},"content":"            Ui.printInputEmpty(InputType);","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"xingyuan123"},"content":"            Ui.printReferralMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"xingyuan123"},"content":"            Ui.printCommandGuide();","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"xingyuan123"},"content":"     * this method handles an invalid command input by calling on several Ui methods","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"xingyuan123"},"content":"     * to tell the user his/her input is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":169,"author":{"gitId":"xingyuan123"},"content":"    public static void handleInvalidCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"xingyuan123"},"content":"        Ui.printInvalidCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"xingyuan123"},"content":"        Ui.printReferralMessage();","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"xingyuan123"},"content":"        Ui.printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"xingyuan123"},"content":"     * This method creates a new todo task and calls printEcho method to tell the user a todo task has been added.","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"xingyuan123"},"content":"     * @param line the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"xingyuan123"},"content":"     * @param list the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"xingyuan123"},"content":"     * @throws TodoEmptyException if the todo input substring consists of only whitespaces or is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"xingyuan123"},"content":"    public static void createToDoTask(String line, TaskList list) throws TodoEmptyException {","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"xingyuan123"},"content":"        if (line.substring(TODO_INDEX).trim().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"xingyuan123"},"content":"            throw new TodoEmptyException();","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"xingyuan123"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"xingyuan123"},"content":"            Task task \u003d new ToDo(line.substring(TODO_INDEX));","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"xingyuan123"},"content":"            list.addTaskList(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"xingyuan123"},"content":"            Ui.printEcho(task, list);","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":193,"author":{"gitId":"xingyuan123"},"content":"     * This method creates a new deadline task and calls printEcho method to tell the user a deadline task has been added.","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"xingyuan123"},"content":"     * @param line the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"xingyuan123"},"content":"     * @param list the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":197,"author":{"gitId":"xingyuan123"},"content":"     * @throws ArrayIndexOutOfBoundsException if the deadline has no /by date","lastModifiedDate":"2021-09-28"},{"lineNumber":198,"author":{"gitId":"xingyuan123"},"content":"     * @throws DeadlineEmptyException         if the deadline input substring consists of only whitespaces or is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":199,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":200,"author":{"gitId":"xingyuan123"},"content":"    public static void createDeadlineTask(String line, TaskList list) throws DeadlineEmptyException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-27"},{"lineNumber":201,"author":{"gitId":"xingyuan123"},"content":"        String[] deadline \u003d line.split(\"/by \");","lastModifiedDate":"2021-09-27"},{"lineNumber":202,"author":{"gitId":"xingyuan123"},"content":"        if (deadline[1] \u003d\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"xingyuan123"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-09-27"},{"lineNumber":204,"author":{"gitId":"xingyuan123"},"content":"        } else if (deadline[0].substring(DEADLINE_INDEX).trim().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":205,"author":{"gitId":"xingyuan123"},"content":"            throw new DeadlineEmptyException();","lastModifiedDate":"2021-09-27"},{"lineNumber":206,"author":{"gitId":"xingyuan123"},"content":"        } else if (deadline[1].trim().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":207,"author":{"gitId":"xingyuan123"},"content":"            throw new DeadlineEmptyException();","lastModifiedDate":"2021-09-27"},{"lineNumber":208,"author":{"gitId":"xingyuan123"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"xingyuan123"},"content":"            Task task \u003d new Deadline(deadline[0].substring(DEADLINE_INDEX), deadline[1]);","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"xingyuan123"},"content":"            list.addTaskList(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":211,"author":{"gitId":"xingyuan123"},"content":"            Ui.printEcho(task, list);","lastModifiedDate":"2021-09-27"},{"lineNumber":212,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":213,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":214,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":215,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":216,"author":{"gitId":"xingyuan123"},"content":"     * This method creates a new event task and calls printEcho method to tell the user an event task has been added.","lastModifiedDate":"2021-09-28"},{"lineNumber":217,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":218,"author":{"gitId":"xingyuan123"},"content":"     * @param line the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":219,"author":{"gitId":"xingyuan123"},"content":"     * @param list the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":220,"author":{"gitId":"xingyuan123"},"content":"     * @throws ArrayIndexOutOfBoundsException if the event has no /at date","lastModifiedDate":"2021-09-28"},{"lineNumber":221,"author":{"gitId":"xingyuan123"},"content":"     * @throws EventEmptyException            if the event input substring consists of only whitespaces or is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":222,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":223,"author":{"gitId":"xingyuan123"},"content":"    public static void createEventTask(String line, TaskList list) throws EventEmptyException, ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-27"},{"lineNumber":224,"author":{"gitId":"xingyuan123"},"content":"        String[] event \u003d line.split(\"/at \");","lastModifiedDate":"2021-09-27"},{"lineNumber":225,"author":{"gitId":"xingyuan123"},"content":"        if (event[1] \u003d\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":226,"author":{"gitId":"xingyuan123"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-09-27"},{"lineNumber":227,"author":{"gitId":"xingyuan123"},"content":"        } else if (event[0].substring(EVENT_INDEX).trim().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":228,"author":{"gitId":"xingyuan123"},"content":"            throw new EventEmptyException();","lastModifiedDate":"2021-09-27"},{"lineNumber":229,"author":{"gitId":"xingyuan123"},"content":"        } else if (event[1].trim().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":230,"author":{"gitId":"xingyuan123"},"content":"            throw new EventEmptyException();","lastModifiedDate":"2021-09-27"},{"lineNumber":231,"author":{"gitId":"xingyuan123"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":232,"author":{"gitId":"xingyuan123"},"content":"            Task task \u003d new Event(event[0].substring(EVENT_INDEX), event[1]);","lastModifiedDate":"2021-09-27"},{"lineNumber":233,"author":{"gitId":"xingyuan123"},"content":"            list.addTaskList(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":234,"author":{"gitId":"xingyuan123"},"content":"            Ui.printEcho(task, list);","lastModifiedDate":"2021-09-27"},{"lineNumber":235,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":236,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":237,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":238,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingyuan123":238}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    protected String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"    public Deadline(String description, String by, String isDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"        super(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"    public void printTask() {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"[D]\" + super.getStatusIcon() + super.getDescription() + \"(by:\" + by + \")\");","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"    public String getTextString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"xingyuan123"},"content":"        return (\"D\" + \"|\" + super.getStatusValue() + \"|\" + super.getDescription() + \"|\" + by + \"\\n\");","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"xingyuan123":26}},{"path":"src/main/java/DeadlineEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class DeadlineEmptyException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    //no other code needed","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"xingyuan123":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"     * Main function to run Duke chat-bot","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"     * @param args","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"        Storage.SetupFile(list);","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"        Ui.printGreeting();","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"        String line;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"        boolean dukeRunning \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"        while (dukeRunning) {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"            dukeRunning \u003d Parser.parse(list, line);","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"        Ui.printBye();","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xingyuan123":21,"-":4}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    protected String at;","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"    public Event(String description, String at, String isDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"        super(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"    public void printTask() {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"[E]\" + super.getStatusIcon() + super.getDescription() + \"(at: \" + at + \")\");","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"    public String getTextString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"xingyuan123"},"content":"        return (\"E\" + \"|\" + super.getStatusValue() + \"|\" + super.getDescription() + \"|\" + at + \"\\n\");","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"xingyuan123":27}},{"path":"src/main/java/EventEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class EventEmptyException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    //no other code needed","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"xingyuan123":3}},{"path":"src/main/java/FindEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class FindEmptyException extends Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    //no other code needed","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"xingyuan123":3}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class Parser {","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"     * This method parses the input given by user and calls method based on the appropriate commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"     * @param list the TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"     * @param line the input typed in by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"     * @return a boolean value to determine when the program terminates","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"    public static boolean parse(TaskList list, String line) {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"        if (line.equals(\"list\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"            Command.handleListCommand(list);","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"        } else if (line.startsWith(\"done\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"            Command.handleDoneCommand(list, line);","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"        } else if (line.startsWith(\"todo \")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"            Command.handleTodoCommand(list, line);","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"        } else if (line.startsWith(\"deadline \")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"            Command.handleDeadlineCommand(list, line);","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"        } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"            Command.handleEventCommand(list, line);","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"        } else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"            Command.handleDeleteCommand(list, line);","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"        } else if (line.equals(\"bye\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingyuan123"},"content":"            return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xingyuan123"},"content":"        } else if (line.startsWith(\"find\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"xingyuan123"},"content":"            Command.handleFindCommand(list, line);","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"xingyuan123"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"xingyuan123"},"content":"            Command.handleInvalidCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"xingyuan123"},"content":"        return true;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingyuan123":33}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"public class Storage {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"     * This method sets up the duke text file.It first tries to find if the exists.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"     * If the text file exists, it will call the method loadDukeTextFile. If not it will create a new duke text file.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"    public static void SetupFile(TaskList list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"        File dukeTextFile \u003d new File(\"Duke.txt\");","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"        if (!dukeTextFile.exists()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"                dukeTextFile.createNewFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"            loadDukeTextFile(dukeTextFile, list);","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"xingyuan123"},"content":"     * This method loads the existing duke text file and adds all the contents into the current list in taskList.","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"xingyuan123"},"content":"     * @param dukeTextFile the text file containing the list of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"xingyuan123"},"content":"     * @param list         the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"xingyuan123"},"content":"    public static void loadDukeTextFile(File dukeTextFile, TaskList list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"xingyuan123"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"xingyuan123"},"content":"            Scanner dukeTextScanner \u003d new Scanner(dukeTextFile);","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"xingyuan123"},"content":"            while (dukeTextScanner.hasNextLine()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"xingyuan123"},"content":"                String dukeTextLine \u003d dukeTextScanner.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"xingyuan123"},"content":"                String taskLetter \u003d dukeTextLine.substring(0, 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"xingyuan123"},"content":"                if (taskLetter.equals(\"T\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"xingyuan123"},"content":"                    String[] dukeLineSplit \u003d dukeTextLine.split(\"\\\\|\", 3);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"xingyuan123"},"content":"                    String todoDescription \u003d dukeLineSplit[2];","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"xingyuan123"},"content":"                    String todoIsDone \u003d dukeLineSplit[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"xingyuan123"},"content":"                    Task task \u003d new ToDo(todoDescription, todoIsDone);","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"xingyuan123"},"content":"                    list.addTaskList(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"xingyuan123"},"content":"                } else if (taskLetter.equals(\"D\")) {//Deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"xingyuan123"},"content":"                    String[] dukeLineSplit \u003d dukeTextLine.split(\"\\\\|\", 4);","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"xingyuan123"},"content":"                    String deadlineDescription \u003d dukeLineSplit[2].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"xingyuan123"},"content":"                    String deadlineIsDone \u003d dukeLineSplit[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"xingyuan123"},"content":"                    String deadlineBy \u003d dukeLineSplit[3].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"xingyuan123"},"content":"                    Task task \u003d new Deadline(deadlineDescription, deadlineBy, deadlineIsDone);","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"xingyuan123"},"content":"                    list.addTaskList(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"xingyuan123"},"content":"                } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"xingyuan123"},"content":"                    String[] dukeLineSplit \u003d dukeTextLine.split(\"\\\\|\", 4);","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"xingyuan123"},"content":"                    String eventDescription \u003d dukeLineSplit[2].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"xingyuan123"},"content":"                    String eventAt \u003d dukeLineSplit[3].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"xingyuan123"},"content":"                    String eventIsDone \u003d dukeLineSplit[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"xingyuan123"},"content":"                    Task task \u003d new Event(eventDescription, eventAt, eventIsDone);","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"xingyuan123"},"content":"                    list.addTaskList(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"xingyuan123"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"xingyuan123"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"xingyuan123"},"content":"            writeDukeTextFile(list);","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"xingyuan123"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"xingyuan123"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"xingyuan123"},"content":"     * This method rewrites to the duke text file the entire list in taskList.","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"xingyuan123"},"content":"    public static void writeDukeTextFile(TaskList list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"xingyuan123"},"content":"        File dukeTextFile \u003d new File(\"Duke.txt\");","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"xingyuan123"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"xingyuan123"},"content":"            FileWriter dukeTextWriter \u003d new FileWriter(dukeTextFile);","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"xingyuan123"},"content":"            int lineNumber \u003d list.getTaskListCount();","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"xingyuan123"},"content":"            for (int i \u003d 0; i \u003c lineNumber; i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"xingyuan123"},"content":"                dukeTextWriter.write(list.textString(i));","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"xingyuan123"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"xingyuan123"},"content":"            dukeTextWriter.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"xingyuan123"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"xingyuan123"},"content":"            e.getStackTrace();","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingyuan123":85}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    protected String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"        return description;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"    public void printTask() {","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"xingyuan123"},"content":"    public String getStatusValue() {","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"xingyuan123"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"xingyuan123"},"content":"    public String getTextString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"xingyuan123"},"content":"        return (description + \"\\n\");","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xingyuan123":34}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"public class TaskList {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"    private static int taskListCount \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"     * This method adds a task to the taskList and increments the count of tasks in taskList by one.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"    public void addTaskList(Task listItem) {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"        taskList.add(listItem);","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"        taskListCount +\u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"     * This method prints out the current taskList","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"        for (int i \u003d 1; i \u003c taskListCount + 1; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"            System.out.print(\"    \" + i + \".\");","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"xingyuan123"},"content":"            taskList.get(i - 1).printTask();","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xingyuan123"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"xingyuan123"},"content":"     * This method marks a task as done based on its corresponding task number.","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"xingyuan123"},"content":"     * @param taskNumber task number corresponding to the task in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"xingyuan123"},"content":"     * @throws NullPointerException if the taskNumber is not in range of the list","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"xingyuan123"},"content":"    public void markIsDone(int taskNumber) {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"xingyuan123"},"content":"        boolean taskInRange \u003d (taskNumber \u003c\u003d 0 || taskNumber \u003e taskListCount);","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"xingyuan123"},"content":"        if (taskInRange \u003d\u003d true) {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"xingyuan123"},"content":"            throw new NullPointerException();","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"xingyuan123"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"xingyuan123"},"content":"            taskList.get(taskNumber - 1).setDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"xingyuan123"},"content":"            Ui.printLineSeparator();","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"xingyuan123"},"content":"            Ui.printMarkIsDone();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"xingyuan123"},"content":"            taskList.get(taskNumber - 1).printTask();","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"xingyuan123"},"content":"            Ui.printLineSeparator();","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"xingyuan123"},"content":"     * This method deletes a task off the list based on its corresponding task number and decrements","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"xingyuan123"},"content":"     * the count of tasks in taskList by one.","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"xingyuan123"},"content":"     * @param taskNumber task number corresponding to the task in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"xingyuan123"},"content":"     * @throws NullPointerException if the taskNumber is not in range of the list","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"xingyuan123"},"content":"    public void deleteTask(int taskNumber) {","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"xingyuan123"},"content":"        boolean taskNotInRange \u003d taskNumber \u003c\u003d 0 || taskNumber \u003e taskListCount;","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"xingyuan123"},"content":"        if (taskNotInRange) {","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"xingyuan123"},"content":"            throw new NullPointerException();","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"xingyuan123"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"xingyuan123"},"content":"            Ui.printLineSeparator();","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"xingyuan123"},"content":"            Ui.printDeleteTask();","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"xingyuan123"},"content":"            taskList.get(taskNumber - 1).printTask();","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"xingyuan123"},"content":"            taskList.remove(taskNumber - 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"xingyuan123"},"content":"            taskListCount -\u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"xingyuan123"},"content":"            System.out.println(\"    Now you have \" + taskListCount + \" tasks in the list.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"xingyuan123"},"content":"            Ui.printLineSeparator();","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"xingyuan123"},"content":"     * This method finds all tasks with matching keyword entered and prints them all out.","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"xingyuan123"},"content":"     * @param keyword keyword to search for in the task list","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"xingyuan123"},"content":"     * @throws FindEmptyException if keyword consists entirely of whitespaces or is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"xingyuan123"},"content":"    public void findTask(String keyword) throws FindEmptyException {","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"xingyuan123"},"content":"        String currentDescription;","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"xingyuan123"},"content":"        if (keyword.isEmpty()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"xingyuan123"},"content":"            throw new FindEmptyException();","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"xingyuan123"},"content":"        Ui.printFindTasks();","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"xingyuan123"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"xingyuan123"},"content":"        for (int i \u003d 1; i \u003c taskListCount + 1; i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"xingyuan123"},"content":"            currentDescription \u003d taskList.get(i - 1).getDescription();","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"xingyuan123"},"content":"            if (currentDescription.contains(keyword)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"xingyuan123"},"content":"                System.out.print(\"    \" + i + \".\");","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"xingyuan123"},"content":"                taskList.get(i - 1).printTask();","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"xingyuan123"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"xingyuan123"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"xingyuan123"},"content":"     * This method returns the current number of tasks in taskList","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"xingyuan123"},"content":"     * @returns taskListCount the current number of tasks in taskList","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"xingyuan123"},"content":"    public int getTaskListCount() {","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"xingyuan123"},"content":"        return taskListCount;","lastModifiedDate":"2021-09-01"},{"lineNumber":100,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"xingyuan123"},"content":"     * This method returns a string formatted specifically to be written for the text file based on the task index in taskList.","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"xingyuan123"},"content":"     * @param index the current task number in taskList","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"xingyuan123"},"content":"     * @return a string with all the particular task\u0027s information","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"xingyuan123"},"content":"    public String textString(int index) {","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"xingyuan123"},"content":"        return taskList.get(index).getTextString();","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xingyuan123":112}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"    public ToDo(String description, String isDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"        super(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"        if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"    public void printTask() {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"[T]\" + super.getStatusIcon() + super.getDescription());","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"    public String getTextString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"        return (\"T\" + \"|\" + super.getStatusValue() + \"|\" + super.getDescription() + \"\\n\");","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"xingyuan123":23}},{"path":"src/main/java/TodoEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class TodoEmptyException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    //no other code needed","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingyuan123":3}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"public class Ui {","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"    private static final String LINE_SEPARATOR \u003d \"    _____________________________________________________________\";","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"     * This method prints the greeting message when the user first starts up the  duke chat-bot.","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"xingyuan123"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"xingyuan123"},"content":"        String logo \u003d \"      ____        _        \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"xingyuan123"},"content":"                + \"     |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"xingyuan123"},"content":"                + \"     | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"xingyuan123"},"content":"                + \"     | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"xingyuan123"},"content":"                + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xingyuan123"},"content":"        printCommandGuide();","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"xingyuan123"},"content":"     * This method prints a message telling the user to refer to command guide.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"xingyuan123"},"content":"    public static void printReferralMessage() {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Please refer to the command guide\");","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"xingyuan123"},"content":"     * This method prints a message telling the user task number is out of bounds.","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"xingyuan123"},"content":"    public static void printOutOfBounds() {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    task number is out of bounds in list\");","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"xingyuan123"},"content":"     * This method prints a message telling the user the task number is the wrong format.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"xingyuan123"},"content":"    public static void printWrongFormat() {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    task number is wrong format\");","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"xingyuan123"},"content":"    public static void printDeadlineNoDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    please input /by date\");","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"xingyuan123"},"content":"    public static void printEventNoDate() {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    please input /at date\");","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"xingyuan123"},"content":"     * This method prints a message telling the user the specified input is missing.","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"xingyuan123"},"content":"     * @param InputType the type of input that is missing","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"xingyuan123"},"content":"    public static void printInputEmpty(String InputType) {","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"xingyuan123"},"content":"        switch (InputType) {","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"xingyuan123"},"content":"            case \"Todo\":","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"xingyuan123"},"content":"                System.out.println(\"    Todo task cannot be whitespaces or empty\");","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"xingyuan123"},"content":"                break;","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"xingyuan123"},"content":"            case \"Deadline\":","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"xingyuan123"},"content":"                System.out.println(\"    Deadline cannot be whitespaces or empty\");","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"xingyuan123"},"content":"                break;","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"xingyuan123"},"content":"            case \"Event\":","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"xingyuan123"},"content":"                System.out.println(\"    Event cannot be whitespaces or empty\");","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"xingyuan123"},"content":"                break;","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"xingyuan123"},"content":"            case \"Find\":","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"xingyuan123"},"content":"                System.out.println(\"    Find cannot be whitespaces or empty\");","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"xingyuan123"},"content":"                break;","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"xingyuan123"},"content":"            case \"Delete\":","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"xingyuan123"},"content":"                System.out.println(\"    Delete cannot be whitespaces or empty\");","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"xingyuan123"},"content":"                break;","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"xingyuan123"},"content":"            default:","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"xingyuan123"},"content":"                break;","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"xingyuan123"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"xingyuan123"},"content":"     * This method prints the command guide to the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"xingyuan123"},"content":"    public static void printCommandGuide() {","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"xingyuan123"},"content":"        //prints list of commands","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Command Guide\");","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    use \\\"todo\\\" (with a space) to add a task without any date or time attached to it\");","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    use \\\"deadline\\\" (with a space) and \\\"/by\\\" (with a space) to add a task to be done before a certain date\");","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    use \\\"event\\\" (with a space) and \\\"/at\\\" (with a space) to add a task that start and ends at a specific time\");","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    use \\\"list\\\" to show task list\");","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    use \\\"done\\\" (with a space) followed by task number to mark a task as done\");","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    use \\\"bye\\\" to exit the chat bot\");","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    use \\\"delete\\\" followed by the taskNumber in the last to delete a task\");","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Use \\\"find\\\" followed by a keyword to find a task\");","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    What can I do for you?\");","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"xingyuan123"},"content":"     * This method prints a message telling the user a task has been added and the current number of tasks in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"xingyuan123"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"xingyuan123"},"content":"     * @param task the task which has been added","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"xingyuan123"},"content":"     * @param list the list of tasks in TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"xingyuan123"},"content":"    public static void printEcho(Task task, TaskList list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"xingyuan123"},"content":"        System.out.print(\"      \");","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"xingyuan123"},"content":"        task.printTask();","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Now you have \" + list.getTaskListCount() + \" tasks in the list.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"xingyuan123"},"content":"     * This method prints the bye message to the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"xingyuan123"},"content":"    public static void printBye() {","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Bye.Hope to see you again soon!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"xingyuan123"},"content":"     * This method prints the invalid command message to the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"xingyuan123"},"content":"    public static void printInvalidCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Invalid command\");","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"xingyuan123"},"content":"     * This method prints a message telling the user a task has been marked as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"xingyuan123"},"content":"    public static void printMarkIsDone() {","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"xingyuan123"},"content":"        System.out.print(\"    \");","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"xingyuan123"},"content":"     * This method prints the line separator.","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"xingyuan123"},"content":"    public static void printLineSeparator() {","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"xingyuan123"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"xingyuan123"},"content":"     * This method prints a message telling the user a task has been deleted.","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"xingyuan123"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"xingyuan123"},"content":"    public static void printDeleteTask() {","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"xingyuan123"},"content":"        System.out.print(\"    \");","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"xingyuan123"},"content":"    public static void printFindTasks() {","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"xingyuan123"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"xingyuan123"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"xingyuan123"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"xingyuan123"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingyuan123":151}},{"path":"src/main/java/out/production/main/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"T|0|1","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"T|0|2","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"T|0|12","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"E|0|adad|adasd","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"E|0|dasfasf |afa","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingyuan123":5}},{"path":"src/out/production/ip/out/production/main/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xingyuan123"},"content":"T|0|1","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingyuan123"},"content":"T|0|2","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingyuan123"},"content":"T|0|12","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingyuan123"},"content":"E|0|adad|adasd","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingyuan123"},"content":"E|0|dasfasf |afa","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingyuan123":5}}]
