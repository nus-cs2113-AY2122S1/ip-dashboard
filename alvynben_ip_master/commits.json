{"authorDailyContributionsMap":{"alvynben":[{"date":"2021-08-16","commitResults":[{"hash":"f89570113a367757b166c9c23a0608ddecadf718","messageTitle":"Add Level-0: Greet * Greets the user * Exits after greeting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}}]},{"date":"2021-08-20","commitResults":[{"hash":"61455f592ff7369adc41f8c04622b6693529d2ae","messageTitle":"Implement Level-1","messageBody":"- Change name of Robot to Triss\n- Change terminology used for greeting or exiting\n- Insert echo for user input\n- Add exit once user types \"bye\"\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":8}}}]},{"date":"2021-08-21","commitResults":[{"hash":"762c3ced6cf638225893547ba0bca5e6d063c61a","messageTitle":"Enable Triss to store user input as tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":2}}},{"hash":"4ff4788d324dd0c2d5508c254574e9f028f2affd","messageTitle":"Enable Triss to list out all saved tasks","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"9e5d6fa0f9f33faf8fcf3a97f5c804e1c8252ef3","messageTitle":"Implement Task Class","messageBody":"- Create a Task class to store a task name, and completion status\n- Change tasks list in Duke.java from a String array to a Tasks array\n- Change tasks list in Duke.java to reflect completion status\n- Enable users to mark a task as done\n","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":3}}},{"hash":"6a299858c1e51e329a29c045b95924f5abc1950d","messageTitle":"Change start of list from 0 to 1","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"9feffc7fc8686106dc57e89ebc26592669161842","messageTitle":"Handle exception if user types \"done [task]\" and [task] does not exist","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":7}}},{"hash":"0a00298a3eb8514e508bc450329e04636819879d","messageTitle":"Update comments to reflect new commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-08-23","commitResults":[{"hash":"dd3fa97d5b4054b6d906f2ae6dfe7d2a8d446ecc","messageTitle":"Update done command","messageBody":"- Fix bug where command would not work on first task in list\n- Add text for when user attempts to apply done on a completed task\n- Update comments for done\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}},{"hash":"49e4bd96216cf8ea8d6a06348ef9df26a3b9e249","messageTitle":"Refine code to meet coding standard","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}}]},{"date":"2021-08-27","commitResults":[{"hash":"b7aeff5100b7e10c3e47e7b451e050207eb0f18f","messageTitle":"Refactor code to simplify Triss/Duke","messageBody":"- Store logo, hasUserSaidBye, tasks, noOfTasks as private static\nvariable in Duke class\n- Create method printWelcomeMessage() to print welcome message\n- Create method printShutdownMessage() to print shutdown message\n- Create method printAllTasks() to print all tasks\n- Create method handleUserMarkingTaskAsDone(String userInput) to\nhandle cases when users wants to mark a task as done\n- Create method handleUserCreatingTask(String userInput) to handle\ncases when users want to create a new task\n","fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":48}}},{"hash":"61c98c9e3abedb0d31f866b6cc48e98a545751d8","messageTitle":"Fix bug where the done command is executed erroneously","messageBody":"If user\u0027s input contained the word \"done\", even in the middle, the\ndone command would initiate.\n\nThis would prevent the user from typing any task that had the word\n\"done\" in it.\n\nNow, user input is being read in and parsed for the command, which\nis stored in userCommand.\n\nThis gives the user assurance that the \"done\" command will only be\ninitiated if the user types it at the front of his input.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"cb6413d0ea2e5eaddeec3477d92e1318f0dee9a5","messageTitle":"Throw error if user types an unrecognized value after \u0027done\u0027","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":1}}}]},{"date":"2021-08-28","commitResults":[{"hash":"6e2317d95e6dfa11bb20df99aff174855a2d8ea9","messageTitle":"Implement Todo Class","messageBody":"- Create Todo.java to store tasks that can be completed\n- Use protected attribute typeOfTask to store the type of Task\u0027s\nsubclasses\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":4}}},{"hash":"cd2d659c0a9af8b7422d4dc44bcff1a19ef6885a","messageTitle":"Implement Deadline Class","messageBody":"- Create Task method printTask() to print different types of tasks\naccurately\n- Handle the deadline class in handleUserCreatingTask() if user types\nthe deadline as such: deadline [task_name] /[task_dueDate]\n","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":8}}},{"hash":"91bb973117a3fb00ed87294c46311ef87819e031","messageTitle":"Implement Event Class","messageBody":"- Enable handleUserCreatingTask() to handle events if user types\nin this format: event [task_name] /[task_timing]\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"20dab34040dd82fe83c539936cba8060962903de","messageTitle":"Implement Task, Event, and Todo in separate files","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":0}}},{"hash":"ed9872a8fc2587ede94cdabaacbc8335dce65661","messageTitle":"Enable semi-automatic UI testing by running runtest.sh","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0},"sh":{"insertions":1,"deletions":5}}}]}]},"authorFileTypeContributionMap":{"alvynben":{"java":250,"md":0,"fxml":0,"sh":1,"bat":0,"gradle":0,"txt":14}},"authorContributionVariance":{"alvynben":232.39377},"authorDisplayNameMap":{"alvynben":"ALVI..AHAM"}}
