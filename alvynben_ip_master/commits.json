{"authorDailyContributionsMap":{"alvynben":[{"date":"2021-08-16","commitResults":[{"hash":"f89570113a367757b166c9c23a0608ddecadf718","messageTitle":"Add Level-0: Greet * Greets the user * Exits after greeting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}}]},{"date":"2021-08-20","commitResults":[{"hash":"61455f592ff7369adc41f8c04622b6693529d2ae","messageTitle":"Implement Level-1","messageBody":"- Change name of Robot to Triss\n- Change terminology used for greeting or exiting\n- Insert echo for user input\n- Add exit once user types \"bye\"\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":8}}}]},{"date":"2021-08-21","commitResults":[{"hash":"762c3ced6cf638225893547ba0bca5e6d063c61a","messageTitle":"Enable Triss to store user input as tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":2}}},{"hash":"4ff4788d324dd0c2d5508c254574e9f028f2affd","messageTitle":"Enable Triss to list out all saved tasks","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"9e5d6fa0f9f33faf8fcf3a97f5c804e1c8252ef3","messageTitle":"Implement Task Class","messageBody":"- Create a Task class to store a task name, and completion status\n- Change tasks list in Duke.java from a String array to a Tasks array\n- Change tasks list in Duke.java to reflect completion status\n- Enable users to mark a task as done\n","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":60,"deletions":3}}},{"hash":"6a299858c1e51e329a29c045b95924f5abc1950d","messageTitle":"Change start of list from 0 to 1","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"9feffc7fc8686106dc57e89ebc26592669161842","messageTitle":"Handle exception if user types \"done [task]\" and [task] does not exist","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":7}}},{"hash":"0a00298a3eb8514e508bc450329e04636819879d","messageTitle":"Update comments to reflect new commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-08-23","commitResults":[{"hash":"dd3fa97d5b4054b6d906f2ae6dfe7d2a8d446ecc","messageTitle":"Update done command","messageBody":"- Fix bug where command would not work on first task in list\n- Add text for when user attempts to apply done on a completed task\n- Update comments for done\n","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}},{"hash":"49e4bd96216cf8ea8d6a06348ef9df26a3b9e249","messageTitle":"Refine code to meet coding standard","messageBody":"","tags":["A-CodingStandard","A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}}]},{"date":"2021-08-27","commitResults":[{"hash":"b7aeff5100b7e10c3e47e7b451e050207eb0f18f","messageTitle":"Refactor code to simplify Triss/Duke","messageBody":"- Store logo, hasUserSaidBye, tasks, noOfTasks as private static\nvariable in Duke class\n- Create method printWelcomeMessage() to print welcome message\n- Create method printShutdownMessage() to print shutdown message\n- Create method printAllTasks() to print all tasks\n- Create method handleUserMarkingTaskAsDone(String userInput) to\nhandle cases when users wants to mark a task as done\n- Create method handleUserCreatingTask(String userInput) to handle\ncases when users want to create a new task\n","fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":48}}},{"hash":"61c98c9e3abedb0d31f866b6cc48e98a545751d8","messageTitle":"Fix bug where the done command is executed erroneously","messageBody":"If user\u0027s input contained the word \"done\", even in the middle, the\ndone command would initiate.\n\nThis would prevent the user from typing any task that had the word\n\"done\" in it.\n\nNow, user input is being read in and parsed for the command, which\nis stored in userCommand.\n\nThis gives the user assurance that the \"done\" command will only be\ninitiated if the user types it at the front of his input.\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":3}}},{"hash":"cb6413d0ea2e5eaddeec3477d92e1318f0dee9a5","messageTitle":"Throw error if user types an unrecognized value after \u0027done\u0027","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":1}}}]},{"date":"2021-08-28","commitResults":[{"hash":"6e2317d95e6dfa11bb20df99aff174855a2d8ea9","messageTitle":"Implement Todo Class","messageBody":"- Create Todo.java to store tasks that can be completed\n- Use protected attribute typeOfTask to store the type of Task\u0027s\nsubclasses\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":4}}},{"hash":"cd2d659c0a9af8b7422d4dc44bcff1a19ef6885a","messageTitle":"Implement Deadline Class","messageBody":"- Create Task method printTask() to print different types of tasks\naccurately\n- Handle the deadline class in handleUserCreatingTask() if user types\nthe deadline as such: deadline [task_name] /[task_dueDate]\n","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":8}}},{"hash":"91bb973117a3fb00ed87294c46311ef87819e031","messageTitle":"Implement Event Class","messageBody":"- Enable handleUserCreatingTask() to handle events if user types\nin this format: event [task_name] /[task_timing]\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"20dab34040dd82fe83c539936cba8060962903de","messageTitle":"Implement Task, Event, and Todo in separate files","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":0}}},{"hash":"ed9872a8fc2587ede94cdabaacbc8335dce65661","messageTitle":"Enable semi-automatic UI testing by running runtest.sh","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0},"sh":{"insertions":1,"deletions":5}}}]},{"date":"2021-08-31","commitResults":[{"hash":"63d33fcf273d06088be6146e9438ca6bb763f232","messageTitle":"Add comments to all starting variables and constants in Duke.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":7}}},{"hash":"f6b89e2bb3301ce6ad8b649641d96aeba627e1b0","messageTitle":"Add new methods for parsing user input","messageBody":"- createNewInputReader abstracts away the creation of a new Scanner\n- printLine abstracts aways System.out.println\n- parseUserInput abstracts away parsing the user input for a specific index\n- getUserInput abstracts away in.nextLine and also reacts if user types empty string\n","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":24}}},{"hash":"9075be6daeebeef3eef431c41e088bb992f8c1a0","messageTitle":"Create new methods to reduce bugs in creation of tasks","messageBody":"- createNewDeadline creates deadlines and also responds if user\ntypes invalid input\n- createNewEvent creates events and also responds if user types\ninvalid input\n- createNewTodo creates todos and also responds if user types\ninvalid input\n- change handleUserCreatingTask to create todos if user simply\ntypes string without command\n","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":10}}},{"hash":"06d56951809d200f40c3bd3fbc43241cd292b8c8","messageTitle":"Add comments to all class members and methods in Duke.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":1}}},{"hash":"34e33985bd4394576a43e1d50ba5cb8e2a0c5555","messageTitle":"Add comments to all class members and methods in Task.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":0}}},{"hash":"8dee0e69515780bcf3a4b9253d1fe7942bd04480","messageTitle":"Add comments to all class members and methods in Todo.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":3}}},{"hash":"be1551e6d4125f7fd78f0e9ee2e6643ef1aadcd5","messageTitle":"Add comments to all class members and methods in Deadline.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":3}}},{"hash":"02e91a07a7975ce3f779c143a6aa603e9dade999","messageTitle":"Add comments to all class members and methods in Event.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":3}}},{"hash":"66dcb639abe82bcd3a519c1e2d5bb66934408f0e","messageTitle":"Clean up formatting in Duke.java for easier readability","messageBody":"- Change printAllTasks so it does not need to use Integer.toString\n- Change if-else statements in handleUserCreatingTask and main to\nswitch statements\n- Convert userInput variable to local variable in main rather than\nclass member\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":15}}}]},{"date":"2021-09-06","commitResults":[{"hash":"f6e0afb9bf2bf9dfa2b1c9ae7fd4e3db99a4ec0f","messageTitle":"Rename all occurrences of Duke to Triss for simplicity","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"b63870ea335182127566c16a393033c230571f3a","messageTitle":"Create TrissException class to handle any errors thrown in Triss","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}},{"hash":"a923c7f01d9bdfbfb6a2136a2af06ee39d120f98","messageTitle":"Implement TrissException class in Triss - Throw error if invalid command is given - Throw error if todo command is used without a valid name - Throw error if event command is used without valid name or timing - Throw error if deadline command is used without valid name or due date","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":24}}},{"hash":"62cae103f9c01bb5699748ae9323f7232d8d916f","messageTitle":"Split files into packages - Keep Triss.java in package: triss - Keep all tasks classes in package: triss.task - Keep all exception classes in package: triss.exception - Fix runtest.sh so that it works after file changes","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":2},"sh":{"insertions":1,"deletions":1}}}]},{"date":"2021-09-11","commitResults":[{"hash":"6a28a49449b6b4716665eabfe12d211bba3454b1","messageTitle":"Implement Array List to store all tasks","messageBody":"","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":10}}},{"hash":"40de1073c3fb002818d8f55b308cb5a9e15f3071","messageTitle":"Add delete command for user to remove tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":0}}},{"hash":"ac31bddab86e6612ae0f1699f4ea8b066ee72e0d","messageTitle":"Remove redundant noOfTasks variable and replace with tasks.size()","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":16}}},{"hash":"efe42c4ed504afbf0b714d3c4b267f9e626d14a5","messageTitle":"Make tasks list final and remove spelling mistakes - Correctly spell chosen in function definition of handleUserMarkingTaskAsDone","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"3f8a762068d9fc5becdbadd01916fef5de52d94d","messageTitle":"Implement printTaskForStoring in all task classes","messageBody":"- printTaskForStoring returns a string that can be stored easily in\na .txt file\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":1}}},{"hash":"ef6b28ff8454d2b3aa73394c55eabe3169f88b72","messageTitle":"Enable Triss to save tasks to data/storedtasks.txt","messageBody":"- Create handleUserShuttingDown to store tasks in file upon shutdown\n- Create initialiseDataStorage to parse tasks from file and add\nit to Triss or create a new file if it does not exist yet\n","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":12}}},{"hash":"39d66626a63ca452f382ede3985e5b993ae71bb7","messageTitle":"Fix IndexOutOfBounds error with delete and done command","messageBody":"","tags":["Level-6","A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2021-09-13","commitResults":[{"hash":"1dd7a0272a0f3f5cf0a50ab95948060646c521d1","messageTitle":"Ensure Triss saves tasks after every command","messageBody":"- The handleShutdown function replaced by the saveTasks function\n- The saveTasks function is called after every new user input\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":2}}}]},{"date":"2021-09-23","commitResults":[{"hash":"5ffcab897959ffa355d9bfa4f78e4c28fae9bbf2","messageTitle":"Create new Ui class to handle interfacing with user","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":121,"deletions":84}}},{"hash":"fb4c871ae0f04e460a4c50a4920b4539c5f9e46d","messageTitle":"Create Storage class to retrive and store tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":80,"deletions":72}}}]},{"date":"2021-09-24","commitResults":[{"hash":"93a24daa4dacced3ad5a75aa25a2e6d7c3cdd544","messageTitle":"Create Parser class to read user input and stored data","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":29}}},{"hash":"c3c7e2c35a08a24ebaae624feda2cea09c7aaa4d","messageTitle":"Create TaskList class to store and edit tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":198,"deletions":155}}},{"hash":"5377385d0c1a1f929d4892c2e1138b61e9ed2460","messageTitle":"Add comments and shift methods to increase readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":121,"deletions":96}}},{"hash":"5d1ce68e555a86e5c19c9fc945f8a6ffac282a75","messageTitle":"Create Command classes to execute user\u0027s input","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":249,"deletions":112}}},{"hash":"ef922e3b1e546ac85eebaf29829f7b545a1afb0c","messageTitle":"Add comments and clean code for easier readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":16}}},{"hash":"b56b7d326eb6bd4ef26d7457260730c21f7b2468","messageTitle":"Move all non-Triss classes to packages","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":47,"deletions":41}}},{"hash":"ef45edf4936458fd3cc5f5d8bcd7e062c5137468","messageTitle":"Add find command to find tasks containing input keyword","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":6}}},{"hash":"75ad069a986ba7ef460cab14e193d1b697758dfc","messageTitle":"Add JavaDoc comments to TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"9d025b2153b3083516a05c4a3d1a880624434ec7","messageTitle":"Add JavaDoc comments to Parser","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":1}}},{"hash":"7db521a0f57b9873a7d59f1261779a2fa0b6ba7a","messageTitle":"Add JavaDoc comments to Ui","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":7}}},{"hash":"5d2be09d0214caffec6797bac89b69b7b64141ba","messageTitle":"Enable events and deadlines to store dates as LocalDate objects","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":10}}},{"hash":"8ab038319a368f044c5e782608702667a903fb73","messageTitle":"Update error messages for creating tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"d9575e4a36bf0a35f8b96966671bf0f9f0005f2b","messageTitle":"Update README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":201,"deletions":14}}},{"hash":"37b5897c8d03036394ba7aed1979626a76d0c241","messageTitle":"Add dividers in README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":22,"deletions":24}}},{"hash":"1a5b21d40340fbe4aa2a32d80551acb1a391df1b","messageTitle":"Fix table formatting and wording in README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":15,"deletions":9}}},{"hash":"e04a6e3d70bf852e8a4b540c2d5aeb0bd1b313fd","messageTitle":"Add guide and setting up instructions to user guide","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":52,"deletions":3}}},{"hash":"873b6bb29381775cc423499691a7f371331fb6e1","messageTitle":"Add divider lines to user guide","messageBody":"","tags":["A-Release"],"fileTypesAndContributionMap":{"md":{"insertions":4,"deletions":3}}}]},{"date":"2021-10-01","commitResults":[{"hash":"0b9ae16ece382069f4a4e7de315b604815c49c04","messageTitle":"Add some list and find examples to README.md","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":22,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"alvynben":{"java":988,"md":272,"fxml":0,"sh":3,"bat":1,"gradle":0,"txt":14}},"authorContributionVariance":{"alvynben":11273.507},"authorDisplayNameMap":{"alvynben":"CS2113T-W12-4 ALVI..AHAM"}}
