[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"Duke is a desktop app that can create, delete, list and save different types of tasks via a Command Line Interface (CLI).","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"## Requirements","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"Java 11","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"## Quick Start","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"1. Download ip.jar","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"2. Go to command prompt and change to the directory that contains ip.jar","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"3. Run by typing `java -jar ip.jar`","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"Summary of available features:","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"1. Adding todo/event/deadline tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"2. Marking tasks as done","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"3. List tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"4. Finding tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"5. Deleting tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"6. Saving task list","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"7. Exit","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"### Add todo task ","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"**Format:** `todo \u003cdescription of the task\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"Adds a todo task and prints an added message if successful. Prints an error message containing what is wrong if unsuccessful.","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"`todo homework`","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"Got it. I have added this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"   [T][ ] homework","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"Now you have 1 items.","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"### Add deadline task","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"**Format:** `deadline \u003cdescription of the task\u003e /by \u003cdate\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"Adds a deadline task and prints an added message if successful. Prints an error message containing what is wrong if unsuccessful.","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"Date must be in the form of YYYY-MM-DD.","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"`deadline CS2113T Assignment /by 2021-09-19`","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"Got it. I have added this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"   [D][ ] CS2113T Assignment (by: Sep 19 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"Now you have 2 items.","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"### Add event task","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"**Format:** `event \u003cdescription of the task\u003e /at \u003cdate\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"Adds an event task and prints an added message if successful. Prints an error message containing what is wrong if unsuccessful.","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"Date must be in the form of YYYY-MM-DD.","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"`event CS2113T Lecture /at 2021-09-17`","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"Got it. I have added this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"   [E][ ] CS2113T Lecture (at: Sep 17 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"Now you have 3 items.","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"### Mark task as done","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"**Format:** `done \u003cindex\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"Marks the task at the given index as done and prints a task done message. Prints an error message if index is out of bounds.","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"`done 3`","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"xkisxk"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"xkisxk"},"content":"Good job on completing this task!","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"xkisxk"},"content":"I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"xkisxk"},"content":"   [E][X] CS2113T Lecture (at: Sep 17 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"xkisxk"},"content":"### List all tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"xkisxk"},"content":"**Format:** `list`","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"xkisxk"},"content":"Lists the entire task list in the order that the tasks were added in. Prints a numbered list.","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":97,"author":{"gitId":"xkisxk"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"xkisxk"},"content":"`list`","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"xkisxk"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"xkisxk"},"content":"Here are the tasks in your to do list:","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"xkisxk"},"content":"1.[T][ ] homework","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"xkisxk"},"content":"2.[D][ ] CS2113T Assignment (by: Sep 19 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"xkisxk"},"content":"3.[E][X] CS2113T Lecture (at: Sep 17 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"xkisxk"},"content":"4.[D][ ] CS2113T Quiz (by: Oct 1 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"xkisxk"},"content":"5.[T][ ] CS2113T Lecture Video","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"xkisxk"},"content":"6.[D][ ] CS2113T iP (by: Oct 1 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"xkisxk"},"content":"### Find task","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"xkisxk"},"content":"**Format:** `find \u003cdescription\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":116,"author":{"gitId":"xkisxk"},"content":"Finds all tasks that contains the description or date and prints them in a numbered list. ","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"xkisxk"},"content":"`find CS2113T`","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"xkisxk"},"content":"Given the list:","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"xkisxk"},"content":"Here are the tasks in your to do list:","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"xkisxk"},"content":"1.[T][ ] homework","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"xkisxk"},"content":"2.[D][ ] CS2113T Assignment (by: Sep 19 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"xkisxk"},"content":"3.[E][X] CS2113T Lecture (at: Sep 17 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"xkisxk"},"content":"4.[D][ ] CS2113T Quiz (by: Oct 1 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"xkisxk"},"content":"5.[T][ ] CS2113T Lecture Video","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"xkisxk"},"content":"6.[D][ ] CS2113T iP (by: Oct 1 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"xkisxk"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"xkisxk"},"content":"1.[D][ ] CS2113T Assignment (by: Sep 19 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"xkisxk"},"content":"2.[E][X] CS2113T Lecture (at: Sep 17 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"xkisxk"},"content":"3.[D][ ] CS2113T Quiz (by: Oct 1 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"xkisxk"},"content":"4.[T][ ] CS2113T Lecture Video","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"xkisxk"},"content":"5.[D][ ] CS2113T iP (by: Oct 1 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"xkisxk"},"content":"### Delete task","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"xkisxk"},"content":"**Format:** `delete \u003cindex\u003e`","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"xkisxk"},"content":"Deletes the task at the given index and prints a task deleted message. Prints an error message if index is out of bounds.","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"xkisxk"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"xkisxk"},"content":"`delete 4`","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":154,"author":{"gitId":"xkisxk"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":155,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":156,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":157,"author":{"gitId":"xkisxk"},"content":"Avoiding doing this task?! Just kidding.","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"xkisxk"},"content":"I\u0027ve deleted this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"xkisxk"},"content":"   [D][ ] CS2113T Quiz (by: Oct 1 2021)","lastModifiedDate":"2021-09-20"},{"lineNumber":160,"author":{"gitId":"xkisxk"},"content":"Now you have 5 items.","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":162,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":163,"author":{"gitId":"xkisxk"},"content":"### Save","lastModifiedDate":"2021-09-20"},{"lineNumber":164,"author":{"gitId":"xkisxk"},"content":"**Format:** `save`","lastModifiedDate":"2021-09-20"},{"lineNumber":165,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":166,"author":{"gitId":"xkisxk"},"content":"Saves the current list to a txt file. Prints a saved message.","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"xkisxk"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"xkisxk"},"content":"`save`","lastModifiedDate":"2021-09-20"},{"lineNumber":171,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"xkisxk"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":175,"author":{"gitId":"xkisxk"},"content":"Saved to saved.txt in ./data","lastModifiedDate":"2021-09-20"},{"lineNumber":176,"author":{"gitId":"xkisxk"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"xkisxk"},"content":"### Exit","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"xkisxk"},"content":"**Format:** `bye`","lastModifiedDate":"2021-09-20"},{"lineNumber":180,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":181,"author":{"gitId":"xkisxk"},"content":"Exits the program. Prints a goodbye message.","lastModifiedDate":"2021-09-20"},{"lineNumber":182,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"xkisxk"},"content":"Example of usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":184,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":185,"author":{"gitId":"xkisxk"},"content":"`bye`","lastModifiedDate":"2021-09-20"},{"lineNumber":186,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":187,"author":{"gitId":"xkisxk"},"content":"Expected outcome:","lastModifiedDate":"2021-09-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":190,"author":{"gitId":"xkisxk"},"content":"Bye. Talk to you later!","lastModifiedDate":"2021-09-20"},{"lineNumber":191,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"xkisxk":165,"-":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import duke.parser.InputParser;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import duke.command.CommandManager;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    public static final String FILE \u003d \"saved.txt\";","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"    public static final String PATH \u003d \"./data/\";","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"    public static final String NO_INPUT \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    protected Ui ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"        new Duke(PATH + FILE).run();","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"            this.taskList \u003d new TaskList(storage.load(PATH));","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"    private void run() {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"        if (storage.isEmpty()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"            ui.printWelcomeMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"            ui.printWelcomeBackMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"            ui.printTaskList(taskList);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"        boolean isChatting \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"        while (isChatting) {","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"            String sentence \u003d ui.getUserMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"            InputParser parsedInput \u003d new InputParser(sentence);","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"            CommandManager commandManager \u003d new CommandManager(parsedInput, taskList);","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"            ui.printResponseMessage(commandManager);","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"            if (parsedInput.getCommand().equals(\"bye\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"                isChatting \u003d false;","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"xkisxk":63,"-":4}},{"path":"src/main/java/duke/command/CommandManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"import static duke.Duke.PATH;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"import static duke.Duke.FILE;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"public class CommandManager {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"    protected String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    protected String date;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"    protected final Ui ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"     * TaskManager handles all the commands from input that comes from both CLI and save file.","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"     * If the command exists, task manager will execute it, else it will raise an error.","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"     * @param parser   the input parser","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"     * @param taskList list of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"    public CommandManager(Parser parser, TaskList taskList) {","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"        this.command \u003d parser.getCommand();","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d parser.getDescription();","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"        this.date \u003d parser.getDate();","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d parser.getDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"     * Adds the tasks from the saved file to the list, restoring the previous list state","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"    public void convertSavedTasksToDukeTasks() {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"        switch (command) {","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"        case \"t\":","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"            convertToDo();","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"        case \"e\":","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"            convertEvent();","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"        case \"d\":","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"            convertDeadline();","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"     * Converts ToDo from the saved file to a ToDo task","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"    private void convertToDo() {","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"            taskList.convertTask(new ToDo(description, isDone));","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"            ui.printFailedToAddMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"     * Converts event from the saved file to an event task","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"    private void convertEvent() {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"            taskList.convertTask(new Event(description, isDone, date));","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"            ui.printFailedToAddMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"     * Converts deadline from the saved file to a deadline task","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"xkisxk"},"content":"    private void convertDeadline() {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"xkisxk"},"content":"            taskList.convertTask(new Deadline(description, isDone, date));","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"xkisxk"},"content":"            ui.printFailedToAddMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"xkisxk"},"content":"     * Executes commands from the input from command line based on the command word, which is the first word from input.","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException if command is not defined under cases","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"xkisxk"},"content":"     * @throws IOException   if save file does not exist","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"xkisxk"},"content":"    public void handleCommand() throws DukeException, IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"xkisxk"},"content":"        switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"xkisxk"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"xkisxk"},"content":"            // Labels task as T","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"xkisxk"},"content":"            handleToDo();","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"xkisxk"},"content":"        case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"xkisxk"},"content":"            // Labels task as E and also takes in a date","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"xkisxk"},"content":"            handleEvent();","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"xkisxk"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"xkisxk"},"content":"            // Labels task as D and also takes in a date","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"xkisxk"},"content":"            handleDeadline();","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"xkisxk"},"content":"        case \"done\":","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"xkisxk"},"content":"            // Marks task x as done where x is the index.","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"xkisxk"},"content":"            handleDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"xkisxk"},"content":"        case \"list\":","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"xkisxk"},"content":"            // Lists out all the tasks that are added with the command \"list\".","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"Here are the tasks in your to do list:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"xkisxk"},"content":"            ui.printTaskList(taskList);","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"xkisxk"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"xkisxk"},"content":"            // Ends conversation","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"xkisxk"},"content":"            ui.printGoodbyeMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"xkisxk"},"content":"            overwriteSaveFile();","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"xkisxk"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"xkisxk"},"content":"            // Delete a task","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"xkisxk"},"content":"            handleDelete();","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"xkisxk"},"content":"        case \"save\":","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"xkisxk"},"content":"            // Manually saves the file","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"xkisxk"},"content":"            overwriteSaveFile();","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"xkisxk"},"content":"            ui.printSaveMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"xkisxk"},"content":"        case \"find\":","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"xkisxk"},"content":"            // Finds if task with the description exists","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"xkisxk"},"content":"            handleFind();","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"xkisxk"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"Sorry I don\u0027t understand what you mean by \\\"\" + command + \"\\\"\");","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":149,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"xkisxk"},"content":"    private void handleFind() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"xkisxk"},"content":"        TaskList tasks \u003d taskList.findAllTasks(description);","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"xkisxk"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"xkisxk"},"content":"            ui.printNotFoundMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"xkisxk"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"xkisxk"},"content":"            ui.printFoundMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"xkisxk"},"content":"            ui.printTaskList(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"xkisxk"},"content":"     * Deletes a task from the list, the number given is the index of the task that will be deleted","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"xkisxk"},"content":"    private void handleDelete() {","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":165,"author":{"gitId":"xkisxk"},"content":"            int index \u003d Integer.parseInt(description) - 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"xkisxk"},"content":"            taskList.deleteTask(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"xkisxk"},"content":"            overwriteSaveFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"xkisxk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":169,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"There is no item at that index. You have \" + taskList.getSize() + \" items.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"xkisxk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"\\\"\" + description + \"\\\" is not a number...\");","lastModifiedDate":"2021-09-10"},{"lineNumber":172,"author":{"gitId":"xkisxk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":175,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":177,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"xkisxk"},"content":"     * Marks a task as done, so the task will be tagged with a [X]","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"xkisxk"},"content":"    private void handleDone() {","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":182,"author":{"gitId":"xkisxk"},"content":"            int index \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":183,"author":{"gitId":"xkisxk"},"content":"            Task task \u003d taskList.getTask(index - 1);","lastModifiedDate":"2021-09-18"},{"lineNumber":184,"author":{"gitId":"xkisxk"},"content":"            task.markDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":185,"author":{"gitId":"xkisxk"},"content":"            ui.printDoneMessage(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":186,"author":{"gitId":"xkisxk"},"content":"            overwriteSaveFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":187,"author":{"gitId":"xkisxk"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":188,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"There is no item at that index. You have \" + taskList.getSize() + \" items.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"xkisxk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":190,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"\\\"\" + description + \"\\\" is not a number...\");","lastModifiedDate":"2021-09-04"},{"lineNumber":191,"author":{"gitId":"xkisxk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":194,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":195,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":196,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":197,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":198,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":199,"author":{"gitId":"xkisxk"},"content":"     * Adds a deadline task into the task list","lastModifiedDate":"2021-09-04"},{"lineNumber":200,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":201,"author":{"gitId":"xkisxk"},"content":"    private void handleDeadline() {","lastModifiedDate":"2021-09-11"},{"lineNumber":202,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":203,"author":{"gitId":"xkisxk"},"content":"            taskList.addTask(new Deadline(description, date));","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"xkisxk"},"content":"            autoSaveFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":205,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":206,"author":{"gitId":"xkisxk"},"content":"            ui.printFailedToAddMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":208,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"xkisxk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":210,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":211,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":212,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":213,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":214,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":215,"author":{"gitId":"xkisxk"},"content":"     * Adds an event task into the task list","lastModifiedDate":"2021-09-04"},{"lineNumber":216,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":217,"author":{"gitId":"xkisxk"},"content":"    private void handleEvent() {","lastModifiedDate":"2021-09-11"},{"lineNumber":218,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":219,"author":{"gitId":"xkisxk"},"content":"            taskList.addTask(new Event(description, date));","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"xkisxk"},"content":"            autoSaveFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":221,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":222,"author":{"gitId":"xkisxk"},"content":"            ui.printFailedToAddMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":223,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":224,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":225,"author":{"gitId":"xkisxk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":226,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":227,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":228,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":229,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":230,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":231,"author":{"gitId":"xkisxk"},"content":"     * Adds a ToDo task into the task list","lastModifiedDate":"2021-09-04"},{"lineNumber":232,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":233,"author":{"gitId":"xkisxk"},"content":"    private void handleToDo() {","lastModifiedDate":"2021-09-11"},{"lineNumber":234,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":235,"author":{"gitId":"xkisxk"},"content":"            taskList.addTask(new ToDo(description));","lastModifiedDate":"2021-09-18"},{"lineNumber":236,"author":{"gitId":"xkisxk"},"content":"            autoSaveFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":237,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":238,"author":{"gitId":"xkisxk"},"content":"            ui.printFailedToAddMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":239,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":240,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":241,"author":{"gitId":"xkisxk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":242,"author":{"gitId":"xkisxk"},"content":"            ui.printError(e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":243,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":244,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":245,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":246,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":247,"author":{"gitId":"xkisxk"},"content":"     * Saves everything in the list into a save file, rewriting what the save file had previously.","lastModifiedDate":"2021-09-17"},{"lineNumber":248,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":249,"author":{"gitId":"xkisxk"},"content":"     * @throws IOException if file does not exist","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":251,"author":{"gitId":"xkisxk"},"content":"    public void overwriteSaveFile() throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":252,"author":{"gitId":"xkisxk"},"content":"        Storage storage \u003d new Storage(PATH + FILE);","lastModifiedDate":"2021-09-18"},{"lineNumber":253,"author":{"gitId":"xkisxk"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-09-18"},{"lineNumber":254,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":255,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":256,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":257,"author":{"gitId":"xkisxk"},"content":"     * Appends a newly added task into the save file, gets called","lastModifiedDate":"2021-09-19"},{"lineNumber":258,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":259,"author":{"gitId":"xkisxk"},"content":"     * @throws IOException if file does not exist","lastModifiedDate":"2021-09-17"},{"lineNumber":260,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":261,"author":{"gitId":"xkisxk"},"content":"    protected void autoSaveFile() throws IOException, DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":262,"author":{"gitId":"xkisxk"},"content":"        Storage storage \u003d new Storage(PATH + FILE);","lastModifiedDate":"2021-09-18"},{"lineNumber":263,"author":{"gitId":"xkisxk"},"content":"        storage.appendFile(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":264,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":265,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":265}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.exception;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    protected String errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"xkisxk":14}},{"path":"src/main/java/duke/parser/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class FileParser extends Parser {","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    protected final String[] words;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"     * Converts the input from the saved text file back to command, description, date formatting","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"     * @param sentence result from scanner.nextLine()","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    public FileParser(String sentence) {","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        this.words \u003d sentence.split(\"\\\\|\");","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"    public String getCommand() {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"        return words[0].replaceAll(\" \", \"\").toLowerCase();","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        return words[1].replaceAll(\" \", \"\").equals(\"1\");","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"        return words[2].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"        if (words.length \u003e 3) {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"            return words[3].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"        return \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"xkisxk":33}},{"path":"src/main/java/duke/parser/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class InputParser extends Parser {","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    private final String NO_INPUT \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"    private final String[] words;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"     * Converts the input from command line to command, description, date formatting","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"     * @param sentence result from scanner.nextLine()","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"    public InputParser(String sentence) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        this.words \u003d sentence.split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"     * Gets the command from input regardless if the command is valid or not.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"     * The command should be the first word of the input.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"     * @return the command for the input","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    public String getCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"            return NO_INPUT;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"        return words[0].toLowerCase();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"     * Gets the description of the task from input which excludes the command","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"     * and date if there is any.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"     * @return the description of the task","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"            return NO_INPUT;","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"        String description \u003d NO_INPUT;","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"            if (words[i].startsWith(\"/\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"            description +\u003d words[i] + \" \";","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"        return description.trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"        return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"     * Gets the date of the task if any. This reads anything that comes after","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"     * the keyword \"/by\" or \"/at\"","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"     * @return the date of an event or deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"        int keywordIndex \u003d getKeywordIndex();","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"        if (keywordIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"            return NO_INPUT;","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"        String dateAsString \u003d NO_INPUT;","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d keywordIndex + 1; i \u003c words.length; i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"            dateAsString +\u003d words[i] + \" \";","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"        return dateAsString.trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"    private int getKeywordIndex() {","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"        int keywordIndex \u003d -1;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"            if (words[i].startsWith(\"/by\") || words[i].startsWith(\"/at\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"                keywordIndex \u003d i;","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"        return keywordIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":82}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public abstract class Parser {","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"     * Gets the command from the input","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"     * @return command","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"    public abstract String getCommand();","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"     * Gets the description of the task from input","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"     * @return description","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"    public abstract String getDescription();","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"     * Gets the date of the task from input","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"     * @return date","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"    public abstract String getDate();","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"     * Gets the done status of the task from input","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"     * @return done status","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"    public abstract boolean getDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"xkisxk":31}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"     * Constructor used for creating a deadline from TaskManager","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"     * @param description    description of task","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"     * @param by             date of task","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException when there is no description or date","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a deadline that has no description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"            if (by.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"                throw new DukeException(\"I need a date for this deadline.\\nUse /by to tell me the date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"Date in incorrect format, please give in YYYY-MM-DD format\");","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"     * Constructor used for converting deadline from save file to deadline in Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"     * @param description    description of task","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"     * @param isDone         status of task","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"     * @param by             date of task","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException when there is no description or date","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"    public Deadline(String description, boolean isDone, String by) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a deadline that has no description\");","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"            if (by.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"                throw new DukeException(\"I need a date for this deadline.\\nUse /by to tell me the date.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"Date in incorrect format, please give in YYYY-MM-DD format\");","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"    public String getTaskTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"        return \"D\";","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"        return by.toString();","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"    public String getDateAsFormatted() {","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getDateAsFormatted() + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":76}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"    protected LocalDate eventAt;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"     * Constructor used for creating an event from TaskManager","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"     * @param description    description of task","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"     * @param eventAt             date of task","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException when there is no description or date","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    public Event(String description, String eventAt) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add an event that has no description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"            this.eventAt \u003d LocalDate.parse(eventAt);","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"            if (eventAt.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"                throw new DukeException(\"I need a date for this event.\\nUse /at to tell me the date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"Date in incorrect format, please give in YYYY-MM-DD format\");","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"     * Constructor used for converting events from save file to events in Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"     * @param description    description of task","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"     * @param isDone         status of task","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"     * @param eventAt             date of task","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException when there is no description or date","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"    public Event(String description, boolean isDone, String eventAt) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add an event that has no description\");","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"            this.eventAt \u003d LocalDate.parse(eventAt);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"            if (eventAt.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"                throw new DukeException(\"I need a date for this event.\\nUse /at to tell me the date.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"Date in incorrect format, please give in YYYY-MM-DD format\");","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"    public String getTaskTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"        return \"E\";","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"        return eventAt.toString();","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"    public String getDateAsFormatted() {","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"        return eventAt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.getDateAsFormatted() + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":76}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    protected final String NO_INPUT \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"     * Task is class that contains a description and status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"     * The status is represented by a [X] for done and a [ ] for not done","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"     * and is displayed before the description.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"     * The task type is represented by a [T] for ToDo, [E] for event and","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"     * [D] for deadline which is added in the respective subclasses","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"     * E.g. 1. [T][ ] buy book","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"     * @param description description or name of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"     * Gets the date of the task if it has one","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"     * @return date","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"        return NO_INPUT;","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"     * Gets the date of the task in MMM d YYYY format","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"     * @return date","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"    public String getDateAsFormatted() {","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"        return NO_INPUT;","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"     * Gets the tag of the task, e.g. T for ToDo","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"     * @return task tag","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"    public String getTaskTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"        return NO_INPUT;","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"     * Returns \"X\" or \" \" depending on whether the task is completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"     * \"X\" for completed, \" \" for not completed","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"     * @return the icon representing the status","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"     * Returns 1 or 0 depending on whether the task is completed.","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"     * 1 for completed, 0 for not completed","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"     * @return an integer representing the status","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"    public int getDoneTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"     * Returns the description of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"     * @return description","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"     * Marks the task as done by changing the boolean isDone to true.","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"xkisxk"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"xkisxk"},"content":"     * Formats the description of the task","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"xkisxk"},"content":"     * e.g [X] buy book","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"xkisxk"},"content":"     * @return formatted version of the description","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"xkisxk"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"xkisxk":101}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"public class TaskList {","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"        this.taskList \u003d loadedTasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"     * Adds the task and prints a task added message","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"     * @param t task","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"        taskList.add(t);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"        ui.printAddedMessage(t);","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"        ui.printTaskListSize(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"     * Finds all tasks that contains the given description or date","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"     * Allows both MMM DD YYYY and YYYY-MM-DD formats for date","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"     * Case insensitive","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"     * @param description description/date of task","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"     * @return list of tasks containing that description","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"    public TaskList findAllTasks(String description) {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"            if (hasTask(description, task)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"                tasks.convertTask(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"        return tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"    private boolean hasTask(String description, Task task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"        // Make search case-insensitive","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"        String query \u003d description.toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"        String date \u003d task.getDateAsFormatted().toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"        String taskDescription \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"        boolean hasDescription \u003d taskDescription.contains(query);","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"        boolean hasDate \u003d task.getDate().contains(description) || date.contains(query);","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"        return hasDescription || hasDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"     * Silently adds Task into the list","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"     * @param t task","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"    public void convertTask(Task t) {","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"        taskList.add(t);","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"     * gets the tasklist as an ArrayList\u003cTask\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"     * @return taskList","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"        return taskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"     * Deletes the task from the list and prints delete task message","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"     * @param index of the task","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"xkisxk"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"xkisxk"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"xkisxk"},"content":"        ui.printDeleteMessage(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"xkisxk"},"content":"        ui.printTaskListSize(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"xkisxk"},"content":"     * Gets the task inside the list using the index","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException if index is out of bounds","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"xkisxk"},"content":"     * @param index of the task","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"xkisxk"},"content":"     * @return task at that index","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"xkisxk"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"xkisxk"},"content":"        if (index \u003e\u003d taskList.size() || index \u003c 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"There is no item at that index. You have \" + taskList.size() + \" items.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"xkisxk"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"xkisxk"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"xkisxk"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"xkisxk"},"content":"     * Checks if the list is empty","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"xkisxk"},"content":"     * @return emptiness of list","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"xkisxk"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"xkisxk"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"xkisxk":117}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"     * Constructor used for creating a ToDo from TaskManager","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"     * @param description    description of task","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException when there is no description or date","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a todo that has no description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"     * Constructor used for converting ToDo from save file to ToDo in Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"     * @param description    description of task","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"     * @param isDone         status of task","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException when there is no description or date","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"    public ToDo(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a todo that has no description\");","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"    public String getTaskTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"        return \"T\";","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":42}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import duke.command.CommandManager;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"    protected final String LINE_SEPARATOR \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"    protected final String WELCOME_MESSAGE \u003d \"...... Oh, sorry! I didn\u0027t see you there.\\nI\u0027m Alex. How may I help you?\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    protected final String WELCOME_BACK_MESSAGE \u003d \"Welcome back! How are you doing?\\nHere are the tasks from last time:\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"    protected final String GOODBYE_MESSAGE \u003d \"Bye. Talk to you later!\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    protected final String FAILED_TO_ADD_MESSAGE \u003d \"There\u0027s too much stuff in the task list.\\nI can\u0027t remember them all.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"    protected final String DONE_MESSAGE \u003d \"Good job on completing this task!\\nI\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"    protected final String NOT_FOUND_MESSAGE \u003d \"The task you are searching for does not exist\";","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    protected final String FOUND_MESSAGE \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"    protected final String DELETE_MESSAGE \u003d \"Avoiding doing this task?! Just kidding.\\nI\u0027ve deleted this task:\";","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"    protected final String SAVED_MESSAGE \u003d \"Saved to saved.txt in ./data\";","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"    protected final String OFFSET \u003d \"   \";","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"    private final Scanner in;","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"    public Ui() {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"    public String getUserMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"     * Prints all the message that needs to be showed to the user","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"     * @param message all the strings that are going to be printed","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"    private void printMessage(String... message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"        for (String m : message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"            System.out.println(m);","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"    public void printDeleteMessage(Task task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"        printMessage(","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"                DELETE_MESSAGE,","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"                OFFSET + task.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"    public void printSaveMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"        printMessage(SAVED_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"    public void printTaskListSize(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"        printMessage(\"Now you have \" + taskList.size() + \" items.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"     * Prints this message if the given task description is found","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"    public void printFoundMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"        printMessage(FOUND_MESSAGE);","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"     * Prints this message if the given task description is not found","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"    public void printNotFoundMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"        printMessage(NOT_FOUND_MESSAGE);","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"     * Prints this message when an error has occurred","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"xkisxk"},"content":"     * @param message error message","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"    public void printError(String message) {","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"xkisxk"},"content":"        printMessage(message);","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"xkisxk"},"content":"     * Prints this message when entering the program with an empty save file","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"xkisxk"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"xkisxk"},"content":"        printMessage(WELCOME_MESSAGE);","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"xkisxk"},"content":"     * Prints this message when entering the program with a nonempty save file","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"xkisxk"},"content":"    public void printWelcomeBackMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"xkisxk"},"content":"        printMessage(WELCOME_BACK_MESSAGE);","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"xkisxk"},"content":"     * Prints a line dividor","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"xkisxk"},"content":"    public void printLine() {","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"xkisxk"},"content":"        printMessage(LINE_SEPARATOR);","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"xkisxk"},"content":"     * Prints the response message to the given command","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"xkisxk"},"content":"     * @param commandManager handles the command","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"xkisxk"},"content":"    public void printResponseMessage(CommandManager commandManager) {","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"xkisxk"},"content":"        printLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"xkisxk"},"content":"            commandManager.handleCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"xkisxk"},"content":"            printMessage(e.toString());","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"xkisxk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"xkisxk"},"content":"            printMessage(e.getMessage());","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"xkisxk"},"content":"        printLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"xkisxk"},"content":"    public void printFailedToAddMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"xkisxk"},"content":"        printMessage(FAILED_TO_ADD_MESSAGE);","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"xkisxk"},"content":"    public void printAddedMessage(Task task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"xkisxk"},"content":"        printMessage(","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"xkisxk"},"content":"                \"Got it. I have added this task:\",","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"xkisxk"},"content":"                OFFSET + task);","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"xkisxk"},"content":"     * Prints this message when exiting the program","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"xkisxk"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"xkisxk"},"content":"        printMessage(GOODBYE_MESSAGE);","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"xkisxk"},"content":"    public void printDoneMessage(Task task) {","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"xkisxk"},"content":"        printMessage(","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"xkisxk"},"content":"                DONE_MESSAGE,","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"xkisxk"},"content":"                OFFSET + task);","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"xkisxk"},"content":"     * Prints out the entire task list as a numbered list.","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"xkisxk"},"content":"     * E.g. 1. [T] buy bread","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"xkisxk"},"content":"     *      2. [D] homework (by: 26/4)","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"xkisxk"},"content":"    public void printTaskList(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":157,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"xkisxk"},"content":"            String item \u003d i + 1 + \".\" + taskList.getTask(i).toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":159,"author":{"gitId":"xkisxk"},"content":"            printMessage(item);","lastModifiedDate":"2021-09-18"},{"lineNumber":160,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":161,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":162,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"xkisxk":162}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"todo buy bread","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"todo","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"deadline homework","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"deadline homework /by 28/8","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"event birthday","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"event birthday /at 28/8","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"deadline homework2 /by 29/8","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"done 2","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"delete","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"delete 1","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"xkisxk":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xkisxk":2,"-":19}}]
