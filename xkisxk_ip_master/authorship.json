[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import duke.command.FileParser;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import duke.command.InputParser;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import duke.command.TaskManager;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"import java.io.File;","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"    protected static boolean isChatting \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"    protected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    protected static final String LINE \u003d \"______________________________________________\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"    protected static final String FILE_NAME \u003d \"saved.txt\";","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    protected static final String FILE_PATH \u003d \"./data/\";","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"    protected static final String NO_INPUT \u003d \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"        initDuke();","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        while (isChatting) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"            String sentence \u003d input.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"            InputParser parsedInput \u003d new InputParser(sentence);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"            TaskManager taskManager \u003d new TaskManager(parsedInput.getCommand(), parsedInput.getDescription(), parsedInput.getDate());","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"            printResponseMessage(taskManager);","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"    private static void printResponseMessage(TaskManager taskManager) {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"            taskManager.handleCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"        System.out.print(LINE + \"...... Oh, sorry! I didn\u0027t see you there.\\nI\u0027m Alex. How may I help you?\\n\" + LINE);","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"     * Initialises Duke, which is creating the directory and file if not yet and print the corresponding","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"     * welcome message","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"     * @throws IOException if file or dir does not exist","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"    private static void initDuke() throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"        File filePath \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"        File file \u003d new File(FILE_PATH + FILE_NAME);","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"        filePath.mkdir();","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"        if (file.createNewFile()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"            // file created","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"            printWelcomeMessage();","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"            // file exists","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"            System.out.println(LINE + \"Welcome back! How are you doing?\\nHere are the tasks from last time:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"            Scanner content \u003d new Scanner(file);","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"            // Convert all the tasks from the save file to tasks in Duke","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"            addSavedToTaskList(content);","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"            TaskManager previousState \u003d new TaskManager();","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"            previousState.printTaskList();","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"            System.out.print(LINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"     * Converts the tasks from the saved formatting to Duke task formatting","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"     * @param content input from saved file","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"    private static void addSavedToTaskList(Scanner content) {","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"        while (content.hasNextLine()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"            String line \u003d content.nextLine();","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"            FileParser fileInput \u003d new FileParser(line);","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"            TaskManager toTask \u003d new TaskManager(fileInput.getCommand(), fileInput.getDescription(), fileInput.getDate(), fileInput.getDone());","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"            toTask.convertSaveToTasks();","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"xkisxk":81,"-":5}},{"path":"src/main/java/duke/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    protected String errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"xkisxk":14}},{"path":"src/main/java/duke/command/FileParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.command;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class FileParser {","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    protected final String[] words;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"     * Converts the input from the saved text file back to command, description, date formatting","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"     * @param sentence result from scanner.nextLine()","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    public FileParser(String sentence) {","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        this.words \u003d sentence.split(\"\\\\|\");","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"    public String getCommand() {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"        return words[0].replaceAll(\" \", \"\").toLowerCase();","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        return words[1].replaceAll(\" \", \"\").equals(\"1\");","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"        return words[2].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"        if (words.length \u003e 3) {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"            return words[3].trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"        return \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"xkisxk":33}},{"path":"src/main/java/duke/command/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class InputParser {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    private final String NO_INPUT \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"    private final String[] words;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"     * Converts the input from command line to command, description, date formatting","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"     * @param sentence result from scanner.nextLine()","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"    public InputParser(String sentence) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        this.words \u003d sentence.split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"     * Gets the command from input regardless if the command is valid or not.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"     * The command should be the first word of the input.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"     * @return the command for the input","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    public String getCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"            return NO_INPUT;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"        return words[0].toLowerCase();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"     * Gets the description of the task from input which excludes the command","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"     * and date if there is any.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"     * @return the description of the task","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"            return NO_INPUT;","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"        String description \u003d words[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d 2; i \u003c words.length; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"            if (words[i].startsWith(\"/\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"            description +\u003d \" \" + words[i];","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"        return description;","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"     * Gets the date of the task if any. This reads anything that comes after","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"     * the keyword \"/by\" or \"/at\"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"     * @return the date of an event or deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"        int keywordIndex \u003d getKeywordIndex();","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"        if (keywordIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"            return NO_INPUT;","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"        String dateAsString \u003d NO_INPUT;","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d keywordIndex + 1; i \u003c words.length; i++) {","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"            dateAsString +\u003d words[i] + \" \";","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"        return dateAsString.trim();","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"    private int getKeywordIndex() {","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"        int keywordIndex \u003d -1;","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"            if (words[i].startsWith(\"/by\") || words[i].startsWith(\"/at\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"                keywordIndex \u003d i;","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"        return keywordIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":77}},{"path":"src/main/java/duke/command/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"public class TaskManager extends Duke {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    protected String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"    protected String date;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"     * TaskManager handles all the commands from input that comes from both CLI and save file.","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"     * If the command exists, task manager will execute it, else it will raise an error.","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"     * @param command command term","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"     * @param description description of task","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"     * @param date date of task","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"    public TaskManager(String command, String description, String date) {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"    public TaskManager(String command, String description, String date, boolean isDone) {","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"    public TaskManager() {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"        this.command \u003d NO_INPUT;","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d NO_INPUT;","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"        this.date \u003d NO_INPUT;","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"     * Adds the tasks from the saved file to the list, essentially restoring the previous list state","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"    public void convertSaveToTasks() {","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"        switch (command) {","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"        case \"t\":","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"            convertToDo();","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"        case \"e\":","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"            convertEvent();","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"        case \"d\":","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"            convertDeadline();","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"     * Handles commands from the input from command line based on the command word, which is the first word from input.","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException if command is not defined under cases","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"     * @throws IOException if save file does not exist","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"    public void handleCommand() throws DukeException, IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"        switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"            // Labels task as T","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"            handleToDo();","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"            autoSave();","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"        case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"            // Labels task as E and also takes in a date","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"            handleEvent();","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"            autoSave();","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"            // Labels task as D and also takes in a date","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"xkisxk"},"content":"            handleDeadline();","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"xkisxk"},"content":"            autoSave();","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"xkisxk"},"content":"        case \"done\":","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"xkisxk"},"content":"            // Marks task x as done where x is the index.","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"xkisxk"},"content":"            handleDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"xkisxk"},"content":"            saveFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"xkisxk"},"content":"        case \"list\":","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"xkisxk"},"content":"            // Lists out all the tasks that are added with the command \"list\".","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"Here are the tasks in your to do list:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"xkisxk"},"content":"            printTaskList();","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"xkisxk"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"xkisxk"},"content":"            // Ends conversation","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"xkisxk"},"content":"            isChatting \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"Bye. Talk to you later!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"xkisxk"},"content":"            saveFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"xkisxk"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"xkisxk"},"content":"            // Delete a task","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"xkisxk"},"content":"            handleDelete();","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"xkisxk"},"content":"            saveFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":108,"author":{"gitId":"xkisxk"},"content":"        case \"save\":","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"xkisxk"},"content":"            // Manually saves the file","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"xkisxk"},"content":"            saveFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"Saved to saved.txt in ./data\");","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"xkisxk"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"Sorry I don\u0027t understand what you mean by \\\"\" + command + \"\\\"\");","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"xkisxk"},"content":"     * Converts ToDo from the saved file to a ToDo task","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"xkisxk"},"content":"    private void convertToDo() {","lastModifiedDate":"2021-09-11"},{"lineNumber":121,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":122,"author":{"gitId":"xkisxk"},"content":"            taskList.add(new ToDo(description, isDone));","lastModifiedDate":"2021-09-11"},{"lineNumber":123,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":124,"author":{"gitId":"xkisxk"},"content":"            printFailedToAddMessage();","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"xkisxk"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"xkisxk"},"content":"     * Converts event from the saved file to an event task","lastModifiedDate":"2021-09-11"},{"lineNumber":132,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":133,"author":{"gitId":"xkisxk"},"content":"    private void convertEvent() {","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"xkisxk"},"content":"            taskList.add(new Event(description, isDone, date));","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"xkisxk"},"content":"            printFailedToAddMessage();","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"xkisxk"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"xkisxk"},"content":"     * Converts deadline from the saved file to a deadline task","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"xkisxk"},"content":"    private void convertDeadline() {","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"xkisxk"},"content":"            taskList.add(new Deadline(description, isDone, date));","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"xkisxk"},"content":"            printFailedToAddMessage();","lastModifiedDate":"2021-09-11"},{"lineNumber":151,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"xkisxk"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"xkisxk"},"content":"    private Boolean hasDate(String date) {","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"xkisxk"},"content":"        return !date.equals(NO_INPUT);","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"xkisxk"},"content":"     * Saves everything in the list into a save file, rewriting what the save file had previously.","lastModifiedDate":"2021-09-11"},{"lineNumber":162,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":163,"author":{"gitId":"xkisxk"},"content":"     * @throws IOException if file does not exist","lastModifiedDate":"2021-09-11"},{"lineNumber":164,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":165,"author":{"gitId":"xkisxk"},"content":"    public void saveFile() throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":166,"author":{"gitId":"xkisxk"},"content":"        FileWriter writer \u003d new FileWriter(FILE_PATH + FILE_NAME, false);","lastModifiedDate":"2021-09-11"},{"lineNumber":167,"author":{"gitId":"xkisxk"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-11"},{"lineNumber":168,"author":{"gitId":"xkisxk"},"content":"            // Rewrite list with all tasks currently in the list","lastModifiedDate":"2021-09-11"},{"lineNumber":169,"author":{"gitId":"xkisxk"},"content":"            String date \u003d task.getDate();","lastModifiedDate":"2021-09-11"},{"lineNumber":170,"author":{"gitId":"xkisxk"},"content":"            String listItem \u003d task.getTaskTag() + \" | \" + task.getDoneTag() + \" | \" + task.getDescription();","lastModifiedDate":"2021-09-11"},{"lineNumber":171,"author":{"gitId":"xkisxk"},"content":"            listItem \u003d (hasDate(date)) ? listItem + \" | \" + date : listItem;","lastModifiedDate":"2021-09-11"},{"lineNumber":172,"author":{"gitId":"xkisxk"},"content":"            listItem +\u003d \"\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":173,"author":{"gitId":"xkisxk"},"content":"            writer.write(listItem);","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":175,"author":{"gitId":"xkisxk"},"content":"        writer.flush();","lastModifiedDate":"2021-09-11"},{"lineNumber":176,"author":{"gitId":"xkisxk"},"content":"        writer.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":178,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":179,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":180,"author":{"gitId":"xkisxk"},"content":"     * Appends a newly added task into the save file.","lastModifiedDate":"2021-09-11"},{"lineNumber":181,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":182,"author":{"gitId":"xkisxk"},"content":"     * @throws IOException if file does not exist","lastModifiedDate":"2021-09-11"},{"lineNumber":183,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":184,"author":{"gitId":"xkisxk"},"content":"    private void autoSave() throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":185,"author":{"gitId":"xkisxk"},"content":"        FileWriter writer \u003d new FileWriter(FILE_PATH + FILE_NAME, true);","lastModifiedDate":"2021-09-11"},{"lineNumber":186,"author":{"gitId":"xkisxk"},"content":"        Task task \u003d taskList.get(taskList.size() - 1);","lastModifiedDate":"2021-09-11"},{"lineNumber":187,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":188,"author":{"gitId":"xkisxk"},"content":"        // Get the list item","lastModifiedDate":"2021-09-11"},{"lineNumber":189,"author":{"gitId":"xkisxk"},"content":"        String date \u003d task.getDate();","lastModifiedDate":"2021-09-11"},{"lineNumber":190,"author":{"gitId":"xkisxk"},"content":"        String listItem \u003d task.getTaskTag() + \" | \" + task.getDoneTag() + \" | \" + task.getDescription();","lastModifiedDate":"2021-09-11"},{"lineNumber":191,"author":{"gitId":"xkisxk"},"content":"        listItem \u003d (hasDate(date)) ? listItem + \" | \" + date : listItem;","lastModifiedDate":"2021-09-11"},{"lineNumber":192,"author":{"gitId":"xkisxk"},"content":"        listItem +\u003d \"\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":193,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":194,"author":{"gitId":"xkisxk"},"content":"        // Append it","lastModifiedDate":"2021-09-11"},{"lineNumber":195,"author":{"gitId":"xkisxk"},"content":"        writer.write(listItem);","lastModifiedDate":"2021-09-11"},{"lineNumber":196,"author":{"gitId":"xkisxk"},"content":"        writer.flush();","lastModifiedDate":"2021-09-11"},{"lineNumber":197,"author":{"gitId":"xkisxk"},"content":"        writer.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":198,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":199,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":200,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":201,"author":{"gitId":"xkisxk"},"content":"     * Prints out the entire task list as a numbered list.","lastModifiedDate":"2021-09-04"},{"lineNumber":202,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":203,"author":{"gitId":"xkisxk"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-09-11"},{"lineNumber":204,"author":{"gitId":"xkisxk"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-09-10"},{"lineNumber":205,"author":{"gitId":"xkisxk"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-10"},{"lineNumber":206,"author":{"gitId":"xkisxk"},"content":"            String item \u003d index + \".\" + task.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":207,"author":{"gitId":"xkisxk"},"content":"            System.out.println(item);","lastModifiedDate":"2021-09-04"},{"lineNumber":208,"author":{"gitId":"xkisxk"},"content":"            index++;","lastModifiedDate":"2021-09-10"},{"lineNumber":209,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":210,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":211,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":212,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":213,"author":{"gitId":"xkisxk"},"content":"     * Deletes a task from the list, the number given is the index of the task that will be deleted","lastModifiedDate":"2021-09-11"},{"lineNumber":214,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":215,"author":{"gitId":"xkisxk"},"content":"    private void handleDelete() {","lastModifiedDate":"2021-09-10"},{"lineNumber":216,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":217,"author":{"gitId":"xkisxk"},"content":"            int index \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":218,"author":{"gitId":"xkisxk"},"content":"            String task \u003d taskList.get(index - 1).toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":219,"author":{"gitId":"xkisxk"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2021-09-10"},{"lineNumber":220,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"Avoiding doing this task?! Just kidding.\\nI\u0027ve deleted this task:   \");","lastModifiedDate":"2021-09-10"},{"lineNumber":221,"author":{"gitId":"xkisxk"},"content":"            System.out.println(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":222,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" items.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":223,"author":{"gitId":"xkisxk"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":224,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"There is no item at that index. You have \" + taskList.size() + \" items.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":225,"author":{"gitId":"xkisxk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":226,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"\\\"\" + description + \"\\\" is not a number...\");","lastModifiedDate":"2021-09-10"},{"lineNumber":227,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":228,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":229,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":230,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":231,"author":{"gitId":"xkisxk"},"content":"     * Marks a task as done, so the task will be tagged with a [X]","lastModifiedDate":"2021-09-04"},{"lineNumber":232,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":233,"author":{"gitId":"xkisxk"},"content":"    private void handleDone() {","lastModifiedDate":"2021-09-04"},{"lineNumber":234,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":235,"author":{"gitId":"xkisxk"},"content":"            int index \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":236,"author":{"gitId":"xkisxk"},"content":"            taskList.get(index - 1).markDone();","lastModifiedDate":"2021-09-10"},{"lineNumber":237,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"Good job on completing this task!\\nI\u0027ve marked this task as done:   \");","lastModifiedDate":"2021-09-04"},{"lineNumber":238,"author":{"gitId":"xkisxk"},"content":"            System.out.println(taskList.get(index - 1).toString());","lastModifiedDate":"2021-09-10"},{"lineNumber":239,"author":{"gitId":"xkisxk"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":240,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"There is no item at that index. You have \" + taskList.size() + \" items.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":241,"author":{"gitId":"xkisxk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":242,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"\\\"\" + description + \"\\\" is not a number...\");","lastModifiedDate":"2021-09-04"},{"lineNumber":243,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":244,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":245,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":246,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":247,"author":{"gitId":"xkisxk"},"content":"     * Adds a deadline task into the task list","lastModifiedDate":"2021-09-04"},{"lineNumber":248,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":249,"author":{"gitId":"xkisxk"},"content":"    private void handleDeadline() {","lastModifiedDate":"2021-09-11"},{"lineNumber":250,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":251,"author":{"gitId":"xkisxk"},"content":"            taskList.add(new Deadline(description, date));","lastModifiedDate":"2021-09-10"},{"lineNumber":252,"author":{"gitId":"xkisxk"},"content":"            printAddedMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":253,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":254,"author":{"gitId":"xkisxk"},"content":"            printFailedToAddMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":255,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":256,"author":{"gitId":"xkisxk"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-11"},{"lineNumber":257,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":258,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":259,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":260,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":261,"author":{"gitId":"xkisxk"},"content":"     * Adds an event task into the task list","lastModifiedDate":"2021-09-04"},{"lineNumber":262,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":263,"author":{"gitId":"xkisxk"},"content":"    private void handleEvent() {","lastModifiedDate":"2021-09-11"},{"lineNumber":264,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":265,"author":{"gitId":"xkisxk"},"content":"            taskList.add(new Event(description, date));","lastModifiedDate":"2021-09-10"},{"lineNumber":266,"author":{"gitId":"xkisxk"},"content":"            printAddedMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":267,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":268,"author":{"gitId":"xkisxk"},"content":"            printFailedToAddMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":269,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":270,"author":{"gitId":"xkisxk"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-11"},{"lineNumber":271,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":272,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":273,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":274,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":275,"author":{"gitId":"xkisxk"},"content":"     * Adds a ToDo task into the task list","lastModifiedDate":"2021-09-04"},{"lineNumber":276,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":277,"author":{"gitId":"xkisxk"},"content":"    private void handleToDo() {","lastModifiedDate":"2021-09-11"},{"lineNumber":278,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":279,"author":{"gitId":"xkisxk"},"content":"            taskList.add(new ToDo(description));","lastModifiedDate":"2021-09-10"},{"lineNumber":280,"author":{"gitId":"xkisxk"},"content":"            printAddedMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":281,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":282,"author":{"gitId":"xkisxk"},"content":"            printFailedToAddMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":283,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":284,"author":{"gitId":"xkisxk"},"content":"            System.out.println(e);","lastModifiedDate":"2021-09-11"},{"lineNumber":285,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":286,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":287,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":288,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":289,"author":{"gitId":"xkisxk"},"content":"     * Prints this message when a task can\u0027t be added","lastModifiedDate":"2021-08-28"},{"lineNumber":290,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":291,"author":{"gitId":"xkisxk"},"content":"    private void printFailedToAddMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":292,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"There\u0027s too much stuff in the task list.\\nI can\u0027t remember them all.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":293,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":294,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":295,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":296,"author":{"gitId":"xkisxk"},"content":"     * Prints this message when a task has been successfully added.","lastModifiedDate":"2021-08-28"},{"lineNumber":297,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":298,"author":{"gitId":"xkisxk"},"content":"    private void printAddedMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":299,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"Got it. I have added this task:\\n   \" + taskList.get(taskList.size() - 1));","lastModifiedDate":"2021-09-10"},{"lineNumber":300,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":301,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":302,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":303,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":303}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    protected String by;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a deadline that has no description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"        if (by.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I need a date for this deadline.\\nUse /by to tell me the date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    public Deadline(String description, boolean isDone, String by) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a deadline that has no description\");","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        if (by.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I need a date for this deadline.\\nUse /by to tell me the date.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"    public String getTaskTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"        return \"D\";","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"        return by;","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":44}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    protected String at;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add an event that has no description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"        if (at.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I need a date for this event.\\nUse /at to tell me the date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    public Event(String description, boolean isDone, String at) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add an event that has no description\");","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        if (at.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I need a date for this event.\\nUse /at to tell me the date.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"    public String getTaskTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"        return \"E\";","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"        return at;","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    protected final String NO_INPUT \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"     * Task is class that contains a description and status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"     * The status is represented by a [X] for done and a [ ] for not done","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"     * and is displayed before the description.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"     * The task type is represented by a [T] for ToDo, [E] for event and","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"     * [D] for deadline which is added in the respective subclasses","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"     * E.g. 1. [T][ ] buy book","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"     * @param description description or name of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"     * Gets the date of the task if it has one","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"     * @return date","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"        return NO_INPUT;","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"     * Gets the tag of the task, e.g. T for ToDo","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"     * @return task tag","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"    public String getTaskTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"        return NO_INPUT;","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"     * Returns \"X\" or \" \" depending on whether the task is completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"     * \"X\" for completed, \" \" for not completed","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"     * @return the icon representing the status","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"     * Returns 1 or 0 depending on whether the task is completed.","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"     * 1 for completed, 0 for not completed","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"     * @return an integer representing the status","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"    public int getDoneTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"        return isDone ? 1 : 0;","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"     * Returns the description of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"     * @return description","lastModifiedDate":"2021-08-23"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"     * Returns the status of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"     * @return is done","lastModifiedDate":"2021-08-23"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"        return isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":84,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":85,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"     * Marks the task as done by changing the boolean isDone to true.","lastModifiedDate":"2021-08-23"},{"lineNumber":87,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":88,"author":{"gitId":"xkisxk"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":89,"author":{"gitId":"xkisxk"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":90,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":91,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"xkisxk"},"content":"     * Formats the description of the task","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"xkisxk"},"content":"     * e.g [X] buy book","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"xkisxk"},"content":"     * @return formatted version of the description","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":98,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"xkisxk"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"xkisxk":101}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a todo that has no description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    public ToDo(String description, boolean isDone) throws DukeException {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a todo that has no description\");","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"    public String getTaskTag() {","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"        return \"T\";","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"todo buy bread","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"todo","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"deadline homework","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"deadline homework /by 28/8","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"event birthday","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"event birthday /at 28/8","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"deadline homework2 /by 29/8","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"done 2","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"delete","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"delete 1","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"xkisxk":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xkisxk":2,"-":19}}]
