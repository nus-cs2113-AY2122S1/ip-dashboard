[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import duke.command.InputParser;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import duke.command.TaskManager;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    protected static boolean isChatting \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"    protected static final int LIST_SIZE \u003d 100;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    protected static int listIndex \u003d 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"    protected static Task[] taskList \u003d new Task[LIST_SIZE];","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"    protected static final String LINE \u003d \"______________________________________________\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"        printWelcomeMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        while (isChatting) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"            String sentence \u003d input.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"            InputParser parsedInput \u003d new InputParser(sentence);","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"            TaskManager taskManager \u003d new TaskManager(parsedInput.getCommand(), parsedInput.getDescription(), parsedInput.getDate());","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"            printResponseMessage(taskManager);","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"    private static void printResponseMessage(TaskManager taskManager) {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"            taskManager.handleCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"        System.out.println(LINE + \"...... Oh, sorry! I didn\u0027t see you there.\\nI\u0027m Alex. How may I help you?\");","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xkisxk":38,"-":4}},{"path":"src/main/java/duke/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    protected String errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"xkisxk":14}},{"path":"src/main/java/duke/command/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class InputParser {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    private final String NO_INPUT \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"    private final String[] words;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"     * Converts the input from command line to command, description, date formatting","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"     * @param sentence result from scanner.nextLine()","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"    public InputParser(String sentence) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        this.words \u003d sentence.split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"     * Gets the command from input regardless if the command is valid or not.","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"     * The command should be the first word of the input.","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"     * @return the command for the input","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    public String getCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"        if (words.length \u003d\u003d 0)   {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"            return NO_INPUT;","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"        return words[0].toLowerCase();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"     * Gets the description of the task from input which excludes the command","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"     * and date if there is any.","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"     * @return the description of the task","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"        if (words.length \u003c\u003d 1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"            return NO_INPUT;","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"        String description \u003d words[1];","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d 2; i \u003c words.length; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"            if (words[i].startsWith(\"/\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"            description +\u003d \" \" + words[i];","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"        return description;","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"     * Gets the date of the task if any. This reads anything that comes after","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"     * the keyword \"/by\" or \"/at\"","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"     * @return the date of an event or deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"        int keywordIndex \u003d getKeywordIndex();","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"        if (keywordIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"            return NO_INPUT;","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"        String dateAsString \u003d words[keywordIndex + 1];","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d keywordIndex + 2; i \u003c words.length; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"            dateAsString +\u003d \" \" + words[i];","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"        return dateAsString;","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"    private int getKeywordIndex() {","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"        int keywordIndex \u003d -1;","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"            if (words[i].startsWith(\"/by\") || words[i].startsWith(\"/at\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"                keywordIndex \u003d i;","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"        return keywordIndex;","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":77}},{"path":"src/main/java/duke/command/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.command;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.Duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"public class TaskManager extends Duke {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"    protected String command;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    protected String date;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    public TaskManager(String command, String description, String date) {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"     * Handles commands from the input based on the command word, which is the first word from input.","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    public void handleCommand() throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"        switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"            // Labels task as T","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"            handleToDo();","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"        case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"            // Labels task as E and also takes in a date","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"            handleEvent();","lastModifiedDate":"2021-09-04"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"            // Labels task as D and also takes in a date","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"            handleDeadline();","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"        case \"done\":","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"            // Marks task x as done where x is the index.","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"            handleDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        case \"list\":","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"            // Lists out all the tasks that are added with the command \"list\".","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"            printTaskList();","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"        case \"bye\":","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"            // Ends conversation","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"            isChatting \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"Bye. Talk to you later!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"Sorry I don\u0027t understand what you mean by \\\"\" + command + \"\\\"\");","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"     * Prints out the entire task list as a numbered list.","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"    private void printTaskList() {","lastModifiedDate":"2021-09-04"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"Here are the tasks in your to do list:\");","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"        for (int i \u003d 0; i \u003c listIndex; i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"            String item \u003d (i + 1) + \".\" + taskList[i].toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"            System.out.println(item);","lastModifiedDate":"2021-09-04"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"     * Marks a task as done, so the task will be tagged with a [X]","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"xkisxk"},"content":"    private void handleDone() {","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"xkisxk"},"content":"            int index \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"xkisxk"},"content":"            taskList[index - 1].markDone();","lastModifiedDate":"2021-09-04"},{"lineNumber":74,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"Good job on completing this task!\\nI\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"xkisxk"},"content":"            System.out.println(taskList[index - 1].toString());","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"xkisxk"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":77,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"There is no item at that index. You have \" + listIndex + \" items\");","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"xkisxk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":79,"author":{"gitId":"xkisxk"},"content":"            System.out.println(\"\\\"\" + description + \"\\\" is not a number...\");","lastModifiedDate":"2021-09-04"},{"lineNumber":80,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":81,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":83,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":84,"author":{"gitId":"xkisxk"},"content":"     * Adds a deadline task into the task list","lastModifiedDate":"2021-09-04"},{"lineNumber":85,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException If description is empty, specifically \"\".","lastModifiedDate":"2021-09-04"},{"lineNumber":87,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":88,"author":{"gitId":"xkisxk"},"content":"    private void handleDeadline() throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":89,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":90,"author":{"gitId":"xkisxk"},"content":"            taskList[listIndex] \u003d new Deadline(description, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":91,"author":{"gitId":"xkisxk"},"content":"            listIndex++;","lastModifiedDate":"2021-09-04"},{"lineNumber":92,"author":{"gitId":"xkisxk"},"content":"            printAddedMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":93,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":94,"author":{"gitId":"xkisxk"},"content":"            printFailedToAddMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":95,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":96,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":97,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":98,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":99,"author":{"gitId":"xkisxk"},"content":"     * Adds an event task into the task list","lastModifiedDate":"2021-09-04"},{"lineNumber":100,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":101,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException If description is empty, specifically \"\".","lastModifiedDate":"2021-09-04"},{"lineNumber":102,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":103,"author":{"gitId":"xkisxk"},"content":"    private void handleEvent() throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":104,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":105,"author":{"gitId":"xkisxk"},"content":"            taskList[listIndex] \u003d new Event(description, date);","lastModifiedDate":"2021-09-04"},{"lineNumber":106,"author":{"gitId":"xkisxk"},"content":"            listIndex++;","lastModifiedDate":"2021-09-04"},{"lineNumber":107,"author":{"gitId":"xkisxk"},"content":"            printAddedMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":108,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":109,"author":{"gitId":"xkisxk"},"content":"            printFailedToAddMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":110,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":111,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":112,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":113,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-09-04"},{"lineNumber":114,"author":{"gitId":"xkisxk"},"content":"     * Adds a ToDo task into the task list","lastModifiedDate":"2021-09-04"},{"lineNumber":115,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-09-04"},{"lineNumber":116,"author":{"gitId":"xkisxk"},"content":"     * @throws DukeException If description is empty, specifically \"\".","lastModifiedDate":"2021-09-04"},{"lineNumber":117,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-09-04"},{"lineNumber":118,"author":{"gitId":"xkisxk"},"content":"    private void handleToDo() throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":119,"author":{"gitId":"xkisxk"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":120,"author":{"gitId":"xkisxk"},"content":"            taskList[listIndex] \u003d new ToDo(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"xkisxk"},"content":"            listIndex++;","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"xkisxk"},"content":"            printAddedMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"xkisxk"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"xkisxk"},"content":"            printFailedToAddMessage();","lastModifiedDate":"2021-09-04"},{"lineNumber":125,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":129,"author":{"gitId":"xkisxk"},"content":"     * Prints this message when a task can\u0027t be added","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"xkisxk"},"content":"    private void printFailedToAddMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"There\u0027s too much stuff in the task list.\\nI can\u0027t remember them all.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"xkisxk"},"content":"     * Prints this message when a task has been successfully added.","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"xkisxk"},"content":"    private void printAddedMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"Got it. I have added this task:\\n   \" + taskList[listIndex - 1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"xkisxk"},"content":"        System.out.println(\"Now you have \" + listIndex + \" tasks in the list\");","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":143}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    protected String by;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a deadline that has no description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"        if (by.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I need a date for this deadline.\\nUse /by to tell me the date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":23}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    protected String at;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    public Event(String description, String at) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add an event that has no description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"        if (at.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I need a date for this event.\\nUse /at to tell me the date.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":23}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"    protected final String NO_INPUT \u003d \"\";","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"     * Task is class that contains a description and status of the task.","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"     * The status is represented by a [X] for done and a [ ] for not done","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"     * and is displayed before the description.","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"     * The task type is represented by a [T] for ToDo, [E] for event and","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"     * [D] for deadline which is added in the respective subclasses","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"     * E.g. 1. [T][ ] buy book","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"     * @param description description or name of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":18,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"xkisxk"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"xkisxk"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"xkisxk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"xkisxk"},"content":"     * Returns \"X\" or \" \" depending on whether the task is completed.","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"xkisxk"},"content":"     * \"X\" for completed, \" \" for not completed","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":28,"author":{"gitId":"xkisxk"},"content":"     * @return the icon representing the status","lastModifiedDate":"2021-08-23"},{"lineNumber":29,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":30,"author":{"gitId":"xkisxk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"xkisxk"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":35,"author":{"gitId":"xkisxk"},"content":"     * Returns the description of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":37,"author":{"gitId":"xkisxk"},"content":"     * @return description","lastModifiedDate":"2021-08-23"},{"lineNumber":38,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":39,"author":{"gitId":"xkisxk"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"xkisxk"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":44,"author":{"gitId":"xkisxk"},"content":"     * Returns the status of the task","lastModifiedDate":"2021-08-23"},{"lineNumber":45,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":46,"author":{"gitId":"xkisxk"},"content":"     * @return is done","lastModifiedDate":"2021-08-23"},{"lineNumber":47,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":48,"author":{"gitId":"xkisxk"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":49,"author":{"gitId":"xkisxk"},"content":"        return isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":50,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xkisxk"},"content":"     * Marks the task as done by changing the boolean isDone to true.","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":55,"author":{"gitId":"xkisxk"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":56,"author":{"gitId":"xkisxk"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"xkisxk"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"xkisxk"},"content":"     * Formats the description of the task","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"xkisxk"},"content":"     * e.g [X] buy book","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"xkisxk"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"xkisxk"},"content":"     * @return formatted version of the description","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"xkisxk"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"xkisxk"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"xkisxk":68}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"import duke.command.DukeException;","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"    public ToDo(String description) throws DukeException {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"xkisxk"},"content":"        if (description.equals(NO_INPUT)) {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"xkisxk"},"content":"            throw new DukeException(\"I can\u0027t add a todo that has no description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"xkisxk"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"xkisxk"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"xkisxk"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"xkisxk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"xkisxk"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"xkisxk"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"xkisxk":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xkisxk"},"content":"todo buy bread","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"xkisxk"},"content":"deadline homework /by 28/8","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"xkisxk"},"content":"event birthday /at 28/8","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"xkisxk"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"xkisxk"},"content":"done 2","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"xkisxk"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"xkisxk"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"xkisxk":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"xkisxk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xkisxk":1,"-":20}}]
