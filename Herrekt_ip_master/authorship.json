[{"path":"JAR_TEST/save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"E / 0 / Herrick attend CS2113 lecture / Friday 17 Sep 2021 from 4-6pm","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Herrekt":1}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"# herrekt project template","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"4. After that, locate the `src/main/java/herrekt.java` file, right-click it, and choose `Run herrekt.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"5. After initial welcome display, key in one of the following commands:","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"\ttodo \u003cTASK\u003e ~adds a task to be completed.","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"\tdeadline \u003cTASK\u003e /by \u003cTIME\u003e ~adds a deadline with the corresponding time.","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"\tevent \u003cTASK\u003e /at \u003cTIME\u003e ~adds an event with the corresponding time.","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"\tlist ~lists out the current timetable","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"\tdone \u003cTASK NUMBER\u003e ~marks the task with the corresponding number on the list as done.","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"\tbye ~exits the program.","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Herrekt":12,"-":12}},{"path":"save.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"E / 1 / sleep / 3am","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"D / 1 / finish parser / 2am","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"D / 0 / cry / midnight","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"Herrekt":3}},{"path":"src/main/java/herrekt/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"import herrekt.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"import herrekt.exceptions.InvalidTaskException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"import herrekt.taskmanager.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"import herrekt.taskmanager.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"public class Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"    private final static String[] commands \u003d {\"todo\", \"event\", \"deadline\", \"list\", \"done\", \"find\", \"delete\", \"bye\"};","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"    public Command() {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"     * Check if the input is valid to be processed.","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"     * @param phrase The user\u0027s input.","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"     * @throws InvalidTaskException If the input is recognized as a Task but is of an invalid format.","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"     * @throws InvalidInputException If the input is invalid.","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"    public void isInputValid(String phrase) throws InvalidInputException, InvalidTaskException {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"        boolean isValid \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"        for (String command : commands) {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"            if (phrase.startsWith(command)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"                isValid \u003d true;","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Herrekt"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Herrekt"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Herrekt"},"content":"        if (isValid) {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Herrekt"},"content":"            if (phrase.startsWith(\"todo\") || phrase.startsWith(\"deadline\")|| phrase.startsWith(\"event\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Herrekt"},"content":"                isValid \u003d isValidTaskCommand(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Herrekt"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Herrekt"},"content":"        if (!isValid) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Herrekt"},"content":"            throw new InvalidInputException(\"ERROR! Please follow format in README.md\" + \"\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Herrekt"},"content":"                    + \"Your input: \" + phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Herrekt"},"content":"    private boolean isValidTaskCommand(String phrase) throws InvalidTaskException {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Herrekt"},"content":"        if (phrase.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Herrekt"},"content":"            return isValidTodo(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Herrekt"},"content":"        } else if (phrase.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Herrekt"},"content":"            return isValidDeadline(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Herrekt"},"content":"        } else if (phrase.startsWith(\"event\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Herrekt"},"content":"            return isValidEvent(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Herrekt"},"content":"            return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Herrekt"},"content":"    private boolean isValidTodo(String phrase) throws InvalidTaskException {","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Herrekt"},"content":"        String[] splitPhrase \u003d phrase.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Herrekt"},"content":"        boolean validInput \u003d splitPhrase.length \u003e 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Herrekt"},"content":"        if (!validInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Herrekt"},"content":"            throw new InvalidTaskException(\"ERROR! Please add a description after \u0027todo\u0027!\" + \"\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Herrekt"},"content":"            + \"Your input: \" + phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Herrekt"},"content":"            return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"Herrekt"},"content":"    private boolean isValidDeadline(String phrase) throws InvalidTaskException {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"Herrekt"},"content":"        String[] splitPhrase \u003d phrase.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"Herrekt"},"content":"        boolean validInput \u003d splitPhrase.length \u003e 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"Herrekt"},"content":"        boolean gotDeadline \u003d phrase.contains(\"/by\") \u0026\u0026 !splitPhrase[splitPhrase.length - 1].equals(\"/by\");","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"Herrekt"},"content":"        if (!(validInput \u0026\u0026 gotDeadline)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"Herrekt"},"content":"            throw new InvalidTaskException(\"ERROR! Please add a description after \u0027deadline\u0027 \" +","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Herrekt"},"content":"                    \"and more information about the time/date after \u0027/by\u0027\" + \"\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Herrekt"},"content":"                    + \"Your input: \" + phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Herrekt"},"content":"            return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"Herrekt"},"content":"    private boolean isValidEvent(String phrase) throws InvalidTaskException {","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"Herrekt"},"content":"        String[] splitPhrase \u003d phrase.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"Herrekt"},"content":"        boolean validInput \u003d splitPhrase.length \u003e 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"Herrekt"},"content":"        boolean gotEvent \u003d phrase.contains(\"/at\") \u0026\u0026 !splitPhrase[splitPhrase.length - 1].equals(\"/at\");","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"Herrekt"},"content":"        if (!(validInput \u0026\u0026 gotEvent)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"Herrekt"},"content":"            throw new InvalidTaskException(\"ERROR! Please add a description after \u0027event\u0027 \" +","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"Herrekt"},"content":"                    \"and more information about the time/date after \u0027/at\u0027\" + \"\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"Herrekt"},"content":"                    + \"Your input: \" + phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"Herrekt"},"content":"            return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"Herrekt"},"content":"     * Marks the user specified task as done.","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"Herrekt"},"content":"     * Parse the task\u0027s number to be marked as done and set it as done.","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"Herrekt"},"content":"     * @param phrase The User\u0027s input","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"Herrekt"},"content":"     * @param tasks The current TaskList","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"Herrekt"},"content":"    public void runDoneCommand(String phrase, TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"Herrekt"},"content":"        int taskNumber \u003d parser.parseDoneInputToInt(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"Herrekt"},"content":"        if (tasks.markAsDone(taskNumber)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"Herrekt"},"content":"            ui.printMarkTaskAsDone(taskNumber, tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"Herrekt"},"content":"            ui.printTaskAlreadyMarkedAsDone(taskNumber, tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"Herrekt"},"content":"     * Deletes the user specified task.","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"Herrekt"},"content":"     * Parse the task\u0027s number from the user input and then delete the specified task.","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"Herrekt"},"content":"     * @param phrase The User\u0027s input","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"Herrekt"},"content":"     * @param tasks The current TaskList","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"Herrekt"},"content":"    public void runDeleteCommand(String phrase, TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"Herrekt"},"content":"        int taskNumber \u003d parser.parseDeleteInputToInt(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"Herrekt"},"content":"        ui.printTaskDeleted(taskNumber, tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"Herrekt"},"content":"        tasks.delete(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"Herrekt"},"content":"     * Finds the task that matches the input\u0027s description.","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"Herrekt"},"content":"     * Parse the input into a string containing only the details to search for.","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"Herrekt"},"content":"     * @param phrase The User\u0027s input","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"Herrekt"},"content":"     * @param tasks The current TaskList","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"Herrekt"},"content":"    public void runFindCommand(String phrase, TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"Herrekt"},"content":"        String phraseToSearch \u003d parser.parseSearchInputToString(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"Herrekt"},"content":"        ui.printMatchingTaskList(new TaskList(tasks.search(phraseToSearch)));","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"Herrekt"},"content":"     * Adds the User\u0027s input as a task to the current TaskList.","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"Herrekt"},"content":"     * Parse the input as the specified Task subclass: Todo/Deadline/Event.","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"Herrekt"},"content":"     * @param phrase The User\u0027s input","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"Herrekt"},"content":"     * @param tasks The current TaskList","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"Herrekt"},"content":"     * @throws InvalidInputException If the phrase does not follow specified task format.","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"Herrekt"},"content":"    public void runTaskCommand(String phrase, TaskList tasks) throws InvalidInputException {","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"Herrekt"},"content":"        Task task \u003d parser.parsePhraseToTask(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"Herrekt"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"Herrekt"},"content":"        ui.printNumberOfTasks(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Herrekt":148}},{"path":"src/main/java/herrekt/Herrekt.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"import herrekt.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"import herrekt.exceptions.InvalidTaskException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"import herrekt.taskmanager.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"public class Herrekt {","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"    private final static String NAME_OF_FILE \u003d \"save.txt\";","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"    private final Command command;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"    public Herrekt(String filePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"        this.command \u003d new Command();","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"            this.tasks \u003d new TaskList(this.storage.load());","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"            this.ui.printLoadingError();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Herrekt"},"content":"    public void run() {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Herrekt"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Herrekt"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Herrekt"},"content":"        String phrase \u003d sc.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Herrekt"},"content":"        while (!phrase.equals(\"bye\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Herrekt"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Herrekt"},"content":"                command.isInputValid(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Herrekt"},"content":"                if (phrase.equals(\"list\")) {","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"Herrekt"},"content":"                    ui.printTaskList(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Herrekt"},"content":"                } else if (phrase.startsWith(\"done\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Herrekt"},"content":"                    command.runDoneCommand(phrase, tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Herrekt"},"content":"                } else if (phrase.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Herrekt"},"content":"                    command.runDeleteCommand(phrase, tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Herrekt"},"content":"                } else if (phrase.startsWith(\"find\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Herrekt"},"content":"                    command.runFindCommand(phrase, tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Herrekt"},"content":"                } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Herrekt"},"content":"                    command.runTaskCommand(phrase, tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Herrekt"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Herrekt"},"content":"            } catch (ArrayIndexOutOfBoundsException e1) {","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Herrekt"},"content":"                ui.printIncorrectFormatError(phrase);","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Herrekt"},"content":"            } catch(NumberFormatException | StringIndexOutOfBoundsException e2) {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Herrekt"},"content":"                ui.printNoNumericInputError(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Herrekt"},"content":"            } catch (IndexOutOfBoundsException e2) {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"Herrekt"},"content":"                ui.printInputBiggerThanTaskList(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Herrekt"},"content":"            } catch (InvalidInputException e3) {","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"Herrekt"},"content":"                ui.printInvalidInputError(phrase);","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Herrekt"},"content":"                e3.printStackTrace();","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Herrekt"},"content":"            } catch (InvalidTaskException e4) {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Herrekt"},"content":"                ui.printInvalidTaskError(phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Herrekt"},"content":"                e4.printStackTrace();","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Herrekt"},"content":"            } catch (DateTimeParseException e5) {","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"Herrekt"},"content":"                ui.printInvalidDateError(phrase);","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"Herrekt"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"Herrekt"},"content":"            phrase \u003d sc.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Herrekt"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Herrekt"},"content":"        ui.printFarewellMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Herrekt"},"content":"        sc.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"Herrekt"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Herrekt"},"content":"        new Herrekt(NAME_OF_FILE).run();","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Herrekt":77,"-":1}},{"path":"src/main/java/herrekt/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"import herrekt.exceptions.InvalidInputException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"import herrekt.taskmanager.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"public class Parser {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"    private static final String DATE_REGEX \u003d \"(\\\\d+-\\\\d+-\\\\d+)\";","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"     * Returns an integer which is the number of the task to be marked done.","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"     * @param phrase A string starting with \u0027done\u0027.","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"     * @return Task number","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"     * @throws NumberFormatException If the character after done is not an integer.","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"     * @throws StringIndexOutOfBoundsException If the task number is bigger than the number of current tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"    public int parseDoneInputToInt(String phrase) throws NumberFormatException, StringIndexOutOfBoundsException {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"        phrase \u003d phrase.substring(5);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"        return Integer.parseInt(phrase);","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"     * Returns an integer which is the number of the task to be deleted.","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Herrekt"},"content":"     * @param phrase A string starting with \u0027delete\u0027.","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"Herrekt"},"content":"     * @return Task number","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"Herrekt"},"content":"     * @throws NumberFormatException If the character after delete is not an integer.","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"Herrekt"},"content":"     * @throws StringIndexOutOfBoundsException If the task number is bigger than the number of current tasks.","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Herrekt"},"content":"    public int parseDeleteInputToInt(String phrase) throws NumberFormatException, StringIndexOutOfBoundsException{","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Herrekt"},"content":"        phrase \u003d phrase.substring(7);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Herrekt"},"content":"        return Integer.parseInt(phrase);","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"Herrekt"},"content":"     * Returns a task of either Todo, Deadline, or Event.","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"Herrekt"},"content":"     * @param phrase A string starting with either \u0027todo\u0027, \u0027deadline\u0027, or \u0027event\u0027.","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"Herrekt"},"content":"     * @return A task of the specified child class Todo/Deadline/Event.","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"Herrekt"},"content":"     * @throws InvalidInputException If the input does not follow the correct format.","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Herrekt"},"content":"    public Task parsePhraseToTask(String phrase) throws InvalidInputException {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Herrekt"},"content":"        if (phrase.startsWith(\"todo \")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"Herrekt"},"content":"            return new Todo(phrase.substring(5));","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Herrekt"},"content":"        } else if (phrase.startsWith(\"deadline \")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"Herrekt"},"content":"            phrase \u003d phrase.substring(9);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Herrekt"},"content":"            String[] taskAndTime \u003d phrase.split(\" /by \");","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Herrekt"},"content":"            return new Deadline\u003c\u003e(taskAndTime[0], taskAndTime[1]);","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"Herrekt"},"content":"        } else if (phrase.startsWith(\"event \")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"Herrekt"},"content":"            phrase \u003d phrase.substring(6);","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Herrekt"},"content":"            String[] taskAndTime \u003d phrase.split(\" /at \");","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Herrekt"},"content":"            return new Event(taskAndTime[0], taskAndTime[1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Herrekt"},"content":"            throw new InvalidInputException(\"Invalid Task Format\");","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"Herrekt"},"content":"     * Returns the string to be searched for in a task\u0027s description","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"Herrekt"},"content":"     * @param phrase A string starting with \u0027search\u0027.","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"Herrekt"},"content":"     * @return Phrase to be searched","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"Herrekt"},"content":"    public String parseSearchInputToString(String phrase) {","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"Herrekt"},"content":"        return phrase.substring(5);","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"Herrekt"},"content":"     * Returns a deadline in with the date in LocalDate format if possible.","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"Herrekt"},"content":"     * @param description Description of the deadline.","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"Herrekt"},"content":"     * @param date Date the deadline is due.","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"Herrekt"},"content":"     * @return A deadline .","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"Herrekt"},"content":"    public static Task dateConverter(String description, String date) {","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"Herrekt"},"content":"        Matcher matcher \u003d Pattern.compile(DATE_REGEX).matcher(date);","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"Herrekt"},"content":"        String dateAsString;","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"Herrekt"},"content":"        if (matcher.find()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"Herrekt"},"content":"            dateAsString \u003d matcher.group(1);","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"Herrekt"},"content":"            LocalDate localDate \u003d LocalDate.parse(dateAsString, DateTimeFormatter.ISO_LOCAL_DATE);","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"Herrekt"},"content":"            return new Deadline\u003c\u003e(description, localDate);","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"Herrekt"},"content":"            return new Deadline\u003c\u003e(description, date);","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Herrekt":91}},{"path":"src/main/java/herrekt/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"import herrekt.taskmanager.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"import java.io.File;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"import java.util.List;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"public class Storage {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"     * Initialize the Storage class as an instant.","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"     * @param filePath directory and name of the file to load from and save on.","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"    private void writeToFile(String textToAdd) throws IOException {","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"        FileWriter fw \u003d new FileWriter(\"save.txt\");","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"Herrekt"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"Herrekt"},"content":"        fw.close();","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"Herrekt"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"Herrekt"},"content":"     * Returns a list of tasks obtained from the save.txt file.","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"Herrekt"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"Herrekt"},"content":"     * @return a list of tasks","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"Herrekt"},"content":"     * @throws FileNotFoundException  If save.txt does not exist.","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"Herrekt"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"Herrekt"},"content":"    public List\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Herrekt"},"content":"        List\u003cString\u003e stringList \u003d loadSaveAsStringList(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Herrekt"},"content":"        List\u003cTask\u003e tasks \u003d convertStringListToTaskList(stringList);","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Herrekt"},"content":"        return tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Herrekt"},"content":"    /** Save the current tasks kept recorded as a txt file called save.txt. */","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"Herrekt"},"content":"    public void save(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Herrekt"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Herrekt"},"content":"            if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Herrekt"},"content":"                writeToFile(\"\");","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"Herrekt"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Herrekt"},"content":"                StringBuilder toSaveToFile \u003d tasks.convertTaskListToSaveFormat();","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Herrekt"},"content":"                writeToFile(toSaveToFile.toString());","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Herrekt"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Herrekt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Herrekt"},"content":"            System.out.println(\"ERROR! FILE NOT FOUND!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Herrekt"},"content":"    private List\u003cString\u003e loadSaveAsStringList(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"Herrekt"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Herrekt"},"content":"        List\u003cString\u003e taskInStringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Herrekt"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Herrekt"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Herrekt"},"content":"            taskInStringList.add(sc.nextLine());","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Herrekt"},"content":"        return taskInStringList;","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Herrekt"},"content":"    private List\u003cTask\u003e convertStringListToTaskList(List\u003cString\u003e stringList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Herrekt"},"content":"        return stringList.stream()","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Herrekt"},"content":"                .map(y -\u003e convertSavedStringToTask(y))","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Herrekt"},"content":"                .collect(toList());","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Herrekt"},"content":"    private Task convertSavedStringToTask(String taskInString) {","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Herrekt"},"content":"        Task task;","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Herrekt"},"content":"        String[] taskInArray \u003d taskInString.split(\" / \");","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Herrekt"},"content":"        switch (taskInArray[0]) {","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Herrekt"},"content":"        case \"T\":","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Herrekt"},"content":"            task \u003d new Todo(taskInArray[2]);","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Herrekt"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Herrekt"},"content":"        case \"D\":","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Herrekt"},"content":"            task \u003d Parser.dateConverter(taskInArray[2], taskInArray[3]);","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"Herrekt"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Herrekt"},"content":"        case \"E\":","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Herrekt"},"content":"            task \u003d new Event(taskInArray[2], taskInArray[3]);","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Herrekt"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Herrekt"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Herrekt"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + taskInArray[0]);","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Herrekt"},"content":"        if (taskInArray[1].equals(\"1\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Herrekt"},"content":"            task.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"Herrekt"},"content":"        return task;","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Herrekt":98}},{"path":"src/main/java/herrekt/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"import herrekt.taskmanager.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"public class Ui {","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"    void printWelcomeMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"        String greeting \u003d \"Hi! I\u0027m Herrick, your task manager.\" + \"\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"                + \"What would you like to add to your timetable?\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"        System.out.println(greeting);","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"    void printFarewellMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Bye. Hope you will complete everything for today!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"    void printNumberOfTasks(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"        if (tasks.getSize() \u003c\u003d 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"            System.out.println(\"For now, you have \"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"                    + tasks.getSize()","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"                    + \" task on the list\");","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"            System.out.println(\"For now, you have \"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"                    + tasks.getSize()","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"                    + \" tasks on the list\");","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"    void printMarkTaskAsDone(int taskNumber, TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"  \" + tasks.getTask(taskNumber - 1).toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Herrekt"},"content":"    void printTaskAlreadyMarkedAsDone(int taskNumber, TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Task has already been marked as done.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Task in question: \" + tasks.getTask(taskNumber - 1).toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Herrekt"},"content":"    void printTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Herrekt"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Herrekt"},"content":"            System.out.println(\"You have no outstanding tasks. Good Job!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Herrekt"},"content":"            System.out.println(\"Here are the tasks in your list:\" + \"\\n\" + tasks.toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"Herrekt"},"content":"    void printMatchingTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"Herrekt"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"Herrekt"},"content":"            System.out.println(\"Couldn\u0027t find any matches\");","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"Herrekt"},"content":"            System.out.println(\"Here are the matching tasks in your list:\" + \"\\n\" + tasks.toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Herrekt"},"content":"    void printTaskDeleted(int taskNumber, TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Herrekt"},"content":"        int index \u003d taskNumber - 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Alright. I\u0027ve removed this task: \"","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Herrekt"},"content":"                + \"\\n\" + \"  \" + tasks.getTask(index).toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Now you have \"","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Herrekt"},"content":"                + (tasks.getSize() - 1)","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Herrekt"},"content":"                + \" tasks left to do\");","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Herrekt"},"content":"    void printLoadingError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"ERROR! Could not locate save.txt.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Herrekt"},"content":"    void printInputBiggerThanTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"ERROR! You only have \" + tasks.getSize() + \" current tasks\");","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Herrekt"},"content":"    void printInvalidInputError(String phrase) {","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"ERROR! Please follow format in README.md\");","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Your input: \" + phrase);","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Herrekt"},"content":"    void printInvalidTaskError(String phrase) {","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"ERROR! What is the task?\");","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Your input: \" + phrase);","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Herrekt"},"content":"    void printIncorrectFormatError(String phrase) {","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"ERROR! I tried to \"","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Herrekt"},"content":"                + \"Please separate deadline/event and time with \u0027/by\u0027 and \u0027/at\u0027 respectively.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Your input: \" + phrase);","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"Herrekt"},"content":"    void printInvalidDateError(String phrase) {","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"ERROR! The deadline date appears to be invalid.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Please use the YYYY-MM-DD format.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Your input: \" + phrase);","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"Herrekt"},"content":"    public void printNoNumericInputError(String phrase) {","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"ERROR! Please input an acceptable number after done/delete command\");","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"Herrekt"},"content":"        System.out.println(\"Your input: \" + phrase);","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Herrekt":100}},{"path":"src/main/java/herrekt/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt.exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"        super(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Herrekt":8}},{"path":"src/main/java/herrekt/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt.exceptions;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"public class InvalidTaskException extends Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"    public InvalidTaskException(String message) {","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"        super(message);","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Herrekt":8}},{"path":"src/main/java/herrekt/exceptions/NoTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt.exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"public class NoTaskException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"    public NoTaskException(String message) {","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"        super(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"Herrekt":8}},{"path":"src/main/java/herrekt/taskmanager/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt.taskmanager;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"public class Deadline\u003cT\u003e extends Task {","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"    protected T date;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"    public Deadline(String description, T date) {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"        if (date instanceof String) {","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"            return (String) date;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"            String month \u003d ((LocalDate) date).getMonth().toString().substring(0,3);","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"            int day \u003d ((LocalDate) date).getDayOfMonth();","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"            int year \u003d ((LocalDate) date).getYear();","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"            return month + \" \" + day + \" \" + year;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"            done \u003d 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Herrekt"},"content":"        return \"D\" + SAVE_FILE_SPACER","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Herrekt"},"content":"                + done + SAVE_FILE_SPACER","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Herrekt"},"content":"                + this.description + SAVE_FILE_SPACER","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Herrekt"},"content":"                + this.date.toString();","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"Herrekt"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Herrekt"},"content":"        return super.description + \" (by: \" + this.getDate() + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Herrekt"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Herrekt"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Herrekt"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getDate() + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Herrekt":44}},{"path":"src/main/java/herrekt/taskmanager/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt.taskmanager;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"    protected String date;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"    public String getDate() {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"        return date;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"            done \u003d 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"        return \"E\" + SAVE_FILE_SPACER","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"                + done + SAVE_FILE_SPACER","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"                + this.description + SAVE_FILE_SPACER","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"                + this.date;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"        return super.description + \" (at: \" + this.getDate() + \")\";","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Herrekt"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Herrekt"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Herrekt"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.getDate() + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Herrekt":35}},{"path":"src/main/java/herrekt/taskmanager/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt.taskmanager;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"    protected final static String SAVE_FILE_SPACER \u003d \" / \";","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"    protected final String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"    Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"    public abstract String toSave();","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"    public abstract String getDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"            return \"[X] \" + this.description;","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"            return \"[ ] \" + this.description;","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Herrekt":32}},{"path":"src/main/java/herrekt/taskmanager/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt.taskmanager;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"import java.util.List;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"public class TaskList {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"        return tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Herrekt"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Herrekt"},"content":"    public void delete(Task task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Herrekt"},"content":"        this.tasks.remove(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Herrekt"},"content":"    public void delete(int taskNumber) {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Herrekt"},"content":"        int index \u003d taskNumber - 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Herrekt"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Herrekt"},"content":"    public boolean markAsDone(int taskNumber) {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Herrekt"},"content":"        int index \u003d taskNumber - 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Herrekt"},"content":"        Task toMark \u003d this.getTask(index);","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Herrekt"},"content":"        if (toMark.isDone()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Herrekt"},"content":"            return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Herrekt"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Herrekt"},"content":"            toMark.setDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Herrekt"},"content":"            return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Herrekt"},"content":"    public StringBuilder convertTaskListToSaveFormat() {","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Herrekt"},"content":"        StringBuilder toSaveToFile \u003d new StringBuilder();","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Herrekt"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++ ) {","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Herrekt"},"content":"            if (i \u003d\u003d this.tasks.size() - 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Herrekt"},"content":"                toSaveToFile.append((this.tasks.get(i)).toSave());","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Herrekt"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Herrekt"},"content":"                toSaveToFile.append((this.tasks.get(i)).toSave());","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Herrekt"},"content":"                toSaveToFile.append(\"\\n\");","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Herrekt"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Herrekt"},"content":"        return toSaveToFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Herrekt"},"content":"    public List\u003cTask\u003e search(String phrase) {","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"Herrekt"},"content":"        List\u003cTask\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"Herrekt"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"Herrekt"},"content":"            if (task.getDescription().contains(phrase)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"Herrekt"},"content":"                results.add(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"Herrekt"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"Herrekt"},"content":"        return results;","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"Herrekt"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"Herrekt"},"content":"    public String toString() {","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"Herrekt"},"content":"        StringBuilder toReturn \u003d new StringBuilder();","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"Herrekt"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"Herrekt"},"content":"            if (i \u003d\u003d tasks.size() - 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"Herrekt"},"content":"                toReturn.append(i + 1)","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"Herrekt"},"content":"                        .append(\". \")","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"Herrekt"},"content":"                        .append(tasks.get(i).toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"Herrekt"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"Herrekt"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"Herrekt"},"content":"            toReturn.append(i + 1)","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"Herrekt"},"content":"                    .append(\". \")","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"Herrekt"},"content":"                    .append(tasks.get(i).toString())","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"Herrekt"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"Herrekt"},"content":"        return toReturn.toString();","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Herrekt":94}},{"path":"src/main/java/herrekt/taskmanager/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"package herrekt.taskmanager;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"    public String toSave() {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"        int done \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"            done \u003d 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"        return \"T\" + SAVE_FILE_SPACER","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"                + done + SAVE_FILE_SPACER","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"                + this.description;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"        return super.description;","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Herrekt"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Herrekt"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Herrekt"},"content":"        return \"[T]\" +  super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Herrekt"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Herrekt"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Herrekt"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Herrekt":29}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Herrekt"},"content":"todo read book","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"Herrekt"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Herrekt"},"content":"event group meeting /at Thursday 4-5pm","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Herrekt"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Herrekt"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Herrekt"},"content":"done 2","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Herrekt"},"content":"list","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"Herrekt"},"content":"done 3","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"Herrekt"},"content":"oh no I forgot to return the book","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"I mean, new deadline return book /by ASAP","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"Herrekt"},"content":"deadline return book /by ASAP","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"Herrekt"},"content":"event pay library fine /at ASAP","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"Herrekt"},"content":"done 4","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"Herrekt"},"content":"done 5","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"Herrekt"},"content":"delete 1","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Herrekt"},"content":"delete 2","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Herrekt"},"content":"todo borrow new book","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Herrekt"},"content":"list","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"Herrekt"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Herrekt":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Herrekt"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\herrekt\\*.java ..\\src\\main\\java\\herrekt\\taskmanager\\*.java ..\\src\\main\\java\\herrekt\\exceptions\\*.java","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Herrekt"},"content":"java -classpath ..\\bin herrekt.Herrekt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Herrekt":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Herrekt"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/herrekt/*.java ../src/main/java/herrekt/tasks/*.java ../src/main/java/herrekt/exceptions/*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Herrekt"},"content":"java -classpath ../bin herrekt.Herrekt \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Herrekt":2,"-":36}}]
