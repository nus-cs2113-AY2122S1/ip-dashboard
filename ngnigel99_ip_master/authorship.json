[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"\u003c!DOCTYPE html lang\u003d\"en\"\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":" \u003cbody\u003e ","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"  \u003cpre\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"____        _        ","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"  \u003c/pre\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" \u003c/body\u003e","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"\u003c/html\u003e","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngnigel99":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"A-UserGuide","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ngnigel99":1,"-":28}},{"path":"src/main/java/Type/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package Type;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"    private String byWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"    public Deadline(String description, String byWhen) {","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public String getByWhen() {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        return byWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public char getType() {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        return \u0027D\u0027;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        return Character.toString(this.getType()) + \u0027|\u0027","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"                + this.description.trim() + \u0027|\u0027","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"                + this.byWhen.trim() + \u0027|\u0027","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"                + this.isDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":25}},{"path":"src/main/java/Type/Divider.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package Type;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Divider to differentiate deadlines, events, todo in user input","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public enum Divider {","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    E(\"/at\"), D(\"/by\");","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    protected String divisor;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    Divider(String divisor) {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        this.divisor \u003d divisor;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public String getDivisor() {","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        return divisor;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ngnigel99":17}},{"path":"src/main/java/Type/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package Type;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"    String atWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"    public Event(String description, String atWhen) {","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"        this.atWhen \u003d atWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public String getAtWhen() {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        return atWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public char getType() {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        return \u0027E\u0027;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        return Character.toString(this.getType()) + \u0027|\u0027","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"                + this.description.trim() + \u0027|\u0027","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"                + this.atWhen.trim() + \u0027|\u0027","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"                + this.isDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":25}},{"path":"src/main/java/Type/Mascot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package Type;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Represents a virtual chatbot to echo user input","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" * References: https://linuxgazette.net/issue67/orr.html","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public class Mascot {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    public static void penguinSay(String say) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"\u003c \" + say + \"  \u003e\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"                \" -----------------------\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"                \"   \\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"                \"    \\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"                \"        .--.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"                \"       |o_o |\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"                \"       |:_/ |\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"                \"      //   \\\\ \\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"                \"     (|     | )\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"                \"    /\u0027\\\\_   _/`\\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"                \"    \\\\___)\u003d(___/\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"                \"                  \");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngnigel99":22}},{"path":"src/main/java/Type/Serializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package Type;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Interface to return the type of all tasks,","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" *  either todo/ deadline/ event","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public interface Serializable {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    char getType();","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":9}},{"path":"src/main/java/Type/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package Type;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.date.DateValidator;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.date.DateValidatorUsingDateFormat;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * Task object, represents a generic task with descriptions and when to complete it by","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public abstract class Task implements Serializable{","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    protected String description;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    protected LocalDate timeOfTask \u003d null;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    protected boolean ValidTime \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        return description;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        return isDone;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * Sets a valid time of a task, only when the following format is followed: YYYY-MM-DD","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     *  Note that this only returns one valid date, on a first-come-first-serve basis","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @param fullUserInput full sentence input by user","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    public void setTime(String fullUserInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        DateValidator validator \u003d new DateValidatorUsingDateFormat(dateFormatter);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        List\u003cString\u003e chunksOfText \u003d Arrays.asList(fullUserInput.split(\" \"));","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        List\u003cString\u003e suitableDate \u003d chunksOfText.stream()","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"                .filter(validator::isValid)","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"                .collect(Collectors.toList())","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"                ;","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        if (!suitableDate.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"            this.timeOfTask \u003d LocalDate.parse(suitableDate.get(0)); //1st date by index","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"great! i\u0027ve recorded a date with the task: \" + this.getDescription() + \" \"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"                                + \"with the date: \" + timeOfTask.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"        this.ValidTime \u003d true;","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":53}},{"path":"src/main/java/Type/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package Type;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    public char getType() {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        return \u0027T\u0027;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"        return Character.toString(this.getType()) + \u0027|\u0027","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"                + this.description.trim() + \u0027|\u0027","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"                + this.isDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":17}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Adds tasks to a list.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eAdd\u003c/code\u003e command can be called with the prefix \u0027add\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public AddCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.ADD);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"adding\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * Executes add functionality - adding tasks to a TaskList task, then writes the data to a file.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * A task can either be a:","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * \u003col\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     *     \u003cli\u003e\u003ccode\u003eevent\u003c/code\u003e\u003c/li\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     *     \u003cli\u003e\u003ccode\u003etodo\u003c/code\u003e\u003c/li\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     *     \u003cli\u003e\u003ccode\u003edeadline\u003c/code\u003e\u003c/li\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     * \u003c/ol\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"     * Additionally, the user would be informed if a \u003ccode\u003eDate\u003c/code\u003e is recorded in user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"     *  For instance, 2020-10-10 would be recognised as Oct 10 2020, and would be recorded as an","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"     *      additional attribute by the program.","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     *  @param tasks TaskList to add tasks to","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        tasks.addTasksToList();","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":40}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.startup.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Command to wave goodbye to user.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" *  * A \u003ccode\u003eBye\u003c/code\u003e command can be called with the prefix \u0027bye\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.BYE);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"... and bye!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        Ui.sayGoodbye();","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":25}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to erase tasks from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" *  * A \u003ccode\u003eClear\u003c/code\u003e command can be called with the prefix \u0027clear\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class ClearCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public ClearCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.CLEAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"clearing list!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * Removes all tasks in TaskList and save file, regardless of done status.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     *  @param tasks TaskList to remove all tasks from","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        tasks.clearTaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * Command to provide basic functions to be overwritten by other specific commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    private CommandPrefix commandPrefix;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public Command(CommandPrefix prefix) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        this.commandPrefix \u003d prefix;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"     * Saves given TaskList to a save file, with filePath represented in Storage.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to be saved.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"            Storage.saveList(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"            System.out.print(\"finished \");","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"IOException, please try again!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * Returns \u003cboolean\u003etrue\u003c/boolean\u003e if user enters \u003ccode\u003estop\u003c/code\u003e command.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * Note that this is only applicable for commands with variable user input,","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     *  rather than commands that only take in the prefix.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * e.g \u003ccode\u003eAdd\u003c/code\u003e command can take in multiple \u003ccode\u003eTask\u003c/code\u003e input,","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     *  however \u003ccode\u003eList\u003c/code\u003e command takes in just the prefix \u0027list\u0027.","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @return isExit STOP command input by user.","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        return isExit;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":48}},{"path":"src/main/java/duke/command/CommandPrefix.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Set of valid prefixes associated with Duke commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public enum CommandPrefix {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    ADD(\"add\"), BYE(\"bye\"), CLEAR(\"clear\"), DELETE(\"delete\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    DONE(\"done\"), ECHO(\"echo\"), LIST(\"list\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    MASCOT(\"mascot\"), OOPSIE(\"oopsie\"), FIND(\"find\"), DATE(\"date\");","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public final String command;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    private CommandPrefix(String command) {","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public String getPrefix() {","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        return this.command;","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":20}},{"path":"src/main/java/duke/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to list tasks with a valid date.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" *  * A \u003ccode\u003eDate\u003c/code\u003e command can be called with the prefix \u0027date\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class DateCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public DateCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.DATE);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"getting date!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    //assume date is given, if not don\u0027t print","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * Prints tasks with a valid date","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to be read","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        tasks.printTasksWithValidDate();","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":32}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to delete tasks from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" *  * A \u003ccode\u003eDelete\u003c/code\u003e command can be called with the prefix \u0027delete\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.DELETE);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"deleting tasks!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * Deletes a set of \u003ccode\u003eTask\u003c/code\u003e from both task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to delete tasks from.","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        tasks.deleteTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":30}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to mark tasks as done from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" *  * A \u003ccode\u003eDone\u003c/code\u003e command can be called with the prefix \u0027done\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public DoneCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.DONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"marking as done!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"     * Mark a set of \u003ccode\u003eTask\u003c/code\u003e as done in both task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to mark tasks as done from","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        tasks.markTasksAsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":29}},{"path":"src/main/java/duke/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.startup.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Command to echo user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" *  * A \u003ccode\u003eEcho\u003c/code\u003e command can be called with the prefix \u0027echo\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class EchoCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public EchoCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.ECHO);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"echoing!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    public static String readInputEchoCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        String command \u003d Ui.readCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"    \" + command);","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        return command;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        readInputEchoCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.startup.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Command to find tasks by keyword from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" *  * A \u003ccode\u003efind\u003c/code\u003e command can be called with the prefix \u0027find\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public FindCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"            super(CommandPrefix.FIND);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"finding\");","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * Returns first case-sensitive word in user input sentence.","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * @return firstKeyword the first word in user input sentence","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public String getKeyWord() {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        String sentence \u003d Ui.readCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        String firstKeyword \u003d sentence.split(\"\",2)[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        return firstKeyword;","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     * Returns all tasks that contain keyword in task description.","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     *  @param tasks TaskList to be read","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        Ui.printOneKeyword();","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        String keyword \u003d getKeyWord();","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMatchingTasksAlert();","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        tasks.getTaskList().stream()","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"            .filter(t -\u003e t.getDescription().contains(keyword))","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"                .forEach(System.out::println);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":46}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to list tasks from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" *  * A \u003ccode\u003eList\u003c/code\u003e command can be called with the prefix \u0027list\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.LIST);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"listing tasks!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"     * Lists all tasks and their attributes","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     *  e.g (Is a task a todo/ event/ deadline, due date, and if task is done)","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to be read","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        tasks.listTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":30}},{"path":"src/main/java/duke/command/MascotCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import Type.Mascot;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.startup.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * Command to have a Mascot echo user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * A Mascot is in fact a Penguin in our method, but can represent other Objects in the near future.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eMascot\u003c/code\u003e command can be called with the prefix \u0027mascot\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"public class MascotCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public MascotCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.MASCOT);","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"saying stuff!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    private static void mascotSay() {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        String text \u003d Ui.readCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        Mascot.penguinSay(text);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        mascotSay();","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":33}},{"path":"src/main/java/duke/command/OopsieCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.exceptionhandler.InputCheckAndPrint;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Default command to inform the user of an incorrect command syntax","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" *  * A \u003ccode\u003eOopsie\u003c/code\u003e command can be called with any prefix that\u0027s NOT in \u003ccode\u003eCommandPrefix\u003c/code\u003e enum.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class OopsieCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public OopsieCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.OOPSIE);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        InputCheckAndPrint.inputFailMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":19}},{"path":"src/main/java/duke/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.data;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import Type.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import Type.Divider;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.startup.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":" * Represents storage functionalities to write task list to a save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object primarily runs on a save file, given by fileName,","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" *  in the directory folderName.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"public class Storage{","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    private static String filePath;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    private static String folderName \u003d \"data/\";","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    private static String fileName \u003d \"list.txt\";","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public Storage(String filePathToInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        filePath \u003d filePathToInput;","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"     * Prints a task array list in easy to parse data format","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     *  format: [TYPE] | [DESC] | [DEADLINE IF EXIST] | [DONE]","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * @param t task to wrangle data from","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * @return","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public static String printTaskAsString(Task t) {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        return t.toString() + \u0027\\n\u0027;","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"     * Saves list to save file","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"     * @param taskList task list to save","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException  if file/ directory not found","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"     *                      - handled by creating new directory/ file if necessary","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    public static void saveList(TaskList taskList) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        checkAndAddDirectory();","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"        File newList \u003d new File(folderName + fileName);","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"        FileWriter fw \u003d new FileWriter(folderName + fileName);","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"        for (Task t : taskList.getTaskList()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"            fw.write(printTaskAsString(t));","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"        fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"     * Returns a task list with attributes of every task, given save file","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"     * format of task per line of save file:","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"     *      [TASK_TYPE] | [DEADLINE IF EXISTS] | [DESCRIPTION] | [DONE]","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"     * @return tasksToRead task list","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"        ArrayList\u003cTask\u003e tasksToRead \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"            checkAndAddDirectory();","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"            Scanner scanList \u003d new Scanner(f);","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"            while (scanList.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"                String readLine \u003d scanList.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"                if (readLine.equals(\"\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"                    break;","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"                addTaskToArray(readLine, tasksToRead);","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"            return tasksToRead;","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, I didn\u0027t find list.txt in /data!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"creating new file...\");","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, Input/ Output exception, returning empty list...\");","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"        } finally {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"            return tasksToRead;","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"     * Parses text to a \u003ccode\u003eTask\u003c/code\u003e with attributes done, type, description etc.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"     * @param readLine line of text to read","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"     * @param taskListToSave    task list to add tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"    private static void addTaskToArray(String readLine, ArrayList\u003cTask\u003e taskListToSave) {","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"        String toCommand \u003d savedDataToCommandFormat(readLine);","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"        Task taskToAdd \u003d Parser.parseInputAsTask(toCommand);","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"        markTaskIfDone(readLine, taskToAdd);","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"        taskListToSave.add(taskToAdd);","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"    private static void markTaskIfDone(String readLine, Task taskToAdd) {","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"        if (readLine.endsWith(\"true\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"            taskToAdd.setDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"    //assume that data is saved in the following manner:","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"    // [TYPE] | [DESC] |  [BY/AT] | [DONE], where 3rd field can be null if its just a \u0027todo\u0027","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"     * Converts save data into simulated user input for easy convertability","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"     *  Note this does not mark the done attribute, which we do in \u003ccode\u003eaddTaskToArray\u003c/code\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"     * @param readLine line of text to read","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"     * @return simulated user input to add a single task","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"    private static String savedDataToCommandFormat(String readLine) {","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"        String[] separateData \u003d readLine.split(\"\\\\|\");","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"        switch (separateData[0]) {","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"        case (\"D\") :","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"            return separateData[1] + Divider.D.getDivisor() + separateData[2];","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"        case (\"E\") :","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"            return separateData[1] + Divider.E.getDivisor() + separateData[2];","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"        default:    //is a todo only","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"            return separateData[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"     * Creates directory if directory folderName is not found.","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException case where directory not found","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"    private static void checkAndAddDirectory() throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"        String home \u003d new File(\"\").getAbsolutePath();","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"        File dirCheck \u003d new File(home + folderName);","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"        if (dirCheck.isDirectory()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"            return;","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Hey, I didn\u0027t find directory \" + folderName);","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"adding \" + folderName + \" into repository...\");","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"        Files.createDirectories(Paths.get(home + folderName));","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ngnigel99":142}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.data;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import Type.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import Type.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import Type.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import duke.exceptionhandler.InputCheckAndPrint;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import duke.startup.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import duke.startup.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":" * Represents a task list. A \u003ccode\u003eTaskList\u003c/code\u003e object simulates the behaviour of a digital list,","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":" *  with the ability of data manipulation and reading.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"public class TaskList {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTaskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        taskList \u003d loadedTaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        return taskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    public static String printTask(Task item) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"        if (item instanceof Deadline) {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"            return \" (by: \" + ((Deadline) item).getByWhen() + \") \";","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        } else if (item instanceof Event) {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"            return \" (at: \" + ((Event) item).getAtWhen() + \") \";","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        return \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"     * Displays list of task to user in easy to read format","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    public void listTasks() {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"        int in \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\" /          / \");","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"            if (item !\u003d null) {","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"                String tick \u003d (item.isDone()) ? \"✓\" : \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"                System.out.println(in + \". \" + \"[\" + item.getType() + \"] \" + \"[\" + tick + \"]\" + \" \" + item.getDescription() + printTask(item));","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"                in++;","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\" /          / \");","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"     * Deletes a set of specific tasks from a list","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"    public void deleteTasks() {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        int lastIndex \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        List\u003cInteger\u003e toDeleteList \u003d new ArrayList\u003cInteger\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"        String[] inputData \u003d input.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"            for (String s : inputData) {","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"                toDeleteList.add(Integer.parseInt(s) - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"            Collections.sort(toDeleteList, Collections.reverseOrder());","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"            for (int i : toDeleteList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"                System.out.println(\"remove \" + (i + 1) + \": \" + taskList.get(i).getDescription());","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"                lastIndex \u003d i;","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"                taskList.remove(i);","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"            InputCheckAndPrint.printNotInRange(lastIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"            InputCheckAndPrint.printIntegerOnly();","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"     * Marks a set of tasks as completed","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"    public void markTasksAsDone() {","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"        int lastIndex \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"            String userInputString \u003d Ui.readCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"            userInputString \u003d userInputString.trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"            String[] numberList \u003d userInputString.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"            System.out.print(\"done \");","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"            for (String i : numberList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"                int index \u003d Integer.parseInt(i) - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"                lastIndex \u003d index;","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"                taskList.get(index).setDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"                System.out.print(taskList.get(index).getDescription() + \", \");","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"\\n / done tasks, good job! / \");","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"            InputCheckAndPrint.printIntegerOnly();","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"            InputCheckAndPrint.printDoneFormat();","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"            InputCheckAndPrint.printNoNull();","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"            InputCheckAndPrint.printNotInRange(lastIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"    public void clearTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"        taskList.clear();","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"    public void addTasksToList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"        String userInput;","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"        do {","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"            userInput \u003d Ui.readCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"        } while (!stopAddTasksCheckDate(userInput));","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Finished adding tasks!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"     * Primarily checks if user enters STOP","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"     *  if not, add tasks with date and respective attributes","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"     * @param userInput sentence with attributes of task","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"     *                  - may include deadlines, date etc.","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"     * @return true if user stops add","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"    public boolean stopAddTasksCheckDate(String userInput) {","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"        if (!userInput.equals(\"stop\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"            Task taskToAdd \u003d Parser.parseInputAsTask(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"            taskToAdd.setTime(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"            taskList.add(taskToAdd);","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"            return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"        return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"    public void printTasksWithValidDate() {","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"ngnigel99"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"ngnigel99"},"content":"            setTimeFromSavedList(t);","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"ngnigel99"},"content":"     * Checks if a valid date is found in a task","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"ngnigel99"},"content":"     * @param t task to check","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"ngnigel99"},"content":"    private void setTimeFromSavedList(Task t) {","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"ngnigel99"},"content":"        t.setTime(t.getDescription());","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"ngnigel99"},"content":"        if (t instanceof Deadline) {","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"ngnigel99"},"content":"            t.setTime(((Deadline) t).getByWhen());","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"ngnigel99"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"ngnigel99"},"content":"            t.setTime(((Event) t).getAtWhen());","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":160}},{"path":"src/main/java/duke/date/DateValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.date;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Checks if a date is valid.","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" * Reference: baeldung.com/java-string-valid-date","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public interface DateValidator {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    boolean isValid(String dateStr);","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":9}},{"path":"src/main/java/duke/date/DateValidatorUsingDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.date;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * Validates a date, formats string into a date","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * Reference: baeldung.com/java-string-valid-date","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"public class DateValidatorUsingDateFormat implements DateValidator {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    private DateTimeFormatter dateFormatter;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public DateValidatorUsingDateFormat(DateTimeFormatter dateFormatter) {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        this.dateFormatter \u003d dateFormatter;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public boolean isValid(String dateStr) {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"            LocalDate.parse(dateStr, this.dateFormatter);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"            return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":27}},{"path":"src/main/java/duke/exceptionhandler/InputCheckAndPrint.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.exceptionhandler;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Print statements to inform the user of correct input","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class InputCheckAndPrint {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    String name;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    public InputCheckAndPrint(String name) {","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public static String cleanUpString(String input) {","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        input \u003d input.trim();","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        input \u003d input.replaceAll(\" \", \"\");","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        return input;","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public static void printNotInRange(int index) {","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"... sorry, task \" + (index + 1) + \" is not in range. Try the \u0027done\u0027 command again!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public static void printDoneFormat() {","lastModifiedDate":"2021-09-08"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Simply type in the task ids, separated by a single whitespace\");","lastModifiedDate":"2021-09-08"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"e.g 1 2 3 4 5\");","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public static void inputFailMessage() {","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"☹ OOPS!!! Please follow the format:\");","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    public static void printNoNull() {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Please do not leave this field blank.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public static void printIntegerOnly() {","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Please only input integers!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ngnigel99":40}},{"path":"src/main/java/duke/security/AccountDetail.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.security;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Experimental authentication layer of Duke,","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * for personalized task lists, styling in future implementations","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class AccountDetail {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    private String username \u003d \"John Doe\";","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    private String password \u003d \"password\";","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public AccountDetail() {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        setupUsernamePassword(in);","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    public void setUsername(String usernameToInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        if (username.isBlank()) {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"            username \u003d \"dukeBot\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"            username \u003d usernameToInput;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public void setPassword(String passwordToInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        if (passwordToInput.isBlank()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"            password \u003d \"bukeDot\";","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"            password \u003d passwordToInput;","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    private void setupUsernamePassword(Scanner in) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"        System.out.print(\"Username [dukeBot]: \");","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"        setUsername(in.nextLine());","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        System.out.print(\"Password [bukeDot]: \");","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        setPassword(in.nextLine());","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    public String getUsername() {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        return username;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngnigel99":44}},{"path":"src/main/java/duke/startup/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.startup;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import duke.security.AccountDetail;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class Duke {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    private AccountDetail accountDetail;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        accountDetail \u003d new AccountDetail();","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public void run(){","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        ui.sayHi(accountDetail.getUsername());","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        do {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"                ui.printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"                c.execute(taskList);","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"                ui.printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        } while (!isExit);","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        new Duke(\"data/list.txt\").run();","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":41}},{"path":"src/main/java/duke/startup/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.startup;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import Type.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import Type.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import Type.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import Type.Todo;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import Type.Divider;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class Parser {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"     * Converts string to Task","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"     * @param userInput user input as string","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"     * @return TaskToAdd task object with respective attributes","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public static Task parseInputAsTask(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        if (inputIsEvent(userInput)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"            Event eventToAdd \u003d parseInputToEvent(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"            return eventToAdd;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        } else if (inputIsDeadline(userInput)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"            Deadline deadlineToAdd \u003d parseInputToDeadline(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"            return deadlineToAdd;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"            Todo todoToAdd \u003d new Todo(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"            return todoToAdd;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    protected static String[] splitInput(String userInput, String divider) {","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        return userInput.split(divider);","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    protected static Event parseInputToEvent(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        String[] eventData \u003d splitInput(userInput, Divider.E.getDivisor());","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"        return new Event(eventData[0], eventData[1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    protected static Deadline parseInputToDeadline(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        String[] deadlineData \u003d splitInput(userInput, Divider.D.getDivisor());","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        return new Deadline(deadlineData[0], deadlineData[1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    protected static boolean inputIsDeadline(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        return userInput.toLowerCase().contains(Divider.D.getDivisor());","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"    protected static boolean inputIsEvent(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"        return userInput.toLowerCase().contains(Divider.E.getDivisor());","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     * Given user input, checks which command to return","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"     *  note only the first word is checked for user input,","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     *      and the keyword can be found in the CommandPrefix enum.","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"     * @param fullCommand   full sentence given by user, separated by new line","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"     * @return  Command command to execute","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"        String stringToRead \u003d fullCommand.trim().toLowerCase();","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        if (stringToRead.startsWith(CommandPrefix.ADD.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"            return new AddCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.BYE.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.CLEAR.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.DELETE.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"            return new DeleteCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.DONE.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"            return new DoneCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.ECHO.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"            return new EchoCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.LIST.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.MASCOT.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"            return new MascotCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.FIND.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"            return new FindCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.DATE.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            return new DateCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"            return new OopsieCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":85}},{"path":"src/main/java/duke/startup/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.startup;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"public class Ui {","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"    public static void printLine() {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"                 ...                 \");","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public static void sayHi(String username) {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Hello \" + username + \"!\" + \"\\n\" + \"I\u0027m Duke\");","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Bye. Hope to see you  again soon!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        printLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public static void printWrongCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Oops, please enter a proper command!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public static void printOneKeyword() {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Please enter one, and only one keyword: \");","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    public static void printMatchingTasksAlert() {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    public static String readCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"        return  in.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"todo","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"borrow book / today","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"add","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"read book","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"add","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"return book / June 6th","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"join sports club","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"event","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"project meeting / Aug 6th 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"todo","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"return book / Sunday","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"event","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"project meeting / Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"done","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"1 3 4 5","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"done","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"2 6 7","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngnigel99":31}},{"path":"text-ui-test/todoexpected.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"Username [dukeBot]: Password [bukeDot]:                  ...                 ","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"Hello dukeBot!","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"I\u0027m Duke","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"What can I do for you?","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"                 ...                 ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"remove task 1, task 3, task 5, task 6, ","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" / done tasks, good job! / ","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" /          / ","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"1. [T] [✓] task 1","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"2. [T] [ ] task 2","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"3. [D] [✓] task 3 (by: 2pm) ","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"4. [D] [ ] task 4 (by: 4pm) ","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"5. [E] [✓] task 5 (at: tommorow) ","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"6. [E] [✓] task 6 (at: day after) ","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":" /          / ","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"                 ...                 ","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"Bye. Hope to see you  again soon!","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"                 ...                 ","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngnigel99":18}},{"path":"text-ui-test/todoinput.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"add","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"task 1","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"task 2","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"todo","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"task 3  / 2pm","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"task 4  / 4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"event","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"task 5 / tommorow","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"task 6 / day after","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"done","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"1 3 5 6","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngnigel99":18}}]
