[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"# Setting up Duke project from source files","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"This is an instruction manual for my brownfield Java project.","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"It\u0027s named after the Java mascot _Duke_. ","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"Given below are instructions on how to use it.","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"Username [dukeBot]: ","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"Password [bukeDot]: ","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"                 ...                 ","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"Hello !","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"I\u0027m Duke","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"What can I do for you?","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"                 ...                 ","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ngnigel99":23,"-":7}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"Welcome to Duke üêß - your personal task manager!","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"Let\u0027s record all your \u0027tasks\u0027 in a \u0027list\u0027!","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"### Feature-Add","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"Adds task to your list","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"### Feature-Deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"Updates a todo to deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"### Feature-Done","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"Marks a set of tasks as done","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"### Feature-Find","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"Return tasks that have matching keywords","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"### Feature-Date","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"Returns tasks that have valid dates","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"### Feature-List","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"Shows you the current list","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"### Feature-Delete","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"Deletes a set of tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"### Feature-Clear","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"Clears your list","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"### Feature-Echo","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"Echo\u0027s your command","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"### Feature-Mascot","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"Have a üêß mascot repeat after you","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"### Feature-Help","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"List all of duke\u0027s command prefixes and brief description","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"### `add` - adds task to list","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"Adds tasks to a list, line by line, stops when `stop` is called","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"A task could either be a :","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"1. todo [T]    - does not have any date recorded","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"1. deadline [D] - contains a due date/ time, mark using `/at`","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"1. event    [E]    - contains the date of event, mark using `/by`","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"Example of usage:","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"add","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"Read books","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"CS2113 Tutorial /by 10am","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"Lunch with friends /at Tommorow 6PM","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"### `todo` - adds a todo to a list","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"Similar to adding a task, but adds one at a time rather than a list","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"todo Nigel submit UG draft /by today 2359","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"### `event` - adds a event to a list","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"Similar to adding a task, but adds one at a time rather than a list","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"event Nigel attend CS2113 lecture Friday Sep 2021 /at 4 - 6pm","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"### `deadline` - updates deadline for a todo","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"Modifies a todo into a deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"Format: [INDEX] [DEADLINE]","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"Examples of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"3 today 6pm","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"### `done` - marks tasks as done","lastModifiedDate":"2021-09-24"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"Marks a set of tasks as done, read in one line","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"done","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"1 2","lastModifiedDate":"2021-09-24"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"Tasks marked as done, descriptions indicated to user","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"done Read books, CS2113 Tutorial ,","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":" / done tasks, good job! /","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"finished marking as done!","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"### `find` - find tasks ","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"find tasks with matching keyword","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"Example of usage:","lastModifiedDate":"2021-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"find","lastModifiedDate":"2021-09-24"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"book","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"tasks with matching description returned,","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"as well as status of task","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"Here are the matching tasks in your list: ","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"[T] [‚úì] Read books","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"finished finding","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"### `date` - finds tasks with valid date given","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":144,"author":{"gitId":"ngnigel99"},"content":"Display tasks with matching date.","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"ngnigel99"},"content":"Note that if no valid date is added with a task , the task is tagged with ","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"ngnigel99"},"content":" default date 1999-11-30.","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":149,"author":{"gitId":"ngnigel99"},"content":"Example of usage:","lastModifiedDate":"2021-09-24"},{"lineNumber":150,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"ngnigel99"},"content":"date","lastModifiedDate":"2021-09-24"},{"lineNumber":153,"author":{"gitId":"ngnigel99"},"content":"1999-11-30","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"ngnigel99"},"content":"Display tasks with matching date","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"ngnigel99"},"content":"I found the following tasks:","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"ngnigel99"},"content":"movie ","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"ngnigel99"},"content":"with the given date: 1969-04-20","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"ngnigel99"},"content":"finished getting date!","lastModifiedDate":"2021-09-24"},{"lineNumber":164,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":165,"author":{"gitId":"ngnigel99"},"content":"### `list` - display list","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"ngnigel99"},"content":"Display list of tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"ngnigel99"},"content":"Example of usage:","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":174,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-24"},{"lineNumber":175,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":176,"author":{"gitId":"ngnigel99"},"content":"list displayed, along with status of task","lastModifiedDate":"2021-09-24"},{"lineNumber":177,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":179,"author":{"gitId":"ngnigel99"},"content":" /          / ","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"ngnigel99"},"content":"1. [T] [‚úì] Read books","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"ngnigel99"},"content":"2. [D] [‚úì] CS2113 Tutorial  (by:  10am) ","lastModifiedDate":"2021-09-24"},{"lineNumber":182,"author":{"gitId":"ngnigel99"},"content":"3. [E] [ ] Lunch with friends  (at:  Tommorow 6PM) ","lastModifiedDate":"2021-09-24"},{"lineNumber":183,"author":{"gitId":"ngnigel99"},"content":" /          / ","lastModifiedDate":"2021-09-24"},{"lineNumber":184,"author":{"gitId":"ngnigel99"},"content":"finished listing tasks!","lastModifiedDate":"2021-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":186,"author":{"gitId":"ngnigel99"},"content":"### `delete` - delete tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":187,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":188,"author":{"gitId":"ngnigel99"},"content":"Delete tasks from list","lastModifiedDate":"2021-09-24"},{"lineNumber":189,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":190,"author":{"gitId":"ngnigel99"},"content":"Example of usage:","lastModifiedDate":"2021-09-24"},{"lineNumber":191,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":193,"author":{"gitId":"ngnigel99"},"content":"delete","lastModifiedDate":"2021-09-24"},{"lineNumber":194,"author":{"gitId":"ngnigel99"},"content":"1 3","lastModifiedDate":"2021-09-24"},{"lineNumber":195,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":196,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-24"},{"lineNumber":197,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":198,"author":{"gitId":"ngnigel99"},"content":"Delete set of tasks with respective index","lastModifiedDate":"2021-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":200,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":201,"author":{"gitId":"ngnigel99"},"content":"remove 3: Lunch with friends ","lastModifiedDate":"2021-09-24"},{"lineNumber":202,"author":{"gitId":"ngnigel99"},"content":"remove 1: Read books","lastModifiedDate":"2021-09-24"},{"lineNumber":203,"author":{"gitId":"ngnigel99"},"content":"finished deleting tasks!","lastModifiedDate":"2021-09-24"},{"lineNumber":204,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":205,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":206,"author":{"gitId":"ngnigel99"},"content":"### `clear` - clear all tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":207,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":208,"author":{"gitId":"ngnigel99"},"content":"Clears list","lastModifiedDate":"2021-09-24"},{"lineNumber":209,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":210,"author":{"gitId":"ngnigel99"},"content":"Example of usage:","lastModifiedDate":"2021-09-24"},{"lineNumber":211,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":213,"author":{"gitId":"ngnigel99"},"content":"clear","lastModifiedDate":"2021-09-24"},{"lineNumber":214,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":215,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-24"},{"lineNumber":216,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":217,"author":{"gitId":"ngnigel99"},"content":"Output clear message","lastModifiedDate":"2021-09-24"},{"lineNumber":218,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":219,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":220,"author":{"gitId":"ngnigel99"},"content":"finished clearing list!","lastModifiedDate":"2021-09-24"},{"lineNumber":221,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":222,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":223,"author":{"gitId":"ngnigel99"},"content":"### `echo` - echo input","lastModifiedDate":"2021-09-24"},{"lineNumber":224,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":225,"author":{"gitId":"ngnigel99"},"content":"repeat anything said","lastModifiedDate":"2021-09-24"},{"lineNumber":226,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":227,"author":{"gitId":"ngnigel99"},"content":"Example of usage:","lastModifiedDate":"2021-09-24"},{"lineNumber":228,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":230,"author":{"gitId":"ngnigel99"},"content":"echo","lastModifiedDate":"2021-09-24"},{"lineNumber":231,"author":{"gitId":"ngnigel99"},"content":"hello world","lastModifiedDate":"2021-09-24"},{"lineNumber":232,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":235,"author":{"gitId":"ngnigel99"},"content":"repeats input","lastModifiedDate":"2021-09-24"},{"lineNumber":236,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":238,"author":{"gitId":"ngnigel99"},"content":"    hello world","lastModifiedDate":"2021-09-24"},{"lineNumber":239,"author":{"gitId":"ngnigel99"},"content":"finished echoing!","lastModifiedDate":"2021-09-24"},{"lineNumber":240,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":241,"author":{"gitId":"ngnigel99"},"content":"### `mascot` - echo, but \u0027cooler\u0027 üêß","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":243,"author":{"gitId":"ngnigel99"},"content":"üêß repeats input","lastModifiedDate":"2021-09-29"},{"lineNumber":244,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":245,"author":{"gitId":"ngnigel99"},"content":"Example of usage:","lastModifiedDate":"2021-09-24"},{"lineNumber":246,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":247,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":248,"author":{"gitId":"ngnigel99"},"content":"mascot","lastModifiedDate":"2021-09-24"},{"lineNumber":249,"author":{"gitId":"ngnigel99"},"content":"hello world","lastModifiedDate":"2021-09-24"},{"lineNumber":250,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":251,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-24"},{"lineNumber":252,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":253,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":254,"author":{"gitId":"ngnigel99"},"content":"\u003c hello world  \u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":255,"author":{"gitId":"ngnigel99"},"content":" -----------------------","lastModifiedDate":"2021-09-24"},{"lineNumber":256,"author":{"gitId":"ngnigel99"},"content":"   \\","lastModifiedDate":"2021-09-24"},{"lineNumber":257,"author":{"gitId":"ngnigel99"},"content":"    \\","lastModifiedDate":"2021-09-24"},{"lineNumber":258,"author":{"gitId":"ngnigel99"},"content":"        .--.","lastModifiedDate":"2021-09-24"},{"lineNumber":259,"author":{"gitId":"ngnigel99"},"content":"       |o_o |","lastModifiedDate":"2021-09-24"},{"lineNumber":260,"author":{"gitId":"ngnigel99"},"content":"       |:_/ |","lastModifiedDate":"2021-09-24"},{"lineNumber":261,"author":{"gitId":"ngnigel99"},"content":"      //   \\ \\","lastModifiedDate":"2021-09-24"},{"lineNumber":262,"author":{"gitId":"ngnigel99"},"content":"     (|     | )","lastModifiedDate":"2021-09-24"},{"lineNumber":263,"author":{"gitId":"ngnigel99"},"content":"    /\u0027\\_   _/`\\","lastModifiedDate":"2021-09-24"},{"lineNumber":264,"author":{"gitId":"ngnigel99"},"content":"    \\___)\u003d(___/","lastModifiedDate":"2021-09-24"},{"lineNumber":265,"author":{"gitId":"ngnigel99"},"content":"                  ","lastModifiedDate":"2021-09-24"},{"lineNumber":266,"author":{"gitId":"ngnigel99"},"content":"finished saying stuff!","lastModifiedDate":"2021-09-24"},{"lineNumber":267,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":268,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"ngnigel99"},"content":"### `help` - list all of Duke\u0027s features","lastModifiedDate":"2021-09-29"},{"lineNumber":270,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":271,"author":{"gitId":"ngnigel99"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":273,"author":{"gitId":"ngnigel99"},"content":"help","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"ngnigel99"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"ngnigel99"},"content":"all features listed with command prefix, followed by description","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"ngnigel99"},"content":"add : add tasks to list","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"ngnigel99"},"content":" .. More features ..","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"ngnigel99"},"content":"help : prints feature list","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"ngnigel99"},"content":"```","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"ngnigel99":258,"-":25}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Adds tasks to a list.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eAdd\u003c/code\u003e command can be called with the prefix \u0027add\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public AddCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.ADD);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"adding\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * Executes add functionality - adding tasks to a TaskList task, then writes the data to a file.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * A task can either be a todo, deadline or event","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * Additionally, the user would be informed if a \u003ccode\u003eDate\u003c/code\u003e is recorded in user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     * For instance, 2020-10-10 would be recognised as Oct 10 2020, and would be recorded as an","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     * additional attribute by the program.","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to add tasks to","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        tasks.addTasksToList();","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":35}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Command to wave goodbye to user.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eBye\u003c/code\u003e command can be called with the prefix \u0027bye\u0027 in Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public ByeCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.BYE);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"... and bye!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        Ui.sayGoodbye();","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        this.setExit(true);","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":28}},{"path":"src/main/java/duke/command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to erase tasks from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * * A \u003ccode\u003eClear\u003c/code\u003e command can be called with the prefix \u0027clear\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public ClearCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.CLEAR);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"clearing list!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * Removes all tasks in TaskList and save file, regardless of done status.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to remove all tasks from","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        tasks.clearTaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":30}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * Command to provide basic functions to be overwritten by other specific commands.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public Command(CommandPrefix prefix) {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"     * Saves given TaskList to a save file, with filePath represented in Storage.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to be saved.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"            Storage.saveList(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"            System.out.print(\"finished \");","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"IOException, please restart Duke!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"     * Returns true if user enters \u003ccode\u003estop\u003c/code\u003e command.","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * Note that this is only applicable for commands with variable user input,","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * rather than commands that only take in the prefix.","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     * \u003cp\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * e.g \u003ccode\u003eAdd\u003c/code\u003e command can take in multiple \u003ccode\u003eTask\u003c/code\u003e input,","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * however \u003ccode\u003eList\u003c/code\u003e command takes in just the prefix \u0027list\u0027.","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @return isExit STOP command input by user.","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        return isExit;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    public void setExit(boolean exit) {","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        this.isExit \u003d exit;","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"    public abstract void execute(TaskList tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":51}},{"path":"src/main/java/duke/command/CommandPrefix.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Set of valid prefixes and descriptions associated with Duke commands.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" * Descriptions are included for an easy-to-read view for \u003ccode\u003eHelp\u003c/code\u003e command","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public enum CommandPrefix {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    ADD(\"add\", \"add tasks to list\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    BYE(\"bye\", \"close Duke\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    CLEAR(\"clear\", \"clear list\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    DATE(\"date\", \"search tasks with matching date\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    DEADLINE(\"deadline\", \"adds a deadline to a todo\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    DELETE(\"delete\", \"delete tasks from list\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    DONE(\"done\", \"mark task as done\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    ECHO(\"echo\", \"echo input\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    EVENT(\"event\", \"adds events to list\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    FIND(\"find\", \"find tasks with matching keyword\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    HELP(\"help\", \"prints feature list\"),","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    LIST(\"list\", \"print current list\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    MASCOT(\"mascot\", \"echo, but funnier\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    OOPSIE(\"oopsie\", \"\"),","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    TODO(\"todo\", \"adds todos to list\");","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    public final String command;","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    public final String description;","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    CommandPrefix(String command, String description) {","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    public String getPrefix() {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        return this.command;","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        return this.description;","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":39}},{"path":"src/main/java/duke/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * Command to list tasks with a valid date.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" * * A \u003ccode\u003eDate\u003c/code\u003e command can be called with the prefix \u0027date\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public DateCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.DATE);","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"getting date!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     * Prints tasks found that have the same valid date input","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"     * note that this logically applies to events/ deadlines rather than todo","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to be read","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        LocalDate dateGiven \u003d null;","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"            dateGiven \u003d Ui.getDate();","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Please enter a valid date!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"            Ui.printDateFormat();","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        tasks.printTasksWithGivenDate(dateGiven);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":42}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Deadline;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * Command to add a deadline to a todo","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public DeadlineCommand() {","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.DEADLINE);","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"adding deadline!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * Adds a deadline to a todo","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks task list","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        String userInput \u003d Ui.readLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        String[] formattedInput \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        int indexToModify \u003d 0;","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"            indexToModify \u003d readIndexAndModifyTask(tasks, userInput, formattedInput);","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"            saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"            Ui.printNotInRange(indexToModify);","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"            Ui.printDeadlineFormat();","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"            Ui.printIntegerOnly();","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"            Ui.printDeadlineFormat();","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"     * Modifies a \u003ccode\u003etodo\u003c/code\u003e into a \u003ccode\u003edeadline\u003c/code\u003e with a byWhen attribute","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks          task list to modify","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"     * @param userInput      user input in the format [INDEX] [DEADLINE]","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"     * @param formattedInput input separated by index, deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"     * @return indexToModify to indicate if index input is out of range to user","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"    private int readIndexAndModifyTask(TaskList tasks, String userInput, String[] formattedInput) {","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"        int indexToModify \u003d Integer.parseInt(formattedInput[0]) - 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"        String deadlineToInclude \u003d Ui.stringWithoutFirstWord(userInput);","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        Deadline updatedTask \u003d new Deadline(tasks.getTaskList().get(indexToModify).getDescription(), deadlineToInclude);","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"        tasks.getTaskList().set(indexToModify, updatedTask);","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        return indexToModify;","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"ngnigel99":58}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to delete tasks from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eDelete\u003c/code\u003e command can be called with the prefix \u0027delete\u0027 in Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public DeleteCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.DELETE);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"deleting tasks!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * Deletes a set of \u003ccode\u003eTask\u003c/code\u003e from both task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to delete tasks from.","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        tasks.deleteTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":31}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to mark tasks as done from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eDone\u003c/code\u003e command can be called with the prefix \u0027done\u0027 in Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public DoneCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.DONE);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"marking as done!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * Mark a set of \u003ccode\u003eTask\u003c/code\u003e as done in both task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to mark tasks as done from","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        tasks.markTasksAsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":30}},{"path":"src/main/java/duke/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Command to echo user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eEcho\u003c/code\u003e command can be called with the prefix \u0027echo\u0027 in Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public EchoCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.ECHO);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public static void readInputAndEcho() {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        String command \u003d Ui.readLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"    \" + command);","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"echoing!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        readInputAndEcho();","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":31}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Divider;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * An event command is a simplified version of the add command","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eEvent\u003c/code\u003e command can be called with the prefix \u0027event\u0027 in Duke.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    public EventCommand() {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.EVENT);","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        readLineAndAddEvent(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    private void readLineAndAddEvent(TaskList tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        String userInput \u003d Ui.readLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        Ui.printIfDividerNotFound(userInput, Divider.E);","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        tasks.addTaskCheckDate(userInput);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ngnigel99":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Command to find tasks by keyword from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003efind\u003c/code\u003e command can be called with the prefix \u0027find\u0027 in Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public FindCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.FIND);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"finding\");","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * Returns first case-sensitive word in user input sentence.","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * @return firstKeyword the first word in user input sentence","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public String getKeyWord() {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        String sentence \u003d Ui.readLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        String firstKeyword \u003d sentence.split(\"\", 2)[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        return firstKeyword;","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * Returns all tasks that contain keyword in task description.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to be read","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        Ui.printOneKeyword();","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        String keyword \u003d getKeyWord();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        Ui.printMatchingTasksAlert();","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        tasks.getTaskList().stream()","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"                .filter(t -\u003e t.getDescription().contains(keyword))","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"                .forEach(t -\u003e Ui.printTaskNeatly(t));","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":47}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to list all of Duke\u0027s features","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eHelp\u003c/code\u003e command can be called with the prefix \u0027help\u0027 in Duke.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public HelpCommand() {","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.HELP);","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"printing features\");","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    public void printFeatures() {","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        for (CommandPrefix f : CommandPrefix.values()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"            //Oopsie is left as a default command and thus not reflected","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"            if (!f.getPrefix().equals(CommandPrefix.OOPSIE.getPrefix())) {","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"                System.out.print(f.getPrefix() + \" : \" + f.getDescription());","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"                System.out.println(\"\\n\");","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        printFeatures();","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"ngnigel99":35}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Command to list tasks from both the task list and save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eList\u003c/code\u003e command can be called with the prefix \u0027list\u0027 in Duke.","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.LIST);","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"listing tasks!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"     * Lists all tasks and their attributes","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"     * e.g (Is a task a todo/ event/ deadline, due date, and if task is done)","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"     * @param tasks TaskList to be read","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        tasks.listTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":31}},{"path":"src/main/java/duke/command/MascotCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Mascot;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * Command to have a Mascot echo user input.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * A Mascot is in fact a Penguin in our method, but can represent other Objects in the near future.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eMascot\u003c/code\u003e command can be called with the prefix \u0027mascot\u0027 in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"public class MascotCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public MascotCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.MASCOT);","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    private static void mascotSay() {","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        String text \u003d Ui.readLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        Mascot.penguinSay(text);","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"saying stuff!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        mascotSay();","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":33}},{"path":"src/main/java/duke/command/OopsieCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * Default command to inform the user of an incorrect command syntax","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eOopsie\u003c/code\u003e command can be called with any prefix that\u0027s NOT in \u003ccode\u003eCommandPrefix\u003c/code\u003e enum.","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class OopsieCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public OopsieCommand() {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.OOPSIE);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        Ui.inputFailMessage();","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":19}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * An todo command is a simplified version of the add command","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eTodo\u003c/code\u003e command can be called with the prefix \u0027todo\u0027 in Duke.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public TodoCommand() {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        super(CommandPrefix.TODO);","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    public void saveListAndPrintDone(TaskList tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        super.saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    public void execute(TaskList tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        readLineAndAddTodo(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        saveListAndPrintDone(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    private void readLineAndAddTodo(TaskList tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        String userInput \u003d Ui.readLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        tasks.addTaskCheckDate(userInput);","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ngnigel99":30}},{"path":"src/main/java/duke/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.data;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.startup.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Divider;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Task;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":" * Represents storage functionalities to write task list to a save file.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":" * A \u003ccode\u003eStorage\u003c/code\u003e object primarily runs on a save file, given by fileName,","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":" * in the directory folderName.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"public class Storage {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    private static final String STORAGE_DIVISOR \u003d \"\\\\|\";","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"    private static final String folderName \u003d \"data/\";","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    private static final String fileName \u003d \"list.txt\";","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    private static String filePath;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"    public Storage(String filePathToInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        filePath \u003d filePathToInput;","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"     * Prints a task array list in easy to parse data format","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"     * format: [TYPE] | [DESC] | [DEADLINE IF EXIST] | [DONE]","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * @param t task to wrangle data from","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * @return","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    public static String printTaskAsString(Task t) {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        return t.toString() + \u0027\\n\u0027;","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"     * Saves list to save file","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"     * @param taskList task list to save","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException if file/ directory not found","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"     *                     - handled by creating new directory/ file if necessary","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"    public static void saveList(TaskList taskList) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"        checkAndAddDirectory();","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"        File newList \u003d new File(folderName + fileName);","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"        FileWriter fw \u003d new FileWriter(folderName + fileName);","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        for (Task t : taskList.getTaskList()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"            fw.write(printTaskAsString(t));","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"        fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"     * Returns a task list with attributes of every task, given save file","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"     * format of task per line of save file:","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"     * [TASK_TYPE] | [DEADLINE IF EXISTS] | [DESCRIPTION] | [DONE]","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"     * @return tasksToRead task list","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"    public static ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"        ArrayList\u003cTask\u003e tasksToRead \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"            checkAndAddDirectory();","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"            Scanner scanList \u003d new Scanner(f);","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"            while (scanList.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"                String readLine \u003d scanList.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"                if (readLine.equals(\"\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"                    break;","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"                addTaskToArray(readLine, tasksToRead);","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            return tasksToRead;","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, I didn\u0027t find list.txt in /data!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"creating new file...\");","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"Hey, Input/ Output exception, returning empty list...\");","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"        } finally {","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"            return tasksToRead;","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"     * Parses text to a \u003ccode\u003eTask\u003c/code\u003e with attributes done, type, description etc.","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"     * @param readLine       line of text to read","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"     * @param taskListToSave task list to add tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"    private static void addTaskToArray(String readLine, ArrayList\u003cTask\u003e taskListToSave) {","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"        String toCommand \u003d savedDataToCommandFormat(readLine);","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"        Task taskToAdd \u003d Parser.parseInputAsTask(toCommand);","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"        markTaskIfDone(readLine, taskToAdd);","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"        taskListToSave.add(taskToAdd);","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"    private static void markTaskIfDone(String readLine, Task taskToAdd) {","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"        if (readLine.endsWith(\"true\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"            taskToAdd.setDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"    //assume that data is saved in the following manner:","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"    // [TYPE] | [DESC] |  [BY/AT] | [DONE], where 3rd field can be null if its just a \u0027todo\u0027","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"     * Converts save data into simulated user input for easy convertability","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"     * Note this does not mark the done attribute, which we do in \u003ccode\u003eaddTaskToArray\u003c/code\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"     * @param readLine line of text to read","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"     * @return simulated user input to add a single task","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"    private static String savedDataToCommandFormat(String readLine) {","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"        String[] separateData \u003d readLine.split(STORAGE_DIVISOR);","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"        switch (separateData[0]) {","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"        case (\"D\"):","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"            return separateData[1] + Divider.D.getDivisor() + separateData[2];","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"        case (\"E\"):","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"            return separateData[1] + Divider.E.getDivisor() + separateData[2];","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"        default:    //is a todo","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"            return separateData[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"     * Creates directory if directory folderName is not found.","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"     * @throws IOException case where directory not found","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"    private static void checkAndAddDirectory() throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"        String home \u003d new File(\"\").getAbsolutePath() + \u0027/\u0027;","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"ngnigel99"},"content":"        File dirCheck \u003d new File(home + folderName);","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"        if (dirCheck.isDirectory()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"ngnigel99"},"content":"            return;","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Hey, I didn\u0027t find directory \" + folderName);","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"adding \" + folderName + \" into repository...\");","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"ngnigel99"},"content":"        Files.createDirectories(Paths.get(home + folderName));","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ngnigel99":150}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.data;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.startup.Parser;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Deadline;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Event;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Task;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"import static java.util.stream.Collectors.toList;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":" * Represents a task list. A \u003ccode\u003eTaskList\u003c/code\u003e object simulates the behaviour of a digital list,","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":" * with the ability of data manipulation and reading.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"public class TaskList {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadedTaskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        taskList \u003d loadedTaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    public static String getTaskDate(Task item) {","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"        if (item instanceof Deadline) {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"            return \" (by: \" + ((Deadline) item).getByWhen() + \") \";","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        } else if (item instanceof Event) {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"            return \" (at: \" + ((Event) item).getAtWhen() + \") \";","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        return \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    private static void printIndexAndTask(int in, Task item) {","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        String doneSymbol \u003d (item.isDone()) ? Ui.DONE_SYMBOL : \" \";","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(in + \". \" + \"[\" + item.getType() + \"] \" + \"[\" + doneSymbol + \"]\" + \" \" + item.getDescription() + getTaskDate(item));","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"        return taskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     * Displays list of task to user in easy to read format","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"    public void listTasks() {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"        int in \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"        Ui.printDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"        for (Task item : taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"            if (item !\u003d null) {","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"                printIndexAndTask(in, item);","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"                in++;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"        Ui.printDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"     * Deletes a set of specific tasks from a list","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"    public void deleteTasks() {","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"        int lastIndex \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"        List\u003cInteger\u003e toDeleteList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"        String[] inputData \u003d input.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"            for (String s : inputData) {","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"                toDeleteList.add(Integer.parseInt(s) - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            Collections.sort(toDeleteList, Collections.reverseOrder());","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"            for (int i : toDeleteList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"                System.out.println(\"remove \" + (i + 1) + \": \" + taskList.get(i).getDescription());","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"                lastIndex \u003d i;","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"                taskList.remove(i);","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"            Ui.printNotInRange(lastIndex);","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"            Ui.printIntegerOnly();","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"     * Marks a set of tasks as completed","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"    public void markTasksAsDone() {","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"        int lastIndex \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"            String userInputString \u003d Ui.readLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"            userInputString \u003d userInputString.trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"            String[] numberList \u003d userInputString.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"            System.out.print(\"done \");","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"            for (String i : numberList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"                int index \u003d Integer.parseInt(i) - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"                lastIndex \u003d index;","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"                taskList.get(index).setDone(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"                System.out.print(taskList.get(index).getDescription() + \", \");","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"            Ui.printDoneMessage();","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"            Ui.printIntegerOnly();","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"            Ui.printDoneFormat();","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"            Ui.printNoNull();","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"            Ui.printNotInRange(lastIndex);","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"    public void clearTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"        taskList.clear();","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"ngnigel99"},"content":"     * Adds tasks to a list, while checking if a date exists within input","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"ngnigel99"},"content":"    public void addTasksToList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"ngnigel99"},"content":"        String userInput \u003d Ui.readLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"ngnigel99"},"content":"        while (!Ui.isStop(userInput)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"ngnigel99"},"content":"            addTaskCheckDate(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"ngnigel99"},"content":"            userInput \u003d Ui.readLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"ngnigel99"},"content":"     * Checks if a date is found in user input","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"ngnigel99"},"content":"     * if found, add to timeOfTask variable in task, ignore otherwise.","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"ngnigel99"},"content":"     * @param userInput user input","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"ngnigel99"},"content":"    public void addTaskCheckDate(String userInput) {","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"ngnigel99"},"content":"        Task taskToAdd \u003d Parser.parseInputAsTask(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"ngnigel99"},"content":"        taskToAdd.setTime(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"ngnigel99"},"content":"        taskList.add(taskToAdd);","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"ngnigel99"},"content":"     * Prints valid tasks with date input","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"ngnigel99"},"content":"     * @param dateGiven date to search tasks with","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"ngnigel99"},"content":"    public void printTasksWithGivenDate(LocalDate dateGiven) {","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"ngnigel99"},"content":"        List\u003cTask\u003e tasksFound \u003d","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"ngnigel99"},"content":"                taskList.stream()","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"ngnigel99"},"content":"                        .filter(t -\u003e t.getTaskDate().equals(dateGiven))","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"ngnigel99"},"content":"                        .collect(toList());","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"ngnigel99"},"content":"        if (tasksFound.isEmpty()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"No task with date \" + dateGiven + \" found!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"I found the following tasks:\");","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"ngnigel99"},"content":"            taskList.stream()","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"ngnigel99"},"content":"                    .map(t -\u003e t.getDescription())","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"ngnigel99"},"content":"                    .forEach(t -\u003e System.out.println(t));","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"with the given date: \" + dateGiven.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":169}},{"path":"src/main/java/duke/date/DateValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.date;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Checks if a date is valid.","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" * Reference: baeldung.com/java-string-valid-date","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public interface DateValidator {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    boolean isValid(String dateStr);","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":9}},{"path":"src/main/java/duke/date/DateValidatorUsingDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.date;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" * Validates a date, formats string into a date","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":" * Reference: baeldung.com/java-string-valid-date","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"public class DateValidatorUsingDateFormat implements DateValidator {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    private final DateTimeFormatter dateFormatter;","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"    public DateValidatorUsingDateFormat(DateTimeFormatter dateFormatter) {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        this.dateFormatter \u003d dateFormatter;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public boolean isValid(String dateStr) {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"            LocalDate.parse(dateStr, this.dateFormatter);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"            return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":27}},{"path":"src/main/java/duke/security/AccountDetail.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.security;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" * Experimental authentication layer of Duke,","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":" * for personalized task lists, styling in future implementations","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class AccountDetail {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    private String username \u003d \"John Doe\";","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    public AccountDetail() {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        setupUsernamePassword(in);","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    public void setPassword(String passwordToInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"        String password \u003d \"password\";","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"        if (passwordToInput.isBlank()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"            password \u003d \"bukeDot\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"            password \u003d passwordToInput;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    private void setupUsernamePassword(Scanner in) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        System.out.print(\"Username [dukeBot]: \");","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"        setUsername(in.nextLine());","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        System.out.print(\"Password [bukeDot]: \");","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        setPassword(in.nextLine());","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    public String getUsername() {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        return username;","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"    public void setUsername(String usernameToInput) {","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        if (username.isBlank()) {","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"            username \u003d \"dukeBot\";","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"            username \u003d usernameToInput;","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngnigel99":44}},{"path":"src/main/java/duke/startup/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.startup;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import duke.security.AccountDetail;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"public class Duke {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    private final AccountDetail accountDetail;","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        accountDetail \u003d new AccountDetail();","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        taskList \u003d new TaskList(Storage.load());","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        new Duke(\"data/list.txt\").run();","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    public void run() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        Ui.sayHi(accountDetail.getUsername());","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        do {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"            String fullCommand \u003d Ui.readLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"            Ui.printLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"            c.execute(taskList);","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"            Ui.printLine();","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"        } while (!isExit);","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":38}},{"path":"src/main/java/duke/startup/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.startup;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.type.*;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public class Parser {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"     * Converts string to Task","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"     * @param userInput user input as string","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"     * @return TaskToAdd task object with respective attributes","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public static Task parseInputAsTask(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        if (inputIsEvent(userInput)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"            Event eventToAdd \u003d parseInputToEvent(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"            return eventToAdd;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"        } else if (inputIsDeadline(userInput)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"            Deadline deadlineToAdd \u003d parseInputToDeadline(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"            return deadlineToAdd;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"            Todo todoToAdd \u003d new Todo(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"            return todoToAdd;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    protected static String[] splitInput(String userInput, String divider) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        return userInput.split(divider);","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    protected static Event parseInputToEvent(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        String[] eventData \u003d splitInput(userInput, Divider.E.getDivisor());","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        return new Event(eventData[0], eventData[1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    protected static Deadline parseInputToDeadline(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"        String[] deadlineData \u003d splitInput(userInput, Divider.D.getDivisor());","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        return new Deadline(deadlineData[0], deadlineData[1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"    protected static boolean inputIsDeadline(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"        return userInput.toLowerCase().contains(Divider.D.getDivisor());","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"    protected static boolean inputIsEvent(String userInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        return userInput.toLowerCase().contains(Divider.E.getDivisor());","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"     * Given user input, checks which command to return","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"     * note only the first word is checked for user input,","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"     * and the keyword can be found in the CommandPrefix enum.","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"     * @param fullCommand full sentence given by user, separated by new line","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     * @return Command command to execute","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"        String stringToRead \u003d fullCommand.trim().toLowerCase();","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"        if (stringToRead.startsWith(CommandPrefix.ADD.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"            return new AddCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.BYE.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.CLEAR.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.DELETE.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"            return new DeleteCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.DONE.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"            return new DoneCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.ECHO.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"            return new EchoCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.LIST.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.MASCOT.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"            return new MascotCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.FIND.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"            return new FindCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.DATE.getPrefix())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"            return new DateCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.HELP.getPrefix())) {","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.DEADLINE.getPrefix())) {","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"            return new DeadlineCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.EVENT.getPrefix())) {","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"            return new EventCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"        } else if (stringToRead.startsWith(CommandPrefix.TODO.getPrefix())) {","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"            return new TodoCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"            return new OopsieCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"ngnigel99":91}},{"path":"src/main/java/duke/type/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.type;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"    private final String byWhen;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"    public Deadline(String description, String byWhen) {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public String getByWhen() {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        return byWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public char getType() {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        return \u0027D\u0027;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        return this.getType() + Divider.PRINT_BLOCK.getDivisor()","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"                + this.description.trim() + Divider.PRINT_BLOCK.getDivisor()","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"                + this.byWhen.trim() + Divider.PRINT_BLOCK.getDivisor()","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"                + this.isDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":26}},{"path":"src/main/java/duke/type/Divider.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.type;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Divider to differentiate deadlines, events, todo in user input","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"public enum Divider {","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"    E(\"/at\"), D(\"/by\"), PRINT_BLOCK(\"|\");","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    protected final String divisor;","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    Divider(String divisor) {","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        this.divisor \u003d divisor;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public String getDivisor() {","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        return divisor;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"ngnigel99":18}},{"path":"src/main/java/duke/type/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.type;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"    final String atWhen;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"    public Event(String description, String atWhen) {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"        this.atWhen \u003d atWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"    public String getAtWhen() {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"        return atWhen;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public char getType() {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        return \u0027E\u0027;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"        return Character.toString(this.getType()) + Divider.PRINT_BLOCK","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"                + this.description.trim() + Divider.PRINT_BLOCK","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"                + this.atWhen.trim() + Divider.PRINT_BLOCK","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"                + this.isDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":26}},{"path":"src/main/java/duke/type/Mascot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.type;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Represents a virtual chatbot to echo user input","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" * References: https://linuxgazette.net/issue67/orr.html","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public class Mascot {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    public static void penguinSay(String say) {","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"\u003c \" + say + \"  \u003e\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"                \" -----------------------\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"                \"   \\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"                \"    \\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"                \"        .--.\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"                \"       |o_o |\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"                \"       |:_/ |\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"                \"      //   \\\\ \\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"                \"     (|     | )\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"                \"    /\u0027\\\\_   _/`\\\\\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"                \"    \\\\___)\u003d(___/\\n\" +","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"                \"                  \");","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ngnigel99":22}},{"path":"src/main/java/duke/type/Serializable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.type;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":" * Interface to return the type of all tasks,","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":" * either todo/ deadline/ event","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"public interface Serializable {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    char getType();","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":9}},{"path":"src/main/java/duke/type/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.type;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.date.DateValidator;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.date.DateValidatorUsingDateFormat;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.util.List;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":" * Task object, represents a generic task with descriptions and when to complete it by","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"    protected final String DEFAULT_DATE \u003d \"1999-11-30\";","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    protected String description;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    protected LocalDate timeOfTask \u003d LocalDate.parse(DEFAULT_DATE);","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"    protected boolean hasValidDate \u003d false;","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"        return description;","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"        return isDone;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"     * Sets a valid time of a task, only when the following format is followed: YYYY-MM-DD","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"     * Note that this only returns one valid date, on a first-come-first-serve basis","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"     * e.g  for tasks with a end date (events that last a few days)","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"     * @param fullUserInput full sentence input by user","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    public void setTime(String fullUserInput) {","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ISO_LOCAL_DATE;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"        DateValidator validator \u003d new DateValidatorUsingDateFormat(dateFormatter);","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"        List\u003cString\u003e chunksOfText \u003d Arrays.asList(fullUserInput.split(\" \"));","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"        List\u003cString\u003e suitableDate \u003d chunksOfText.stream()","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"                .filter(validator::isValid)","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"        if (!suitableDate.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"            this.timeOfTask \u003d LocalDate.parse(suitableDate.get(0)); //1st date by index","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"great! i\u0027ve recorded a date with the task: \" + this.getDescription()","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"                    + \" \" + \"with the date: \"","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"                    + timeOfTask.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"            this.hasValidDate \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"    public LocalDate getTaskDate() {","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"        return timeOfTask;","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":60}},{"path":"src/main/java/duke/type/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.type;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"    public char getType() {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"        return \u0027T\u0027;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"        return Character.toString(this.getType()) + \u0027|\u0027","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"                + this.description.trim() + \u0027|\u0027","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"                + this.isDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ngnigel99":18}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"package duke.ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Divider;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"import duke.type.Task;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"public class Ui {","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"    public static final String DONE_SYMBOL \u003d \"x\";","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"    public static final String COMMAND_DIVIDER \u003d \" /          / \";","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"    public static void printDivider() {","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(COMMAND_DIVIDER);","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"    public static void printDoneMessage() {","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"\\n / done tasks, good job! / \");","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"ngnigel99"},"content":"    public static void printLine() {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"                 ...                 \");","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"ngnigel99"},"content":"    public static void sayHi(String username) {","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"ngnigel99"},"content":"        printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Hello \" + username + \"!\" + \"\\n\" + \"I\u0027m Duke\");","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"ngnigel99"},"content":"        printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"ngnigel99"},"content":"    public static void sayGoodbye() {","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"ngnigel99"},"content":"        printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Bye. Hope to see you  again soon!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"ngnigel99"},"content":"        printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"ngnigel99"},"content":"    public static void printOneKeyword() {","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Please enter one, and only one keyword: \");","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"ngnigel99"},"content":"    public static void printMatchingTasksAlert() {","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"ngnigel99"},"content":"    public static String readLine() {","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"ngnigel99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"ngnigel99"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"ngnigel99"},"content":"     * Formates a single string into a date","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"ngnigel99"},"content":"     * @return LocalDate","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"ngnigel99"},"content":"     * @throws DateTimeParseException if string is not formatted","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"ngnigel99"},"content":"    public static LocalDate getDate() throws DateTimeParseException {","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"ngnigel99"},"content":"        String userInput \u003d Ui.readLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"ngnigel99"},"content":"        return LocalDate.parse(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"ngnigel99"},"content":"    public static boolean isStop(String userInput) {","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"ngnigel99"},"content":"        return userInput.equalsIgnoreCase(\"stop\");","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"ngnigel99"},"content":"    public static void printNotInRange(int index) {","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"... sorry, task \" + (index + 1) + \" is not in range. Try the command again with a valid index!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"ngnigel99"},"content":"    public static void printDoneFormat() {","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Simply type in the task ids, separated by a single whitespace\");","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"e.g 1 2 3 4 5\");","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"ngnigel99"},"content":"    public static void inputFailMessage() {","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"‚òπ OOPS!!! Please enter a valid command:\");","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"use [ help ] to view valid commands!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"ngnigel99"},"content":"    public static void printNoNull() {","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Please do not leave this field blank.\");","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"ngnigel99"},"content":"    public static void printIntegerOnly() {","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"Please only input integers!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"ngnigel99"},"content":"    public static void printDateFormat() {","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"The format for a date is : YYYY-MM-DD\");","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"for instance, 1999-11-30!\");","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"ngnigel99"},"content":"    public static void printDeadlineFormat() {","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"The format to modify a deadline is [INDEX] [DEADLINE]\");","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"ngnigel99"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"ngnigel99"},"content":"     * Trivial function to return deadline on modification","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"ngnigel99"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"ngnigel99"},"content":"     * @param original text to be entered","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"ngnigel99"},"content":"     * @return splitText[1] sentence without first word","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"ngnigel99"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"ngnigel99"},"content":"    public static String stringWithoutFirstWord(String original) {","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"ngnigel99"},"content":"        String[] splitText \u003d original.split(\" \", 2);","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"ngnigel99"},"content":"        return splitText[1];","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"ngnigel99"},"content":"    public static void printTaskNeatly(Task task) {","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"ngnigel99"},"content":"        String doneSymbol \u003d (task.isDone()) ? DONE_SYMBOL : \" \";","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"ngnigel99"},"content":"        System.out.println(\"[\" + task.getType() + \"] \" + \"[\" + doneSymbol + \"]\" + \" \"","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"ngnigel99"},"content":"                + task.getDescription() + TaskList.getTaskDate(task));","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"ngnigel99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"ngnigel99"},"content":"    public static void printIfDividerNotFound(String userInput, Divider divider) {","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"ngnigel99"},"content":"        if (!userInput.contains(divider.getDivisor())) {","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"ngnigel99"},"content":"            System.out.println(\"hey, i didn\u0027t find the divider for \" + divider.name());","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"ngnigel99"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"ngnigel99"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"ngnigel99"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"ngnigel99":122}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngnigel99"},"content":"Username","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ngnigel99"},"content":"Password","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"ngnigel99"},"content":"add","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ngnigel99"},"content":"read book","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ngnigel99"},"content":"return book /by 2021-06-06","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ngnigel99"},"content":"project meeting /at 2021-08-06 2-4 PM","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"ngnigel99"},"content":"join sports club","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"ngnigel99"},"content":"borrow book","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"ngnigel99"},"content":"stop","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"ngnigel99"},"content":"deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"ngnigel99"},"content":"5 Sunday","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"ngnigel99"},"content":"done","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ngnigel99"},"content":"1 3 5","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"delete","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"2","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"ngnigel99"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ngnigel99":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ngnigel99"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\startup\\*.java","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ngnigel99"},"content":"java -classpath ..\\bin duke.startup.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngnigel99":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ngnigel99"},"content":"#if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"ngnigel99"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/data/*.java ../src/main/java/duke/date/*.java ../src/main/java/duke/security/*.java ../src/main/java/duke/startup/*.java ../src/main/java/duke/type/*.java ../src/main/java/duke/ui/*.java","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngnigel99":2,"-":37}}]
