[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EdwardZYWang"},"content":"todo return book | 0","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"EdwardZYWang":1}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdwardZYWang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"EdwardZYWang"},"content":"    public String by;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"EdwardZYWang"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"EdwardZYWang"},"content":"        super(description);","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"EdwardZYWang"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":11,"author":{"gitId":"EdwardZYWang"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"EdwardZYWang"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"EdwardZYWang"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"EdwardZYWang"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"EdwardZYWang"},"content":"    public String getStoredDataString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"EdwardZYWang"},"content":"        String checkDone \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"EdwardZYWang"},"content":"        return \"deadline \" + description + \" /by \" + by + \" | \" + checkDone + System.lineSeparator();","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"EdwardZYWang"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"EdwardZYWang":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdwardZYWang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"EdwardZYWang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"EdwardZYWang"},"content":"import java.io.File;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"EdwardZYWang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"EdwardZYWang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"EdwardZYWang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"EdwardZYWang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"EdwardZYWang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"EdwardZYWang"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"EdwardZYWang"},"content":"    public static int inputCount \u003d 0;","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"EdwardZYWang"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"EdwardZYWang"},"content":"    private static final String taskDoneChecker \u003d \"0\";","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"EdwardZYWang"},"content":"    private static final String INPUT_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"EdwardZYWang"},"content":"    private static final String INPUT_LIST \u003d \"list\";","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"EdwardZYWang"},"content":"    private static final String INPUT_DONE \u003d \"done\";","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"EdwardZYWang"},"content":"    private static final String INPUT_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"EdwardZYWang"},"content":"    private static final String INPUT_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"EdwardZYWang"},"content":"    private static final String INPUT_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"EdwardZYWang"},"content":"    private static final String INPUT_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"EdwardZYWang"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"EdwardZYWang"},"content":"            loadFile();","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"EdwardZYWang"},"content":"        } catch (FileNotFoundException e22) {","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"EdwardZYWang"},"content":"            System.out.println(\"File not found! Continue entering commands for automatic file creation!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"EdwardZYWang"},"content":"        String input;","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"EdwardZYWang"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"EdwardZYWang"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\");","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"EdwardZYWang"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"EdwardZYWang"},"content":"        while (!(input.equals(INPUT_BYE))) {","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"EdwardZYWang"},"content":"            if (input.equals(INPUT_LIST)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"EdwardZYWang"},"content":"                input \u003d printList(in);","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"EdwardZYWang"},"content":"            } else if (input.contains(INPUT_DONE)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"EdwardZYWang"},"content":"                try {","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d testTaskDone(input, in);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"EdwardZYWang"},"content":"                    replaceAllTasks();","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (NumberFormatException e3) {","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"Did you type in a number?\");","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (ArrayIndexOutOfBoundsException e4) {","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"Finish the command!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (IOException e33) {","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"IOexception, incorrect input or output\");","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"EdwardZYWang"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"EdwardZYWang"},"content":"            } else if (input.contains(INPUT_TODO)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"EdwardZYWang"},"content":"                try {","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"EdwardZYWang"},"content":"                    testInput(input); // test todo input","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"EdwardZYWang"},"content":"                    appendTodo(input); // add new entry to duke.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"EdwardZYWang"},"content":"                    Task whatToDo \u003d getToDoMethod(input);","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\\n\" + \"    \" + whatToDo + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"EdwardZYWang"},"content":"                            + \"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (DukeExceptions e5) {","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"EdwardZYWang"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"EdwardZYWang"},"content":"            } else if (input.contains(INPUT_DEADLINE)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"EdwardZYWang"},"content":"                try {","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"EdwardZYWang"},"content":"                    appendDeadline(input); //add new entry to duke.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"EdwardZYWang"},"content":"                    Task whatDeadline \u003d getDeadlineMethod(input);","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\\n\" + \"    \" + whatDeadline + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"EdwardZYWang"},"content":"                            + \"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":84,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (StringIndexOutOfBoundsException e1) {","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"input \u003d \" + input + \"\\n☹ OOPS!!! Please retype your input!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (ArrayIndexOutOfBoundsException e2) {","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"you have typed in \u003d \" + input + \"\\n☹ OOPS!!! where is your /by my friend? \");","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":93,"author":{"gitId":"EdwardZYWang"},"content":"                }","lastModifiedDate":"2021-09-10"},{"lineNumber":94,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"EdwardZYWang"},"content":"            } else if (input.contains(INPUT_EVENT)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"EdwardZYWang"},"content":"                try {","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"EdwardZYWang"},"content":"                    appendEvent(input); //add new entry to duke.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"EdwardZYWang"},"content":"                    Task whatEvent \u003d getEventMethod(input);","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\\n\" + \"    \" + whatEvent + \"\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"EdwardZYWang"},"content":"                            + \"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":104,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (StringIndexOutOfBoundsException e6) {","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"input \u003d \" + input + \"\\n☹ OOPS!!! Please retype your input!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (ArrayIndexOutOfBoundsException e7) {","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"you have typed in \u003d \" + input + \"\\nw☹ OOPS!!! where is your /at brother? \");","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"EdwardZYWang"},"content":"                }","lastModifiedDate":"2021-09-10"},{"lineNumber":112,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":113,"author":{"gitId":"EdwardZYWang"},"content":"            } else if (input.contains(INPUT_DELETE)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":114,"author":{"gitId":"EdwardZYWang"},"content":"                try {","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d testDeleteTask(input, in);","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"EdwardZYWang"},"content":"                    replaceAllTasks();","lastModifiedDate":"2021-09-16"},{"lineNumber":117,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":118,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (NumberFormatException e8) {","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"Did you type in a number?\");","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":122,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (ArrayIndexOutOfBoundsException e9) {","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"Finish the command!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":126,"author":{"gitId":"EdwardZYWang"},"content":"                } catch (IOException e34) {","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"EdwardZYWang"},"content":"                    System.out.println(\"IOexception, incorrect input or output\");","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"EdwardZYWang"},"content":"                    input \u003d in.nextLine();","lastModifiedDate":"2021-09-16"},{"lineNumber":129,"author":{"gitId":"EdwardZYWang"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":131,"author":{"gitId":"EdwardZYWang"},"content":"            } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"EdwardZYWang"},"content":"                System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");//overall error check","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"EdwardZYWang"},"content":"                input \u003d in.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":134,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":135,"author":{"gitId":"EdwardZYWang"},"content":"            }","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":137,"author":{"gitId":"EdwardZYWang"},"content":"        System.out.println(\"    Bye! Hope to see you again soon!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":141,"author":{"gitId":"EdwardZYWang"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"EdwardZYWang"},"content":"     * Returns a print statement of all tasks in the file Duke.txt","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"EdwardZYWang"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"EdwardZYWang"},"content":"     * @param in input of user","lastModifiedDate":"2021-09-16"},{"lineNumber":145,"author":{"gitId":"EdwardZYWang"},"content":"     * @return prints list of all tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":146,"author":{"gitId":"EdwardZYWang"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":147,"author":{"gitId":"EdwardZYWang"},"content":"    private static String printList(Scanner in) {","lastModifiedDate":"2021-09-02"},{"lineNumber":148,"author":{"gitId":"EdwardZYWang"},"content":"        String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":149,"author":{"gitId":"EdwardZYWang"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2021-09-02"},{"lineNumber":150,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"EdwardZYWang"},"content":"        for (int outputCount \u003d 0; outputCount \u003c tasks.size(); outputCount++) {","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"EdwardZYWang"},"content":"            System.out.println(\"    \" + (outputCount + 1) + \".\" + tasks.get(outputCount));","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":154,"author":{"gitId":"EdwardZYWang"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":155,"author":{"gitId":"EdwardZYWang"},"content":"        return input;","lastModifiedDate":"2021-09-02"},{"lineNumber":156,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":157,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":158,"author":{"gitId":"EdwardZYWang"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"EdwardZYWang"},"content":"     * Test if the index number of the user\u0027s input after calling \"done\" is within","lastModifiedDate":"2021-09-16"},{"lineNumber":160,"author":{"gitId":"EdwardZYWang"},"content":"     * the index number of all the tasks in the file. If it is valid,","lastModifiedDate":"2021-09-16"},{"lineNumber":161,"author":{"gitId":"EdwardZYWang"},"content":"     * enter setTaskDone, if not, prints error message","lastModifiedDate":"2021-09-16"},{"lineNumber":162,"author":{"gitId":"EdwardZYWang"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":163,"author":{"gitId":"EdwardZYWang"},"content":"     * @param input String containing the user command","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"EdwardZYWang"},"content":"     * @return setTaskDone or invalid message if index number provided is less than 1,","lastModifiedDate":"2021-09-16"},{"lineNumber":165,"author":{"gitId":"EdwardZYWang"},"content":"     * or more than the last task","lastModifiedDate":"2021-09-16"},{"lineNumber":166,"author":{"gitId":"EdwardZYWang"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":167,"author":{"gitId":"EdwardZYWang"},"content":"    private static String testTaskDone(String input, Scanner in) {","lastModifiedDate":"2021-09-02"},{"lineNumber":168,"author":{"gitId":"EdwardZYWang"},"content":"        int taskNumber;","lastModifiedDate":"2021-09-02"},{"lineNumber":169,"author":{"gitId":"EdwardZYWang"},"content":"        String[] inputSplitter;","lastModifiedDate":"2021-09-02"},{"lineNumber":170,"author":{"gitId":"EdwardZYWang"},"content":"        inputSplitter \u003d input.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":171,"author":{"gitId":"EdwardZYWang"},"content":"        taskNumber \u003d Integer.parseInt(inputSplitter[1]);","lastModifiedDate":"2021-09-02"},{"lineNumber":172,"author":{"gitId":"EdwardZYWang"},"content":"        taskNumber \u003d taskNumber - 1;","lastModifiedDate":"2021-09-02"},{"lineNumber":173,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":174,"author":{"gitId":"EdwardZYWang"},"content":"        if (((taskNumber + 1) \u003e 0) \u0026\u0026 ((taskNumber + 1) \u003c\u003d tasks.size())) { //check for invalid inputs","lastModifiedDate":"2021-09-13"},{"lineNumber":175,"author":{"gitId":"EdwardZYWang"},"content":"            input \u003d setTaskDone(in, tasks.get(taskNumber));","lastModifiedDate":"2021-09-16"},{"lineNumber":176,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":177,"author":{"gitId":"EdwardZYWang"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":178,"author":{"gitId":"EdwardZYWang"},"content":"            System.out.println(\"    Invalid input! Please check the list again!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":179,"author":{"gitId":"EdwardZYWang"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":180,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"EdwardZYWang"},"content":"        return input;","lastModifiedDate":"2021-09-13"},{"lineNumber":182,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":183,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":184,"author":{"gitId":"EdwardZYWang"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":185,"author":{"gitId":"EdwardZYWang"},"content":"     * Test if the index number of the user\u0027s input after calling \"delete\" is within","lastModifiedDate":"2021-09-16"},{"lineNumber":186,"author":{"gitId":"EdwardZYWang"},"content":"     * the index number of all the tasks in the file. If it is valid,","lastModifiedDate":"2021-09-16"},{"lineNumber":187,"author":{"gitId":"EdwardZYWang"},"content":"     * enter setTaskDone, if not, prints error message","lastModifiedDate":"2021-09-16"},{"lineNumber":188,"author":{"gitId":"EdwardZYWang"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":189,"author":{"gitId":"EdwardZYWang"},"content":"     * @param input String containing the user command","lastModifiedDate":"2021-09-16"},{"lineNumber":190,"author":{"gitId":"EdwardZYWang"},"content":"     * @return setTaskDone or invalid message if index number provided is less than 1,","lastModifiedDate":"2021-09-16"},{"lineNumber":191,"author":{"gitId":"EdwardZYWang"},"content":"     * or more than the last task","lastModifiedDate":"2021-09-16"},{"lineNumber":192,"author":{"gitId":"EdwardZYWang"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":193,"author":{"gitId":"EdwardZYWang"},"content":"    private static String testDeleteTask(String input, Scanner in) {","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"EdwardZYWang"},"content":"        int taskNumber;","lastModifiedDate":"2021-09-13"},{"lineNumber":195,"author":{"gitId":"EdwardZYWang"},"content":"        String[] inputSplitter;","lastModifiedDate":"2021-09-13"},{"lineNumber":196,"author":{"gitId":"EdwardZYWang"},"content":"        inputSplitter \u003d input.split(\" \");","lastModifiedDate":"2021-09-13"},{"lineNumber":197,"author":{"gitId":"EdwardZYWang"},"content":"        taskNumber \u003d Integer.parseInt(inputSplitter[1]); //get which task to delete","lastModifiedDate":"2021-09-13"},{"lineNumber":198,"author":{"gitId":"EdwardZYWang"},"content":"        taskNumber \u003d taskNumber - 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":199,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":200,"author":{"gitId":"EdwardZYWang"},"content":"        if (((taskNumber + 1) \u003e 0) \u0026\u0026 ((taskNumber + 1) \u003c\u003d tasks.size())) { //check for invalid inputs","lastModifiedDate":"2021-09-13"},{"lineNumber":201,"author":{"gitId":"EdwardZYWang"},"content":"            input \u003d setTaskDelete(in, tasks.remove(taskNumber));","lastModifiedDate":"2021-09-16"},{"lineNumber":202,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":203,"author":{"gitId":"EdwardZYWang"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":204,"author":{"gitId":"EdwardZYWang"},"content":"            System.out.println(\"    Invalid input! Please check the list again!\");","lastModifiedDate":"2021-09-02"},{"lineNumber":205,"author":{"gitId":"EdwardZYWang"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":206,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":207,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":208,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":209,"author":{"gitId":"EdwardZYWang"},"content":"        return input;","lastModifiedDate":"2021-09-02"},{"lineNumber":210,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":211,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":212,"author":{"gitId":"EdwardZYWang"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":213,"author":{"gitId":"EdwardZYWang"},"content":"     * Sets the task, identified by its index number, to be done, marking an x in its [ ]","lastModifiedDate":"2021-09-16"},{"lineNumber":214,"author":{"gitId":"EdwardZYWang"},"content":"     * when printList is called","lastModifiedDate":"2021-09-16"},{"lineNumber":215,"author":{"gitId":"EdwardZYWang"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":216,"author":{"gitId":"EdwardZYWang"},"content":"     * @param in String containing the user command","lastModifiedDate":"2021-09-16"},{"lineNumber":217,"author":{"gitId":"EdwardZYWang"},"content":"     * @param task list of all tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":218,"author":{"gitId":"EdwardZYWang"},"content":"     * @return marks x in [ ] in the list operation when printList is called","lastModifiedDate":"2021-09-16"},{"lineNumber":219,"author":{"gitId":"EdwardZYWang"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":220,"author":{"gitId":"EdwardZYWang"},"content":"    private static String setTaskDone(Scanner in, Task task) {","lastModifiedDate":"2021-09-16"},{"lineNumber":221,"author":{"gitId":"EdwardZYWang"},"content":"        String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":222,"author":{"gitId":"EdwardZYWang"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\" + System.lineSeparator());","lastModifiedDate":"2021-09-02"},{"lineNumber":223,"author":{"gitId":"EdwardZYWang"},"content":"        System.out.println(\"    \" + task + \" has been updated to --\u003e\");","lastModifiedDate":"2021-09-02"},{"lineNumber":224,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":225,"author":{"gitId":"EdwardZYWang"},"content":"        task.markAsDone(); //mark x in [ ]","lastModifiedDate":"2021-09-02"},{"lineNumber":226,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":227,"author":{"gitId":"EdwardZYWang"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2021-09-02"},{"lineNumber":228,"author":{"gitId":"EdwardZYWang"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":229,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":230,"author":{"gitId":"EdwardZYWang"},"content":"        return input;","lastModifiedDate":"2021-09-02"},{"lineNumber":231,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":232,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":233,"author":{"gitId":"EdwardZYWang"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":234,"author":{"gitId":"EdwardZYWang"},"content":"     * Deletes the task, identified by its index number, by removing it from task","lastModifiedDate":"2021-09-16"},{"lineNumber":235,"author":{"gitId":"EdwardZYWang"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":236,"author":{"gitId":"EdwardZYWang"},"content":"     * @param in String containing the user command","lastModifiedDate":"2021-09-16"},{"lineNumber":237,"author":{"gitId":"EdwardZYWang"},"content":"     * @param task list of all tasks","lastModifiedDate":"2021-09-16"},{"lineNumber":238,"author":{"gitId":"EdwardZYWang"},"content":"     * @return prints out the task that has been deleted and shows the remaining number","lastModifiedDate":"2021-09-16"},{"lineNumber":239,"author":{"gitId":"EdwardZYWang"},"content":"     * of tasks left.","lastModifiedDate":"2021-09-16"},{"lineNumber":240,"author":{"gitId":"EdwardZYWang"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":241,"author":{"gitId":"EdwardZYWang"},"content":"    private static String setTaskDelete(Scanner in, Task task) {","lastModifiedDate":"2021-09-16"},{"lineNumber":242,"author":{"gitId":"EdwardZYWang"},"content":"        String input;","lastModifiedDate":"2021-09-13"},{"lineNumber":243,"author":{"gitId":"EdwardZYWang"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-13"},{"lineNumber":244,"author":{"gitId":"EdwardZYWang"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2021-09-13"},{"lineNumber":245,"author":{"gitId":"EdwardZYWang"},"content":"        System.out.println(\"    Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":246,"author":{"gitId":"EdwardZYWang"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":247,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":248,"author":{"gitId":"EdwardZYWang"},"content":"        return input;","lastModifiedDate":"2021-09-13"},{"lineNumber":249,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":250,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":251,"author":{"gitId":"EdwardZYWang"},"content":"    /**","lastModifiedDate":"2021-09-16"},{"lineNumber":252,"author":{"gitId":"EdwardZYWang"},"content":"     * creates a new todo task by using child class Todo and ovverride toString() function","lastModifiedDate":"2021-09-16"},{"lineNumber":253,"author":{"gitId":"EdwardZYWang"},"content":"     *","lastModifiedDate":"2021-09-16"},{"lineNumber":254,"author":{"gitId":"EdwardZYWang"},"content":"     * @param input String containing the user command","lastModifiedDate":"2021-09-16"},{"lineNumber":255,"author":{"gitId":"EdwardZYWang"},"content":"     * @return tasksToDo which contains the new todo task to be added","lastModifiedDate":"2021-09-16"},{"lineNumber":256,"author":{"gitId":"EdwardZYWang"},"content":"     */","lastModifiedDate":"2021-09-16"},{"lineNumber":257,"author":{"gitId":"EdwardZYWang"},"content":"    public static Task getToDoMethod(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":258,"author":{"gitId":"EdwardZYWang"},"content":"        String toDoDescription \u003d input.substring(4).trim();","lastModifiedDate":"2021-09-02"},{"lineNumber":259,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":260,"author":{"gitId":"EdwardZYWang"},"content":"        Task tasksToDo \u003d new Todo(toDoDescription);","lastModifiedDate":"2021-09-02"},{"lineNumber":261,"author":{"gitId":"EdwardZYWang"},"content":"        tasks.add(tasksToDo);","lastModifiedDate":"2021-09-13"},{"lineNumber":262,"author":{"gitId":"EdwardZYWang"},"content":"        inputCount++;","lastModifiedDate":"2021-09-02"},{"lineNumber":263,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":264,"author":{"gitId":"EdwardZYWang"},"content":"        return tasksToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":265,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":266,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":267,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":268,"author":{"gitId":"EdwardZYWang"},"content":"    public static Task getDeadlineMethod(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":269,"author":{"gitId":"EdwardZYWang"},"content":"        String[] deadlineSplitter \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2021-09-02"},{"lineNumber":270,"author":{"gitId":"EdwardZYWang"},"content":"        String deadlineDescription \u003d deadlineSplitter[0]; //before /by","lastModifiedDate":"2021-09-02"},{"lineNumber":271,"author":{"gitId":"EdwardZYWang"},"content":"        String deadlineBy \u003d deadlineSplitter[1]; // after /by","lastModifiedDate":"2021-09-02"},{"lineNumber":272,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":273,"author":{"gitId":"EdwardZYWang"},"content":"        Task description \u003d new Deadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2021-09-02"},{"lineNumber":274,"author":{"gitId":"EdwardZYWang"},"content":"        tasks.add(description);","lastModifiedDate":"2021-09-13"},{"lineNumber":275,"author":{"gitId":"EdwardZYWang"},"content":"        inputCount++;","lastModifiedDate":"2021-09-02"},{"lineNumber":276,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":277,"author":{"gitId":"EdwardZYWang"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":278,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":279,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":280,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":281,"author":{"gitId":"EdwardZYWang"},"content":"    public static Task getEventMethod(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":282,"author":{"gitId":"EdwardZYWang"},"content":"        String[] eventSplitter \u003d input.substring(6).split(\" /at \");","lastModifiedDate":"2021-09-02"},{"lineNumber":283,"author":{"gitId":"EdwardZYWang"},"content":"        String eventDescription \u003d eventSplitter[0]; //before /at","lastModifiedDate":"2021-09-02"},{"lineNumber":284,"author":{"gitId":"EdwardZYWang"},"content":"        String eventAt \u003d eventSplitter[1]; // after /at","lastModifiedDate":"2021-09-02"},{"lineNumber":285,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":286,"author":{"gitId":"EdwardZYWang"},"content":"        Task description \u003d new Event(eventDescription, eventAt);","lastModifiedDate":"2021-09-02"},{"lineNumber":287,"author":{"gitId":"EdwardZYWang"},"content":"        tasks.add(description);","lastModifiedDate":"2021-09-13"},{"lineNumber":288,"author":{"gitId":"EdwardZYWang"},"content":"        inputCount++;","lastModifiedDate":"2021-09-02"},{"lineNumber":289,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":290,"author":{"gitId":"EdwardZYWang"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":292,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":293,"author":{"gitId":"EdwardZYWang"},"content":"    public static void testInput(String input) throws DukeExceptions {","lastModifiedDate":"2021-09-10"},{"lineNumber":294,"author":{"gitId":"EdwardZYWang"},"content":"        if (input.length() \u003c 5) { //check for description after todo","lastModifiedDate":"2021-09-10"},{"lineNumber":295,"author":{"gitId":"EdwardZYWang"},"content":"            throw new DukeExceptions();","lastModifiedDate":"2021-09-10"},{"lineNumber":296,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":297,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":298,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":299,"author":{"gitId":"EdwardZYWang"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":300,"author":{"gitId":"EdwardZYWang"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-16"},{"lineNumber":301,"author":{"gitId":"EdwardZYWang"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-09-16"},{"lineNumber":302,"author":{"gitId":"EdwardZYWang"},"content":"        fw.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":303,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":304,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":305,"author":{"gitId":"EdwardZYWang"},"content":"    public static void appendTodo(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":306,"author":{"gitId":"EdwardZYWang"},"content":"        String filePath \u003d new File(\"duke.txt\").getAbsolutePath(); //added","lastModifiedDate":"2021-09-17"},{"lineNumber":307,"author":{"gitId":"EdwardZYWang"},"content":"        String isDone \u003d taskDoneChecker;","lastModifiedDate":"2021-09-16"},{"lineNumber":308,"author":{"gitId":"EdwardZYWang"},"content":"        String addToDoDescription \u003d input.substring(4).trim(); // \"return book\"","lastModifiedDate":"2021-09-16"},{"lineNumber":309,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":310,"author":{"gitId":"EdwardZYWang"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":311,"author":{"gitId":"EdwardZYWang"},"content":"            writeToFile(filePath,","lastModifiedDate":"2021-09-16"},{"lineNumber":312,"author":{"gitId":"EdwardZYWang"},"content":"                    \"todo \" + addToDoDescription + \" | \" + isDone + System.lineSeparator());","lastModifiedDate":"2021-09-16"},{"lineNumber":313,"author":{"gitId":"EdwardZYWang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":314,"author":{"gitId":"EdwardZYWang"},"content":"            System.out.println(\"IOException error, theres an input/output error\");","lastModifiedDate":"2021-09-16"},{"lineNumber":315,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":316,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":317,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":318,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":319,"author":{"gitId":"EdwardZYWang"},"content":"    public static void appendEvent(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":320,"author":{"gitId":"EdwardZYWang"},"content":"        String filePath \u003d new File(\"duke.txt\").getAbsolutePath(); //added","lastModifiedDate":"2021-09-17"},{"lineNumber":321,"author":{"gitId":"EdwardZYWang"},"content":"        String isDone \u003d taskDoneChecker;","lastModifiedDate":"2021-09-16"},{"lineNumber":322,"author":{"gitId":"EdwardZYWang"},"content":"        String[] eventSplitterString \u003d input.substring(6).split(\" /at \");","lastModifiedDate":"2021-09-16"},{"lineNumber":323,"author":{"gitId":"EdwardZYWang"},"content":"        String addEventDescription \u003d eventSplitterString[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":324,"author":{"gitId":"EdwardZYWang"},"content":"        String location \u003d eventSplitterString[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":325,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":326,"author":{"gitId":"EdwardZYWang"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":327,"author":{"gitId":"EdwardZYWang"},"content":"            writeToFile(filePath, \"event \" + addEventDescription + \" /at \"","lastModifiedDate":"2021-09-16"},{"lineNumber":328,"author":{"gitId":"EdwardZYWang"},"content":"                    + location + \" | \" + isDone + System.lineSeparator());","lastModifiedDate":"2021-09-16"},{"lineNumber":329,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":330,"author":{"gitId":"EdwardZYWang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":331,"author":{"gitId":"EdwardZYWang"},"content":"            System.out.println(\"IOException error, theres an input/output error\");","lastModifiedDate":"2021-09-16"},{"lineNumber":332,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":333,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":334,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":335,"author":{"gitId":"EdwardZYWang"},"content":"    public static void appendDeadline(String input) {","lastModifiedDate":"2021-09-16"},{"lineNumber":336,"author":{"gitId":"EdwardZYWang"},"content":"        String filePath \u003d new File(\"duke.txt\").getAbsolutePath(); //addded","lastModifiedDate":"2021-09-17"},{"lineNumber":337,"author":{"gitId":"EdwardZYWang"},"content":"        String isDone \u003d taskDoneChecker;","lastModifiedDate":"2021-09-16"},{"lineNumber":338,"author":{"gitId":"EdwardZYWang"},"content":"        String[] deadlineSplitterString \u003d input.substring(9).split(\" /by \");","lastModifiedDate":"2021-09-16"},{"lineNumber":339,"author":{"gitId":"EdwardZYWang"},"content":"        String addDeadlineDescription \u003d deadlineSplitterString[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":340,"author":{"gitId":"EdwardZYWang"},"content":"        String date \u003d deadlineSplitterString[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":341,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":342,"author":{"gitId":"EdwardZYWang"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":343,"author":{"gitId":"EdwardZYWang"},"content":"            writeToFile(filePath, \"deadline \" + addDeadlineDescription + \" /by \"","lastModifiedDate":"2021-09-16"},{"lineNumber":344,"author":{"gitId":"EdwardZYWang"},"content":"                    + date + \" | \" + isDone + System.lineSeparator());","lastModifiedDate":"2021-09-16"},{"lineNumber":345,"author":{"gitId":"EdwardZYWang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":346,"author":{"gitId":"EdwardZYWang"},"content":"            System.out.println(\"IOException error, theres an input/output error\");","lastModifiedDate":"2021-09-16"},{"lineNumber":347,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":348,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":349,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":350,"author":{"gitId":"EdwardZYWang"},"content":"    public static void replaceAllTasks() throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":351,"author":{"gitId":"EdwardZYWang"},"content":"        String filePath \u003d new File(\"duke.txt\").getAbsolutePath(); //added","lastModifiedDate":"2021-09-17"},{"lineNumber":352,"author":{"gitId":"EdwardZYWang"},"content":"        FileWriter fw \u003d new FileWriter(filePath, false);","lastModifiedDate":"2021-09-16"},{"lineNumber":353,"author":{"gitId":"EdwardZYWang"},"content":"        String taskToSave;","lastModifiedDate":"2021-09-16"},{"lineNumber":354,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":355,"author":{"gitId":"EdwardZYWang"},"content":"        for (Task individualTask : tasks) {","lastModifiedDate":"2021-09-16"},{"lineNumber":356,"author":{"gitId":"EdwardZYWang"},"content":"            if (individualTask instanceof Deadline) {","lastModifiedDate":"2021-09-16"},{"lineNumber":357,"author":{"gitId":"EdwardZYWang"},"content":"                taskToSave \u003d individualTask.getStoredDataString();","lastModifiedDate":"2021-09-16"},{"lineNumber":358,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":359,"author":{"gitId":"EdwardZYWang"},"content":"            } else if (individualTask instanceof Event) {","lastModifiedDate":"2021-09-16"},{"lineNumber":360,"author":{"gitId":"EdwardZYWang"},"content":"                taskToSave \u003d individualTask.getStoredDataString();","lastModifiedDate":"2021-09-16"},{"lineNumber":361,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":362,"author":{"gitId":"EdwardZYWang"},"content":"            } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":363,"author":{"gitId":"EdwardZYWang"},"content":"                taskToSave \u003d individualTask.getStoredDataString();","lastModifiedDate":"2021-09-16"},{"lineNumber":364,"author":{"gitId":"EdwardZYWang"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":365,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":366,"author":{"gitId":"EdwardZYWang"},"content":"            Files.write(Paths.get(filePath), taskToSave.getBytes(), StandardOpenOption.APPEND);","lastModifiedDate":"2021-09-16"},{"lineNumber":367,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":368,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":369,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":370,"author":{"gitId":"EdwardZYWang"},"content":"    public static void loadFile() throws FileNotFoundException {","lastModifiedDate":"2021-09-16"},{"lineNumber":371,"author":{"gitId":"EdwardZYWang"},"content":"        String filePath \u003d new File(\"duke.txt\").getAbsolutePath(); //added","lastModifiedDate":"2021-09-17"},{"lineNumber":372,"author":{"gitId":"EdwardZYWang"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-16"},{"lineNumber":373,"author":{"gitId":"EdwardZYWang"},"content":"        Scanner fileScan \u003d new Scanner(f);","lastModifiedDate":"2021-09-16"},{"lineNumber":374,"author":{"gitId":"EdwardZYWang"},"content":"        String taskType;","lastModifiedDate":"2021-09-16"},{"lineNumber":375,"author":{"gitId":"EdwardZYWang"},"content":"        int fileScanNumber \u003d 1; //order of tasks in duke text file","lastModifiedDate":"2021-09-16"},{"lineNumber":376,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":377,"author":{"gitId":"EdwardZYWang"},"content":"        while (fileScan.hasNext()) {","lastModifiedDate":"2021-09-16"},{"lineNumber":378,"author":{"gitId":"EdwardZYWang"},"content":"            String data \u003d fileScan.nextLine(); //scans first line of the file","lastModifiedDate":"2021-09-16"},{"lineNumber":379,"author":{"gitId":"EdwardZYWang"},"content":"            String[] arraySplitter \u003d data.split(\" \\\\| \"); //split \"todo hello\" \"0\"","lastModifiedDate":"2021-09-16"},{"lineNumber":380,"author":{"gitId":"EdwardZYWang"},"content":"            String[] arraySplitter2 \u003d arraySplitter[0].split(\" \");//split \"todo hello\"  -\u003e \"todo\" \"hello\"","lastModifiedDate":"2021-09-16"},{"lineNumber":381,"author":{"gitId":"EdwardZYWang"},"content":"            taskType \u003d arraySplitter2[0]; //chooses \"todo\"","lastModifiedDate":"2021-09-16"},{"lineNumber":382,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":383,"author":{"gitId":"EdwardZYWang"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-16"},{"lineNumber":384,"author":{"gitId":"EdwardZYWang"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-16"},{"lineNumber":385,"author":{"gitId":"EdwardZYWang"},"content":"                getToDoMethod(arraySplitter[0]);","lastModifiedDate":"2021-09-16"},{"lineNumber":386,"author":{"gitId":"EdwardZYWang"},"content":"                if (arraySplitter[1].equals(\"1\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":387,"author":{"gitId":"EdwardZYWang"},"content":"                    loadFileDone(fileScanNumber);","lastModifiedDate":"2021-09-16"},{"lineNumber":388,"author":{"gitId":"EdwardZYWang"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":389,"author":{"gitId":"EdwardZYWang"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":390,"author":{"gitId":"EdwardZYWang"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-16"},{"lineNumber":391,"author":{"gitId":"EdwardZYWang"},"content":"                getDeadlineMethod(arraySplitter[0]);","lastModifiedDate":"2021-09-16"},{"lineNumber":392,"author":{"gitId":"EdwardZYWang"},"content":"                if (arraySplitter[1].equals(\"1\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":393,"author":{"gitId":"EdwardZYWang"},"content":"                    loadFileDone(fileScanNumber);","lastModifiedDate":"2021-09-16"},{"lineNumber":394,"author":{"gitId":"EdwardZYWang"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":395,"author":{"gitId":"EdwardZYWang"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":396,"author":{"gitId":"EdwardZYWang"},"content":"            case \"event\":","lastModifiedDate":"2021-09-16"},{"lineNumber":397,"author":{"gitId":"EdwardZYWang"},"content":"                getEventMethod(arraySplitter[0]);","lastModifiedDate":"2021-09-16"},{"lineNumber":398,"author":{"gitId":"EdwardZYWang"},"content":"                if (arraySplitter[1].equals(\"1\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":399,"author":{"gitId":"EdwardZYWang"},"content":"                    loadFileDone(fileScanNumber);","lastModifiedDate":"2021-09-16"},{"lineNumber":400,"author":{"gitId":"EdwardZYWang"},"content":"                }","lastModifiedDate":"2021-09-16"},{"lineNumber":401,"author":{"gitId":"EdwardZYWang"},"content":"                break;","lastModifiedDate":"2021-09-16"},{"lineNumber":402,"author":{"gitId":"EdwardZYWang"},"content":"            default:","lastModifiedDate":"2021-09-16"},{"lineNumber":403,"author":{"gitId":"EdwardZYWang"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":404,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":405,"author":{"gitId":"EdwardZYWang"},"content":"            fileScanNumber++;","lastModifiedDate":"2021-09-16"},{"lineNumber":406,"author":{"gitId":"EdwardZYWang"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":407,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":408,"author":{"gitId":"EdwardZYWang"},"content":"        fileScan.close();","lastModifiedDate":"2021-09-16"},{"lineNumber":409,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":410,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":411,"author":{"gitId":"EdwardZYWang"},"content":"    public static void loadFileDone(Integer number) {","lastModifiedDate":"2021-09-16"},{"lineNumber":412,"author":{"gitId":"EdwardZYWang"},"content":"        number \u003d number - 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":413,"author":{"gitId":"EdwardZYWang"},"content":"        Task task \u003d tasks.get(number);","lastModifiedDate":"2021-09-16"},{"lineNumber":414,"author":{"gitId":"EdwardZYWang"},"content":"        task.markAsDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":416,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":417,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"-":5,"EdwardZYWang":412}},{"path":"src/main/java/DukeExceptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdwardZYWang"},"content":"public class DukeExceptions extends Exception{","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"EdwardZYWang"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"EdwardZYWang":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdwardZYWang"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"EdwardZYWang"},"content":"    public String at;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"EdwardZYWang"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"EdwardZYWang"},"content":"        super(description);","lastModifiedDate":"2021-09-03"},{"lineNumber":7,"author":{"gitId":"EdwardZYWang"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-03"},{"lineNumber":8,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"EdwardZYWang"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"EdwardZYWang"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"EdwardZYWang"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-03"},{"lineNumber":13,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"EdwardZYWang"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"EdwardZYWang"},"content":"    public String getStoredDataString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"EdwardZYWang"},"content":"        String checkDone \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"EdwardZYWang"},"content":"        return \"event \" + description + \" /at \" + at + \" | \" + checkDone + System.lineSeparator();","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"EdwardZYWang"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"EdwardZYWang":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdwardZYWang"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"EdwardZYWang"},"content":"    protected String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"EdwardZYWang"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"EdwardZYWang"},"content":"    public Task(String description) { //for todo","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"EdwardZYWang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"EdwardZYWang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"EdwardZYWang"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"EdwardZYWang"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X, if not its blank","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"EdwardZYWang"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"EdwardZYWang"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"EdwardZYWang"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"EdwardZYWang"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"EdwardZYWang"},"content":"    public String toString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"EdwardZYWang"},"content":"        return description;","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"EdwardZYWang"},"content":"    public String getStoredDataString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"EdwardZYWang"},"content":"       return \"\";","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"EdwardZYWang"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"EdwardZYWang":29}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdwardZYWang"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"EdwardZYWang"},"content":"    public Todo(String description, String tasksToDo) {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"EdwardZYWang"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"EdwardZYWang"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"EdwardZYWang"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"EdwardZYWang"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"EdwardZYWang"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"EdwardZYWang"},"content":"        return \"[T]\" + \"[\" + getStatusIcon() + \"]\" + \" \" + description;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"EdwardZYWang"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"EdwardZYWang"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"EdwardZYWang"},"content":"    public String getStoredDataString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"EdwardZYWang"},"content":"        String checkDone \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"EdwardZYWang"},"content":"        return \"todo \"  +  description + \" | \"  + checkDone + System.lineSeparator();","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"EdwardZYWang"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"EdwardZYWang"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"EdwardZYWang":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EdwardZYWang"},"content":"todo borrow book","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"EdwardZYWang"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"EdwardZYWang"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"EdwardZYWang"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"EdwardZYWang"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"EdwardZYWang"},"content":"done 4","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"EdwardZYWang"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"EdwardZYWang"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"EdwardZYWang":8}}]
