[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Uxinnn":1,"-":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"Duke is a command line task tracking application that helps you keep track of your daily tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"## Getting Started","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"1. Download JRE11.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"2. Download the latest release `Duke.jar` file.","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"3. In the directory containing the `Duke.jar` file, run `java -jar Duke.jar`.","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"* [Add a task](#add-a-task)","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"* [Delete a task](#delete-a-task)","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"* [Mark a task as done](#mark-a-task-as-done)","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"* [Find a task](#find-a-task)","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"* [List all tasks](#list-all-tasks)","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"* [Exit Duke](#exit-duke)","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"### Add a task","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"Duke supports 3 types of tasks:","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"1. ToDo: A task with a description.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"2. Deadline: A task with a description and a deadline.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"3. Event: A task with a description and a location.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"To add any of the 3 tasks, run:","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"1. `todo \u003cdescription\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"2. `deadline \u003cdescription\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"3. `event \u003cdescription\u003e /at \u003clocation\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"Example:","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"![](images/addTask.png)","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"### Delete a task","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"To delete a task, enter its index in the format: `delete \u003ctaskIndex\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"Example:","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"![](images/deleteTask.png)","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"### Mark a task as done","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"To mark a task as done, enter its index in the format: `done \u003ctaskIndex\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"Example:","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"![](images/doneTask.png)","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"### Find a task","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"To find tasks that has a certain word, enter the word in the format: `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"Example:","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"![](images/findTask.png)","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"### List all tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"To list all tasks that Duke knows, enter `list`.","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"Example:","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"![](images/list.png)","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"### Exit Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"To exit Duke, simply type `bye`.","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"Example:","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"![](images/bye.png)","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"## Data Persistence","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"Data will be stored in `./data/tasks.txt`.","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"When Duke starts up, tasks that are stored in `./data/tasks.txt` will be loaded.","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"Duke automatically saves tasks to `./data/tasks.txt` in real time so there is no need to manually save tasks.","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":52,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class Duke {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    private TasksList tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"     * Initialises the main components (TaskList, Parser, Storage, Ui) of the application.","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"     * @param filePath Path to the file used for data storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"            storage.createStorageFile();","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"            tasks \u003d new TasksList(storage.load());","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"            tasks \u003d new TasksList();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"     * Runs the application.","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"     * Takes in an input from the user, process it and execute the command.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"    public void run() {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"            } finally {","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Uxinnn":55,"-":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.commands.AddCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import duke.commands.DoneCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import duke.commands.ExitCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.CommandNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidDeadlineFormatException;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidDeleteFormatException;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidDoneFormatException;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidEventFormatException;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidToDoFormatException;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidFindFormatException;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"public class Parser{","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    private static final int LENGTH_OF_BY \u003d 5;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    private static final int LENGTH_OF_AT \u003d 5;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"     * Returns a \u003ccode\u003eCommand\u003c/code\u003e with the appropriate information.","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"     * Purpose is to process raw input from the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"     * @param rawInput The raw input as input by the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"     * @return The command which is called by the user that can be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"     * @throws DukeException If the parser is unable to parse the raw input.","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    public static Command parse(String rawInput) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        Command command;","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        String details;","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        int timeIdx;","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"        String[] userInput \u003d rawInput.split(\" \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        String userCommand \u003d userInput[0].toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"        switch(userCommand) {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"        case \"done\":","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"                command \u003d new DoneCommand(Integer.parseInt(userInput[1]) - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"                throw new InvalidDoneFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"        case \"list\":","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"                details \u003d userInput[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"                command \u003d new AddCommand(userCommand, details);","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"                throw new InvalidToDoFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"        case \"event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"                timeIdx \u003d userInput[1].indexOf(\" /at \");","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"                details \u003d userInput[1].substring(0, timeIdx);","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"                String at \u003d userInput[1].substring(timeIdx+LENGTH_OF_AT);","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"                command \u003d new AddCommand(userCommand, details, at);","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"                throw new InvalidEventFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"                timeIdx \u003d userInput[1].indexOf(\" /by \");","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"                details \u003d userInput[1].substring(0, timeIdx);","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"                String by \u003d userInput[1].substring(timeIdx+LENGTH_OF_BY);","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"                command \u003d new AddCommand(userCommand, details, by);","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"                throw new InvalidDeadlineFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"                command \u003d new DeleteCommand(Integer.parseInt(userInput[1]) - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"                throw new InvalidDeleteFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"        case \"find\":","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Uxinnn"},"content":"                command \u003d new FindCommand(userInput[1].toLowerCase());","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"                throw new InvalidFindFormatException();","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"Uxinnn"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"            throw new CommandNotFoundException(userCommand);","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"Uxinnn"},"content":"        return command;","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":100}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.StorageFileCreationFailedException;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidTaskTypeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.DataStoreNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"import java.io.File;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"public class Storage {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    private final String FILEPATH;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        this.FILEPATH \u003d filePath;","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    public void createStorageFile() throws StorageFileCreationFailedException {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"            if (file.getParentFile().mkdirs()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"                System.out.println(\"Directories created\");","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"                System.out.println(\"File \" + FILEPATH + \" created\");","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"            throw new StorageFileCreationFailedException(FILEPATH);","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"     * Returns a \u003ccode\u003eTaskList\u003c/code\u003e with data that is stored in the data storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"     * @return A \u003ccode\u003eTaskList\u003c/code\u003e of all tasks stored in the data storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"     * @throws DukeException If the data storage file cannot be found or is corrupted.","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"    public TasksList load() throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"        String DONE_INDICATOR \u003d \"1\";","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"        int TASK_TYPE_INDEX \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"        int DONE_STATUS_INDEX \u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        int TASK_INDEX \u003d 2;","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"        int TASK_DETAILS_INDEX \u003d 3;","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"        Scanner fileScanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"        TasksList taskList \u003d new TasksList();","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"            fileScanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"            throw new DataStoreNotFoundException(FILEPATH);","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"            Task task;","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"            String rawTaskEntry \u003d fileScanner.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"            String[] taskDataPoints \u003d rawTaskEntry.split(\"\\\\|\");","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"            String taskType \u003d taskDataPoints[TASK_TYPE_INDEX];","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"            case \"T\":","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"                task \u003d new ToDo(taskDataPoints[TASK_INDEX]);","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"                if (taskDataPoints[DONE_STATUS_INDEX].equals(DONE_INDICATOR)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"                taskList.addTask(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"            case \"D\":","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"                task \u003d new Deadline(taskDataPoints[TASK_INDEX], taskDataPoints[TASK_DETAILS_INDEX]);","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"                if (taskDataPoints[DONE_STATUS_INDEX].equals(DONE_INDICATOR)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"                taskList.addTask(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"            case \"E\":","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"                task \u003d new Event(taskDataPoints[TASK_INDEX], taskDataPoints[TASK_DETAILS_INDEX]);","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"                if (taskDataPoints[DONE_STATUS_INDEX].equals(DONE_INDICATOR)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"                taskList.addTask(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"            default:","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"                throw new InvalidTaskTypeException(taskType);","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"        return taskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"     * Adds all data in a taskList to the data store.","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"     * @param taskList A \u003ccode\u003eTaskList\u003c/code\u003e whose data is to be saved.","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"Uxinnn"},"content":"     * @throws DukeException If the data storage file cannot be found.","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"Uxinnn"},"content":"    public void save(TasksList taskList) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"Uxinnn"},"content":"        FileWriter fileWriter;","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"Uxinnn"},"content":"        StringBuilder outputString;","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"Uxinnn"},"content":"            fileWriter \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"Uxinnn"},"content":"            outputString \u003d new StringBuilder();","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"Uxinnn"},"content":"            for (int i\u003d0; i\u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"Uxinnn"},"content":"                Task task \u003d taskList.getTask(i);","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"Uxinnn"},"content":"                outputString.append(task.formatForDataStore());","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"Uxinnn"},"content":"            fileWriter.write(outputString.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"Uxinnn"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"Uxinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"Uxinnn"},"content":"            throw new DataStoreNotFoundException(FILEPATH);","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":117}},{"path":"src/main/java/duke/TasksList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.TaskHasBeenDoneException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"public class TasksList {","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    public TasksList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"     * Initialises a new \u003ccode\u003eTaskList\u003c/code\u003e with the same tasks as the input \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"     * @param oldTaskList The \u003ccode\u003eTaskList\u003c/code\u003e whose tasks are to be copied.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    public TasksList(TasksList oldTaskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        this.tasks \u003d oldTaskList.tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    public void deleteTask(int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"    public String getTaskString(int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"        Task task \u003d getTask(taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        return task.toString();","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"    public void markTaskAsDone(int taskIndex) throws TaskHasBeenDoneException {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"        if (task.getIsDone()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"            throw new TaskHasBeenDoneException(taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"        task.markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"            if (task.getDescription().toLowerCase().contains(keyword)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"                foundTasks.add(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"        return foundTasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":62}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"public class Ui {","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    private final Scanner SCANNER \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"        return SCANNER.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        showLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        showLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"    public void showLine() {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"    public void showGoodbye() {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"     * Prints all tasks within the input \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"     * @param tasks The \u003ccode\u003eTaskList\u003c/code\u003e whose tasks are to be printed.","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"    public void showAllTasks(TasksList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"        for (int i\u003d0; i\u003ctasks.getSize(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\t\" + (i+1) + \".\" + tasks.getTaskString(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"     * Prints a notification to show that a task has been added to a \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"     * @param task The task that has been added.","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"     * @param taskListSize The number of tasks within the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"    public void showTaskAdded(Task task, int taskListSize) {","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tNow you have \" + taskListSize + \" tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"     * Prints a notification to show that a task has been marked as done.","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"     * @param task The task that has been marked as done.","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"    public void showTaskDone(Task task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\t\\t[\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"     * Prints a notification to show that a task has been deleted.","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"     * @param task The task that has been deleted.","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"     * @param taskListSize The number of tasks within the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"    public void showTaskDeleted(Task task, int taskListSize) {","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tNoted. I have removed this task:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tNow you have \" + taskListSize + \" tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"    public void showFoundTasks(ArrayList\u003cTask\u003e foundTasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"        for (int i\u003d0; i\u003cfoundTasks.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\t\" + (i+1) + \".\" + foundTasks.get(i).toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"An error occurred when loading data store.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"Uxinnn"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":93}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidTaskTypeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import duke.TasksList;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    private final String taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    private final String details;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    private String time;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    public AddCommand(String taskType, String details) {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        this.details \u003d details;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    public AddCommand(String taskType, String details, String time) {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        this.details \u003d details;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"     * Adds the task of the specified taskType to the \u003ccode\u003eTaskList\u003c/code\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e which new task will be added to.","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to print out what has been added to the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e which helps to save the resultant tasks to the data storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"     * @throws DukeException If the task type cannot be recognised.","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TasksList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"        Task task;","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"            task \u003d new ToDo(details);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"        case \"event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"            task \u003d new Event(details, time);","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"            task \u003d new Deadline(details, time);","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"            throw new InvalidTaskTypeException(taskType);","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"        ui.showTaskAdded(task, taskList.getSize());","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":56}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.TasksList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":" * Parent abstract class of all commands that Duke can perform.","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"abstract public class Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"        return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    public abstract void execute(TasksList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":17}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import duke.TasksList;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    int taskIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"     * Deletes the task at the \u003ccode\u003etaskIndex\u003c/code\u003e of this instance.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e which task will be deleted from.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to print out the task that has been deleted to the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e which helps to save the resultant tasks to the data storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"     * @throws DukeException If the \u003ccode\u003etaskIndex\u003c/code\u003e given cannot be found in \u003ccode\u003etaskList\u003c/code\u003e.","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TasksList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        Task task;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"            task \u003d taskList.getTask(taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"            taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"            throw new InvalidTaskIndexException(taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"        ui.showTaskDeleted(task, taskList.getSize());","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":36}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.exceptions.InvalidTaskIndexException;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import duke.TasksList;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    public int taskIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    public DoneCommand(int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"     * Finds and mark a task as done.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e whose task is to be marked as done.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to print out the task that has been marked as done to the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e which helps to save the resultant tasks to the data storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"     * @throws DukeException If the \u003ccode\u003etaskIndex\u003c/code\u003e given cannot be found in \u003ccode\u003etaskList\u003c/code\u003e.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TasksList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"            taskList.markTaskAsDone(taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"            throw new InvalidTaskIndexException(taskIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        ui.showTaskDone(taskList.getTask(taskIndex));","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"        storage.save(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":33}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.TasksList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"        return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"     * Exits the application.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e used in the application.","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e used in the application.","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e used in the application.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TasksList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        ui.showGoodbye();","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    };","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":23}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import duke.TasksList;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    private String keyword;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"     * Finds all tasks in the \u003ccode\u003eTaskList\u003c/code\u003e that contains the \u003ccode\u003ekeyword\u003c/code\u003e in their description.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e which tasks are to be searched.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to print out the tasks that has been found to the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e which helps to save the resultant tasks to the data storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TasksList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTask(keyword);","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        ui.showFoundTasks(foundTasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":27}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.commands;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.TasksList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"     * Shows a list of all the tasks in the \u003ccode\u003eTaskList\u003c/code\u003e.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"     * @param taskList The \u003ccode\u003eTaskList\u003c/code\u003e whose tasks are to be displayed.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"     * @param ui The \u003ccode\u003eUi\u003c/code\u003e to print out the tasks in the \u003ccode\u003eTaskList\u003c/code\u003e to the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"     * @param storage The \u003ccode\u003eStorage\u003c/code\u003e which helps to save the tasks to the data storage.","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    public void execute(TasksList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"        ui.showAllTasks(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":18}},{"path":"src/main/java/duke/exceptions/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":" * Thrown when the input command by the user cannot be recognised.","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"public class CommandNotFoundException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    public CommandNotFoundException(String command) {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe command \u0027\" + command + \"\u0027 is not recognised.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":10}},{"path":"src/main/java/duke/exceptions/DataStoreNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when the file containing the data that are stored cannot be found.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class DataStoreNotFoundException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public DataStoreNotFoundException(String filePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe file path \u0027\" + filePath + \"\u0027 cannot be found.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":11}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Parent class of all Duke specific exceptions.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    protected String message;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"        return message;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":13}},{"path":"src/main/java/duke/exceptions/InvalidDeadlineFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when the format of the \u003ccode\u003eDeadline\u003c/code\u003e task entered by the user is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class InvalidDeadlineFormatException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public InvalidDeadlineFormatException() {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for deadline!\\n\\tCorrect format: deadline \u003cdetails\u003e /by \u003ctime\u003e\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":11}},{"path":"src/main/java/duke/exceptions/InvalidDeleteFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when the format of the \u003ccode\u003eDelete\u003c/code\u003e task entered by the user is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class InvalidDeleteFormatException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public InvalidDeleteFormatException() {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for delete!\\n\\tCorrect format: delete \u003ctaskIndex\u003e\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":11}},{"path":"src/main/java/duke/exceptions/InvalidDoneFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when the format of the \u003ccode\u003eDone\u003c/code\u003e task entered by the user is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class InvalidDoneFormatException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public InvalidDoneFormatException() {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for done!\\n\\tCorrect format: done \u003ctaskIndex\u003e\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":11}},{"path":"src/main/java/duke/exceptions/InvalidEventFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when the format of the \u003ccode\u003eEvent\u003c/code\u003e task entered by the user is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class InvalidEventFormatException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public InvalidEventFormatException() {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for event!\\n\\tCorrect format: event \u003cdetails\u003e /at \u003clocation\u003e\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":11}},{"path":"src/main/java/duke/exceptions/InvalidFindFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class InvalidFindFormatException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    public InvalidFindFormatException() {","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"Wrong format for find!\\nCorrect format: find \u003ckeyword\u003e\";","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":7}},{"path":"src/main/java/duke/exceptions/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when a task with the input \u003ccode\u003etaskIndex\u003c/code\u003e cannot be found.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class InvalidTaskIndexException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public InvalidTaskIndexException(int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThere is no task with task index \" + (taskIndex+1) + \".\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":11}},{"path":"src/main/java/duke/exceptions/InvalidTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when the task type entered by the user cannot be recognised or","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" * when the task type stored in the data store cannot be recognised.","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"public class InvalidTaskTypeException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    public InvalidTaskTypeException(String taskType) {","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe task type \u0027\" + taskType + \"\u0027 is not recognised.\\n\\tData in data store is corrupted.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":12}},{"path":"src/main/java/duke/exceptions/InvalidToDoFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when the format of the \u003ccode\u003eToDo\u003c/code\u003e task entered by the user is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class InvalidToDoFormatException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public InvalidToDoFormatException() {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tWrong format for todo!\\n\\tCorrect format: todo \u003cdetails\u003e\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":11}},{"path":"src/main/java/duke/exceptions/StorageFileCreationFailedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when the file to be used for data storage cannot be created.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class StorageFileCreationFailedException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public StorageFileCreationFailedException(String filePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tThe file \u0027\" + filePath + \"\u0027 cannot be created.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":11}},{"path":"src/main/java/duke/exceptions/TaskHasBeenDoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":" * Thrown when a task that has already been marked as done is getting marked as done again.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"public class TaskHasBeenDoneException extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public TaskHasBeenDoneException (int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        message \u003d \"\\tTask \" + (taskIndex+1) + \" has already been marked as done.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Uxinnn":11}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    protected String by;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    protected String icon;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"        this.icon \u003d \"D\";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"        return \"[\" + getIcon() + \"]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"        return by;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    public String getIcon() {","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        return icon;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    public String formatForDataStore() {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        return \"D|\" + ((getIsDone()) ? 1 : 0) + \"|\" + getDescription() + \"|\" + getBy() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":29}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    protected String at;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    protected String icon;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"        this.icon \u003d \"E\";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    public String getAt() {","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"        return at;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    public String getIcon() {","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"        return icon;","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        return \"[\" + getIcon() + \"]\" + super.toString() + \" (at: \" + getAt() + \")\";","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    public String formatForDataStore() {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        return \"E|\" + ((getIsDone()) ? 1 : 0) + \"|\" + getDescription() + \"|\" + getAt() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":29}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    protected String icon;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    public abstract String formatForDataStore();","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"        return (getIsDone() ? \"X\" : \" \");","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"        return isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Uxinnn":36}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    protected String icon;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"        this.icon \u003d \"T\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    public String getIcon() {","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"        return icon;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"        return \"[\" + getIcon() + \"]\" + super.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    public String formatForDataStore() {","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        return \"T|\" + ((getIsDone()) ? 1 : 0) + \"|\" + getDescription() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"baba","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"todo read book","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"todo join sports club","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"done 4","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"todo borrow book","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"delete 3","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"event baba at here","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"deadline asdf","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"done a","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"done 1000","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Uxinnn":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Uxinnn":1,"-":37}}]
