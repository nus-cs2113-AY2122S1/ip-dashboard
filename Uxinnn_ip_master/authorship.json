[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Uxinnn":1,"-":23}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    private static final TasksList tasks \u003d new TasksList();","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"        String rawInput;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"        DukeCommand dukeCommand;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"        try {  // Initialize ./data/duke.txt to store tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"            tasks.initDataStore();","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tDirectory does not exist, error in loading data store.\\n\" +","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"                    \"Please check if ./data/duke.txt exists.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        try {  // Load all tasks stored in ./data/duke.txt","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"            tasks.loadTasks();","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tFile is not found.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tInvalid file type in data store.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"        printWelcomeBanner();","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"        rawInput \u003d scanner.nextLine();","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        while (true) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"            try {","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"                dukeCommand \u003d getDukeCommand(rawInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"                System.out.println(\"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"                printHorizontalLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"                rawInput \u003d scanner.nextLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"                continue;","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"            switch (dukeCommand) {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"            case BYE:","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"                printGoodbyeMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"                return;","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"            case DONE:","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"                tasks.markTaskAsDone(rawInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"            case LIST:","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"                tasks.printTasks();","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"            case DELETE:","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"                try {","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"                    tasks.deleteTask(rawInput);","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"                    System.out.println(\"\\tWrong format, please retype with format `delete \u003ctaskIndex\u003e`.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"            case TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"                tasks.addToDo(rawInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"            case EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"                tasks.addEvent(rawInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"                tasks.addDeadline(rawInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"            default:","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"                System.out.println(\"Invalid command issued!\");","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"            try {  // Update ./data/duke.txt so that all tasks are stored","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"                tasks.saveTasks();","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"                System.out.println(\"\\tDirectory does not exist, error in loading data store.\\n\" +","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"                        \"Please check if ./data/duke.txt exists.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"            printHorizontalLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"            rawInput \u003d scanner.nextLine();","lastModifiedDate":"2021-09-04"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"    // Identify and return the duke command issued by user","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"    public static DukeCommand getDukeCommand(String rawInput) throws DukeException{","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"        if (rawInput.equals(\"bye\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"            return DukeCommand.BYE;","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"        } else if (rawInput.startsWith(\"done\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"Uxinnn"},"content":"            return DukeCommand.DONE;","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"        } else if (rawInput.equals(\"list\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"            return DukeCommand.LIST;","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"        } else if (rawInput.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"            return DukeCommand.TODO;","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"Uxinnn"},"content":"        } else if (rawInput.startsWith(\"event\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"            return DukeCommand.EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"        } else if (rawInput.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"Uxinnn"},"content":"            return DukeCommand.DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"Uxinnn"},"content":"        } else if (rawInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"Uxinnn"},"content":"            return DukeCommand.DELETE;","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"Uxinnn"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"Uxinnn"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"Uxinnn"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"Uxinnn"},"content":"    public static void printWelcomeBanner() {","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"Uxinnn"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"Uxinnn"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"Uxinnn"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"Uxinnn"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"Uxinnn"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"Uxinnn"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke\");","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tWhat can I do for you?\");","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Uxinnn"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":121,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"Uxinnn"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"Uxinnn"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Uxinnn":122,"-":4}},{"path":"src/main/java/duke/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public enum DukeCommand {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    BYE, DONE, LIST, TODO, EVENT, DEADLINE, DELETE;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Uxinnn":5}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class DukeException extends Exception{ }","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Uxinnn":3}},{"path":"src/main/java/duke/TasksList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"import java.io.File;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"public class TasksList {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    private static final int LENGTH_OF_AT \u003d 4;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    private static final int LENGTH_OF_BY \u003d 4;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    private static final int LENGTH_OF_TODO \u003d 5;","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    private static final int LENGTH_OF_EVENT \u003d 6;","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    private static final int LENGTH_OF_DEADLINE \u003d 9;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    private static final String FILE_DIR \u003d \"./data\";","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    public void initDataStore() throws IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        File data_dir \u003d new File(FILE_DIR);","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"        if (data_dir.mkdir()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"Directory \" + FILE_DIR + \" created\");","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"        File f \u003d new File(FILE_DIR + \"/\" + FILE_NAME);","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"        if (f.createNewFile()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"File \" + FILE_NAME + \" created\");","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"Uxinnn"},"content":"    // Loads tasks that are stored in ./data/duke.txt","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"Uxinnn"},"content":"    public void loadTasks() throws FileNotFoundException, DukeException{","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"Uxinnn"},"content":"        File file \u003d new File(FILE_DIR + \"/\" + FILE_NAME);","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"Uxinnn"},"content":"        Scanner file_scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"Uxinnn"},"content":"        while (file_scanner.hasNext()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"Uxinnn"},"content":"            Task task;","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"Uxinnn"},"content":"            String raw_task_entry \u003d file_scanner.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"Uxinnn"},"content":"            String[] task_data_points \u003d raw_task_entry.split(\"\\\\|\");","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"Uxinnn"},"content":"            switch (task_data_points[0]) {","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"Uxinnn"},"content":"            case \"T\":","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"Uxinnn"},"content":"                task \u003d new ToDo(task_data_points[2]);","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"Uxinnn"},"content":"                if (task_data_points[1].equals(\"1\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"Uxinnn"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"Uxinnn"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"Uxinnn"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"Uxinnn"},"content":"            case \"D\":","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"Uxinnn"},"content":"                task \u003d new Deadline(task_data_points[2], task_data_points[3]);","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"Uxinnn"},"content":"                if (task_data_points[1].equals(\"1\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"Uxinnn"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"Uxinnn"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"Uxinnn"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Uxinnn"},"content":"            case \"E\":","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"Uxinnn"},"content":"                task \u003d new Event(task_data_points[2], task_data_points[3]);","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"Uxinnn"},"content":"                if (task_data_points[1].equals(\"1\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"Uxinnn"},"content":"                    task.markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"Uxinnn"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"Uxinnn"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"Uxinnn"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"Uxinnn"},"content":"            default:","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"Uxinnn"},"content":"                throw new DukeException();","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"Uxinnn"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"Uxinnn"},"content":"    // Saves all tasks to ./data/duke.txt","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"Uxinnn"},"content":"    public void saveTasks() throws IOException{","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"Uxinnn"},"content":"        FileWriter file_writer \u003d new FileWriter(FILE_DIR + \"/\" + FILE_NAME);","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"Uxinnn"},"content":"        StringBuilder output_string \u003d new StringBuilder();","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"Uxinnn"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"Uxinnn"},"content":"            output_string.append(task.formatForDataStore());","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"Uxinnn"},"content":"        file_writer.write(output_string.toString());","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"Uxinnn"},"content":"        file_writer.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"Uxinnn"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Uxinnn"},"content":"        return tasks.size();","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":88,"author":{"gitId":"Uxinnn"},"content":"    public String getTaskString(int taskIndex) {","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"Uxinnn"},"content":"        Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":90,"author":{"gitId":"Uxinnn"},"content":"        return task.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"Uxinnn"},"content":"    public void addToDo(String rawInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"Uxinnn"},"content":"            String description \u003d rawInput.substring(LENGTH_OF_TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"Uxinnn"},"content":"            tasks.add(new ToDo(description));","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\t\\t\" + this.getTaskString(this.getSize() - 1));","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tNow you have \" + this.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"Uxinnn"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tOOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"Uxinnn"},"content":"    public void addEvent(String rawInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"Uxinnn"},"content":"        try{","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"Uxinnn"},"content":"            int idx \u003d rawInput.indexOf(\"/at\");","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"Uxinnn"},"content":"            String description \u003d rawInput.substring(LENGTH_OF_EVENT, idx-1);","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"Uxinnn"},"content":"            String at \u003d rawInput.substring(idx+LENGTH_OF_AT);","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"Uxinnn"},"content":"            tasks.add(new Event(description, at));","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\t\\t\" + this.getTaskString(this.getSize() - 1));","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tNow you have \" + this.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"Uxinnn"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tWrong deadline format! Please follow `deadline \u003cdescription\u003e /at \u003cat\u003e`.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Uxinnn"},"content":"    public void addDeadline(String rawInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"Uxinnn"},"content":"            int idx \u003d rawInput.indexOf(\"/by\");","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"Uxinnn"},"content":"            String description \u003d rawInput.substring(LENGTH_OF_DEADLINE, idx-1);","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"Uxinnn"},"content":"            String by \u003d rawInput.substring(idx+LENGTH_OF_BY);","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"Uxinnn"},"content":"            tasks.add(new Deadline(description, by));","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tGot it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\t\\t\" + this.getTaskString(this.getSize() - 1));","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tNow you have \" + this.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"Uxinnn"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tWrong deadline format! Please follow `deadline \u003cdescription\u003e /by \u003cby\u003e`.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"Uxinnn"},"content":"    public void markTaskAsDone(String rawInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"Uxinnn"},"content":"            int taskIndex \u003d Integer.parseInt(rawInput.substring(5)) - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"Uxinnn"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"Uxinnn"},"content":"            task.markAsDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\t\\t[\" + task.getStatusIcon() + \"] \" + task.getDescription());","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"Uxinnn"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tWrong format, please retype with format `done \u003ctaskIndex\u003e`.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"Uxinnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\t Task index is out of range.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"Uxinnn"},"content":"    public void deleteTask(String rawInput) {","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"Uxinnn"},"content":"        int taskIndex \u003d Integer.parseInt(rawInput.substring(7)) - 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"Uxinnn"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"Uxinnn"},"content":"            Task task \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tNoted. I have removed this task:\");","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\t\\t\" + task.toString());","lastModifiedDate":"2021-09-13"},{"lineNumber":153,"author":{"gitId":"Uxinnn"},"content":"            tasks.remove(taskIndex);","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tNow you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":155,"author":{"gitId":"Uxinnn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\tThere is no task with index \" + (taskIndex+1) + \".\");","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":158,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":160,"author":{"gitId":"Uxinnn"},"content":"    public void printTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"Uxinnn"},"content":"        System.out.println(\"\\tHere are the tasks in your list:\");","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"Uxinnn"},"content":"        for (int i\u003d0; i\u003cthis.getSize(); i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"Uxinnn"},"content":"            System.out.println(\"\\t\" + (i+1) + \".\" + getTaskString(i));","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"Uxinnn"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":166}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    protected String by;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    protected String icon;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"        this.icon \u003d \"D\";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"        return \"[\" + getIcon() + \"]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"        return by;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    public String getIcon() {","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        return icon;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    public String formatForDataStore() {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        return \"D|\" + ((getIsDone()) ? 1 : 0) + \"|\" + getDescription() + \"|\" + getBy() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":29}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    protected String at;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    protected String icon;","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"        this.icon \u003d \"E\";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    public String getAt() {","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"        return at;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"    public String getIcon() {","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"        return icon;","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        return \"[\" + getIcon() + \"]\" + super.toString() + \" (at: \" + getAt() + \")\";","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    public String formatForDataStore() {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        return \"E|\" + ((getIsDone()) ? 1 : 0) + \"|\" + getDescription() + \"|\" + getAt() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":29}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    protected String icon;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"        return \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"        return (getIsDone() ? \"X\" : \" \");","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"        return isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"Uxinnn"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"Uxinnn"},"content":"        return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"Uxinnn"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"Uxinnn"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"Uxinnn"},"content":"    public abstract String formatForDataStore();","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"Uxinnn":35}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"    protected String icon;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"        this.icon \u003d \"T\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"    public String getIcon() {","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"        return icon;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"        return \"[\" + getIcon() + \"]\" + super.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"Uxinnn"},"content":"    public String formatForDataStore() {","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"Uxinnn"},"content":"        return \"T|\" + ((getIsDone()) ? 1 : 0) + \"|\" + getDescription() + \"\\n\";","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"Uxinnn"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Uxinnn"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Uxinnn"},"content":"baba","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Uxinnn"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Uxinnn"},"content":"todo read book","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Uxinnn"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Uxinnn"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Uxinnn"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Uxinnn"},"content":"todo join sports club","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Uxinnn"},"content":"done 4","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Uxinnn"},"content":"todo borrow book","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Uxinnn"},"content":"delete 3","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Uxinnn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Uxinnn"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Uxinnn"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Uxinnn"},"content":"event baba at here","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"deadline asdf","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"Uxinnn"},"content":"done a","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"done 1000","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"Uxinnn"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Uxinnn":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Uxinnn"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Uxinnn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Uxinnn":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Uxinnn"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Uxinnn":1,"-":37}}]
