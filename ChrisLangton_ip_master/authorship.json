[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"[D][ ] increment (by: Oct 01 2021 6.00PM) ","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"[T][ ] increment      ","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"[T][ ] class later      ","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"[T][ ] drink water     ","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"ChrisLangton":4}},{"path":"src/main/java/duke/exception/CommandInvalidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":" * Prints exception message for trying to input an invalid command","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public class CommandInvalidException extends Exception","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    public static final String MESSAGE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"     * Prints exception message to the command line to suggest to the user to view the valid commands of this program","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    public void printCommandInvalidException()","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"⚠️ no such command exists - try \\\"print commands\\\" to see list of valid commands, Hero. ⚠️\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ChrisLangton":19}},{"path":"src/main/java/duke/exception/DeadlineInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":" * Prints exception message for trying to key in a deadline with an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public class DeadlineInvalidFormatException extends Exception","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    public static final String MESSAGE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"     * Prints exception message including the correct format","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    public void printDeadlineInvalidFormatException()","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"⚠️ mission format incorrect - try \\\"deadline (description) /by (date \u0026 time)\\\", Hero. ⚠️\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ChrisLangton":19}},{"path":"src/main/java/duke/exception/EventInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":" * Prints exception message for trying to key in an event with an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public class EventInvalidFormatException extends Exception","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    public static final String MESSAGE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"     * Prints exception message including the correct format","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    public void printEventInvalidFormatException()","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"⚠️ mission format incorrect - try \\\"event (description) /at (date \u0026 time)\\\", Hero. ⚠️\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ChrisLangton":19}},{"path":"src/main/java/duke/exception/NoSuchTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":" * Prints exception message for trying to find/mark as complete a non-existent task","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public class NoSuchTaskException extends Exception","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    public static final String MESSAGE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"     * Prints exception message to prompt user to try a different task number","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    public void printNoSuchTaskException()","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"⚠️ no such active mission exists - try again, Hero. ⚠️\");","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ChrisLangton":18}},{"path":"src/main/java/duke/exception/TaskNumberInvalidException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":" * Prints exception message for trying to access a task using the wrong format","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public class TaskNumberInvalidException extends Exception","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    public static final String MESSAGE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"     * Prints error message including the correct format","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    public void printTaskNumberInvalidException()","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"⚠️ mission ID must be numerical - try \\\"done (task number)\\\", Hero. ⚠️\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ChrisLangton":19}},{"path":"src/main/java/duke/exception/TodoInvalidFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":" * Prints exception message for trying to key in a todo with an invalid format","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public class TodoInvalidFormatException extends Exception","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    public static final String MESSAGE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"     * Prints exception message including the correct format","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    public void printTodoInvalidFormatException()","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"⚠️ mission format incorrect - try \\\"todo (description)\\\", Hero. ⚠️\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ChrisLangton":20}},{"path":"src/main/java/duke/templar/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.templar;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":" * Defines the type of task known as Deadline, with a description and a date","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"public class Deadline extends Task","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"    protected LocalDateTime deadlineDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    public Deadline(String deadlineDescription, LocalDateTime deadlineDate)","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"        super(deadlineDescription);","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h.mma\")) + \") \";","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ChrisLangton":24}},{"path":"src/main/java/duke/templar/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.templar;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":" * Runs the Duke program until the session is over","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"public class Duke","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"    public static final String FILE_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"     * The main method that runs the Duke program","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"     * @param args","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"     * @throws CommandInvalidException","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"     * @throws DeadlineInvalidFormatException","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"     * @throws TodoInvalidFormatException","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"     * @throws EventInvalidFormatException","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"     * @throws TaskNumberInvalidException","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"     * @throws NoSuchTaskException","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"    public static void main(String[] args) throws CommandInvalidException, DeadlineInvalidFormatException, TodoInvalidFormatException,","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"            EventInvalidFormatException, TaskNumberInvalidException, NoSuchTaskException, IOException","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"        Ui.printHelloMsg();","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"        Storage activateStorage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"        Parser activateParser \u003d activateStorage.loadSave(tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"        boolean endSession \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"        while (!endSession) {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"            Ui.printHero();","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"            String line; // the task","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"            Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"            ","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"            activateParser.processInput(line, tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"            TaskList TL \u003d new TaskList();","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"            if (line.contains(\"bye\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"                activateStorage.writeSave(activateParser);","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"                Ui.printGoodbyeMsg();","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"                endSession \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ChrisLangton":58}},{"path":"src/main/java/duke/templar/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.templar;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":" * Defines the type of task known as Event, with a description and a date","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public class Event extends Task","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"    String eventDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    public Event(String description, String eventDate)","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventDate + \") \";","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ChrisLangton":21}},{"path":"src/main/java/duke/templar/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.templar;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import duke.exception.CommandInvalidException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import duke.exception.EventInvalidFormatException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"import duke.exception.TaskNumberInvalidException;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"import duke.exception.DeadlineInvalidFormatException;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"import duke.exception.TodoInvalidFormatException;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":" * Parses the input to make sense of the user command by","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":" * comparing it against a fixed set of valid commands","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"public class Parser","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"    boolean valid;","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"    public final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"    int[] taskDone \u003d new int[100]; //this array stores 1 or 0 - task done or not","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    String[] validCommands \u003d new String[] {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"        \"print commands\",","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"        \"todo\" ,","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"        \"deadline\",","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"        \"event\" ,","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"        \"list\" ,","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"        \"done\" ,","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"        \"delete\",","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"        \"find\",","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"        \"bye\"","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"    };","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    public Parser(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"     * Processes the input to determine which class of task it is and then create the correct object accordingly","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"     * as well as print the appropriate output to accompany task","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"     * @param line","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"     * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"     * @throws CommandInvalidException","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"     * @throws DeadlineInvalidFormatException","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"     * @throws TodoInvalidFormatException","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"     * @throws EventInvalidFormatException","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"     * @throws TaskNumberInvalidException","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"     * @throws NoSuchTaskException","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"    public void processInput(String line, ArrayList\u003cTask\u003e tasks) throws CommandInvalidException, DeadlineInvalidFormatException, TodoInvalidFormatException, EventInvalidFormatException, TaskNumberInvalidException, NoSuchTaskException","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"        valid \u003d false; //default case","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"            for (int i \u003d 0; i \u003c validCommands.length; i++) {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"                if (line.startsWith(validCommands[i])) {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"                    valid \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"                    break;","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"            if (!valid) {","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"                throw new CommandInvalidException();","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"ChrisLangton"},"content":"            if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"ChrisLangton"},"content":"                String[] firstSplit \u003d line.split(\" \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"ChrisLangton"},"content":"                if (firstSplit.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"ChrisLangton"},"content":"                    throw new DeadlineInvalidFormatException();","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"ChrisLangton"},"content":"                String[] secondSplit \u003d firstSplit[1].split(\" /by \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"ChrisLangton"},"content":"                if (secondSplit.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"ChrisLangton"},"content":"                    throw new DeadlineInvalidFormatException();","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"ChrisLangton"},"content":"                String deadlineDescription \u003d secondSplit[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"ChrisLangton"},"content":"                String deadlineDate \u003d secondSplit[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"ChrisLangton"},"content":"                LocalDateTime deadlineFormatted \u003d parseDateTime(deadlineDate, \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"ChrisLangton"},"content":"                Deadline newDeadline \u003d new Deadline(deadlineDescription, deadlineFormatted);","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"ChrisLangton"},"content":"                TaskList.addTask(newDeadline,tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"ChrisLangton"},"content":"                Ui.printTaskAcquired(newDeadline, tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"ChrisLangton"},"content":"            } else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"ChrisLangton"},"content":"                String[] todoSplit \u003d line.split(\" \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"ChrisLangton"},"content":"                if (todoSplit.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"ChrisLangton"},"content":"                    throw new TodoInvalidFormatException();","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"ChrisLangton"},"content":"                String todoDescription \u003d todoSplit[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"ChrisLangton"},"content":"                ToDo newToDo \u003d new ToDo(todoDescription);","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"ChrisLangton"},"content":"                TaskList.addTask(newToDo,tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"ChrisLangton"},"content":"                Ui.printTaskAcquired(newToDo, tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"ChrisLangton"},"content":"            } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"ChrisLangton"},"content":"                String[] firstSplit \u003d line.split(\" \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"ChrisLangton"},"content":"                if (firstSplit.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"ChrisLangton"},"content":"                    throw new EventInvalidFormatException();","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"ChrisLangton"},"content":"                String[] secondSplit \u003d firstSplit[1].split(\" /at \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"ChrisLangton"},"content":"                if (secondSplit.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"ChrisLangton"},"content":"                    throw new EventInvalidFormatException();","lastModifiedDate":"2021-09-07"},{"lineNumber":99,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"ChrisLangton"},"content":"                String eventDescription \u003d secondSplit[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"ChrisLangton"},"content":"                String eventDate \u003d secondSplit[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"ChrisLangton"},"content":"                Event newEvent \u003d new Event(eventDescription, eventDate);","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"ChrisLangton"},"content":"                TaskList.addTask(newEvent,tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"ChrisLangton"},"content":"                Ui.printTaskAcquired(newEvent, tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"ChrisLangton"},"content":"            if (line.startsWith(\"print commands\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"ChrisLangton"},"content":"                Ui.printCommands(validCommands);","lastModifiedDate":"2021-09-24"},{"lineNumber":109,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"ChrisLangton"},"content":"            if (line.contains(\"list\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"ChrisLangton"},"content":"                Ui.printList(tasks); //print the current list","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"ChrisLangton"},"content":"            } else if (line.startsWith(\"done\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"ChrisLangton"},"content":"                String[] number \u003d line.split(\" \");","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"ChrisLangton"},"content":"                if (number.length !\u003d 2 || !isNumerical(number[1])) {","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"ChrisLangton"},"content":"                    throw new TaskNumberInvalidException();","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"ChrisLangton"},"content":"                int taskNumber \u003d Integer.parseInt(number[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"ChrisLangton"},"content":"                if (taskNumber \u003c\u003d tasks.size()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"ChrisLangton"},"content":"                    taskDone[TaskList.doneTask(taskNumber, tasks)] \u003d 1; //mark task as done in memory","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"ChrisLangton"},"content":"                } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"ChrisLangton"},"content":"                    throw new NoSuchTaskException();","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"ChrisLangton"},"content":"            } else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"ChrisLangton"},"content":"                String[] number \u003d line.split(\" \");","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"ChrisLangton"},"content":"                if (number.length !\u003d 2 || !isNumerical(number[1])) {","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"ChrisLangton"},"content":"                    throw new TaskNumberInvalidException();","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"ChrisLangton"},"content":"                int taskNumber \u003d Integer.parseInt(number[1]);","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"ChrisLangton"},"content":"                if (taskNumber \u003c\u003d tasks.size()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"ChrisLangton"},"content":"                    TaskList.deleteTask(taskNumber, tasks); //mark task as done in memory","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"ChrisLangton"},"content":"                } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"ChrisLangton"},"content":"                    throw new NoSuchTaskException();","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"ChrisLangton"},"content":"            } else if (line.startsWith(\"find\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"ChrisLangton"},"content":"                String[] keyword \u003d line.split(\" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"ChrisLangton"},"content":"                TaskList.findTask(keyword[1],tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"ChrisLangton"},"content":"            } if (!line.startsWith(\"bye\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"ChrisLangton"},"content":"                Ui.printService();","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"ChrisLangton"},"content":"        catch (CommandInvalidException commandInvalidException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":145,"author":{"gitId":"ChrisLangton"},"content":"            commandInvalidException.printCommandInvalidException();","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"ChrisLangton"},"content":"        catch (DeadlineInvalidFormatException deadlineInvalidFormatException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"ChrisLangton"},"content":"            deadlineInvalidFormatException.printDeadlineInvalidFormatException();","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"ChrisLangton"},"content":"        catch (EventInvalidFormatException eventInvalidFormatException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":151,"author":{"gitId":"ChrisLangton"},"content":"            eventInvalidFormatException.printEventInvalidFormatException();","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"ChrisLangton"},"content":"        catch (TodoInvalidFormatException todoInvalidFormatException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"ChrisLangton"},"content":"            todoInvalidFormatException.printTodoInvalidFormatException();","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":156,"author":{"gitId":"ChrisLangton"},"content":"        catch (TaskNumberInvalidException taskNumberInvalidException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"ChrisLangton"},"content":"            taskNumberInvalidException.printTaskNumberInvalidException();","lastModifiedDate":"2021-09-07"},{"lineNumber":158,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"ChrisLangton"},"content":"        catch (NoSuchTaskException noSuchTaskException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":160,"author":{"gitId":"ChrisLangton"},"content":"            noSuchTaskException.printNoSuchTaskException();","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":162,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"ChrisLangton"},"content":"     * Converts the string into a LocalDateTime variable with the right format","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"ChrisLangton"},"content":"     * @param deadlineDate","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"ChrisLangton"},"content":"     * @param format","lastModifiedDate":"2021-09-28"},{"lineNumber":169,"author":{"gitId":"ChrisLangton"},"content":"     * @return parsed deadlineDate","lastModifiedDate":"2021-09-28"},{"lineNumber":170,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"ChrisLangton"},"content":"    public static LocalDateTime parseDateTime(String deadlineDate, String format) {","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"ChrisLangton"},"content":"        DateTimeFormatter properFormat \u003d DateTimeFormatter.ofPattern(format);","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"ChrisLangton"},"content":"        return LocalDateTime.parse(deadlineDate, properFormat);","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"ChrisLangton"},"content":"     * Performs a boolean check if the input is numerical","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"ChrisLangton"},"content":"     * @param input","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"ChrisLangton"},"content":"     * @return boolean","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"ChrisLangton"},"content":"    public static boolean isNumerical(String input) {","lastModifiedDate":"2021-09-07"},{"lineNumber":182,"author":{"gitId":"ChrisLangton"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":183,"author":{"gitId":"ChrisLangton"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2021-09-07"},{"lineNumber":184,"author":{"gitId":"ChrisLangton"},"content":"            return true;","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":186,"author":{"gitId":"ChrisLangton"},"content":"        catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":187,"author":{"gitId":"ChrisLangton"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":188,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":189,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":190,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-07"},{"lineNumber":191,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ChrisLangton":191}},{"path":"src/main/java/duke/templar/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.templar;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":" * Loads and interprets the saved task list from the previous run","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":" * as well as writes the next save once the user ends the session","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"public class Storage","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    private final File saveFile;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"    public Storage(String filePath)","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"        this.saveFile \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"     * creates new file to save the new task list in","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    public void createFile() throws IOException","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"        Files.createDirectories(Path.of(saveFile.getParent()));","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"        saveFile.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"     * Makes sense of the current saved file for the user to view on the command line","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"     * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"     * @return the parser used","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"    public Parser loadSave (ArrayList\u003cTask\u003e tasks) throws FileNotFoundException","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"        Parser TM \u003d new Parser(tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"            Scanner in \u003d new Scanner(saveFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"            if (in !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"                while (in.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"                    String line \u003d in.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"                    if (line.contains(\"[T]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"                        String[] todoSplit \u003d line.split(\"] \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"                        String todoDescription \u003d todoSplit[1];","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"                        ToDo newToDo \u003d new ToDo(todoDescription);","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"                        TM.tasks.add(newToDo);","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"ChrisLangton"},"content":"                    else if (line.contains(\"[D]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"ChrisLangton"},"content":"                        String[] firstDeadlineSplit \u003d line.split(\"] \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"ChrisLangton"},"content":"                        String[] secondDeadlineSplit \u003d firstDeadlineSplit[1].split(\" \\\\(by: \", 2); //settles description","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"ChrisLangton"},"content":"                        String[] thirdDeadlineSplit \u003d secondDeadlineSplit[1].split(\"\\\\)\", 2); //settles date","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"ChrisLangton"},"content":"                        String deadlineDescription \u003d secondDeadlineSplit[0];","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"ChrisLangton"},"content":"                        String deadlineDate \u003d thirdDeadlineSplit[0];","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ChrisLangton"},"content":"                        LocalDateTime deadlineFormatted \u003d Parser.parseDateTime(deadlineDate, \"MMM dd yyyy h.mma\");","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"ChrisLangton"},"content":"                        Deadline newDeadline \u003d new Deadline(deadlineDescription, deadlineFormatted);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"ChrisLangton"},"content":"                        TM.tasks.add(newDeadline);","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"ChrisLangton"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"ChrisLangton"},"content":"                    else if (line.contains(\"[E]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"ChrisLangton"},"content":"                        String[] firstEventSplit \u003d line.split(\"] \", 2);","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"ChrisLangton"},"content":"                        String[] secondEventSplit \u003d firstEventSplit[1].split(\" \\\\(at: \", 2); //settles description","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"ChrisLangton"},"content":"                        String[] thirdEventSplit \u003d secondEventSplit[1].split(\"\\\\)\", 2); //settles date","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"ChrisLangton"},"content":"                        String eventDescription \u003d secondEventSplit[0];","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"ChrisLangton"},"content":"                        String eventDate \u003d thirdEventSplit[0];","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"ChrisLangton"},"content":"                        Event newEvent \u003d new Event(eventDescription, eventDate);","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"ChrisLangton"},"content":"                        TM.tasks.add(newEvent);","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"ChrisLangton"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"ChrisLangton"},"content":"        catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"ChrisLangton"},"content":"            Ui.printFileNotFoundExceptionMsg();","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"ChrisLangton"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"ChrisLangton"},"content":"                createFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"ChrisLangton"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"ChrisLangton"},"content":"                Ui.printCreateFailMsg();","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"ChrisLangton"},"content":"        return TM;","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"ChrisLangton"},"content":"     * Writes the new task list to the created file","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"ChrisLangton"},"content":"     * @param TM","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"ChrisLangton"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"ChrisLangton"},"content":"    public void writeSave(Parser TM) throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"ChrisLangton"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"ChrisLangton"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"ChrisLangton"},"content":"            for (int i \u003d 0; i \u003c TM.tasks.size(); i++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"ChrisLangton"},"content":"                fileWriter.write(TM.tasks.get(i) + \"\\n\");","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"ChrisLangton"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"ChrisLangton"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"ChrisLangton"},"content":"            Ui.printWriteFailMsg();","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ChrisLangton":118}},{"path":"src/main/java/duke/templar/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.templar;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":" * The parent class of task that is extended by todo, event, and deadline","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":" * that sets and gets the task\u0027s completion status","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"public class Task","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"    protected String description;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"    public Task(String description)","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"     * Sets a marker to indicate task\u0027s completion status","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"     * @return marker \"x\" || \" \"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    public String getDoneStatus()","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"            return \"x\";","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"        return \" \";","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"     * Sets task as done","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"     * @param done","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"    public void setDone(boolean done)","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"        return \"[\" + getDoneStatus() + \"] \" + description;","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ChrisLangton":44}},{"path":"src/main/java/duke/templar/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.templar;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import duke.exception.NoSuchTaskException;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":" * Contains the task list as well as operations to handle tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":" * namely adding, deleting, finding and marking as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"public class TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    public TaskList()","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"     * Adds a new task to the task list","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"     * @param newTask","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"     * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"    public static void addTask(Task newTask, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"     * method returns which task (in tasks array) has been completed and also prints the result","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"     * @param taskNumber","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"     * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"     * @return completedTaskIndex","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"    public static int doneTask(int taskNumber, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"        int completedTaskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"        tasks.get(completedTaskIndex).setDone(true); //mark task as done","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"        Ui.printTaskDone(taskNumber, tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"        return completedTaskIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"     * Deletes specified task","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"     * @param taskNumber","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"     * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"    public static void deleteTask(int taskNumber, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"TARGET REMOVED: \" + taskNumber + \". \" + tasks.get(taskNumber - 1));","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"        tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"     * Finds specified task","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"     * @param s","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"     * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"     * @throws NoSuchTaskException","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"    public static void findTask(String s, ArrayList\u003cTask\u003e tasks) throws NoSuchTaskException {","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"        String line;","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"        int j \u003d 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"            Ui.printFoundTasks();","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"                line \u003d tasks.get(i).toString();","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"ChrisLangton"},"content":"                if (line.contains(s)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"ChrisLangton"},"content":"                    System.out.println(\"-\" + tasks.get(i).toString());","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"ChrisLangton"},"content":"                    j++;","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"ChrisLangton"},"content":"                }","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"ChrisLangton"},"content":"            if (j \u003d\u003d 0) {","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"ChrisLangton"},"content":"                throw new NoSuchTaskException();","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"ChrisLangton"},"content":"        catch (NoSuchTaskException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"ChrisLangton"},"content":"            e.printNoSuchTaskException();","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"ChrisLangton":81}},{"path":"src/main/java/duke/templar/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.templar;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":" * Defines the type of task known as todo, with a description","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":"public class ToDo extends Task","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"        return \"[T]\" + super.toString() + \" \";","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ChrisLangton":17}},{"path":"src/main/java/duke/templar/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChrisLangton"},"content":"package duke.templar;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"ChrisLangton"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"ChrisLangton"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ChrisLangton"},"content":" * Handles all interactions with the user on the command line","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ChrisLangton"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ChrisLangton"},"content":"public class Ui","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ChrisLangton"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"ChrisLangton"},"content":"    public static final String MESSAGE_DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"ChrisLangton"},"content":"    public Ui()","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ChrisLangton"},"content":"     * Prints hello message on command line","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ChrisLangton"},"content":"    public static void printHelloMsg()","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ChrisLangton"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"ChrisLangton"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"ChrisLangton"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"ChrisLangton"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"ChrisLangton"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"[The Templar:]\");","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"Greetings, Hero. Meet Vector Unit 202 - codename DUKE.\\n\" + \"The state of the art AI assassin you requested. Give DUKE a mission, and it shall be done.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ChrisLangton"},"content":"     * Prints prompt for user to enter next command","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"ChrisLangton"},"content":"    public static void printService()","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"[The Templar:]\");","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"What further assistance do you require?\");","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ChrisLangton"},"content":"     * Prints user\u0027s alias","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ChrisLangton"},"content":"    public static void printHero() {","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"[Hero:]\");","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"ChrisLangton"},"content":"     * Prints goodbye message on command line once session ends","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"ChrisLangton"},"content":"    public static void printGoodbyeMsg()","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"[The Templar:]\\n\" + \"DUKE shall carry out his mission. Farewell, Hero.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"ChrisLangton"},"content":"     * Prints exception message if no file exists yet","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"ChrisLangton"},"content":"    public static void printFileNotFoundExceptionMsg()","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"[Templar:] \");","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"It appears your file cannot be found, Hero. Lets create one, shall we?\");","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"ChrisLangton"},"content":"     * Prints exception message if file failed to create","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"ChrisLangton"},"content":"    public static void printCreateFailMsg()","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"[Templar:] \");","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"Your file failed to create, Hero.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":84,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"ChrisLangton"},"content":"     * Prints exception message if file fails to write","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"ChrisLangton"},"content":"    public static void printWriteFailMsg()","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"[Templar:] \");","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"Your file failed to write, Hero.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":93,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":94,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":95,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"ChrisLangton"},"content":"     * Prints a message to show that specified task has been marked as done","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"ChrisLangton"},"content":"     * @param taskNumber","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"ChrisLangton"},"content":"     * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"ChrisLangton"},"content":"    public static void printTaskDone(int taskNumber, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"TARGET NEUTRALISED: \" + taskNumber + \". \" + tasks.get(taskNumber - 1));","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"ChrisLangton"},"content":"    * Prints the current task list when called","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"ChrisLangton"},"content":"    * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"ChrisLangton"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"PENDING HIT LIST:\");","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"ChrisLangton"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"ChrisLangton"},"content":"            if (tasks.size() !\u003d 0) {","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"ChrisLangton"},"content":"                System.out.println(i + 1 + \".\" + tasks.get(i));","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"ChrisLangton"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":119,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":120,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":122,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"ChrisLangton"},"content":"     * Prints confirmation that the new task is added to the list as well","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"ChrisLangton"},"content":"     * as the current total number of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"ChrisLangton"},"content":"     * @param newTask","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"ChrisLangton"},"content":"     * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"ChrisLangton"},"content":"    public static void printTaskAcquired(Task newTask, ArrayList\u003cTask\u003e tasks)","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"[DUKE:]\");","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"...understood.\");","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TASK ACQUIRED: \" + newTask + \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"current execution total: \" + tasks.size());","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"ChrisLangton"},"content":"     * Prints the valid commands the user can input to the program","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"ChrisLangton"},"content":"     * @param validCommands","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"ChrisLangton"},"content":"    public static void printCommands(String[] validCommands)","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"VALID COMMANDS ARE:\");","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"ChrisLangton"},"content":"        for (int i \u003d 1; i \u003c validCommands.length; i++) {","lastModifiedDate":"2021-09-24"},{"lineNumber":147,"author":{"gitId":"ChrisLangton"},"content":"            System.out.print(validCommands[i] +\" \");","lastModifiedDate":"2021-09-24"},{"lineNumber":148,"author":{"gitId":"ChrisLangton"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":149,"author":{"gitId":"ChrisLangton"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2021-09-24"},{"lineNumber":150,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":151,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"ChrisLangton"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"ChrisLangton"},"content":"     * Prints a message to show tasks that correspond to the users search","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"ChrisLangton"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"ChrisLangton"},"content":"    public static void printFoundTasks()","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"ChrisLangton"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(MESSAGE_DIVIDER);","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"ChrisLangton"},"content":"        System.out.println(\"TASKS FOUND ARE:\");","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"ChrisLangton"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"ChrisLangton"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"ChrisLangton"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"ChrisLangton":161}}]
