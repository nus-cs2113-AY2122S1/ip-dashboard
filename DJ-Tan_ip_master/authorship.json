[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"Duke is a **Personal Assistant ChatBot** desktop app that helps a person to **keep track of various activities**, optimised ","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"for use via a Command Line Interface (CLI). If you can type fast, Duke is capable of tracking and updating management ","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"tasks faster than Graphical User Interface (GUI) apps.","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"- [Set Up](#set-up)","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"  - [Viewing Help](#viewing-help)","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"  - [Adding a Todo Task](#adding-a-todo-task)","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"  - [Adding a Deadline Task](#adding-a-deadline-task)","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"  - [Adding a Todo Task](#adding-an-event-task)","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"  - [Listing all Tasks](#listing-all-tasks)","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"  - [Mark as Done](#mark-as-done)","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"  - [Find Tasks](#find-tasks)","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"  - [Delete a Task](#delete-a-task)","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"  - [Exiting the Program](#exiting-the-program)","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"## Set Up","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"1. Ensure that you have [Java 11](https://docs.aws.amazon.com/corretto/latest/corretto-11-ug/downloads-list.html) or ","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"above installed in your Computer.","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"2. Download the latest `ip.jar` file from [here](https://github.com/DJ-Tan/ip/releases/tag/A-UserGuide).","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your ChatBot.","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"4. For **Windows users**:","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"   1. Open a `notepad.exe`","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"   2. Write the following line of code","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"      ```console","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"      java -jar ip.jar","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"      ```","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"   3. Save the file as `run.bat`","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"   4. Copy it to the directory which contains the `ip.jar` file","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"   5. Double-click `run.bat` to run the `ip.jar`","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"5. For **Mac/Linux users**:","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"   1. Create a new `.txt` file","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"   2. Write the following line of code","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"      ```shell","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"      #!/bin/sh","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"      ","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"      java -jar ip.jar","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"      ```","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"   3. Save the file as `run.sh`","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"   4. Copy it to the directory which contains the `ip.jar` file","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"   5. Double-click `run.bat` and select _Run in the terminal_ to run the `ip.jar`","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"## Quick Start","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"1. On startup, a terminal similar to below should appear in a few seconds.\\","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"   ![startup_screen](Images/startup_screen.png)","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"2. Type a command and press Enter to execute it.\\","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"   - **`help`** : Lists all commands","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"   - **`list`** : Lists all tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"   - **`todo`** `read book` : Adds a todo task called `read book` into the task list","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"   - **`delete`** `1` : Deletes the first task in a list","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"   - **`exit`** : Exits the app.","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"3. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"### Viewing Help","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"Opens a web browser of the User Guide.","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"Format: `help`","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"help","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"NOTICE: Github page opened in browser...","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"![help_screen](Images/help_screen.png)","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"### Adding a Todo Task","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"Adds a task without any date/time attached to it _e.g., visit new theme park_","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"Format: `todo \u003cTASK_NAME\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"todo borrow book","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"NOTICE: I\u0027ve added this task...","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"    [T][ ] borrow book","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"### Adding a Deadline Task","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"Adds a task that need to be done before a specific date/time _e.g., submit report by 11/10/2019 1700_","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"Format: `deadline \u003cTASK_NAME\u003e /by \u003cDATE_TIME\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"- The `/by` tag has to be placed between `TASK_NAME` and `DATE_TIME`","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"- `DATE_TIME` follows the format of `dd/MM/yyyy HHmm`","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"- `DATE_TIME` must be after the current date","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"deadline return book /by 19/09/2022 2100","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"NOTICE: I\u0027ve added this task...","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"    [D][ ] return book (by: 19/09/2022 2100)","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"### Adding an Event Task","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"Adds a task that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"Format: `event \u003cTASK_NAME\u003e /at \u003cSTART_DATE\u003e \u003cEND_DATE\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"- The `/at` tag has to be placed between `TASK_NAME` and `START_DATE`","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"- `START_DATE` and `END_DATE` follows the format of `dd/MM/yyyy HHmm`","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"- `START_DATE` and `END_DATE` must be after the current date","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"- `START_DATE` has to be before `END_DATE`","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"event project meeting /at 21/09/2022 1400 21/09/2022 1600","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"NOTICE: I\u0027ve added this task...","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"    [E][ ] project meeting (at: 21/09/2022 1400 to 21/09/2022 1600)","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"### Listing all Tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"Shows a list of all tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"Format: `list`","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"list","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"NOTICE: Here are the task(s) in your list...","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"    1.[T][ ] borrow book","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"    2.[D][ ] return book (by: 19/09/2022 2100)","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"    3.[E][ ] project meeting (at: 21/09/2022 1400 to 21/09/2022 1600)","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"### Mark as Done","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"Marks a task as completed.","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"Format: `done \u003cTASK_NUMBER\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"done 2","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"NOTICE: This task is marked as done...","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"    [D][X] return book (by: 19/09/2022 2100)","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"### Find Tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"Find tasks by searching for a keyword.","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"Format: `find \u003cKEYWORD\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"DJ-Tan"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"DJ-Tan"},"content":"find book","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":194,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"DJ-Tan"},"content":"NOTICE: Here are the matching tasks in your list...","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"    1.[T][ ] borrow book","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"    2.[D][X] return book (by: 19/09/2022 2100)","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"### Delete a Task","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"Deletes a task from the list.","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":204,"author":{"gitId":"DJ-Tan"},"content":"Format: `delete \u003cTASK_NUMBER\u003e`","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"DJ-Tan"},"content":"delete 3","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":212,"author":{"gitId":"DJ-Tan"},"content":"```console","lastModifiedDate":"2021-09-19"},{"lineNumber":213,"author":{"gitId":"DJ-Tan"},"content":"NOTICE: I\u0027ve removed this task...","lastModifiedDate":"2021-09-19"},{"lineNumber":214,"author":{"gitId":"DJ-Tan"},"content":"    [E][ ] project meeting (at: 21/09/2022 1400 to 21/09/2022 1600)","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"DJ-Tan"},"content":"Now you have 2 task(s) in the list.","lastModifiedDate":"2021-09-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":217,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"DJ-Tan"},"content":"### Exiting the Program","lastModifiedDate":"2021-09-19"},{"lineNumber":219,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":220,"author":{"gitId":"DJ-Tan"},"content":"Exits from the ChatBot.","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"DJ-Tan"},"content":"Format: `bye`","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":224,"author":{"gitId":"DJ-Tan"},"content":"## FAQ","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"DJ-Tan"},"content":"**Q**: How do I transfer my data to another Computer?\\","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"DJ-Tan"},"content":"**A**: Copy over `ip.jar`, `duke.txt` and `run.bat/run.sh` onto the other computer.","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"DJ-Tan"},"content":"## Command Summary","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"DJ-Tan"},"content":"| Action       | Format, Examples                                                                                                   |","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"DJ-Tan"},"content":"| :---         | :---                                                                                                               |","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"DJ-Tan"},"content":"| **Help**     | `help`                                                                                                             |","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"DJ-Tan"},"content":"| **Todo**     | `todo \u003cTASK_NAME\u003e`\u003cbr/\u003eeg., `todo cook lunch`                                                                      |","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"DJ-Tan"},"content":"| **Deadline** | `deadline \u003cTASK_NAME\u003e /by \u003cDATE_TIME\u003e`\u003cbr/\u003eeg., `deadline math homework /by 10/12/2022 2359`                       |","lastModifiedDate":"2021-09-30"},{"lineNumber":236,"author":{"gitId":"DJ-Tan"},"content":"| **Event**    | `event \u003cTASK_NAME\u003e /at \u003cSTART_DATE\u003e \u003cEND_DATE\u003e`\u003cbr/\u003eeg., `event cooking class /at 09/12/2022 0800 09/12/2022 1000` |","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"DJ-Tan"},"content":"| **List**     | `list`                                                                                                             |","lastModifiedDate":"2021-09-19"},{"lineNumber":238,"author":{"gitId":"DJ-Tan"},"content":"| **Done**     | `done \u003cTASK_NUMBER\u003e`\u003cbr/\u003eeg., `done 1`                                                                             |","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"DJ-Tan"},"content":"| **Find**     | `find \u003cKEYWORD\u003e`\u003cbr/\u003eeg., `find cook`                                                                              |","lastModifiedDate":"2021-09-19"},{"lineNumber":240,"author":{"gitId":"DJ-Tan"},"content":"| **Delete**   | `delete \u003cTASK_NUMBER\u003e`\u003cbr/\u003eeg., `delete 2`                                                                         |","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"DJ-Tan"},"content":"| **Exit**     | `bye` |","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"DJ-Tan":217,"-":24}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"T@@@0@@@read book","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"D@@@1@@@return book@@@06/12/2021 1800","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"E@@@0@@@project meeting@@@07/12/2021 2100 08/12/2021 2100","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"DJ-Tan":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * Duke class constructor that also loads in tasks data","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * from an external save file","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * @param filePath File path of the external save file","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"     * Main method of Duke, which creates a Duke class and runs it.","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     * @param args Not applicable.","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     * Executes the main body of Duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    public void run() {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"        handleUserInput();","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"        ui.showGoodbye();","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"     * Reads in user input and performs a corresponding command.","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"    private void handleUserInput() {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"        String userInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"            userInput \u003d in.nextLine().strip();","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"            try {","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"                Command command \u003d Parser.parse(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"                command.runCommand(tasks, ui, storage);","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DJ-Tan":65,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"     * Class constructor for DukeException.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"     * @param errorMessage Error message that describes what the error is.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":14}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.HelpCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"public class Parser {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    private static final int COMMAND_KEYWORD \u003d 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_DONE \u003d 4;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_TODO \u003d 4;","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_DEADLINE \u003d 8;","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_EVENT \u003d 5;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_DELETE \u003d 6;","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_FIND \u003d 4;","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_BY_INDICATOR \u003d 3;","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_AT_INDICATOR \u003d 3;","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_EVENT_DATE_FORMAT \u003d 31;","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_DEADLINE_DATE_FORMAT \u003d 15;","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    private static final int TASK_NUMBER \u003d 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    private static final int START_DATE \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    private static final int END_DATE \u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    private static final int TOTAL_DATES \u003d 2;","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    private static final String BY_INDICATOR \u003d \"/by\";","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    private static final String AT_INDICATOR \u003d \"/at\";","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"    private static final String S_TAB \u003d \"     \";","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    private static final String NL \u003d LS + S_TAB;","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-09"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_DONE \u003d \"Command format: \u0027done \u003cTASK_NUMBER\u003e\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_TODO \u003d \"Command format: \u0027todo \u003cTASK_NAME\u003e\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_DEADLINE \u003d \"Command format: \u0027deadline \u003cTASK_NAME\u003e /by \u003cTASK_DATE\u003e\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_EVENT \u003d \"Command format: \u0027event \u003cTASK_NAME\u003e /at \u003cTASK_DATE\u003e\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_DELETE \u003d \"Command format: \u0027delete \u003cTASK_NAME\u003e\u0027\";","lastModifiedDate":"2021-09-09"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_FIND \u003d \"Command format: \u0027find \u003cKEYWORD\u003e\u0027\";","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DEFAULT \u003d S_TAB + \"Invalid command. Type \u0027help\u0027 to see a list of commands.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_BYE \u003d S_TAB + \"ERROR: Type \u0027bye\u0027 without additional parameters to exit.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_LIST \u003d S_TAB + \"ERROR: Type \u0027list\u0027 without additional parameters to print list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DONE_1 \u003d S_TAB + \"ERROR: Provide the task number of the task.\" + NL + FORMAT_DONE;","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DONE_2 \u003d S_TAB + \"ERROR: Provide the task number of one task only.\" + NL + FORMAT_DONE;","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_TODO \u003d S_TAB + \"ERROR: Specify a todo task to be added.\" + NL + FORMAT_TODO;","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DEADLINE_1 \u003d S_TAB + \"ERROR: Specify a task and due date.\" + NL + FORMAT_DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DEADLINE_2 \u003d S_TAB + \"ERROR: Specify due date after /by.\" + NL + FORMAT_DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DEADLINE_3 \u003d S_TAB + \"ERROR: Specify a deadline name.\" + NL + FORMAT_DEADLINE;","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DEADLINE_4 \u003d S_TAB + \"ERROR: Specify a due date.\" + NL + FORMAT_DEADLINE;","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_EVENT_1 \u003d S_TAB + \"ERROR: Specify a task and event date.\" + NL + FORMAT_EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_EVENT_2 \u003d S_TAB + \"ERROR: Specify event date after /at.\" + NL + FORMAT_EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_EVENT_3 \u003d S_TAB + \"ERROR: Specify an event name.\" + NL + FORMAT_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_EVENT_4 \u003d S_TAB + \"ERROR: Specify an event date.\" + NL + FORMAT_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_HELP \u003d S_TAB + \"ERROR: Type \u0027help\u0027 without additional parameters to view all commands.\";","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DELETE_1 \u003d S_TAB + \"ERROR: Provide the task number of the task.\" + NL + FORMAT_DELETE;","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DELETE_2 \u003d S_TAB + \"ERROR: Provide the task number of one task only.\" + NL + FORMAT_DELETE;","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_FIND \u003d S_TAB + \"ERROR: Provide a keyword.\" + NL + FORMAT_FIND;","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_DEADLINE_DATE_FORMAT \u003d S_TAB + \"ERROR: Use the following format: \u0027dd/MM/yyyy HHmm\u0027\";","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_EVENT_DATE_FORMAT \u003d S_TAB + \"ERROR: Use the following format: \u0027dd/MM/yyyy HHmm dd/MM/yyyy HHmm\u0027\";","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_DATE_TIME \u003d S_TAB + \"ERROR: Date(s) has to be after the current date.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_START_END_DATE \u003d S_TAB + \"ERROR: Start date has to be before the end date.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_NUMBER \u003d S_TAB + \"ERROR: Provide a numeric value for the task number.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"     * Takes in the user input command and breaks down the data.","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"     * @return Command subclass that corresponds to input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If non-standard input command is detected.","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parse(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"        String[] words \u003d inputCommand.split(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"        switch (words[COMMAND_KEYWORD]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"            return parseByeCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"            return parseListCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_DONE:","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"            return parseDoneCommand(inputCommand, words);","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"            return parseTodoCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"            return parseDeadlineCommand(inputCommand, words);","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"            return parseEventCommand(inputCommand, words);","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"            return parseHelpCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-09-09"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"            return parseDeleteCommand(inputCommand, words);","lastModifiedDate":"2021-09-09"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"            return parseFindCommand(inputCommand);","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DEFAULT);","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the exit command.","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"     * @return ExitCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there are superfluous parameters in the exit command.","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseByeCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.equals(COMMAND_BYE)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_BYE);","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the list command.","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"     * @return ListCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there are superfluous parameters in the list command.","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseListCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_LIST);","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"        return new ListCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the done command.","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"     * @param words        User input command with each word stored in a String array.","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"     * @return DoneCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the task number is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"     *                       If there are superfluous parameters in the done command.","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseDoneCommand(String inputCommand, String[] words) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"        if (isOnlyKeyword(inputCommand, STRING_LENGTH_DONE)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DONE_1);","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"        if (words.length \u003e 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DONE_2);","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"        return new DoneCommand(convertToInt(words[TASK_NUMBER]));","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the todo command.","lastModifiedDate":"2021-09-05"},{"lineNumber":170,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"     * @return AddCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the task name is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseTodoCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"        if (isOnlyKeyword(inputCommand, STRING_LENGTH_TODO)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"        String taskName \u003d inputCommand.substring(STRING_LENGTH_TODO + 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"        return new AddCommand(new Todo(taskName));","lastModifiedDate":"2021-09-18"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the deadline command.","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"     * @return AddCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If only the \u0027deadline\u0027 keyword is specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"DJ-Tan"},"content":"     *                       If the \u0027/by\u0027 keyword is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"DJ-Tan"},"content":"     *                       If the due date is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseDeadlineCommand(String inputCommand, String[] words) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"DJ-Tan"},"content":"        if (isOnlyKeyword(inputCommand, STRING_LENGTH_DEADLINE)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DEADLINE_1);","lastModifiedDate":"2021-09-05"},{"lineNumber":195,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.contains(BY_INDICATOR)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DEADLINE_2);","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"        if (words[1].equals(BY_INDICATOR)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DEADLINE_3);","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"        int startIndexOfByIndicator \u003d inputCommand.indexOf(BY_INDICATOR);","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"DJ-Tan"},"content":"        int startIndexOfDatetime \u003d startIndexOfByIndicator + STRING_LENGTH_BY_INDICATOR + 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":204,"author":{"gitId":"DJ-Tan"},"content":"        if (inputCommand.length() \u003c\u003d startIndexOfDatetime) {","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DEADLINE_4);","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"        String taskName \u003d inputCommand.substring(STRING_LENGTH_DEADLINE + 1, startIndexOfByIndicator - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates \u003d parseDateTime(inputCommand.substring(startIndexOfDatetime), TaskType.DEADLINE);","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"DJ-Tan"},"content":"        return new AddCommand(new Deadline(taskName, dates[START_DATE]));","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":211,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":212,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":213,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the event command.","lastModifiedDate":"2021-09-05"},{"lineNumber":214,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":215,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":216,"author":{"gitId":"DJ-Tan"},"content":"     * @return AddCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":217,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If only the \u0027event\u0027 keyword is specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":218,"author":{"gitId":"DJ-Tan"},"content":"     *                       If the \u0027/at\u0027 keyword is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":219,"author":{"gitId":"DJ-Tan"},"content":"     *                       If the due date is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":220,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":221,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseEventCommand(String inputCommand, String[] words) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"DJ-Tan"},"content":"        if (isOnlyKeyword(inputCommand, STRING_LENGTH_EVENT)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_EVENT_1);","lastModifiedDate":"2021-09-05"},{"lineNumber":224,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":225,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.contains(AT_INDICATOR)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":226,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_EVENT_2);","lastModifiedDate":"2021-09-05"},{"lineNumber":227,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":228,"author":{"gitId":"DJ-Tan"},"content":"        if (words[1].equals(AT_INDICATOR)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_EVENT_3);","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"DJ-Tan"},"content":"        int startIndexOfAtIndicator \u003d inputCommand.indexOf(AT_INDICATOR);","lastModifiedDate":"2021-09-05"},{"lineNumber":232,"author":{"gitId":"DJ-Tan"},"content":"        int startIndexOfDatetime \u003d startIndexOfAtIndicator + STRING_LENGTH_AT_INDICATOR + 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":233,"author":{"gitId":"DJ-Tan"},"content":"        if (inputCommand.length() \u003c\u003d startIndexOfDatetime) {","lastModifiedDate":"2021-09-05"},{"lineNumber":234,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_EVENT_4);","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":236,"author":{"gitId":"DJ-Tan"},"content":"        String taskName \u003d inputCommand.substring(STRING_LENGTH_EVENT + 1, startIndexOfAtIndicator - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":237,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates \u003d parseDateTime(inputCommand.substring(startIndexOfDatetime), TaskType.EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":238,"author":{"gitId":"DJ-Tan"},"content":"        return new AddCommand(new Event(taskName, dates[START_DATE], dates[END_DATE]));","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":240,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":241,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":242,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the help command.","lastModifiedDate":"2021-09-05"},{"lineNumber":243,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":244,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":245,"author":{"gitId":"DJ-Tan"},"content":"     * @return HelpCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":246,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there are superfluous parameters in the help command.","lastModifiedDate":"2021-09-05"},{"lineNumber":247,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":248,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseHelpCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":249,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.equals(COMMAND_HELP)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":250,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_HELP);","lastModifiedDate":"2021-09-05"},{"lineNumber":251,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":252,"author":{"gitId":"DJ-Tan"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":253,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":254,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":255,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":256,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the delete command.","lastModifiedDate":"2021-09-09"},{"lineNumber":257,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":258,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-09"},{"lineNumber":259,"author":{"gitId":"DJ-Tan"},"content":"     * @param words        User input command with each word stored in a String array.","lastModifiedDate":"2021-09-09"},{"lineNumber":260,"author":{"gitId":"DJ-Tan"},"content":"     * @return DeleteCommand subclass.","lastModifiedDate":"2021-09-09"},{"lineNumber":261,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the task number is not specified.","lastModifiedDate":"2021-09-09"},{"lineNumber":262,"author":{"gitId":"DJ-Tan"},"content":"     *                       If there are superfluous parameters in the done command.","lastModifiedDate":"2021-09-09"},{"lineNumber":263,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":264,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseDeleteCommand(String inputCommand, String[] words) throws DukeException {","lastModifiedDate":"2021-09-09"},{"lineNumber":265,"author":{"gitId":"DJ-Tan"},"content":"        if (isOnlyKeyword(inputCommand, STRING_LENGTH_DELETE)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":266,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DELETE_1);","lastModifiedDate":"2021-09-09"},{"lineNumber":267,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":268,"author":{"gitId":"DJ-Tan"},"content":"        if (words.length \u003e 2) {","lastModifiedDate":"2021-09-09"},{"lineNumber":269,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DELETE_2);","lastModifiedDate":"2021-09-09"},{"lineNumber":270,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":271,"author":{"gitId":"DJ-Tan"},"content":"        return new DeleteCommand(convertToInt(words[TASK_NUMBER]));","lastModifiedDate":"2021-09-19"},{"lineNumber":272,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":273,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":274,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":275,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the find command.","lastModifiedDate":"2021-09-19"},{"lineNumber":276,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":277,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-19"},{"lineNumber":278,"author":{"gitId":"DJ-Tan"},"content":"     * @return FindCommand subclass.","lastModifiedDate":"2021-09-19"},{"lineNumber":279,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there are superfluous parameters in the find command.","lastModifiedDate":"2021-09-19"},{"lineNumber":280,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":281,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseFindCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":282,"author":{"gitId":"DJ-Tan"},"content":"        if (isOnlyKeyword(inputCommand, STRING_LENGTH_FIND)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":283,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_FIND);","lastModifiedDate":"2021-09-19"},{"lineNumber":284,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":285,"author":{"gitId":"DJ-Tan"},"content":"        String keyword \u003d inputCommand.substring(STRING_LENGTH_FIND + 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":286,"author":{"gitId":"DJ-Tan"},"content":"        return new FindCommand(keyword);","lastModifiedDate":"2021-09-19"},{"lineNumber":287,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":288,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":289,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"DJ-Tan"},"content":"     * Converts the date time string into a Date class.","lastModifiedDate":"2021-09-19"},{"lineNumber":291,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":292,"author":{"gitId":"DJ-Tan"},"content":"     * @param dateTime String representation of date time.","lastModifiedDate":"2021-09-19"},{"lineNumber":293,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskType Task type that the date belongs to.","lastModifiedDate":"2021-09-19"},{"lineNumber":294,"author":{"gitId":"DJ-Tan"},"content":"     * @return Date array containing the dates of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":295,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the date time string is in the wrong format.","lastModifiedDate":"2021-09-19"},{"lineNumber":296,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":297,"author":{"gitId":"DJ-Tan"},"content":"    public static Date[] parseDateTime(String dateTime, TaskType taskType) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":298,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates \u003d new Date[TOTAL_DATES];","lastModifiedDate":"2021-09-19"},{"lineNumber":299,"author":{"gitId":"DJ-Tan"},"content":"        checkLength(dateTime, taskType);","lastModifiedDate":"2021-09-19"},{"lineNumber":300,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":301,"author":{"gitId":"DJ-Tan"},"content":"            splitDates(dates, dateTime, taskType);","lastModifiedDate":"2021-09-19"},{"lineNumber":302,"author":{"gitId":"DJ-Tan"},"content":"            checkValidDateTime(dates, taskType);","lastModifiedDate":"2021-09-19"},{"lineNumber":303,"author":{"gitId":"DJ-Tan"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2021-09-19"},{"lineNumber":304,"author":{"gitId":"DJ-Tan"},"content":"            parseException.printStackTrace();","lastModifiedDate":"2021-09-19"},{"lineNumber":305,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":306,"author":{"gitId":"DJ-Tan"},"content":"        return dates;","lastModifiedDate":"2021-09-19"},{"lineNumber":307,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":308,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":310,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the String date time is of the correct length","lastModifiedDate":"2021-09-19"},{"lineNumber":311,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":312,"author":{"gitId":"DJ-Tan"},"content":"     * @param dateTime String representation of date time.","lastModifiedDate":"2021-09-19"},{"lineNumber":313,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskType Task type that the date belongs to.","lastModifiedDate":"2021-09-19"},{"lineNumber":314,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the date time string is of an incorrect length.","lastModifiedDate":"2021-09-19"},{"lineNumber":315,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":316,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkLength(String dateTime, TaskType taskType) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":317,"author":{"gitId":"DJ-Tan"},"content":"        if (taskType.equals(TaskType.DEADLINE)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":318,"author":{"gitId":"DJ-Tan"},"content":"            checkLengthDeadlineDateTime(dateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":319,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":320,"author":{"gitId":"DJ-Tan"},"content":"        if (taskType.equals(TaskType.EVENT)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":321,"author":{"gitId":"DJ-Tan"},"content":"            checkLengthEventDateTime(dateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":322,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":323,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":324,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":325,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":326,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the String date time is of the correct length if the task type is Deadline","lastModifiedDate":"2021-09-19"},{"lineNumber":327,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":328,"author":{"gitId":"DJ-Tan"},"content":"     * @param dateTime String representation of date time.","lastModifiedDate":"2021-09-19"},{"lineNumber":329,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the date time string is of an incorrect length.","lastModifiedDate":"2021-09-19"},{"lineNumber":330,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":331,"author":{"gitId":"DJ-Tan"},"content":"    public static void checkLengthDeadlineDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":332,"author":{"gitId":"DJ-Tan"},"content":"        if (dateTime.length() !\u003d STRING_LENGTH_DEADLINE_DATE_FORMAT) {","lastModifiedDate":"2021-09-19"},{"lineNumber":333,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_INVALID_DEADLINE_DATE_FORMAT);","lastModifiedDate":"2021-09-19"},{"lineNumber":334,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":335,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":336,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":337,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":338,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the String date time is of the correct length if the task type is Event","lastModifiedDate":"2021-09-19"},{"lineNumber":339,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":340,"author":{"gitId":"DJ-Tan"},"content":"     * @param dateTime String representation of date time.","lastModifiedDate":"2021-09-19"},{"lineNumber":341,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the date time string is of an incorrect length.","lastModifiedDate":"2021-09-19"},{"lineNumber":342,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":343,"author":{"gitId":"DJ-Tan"},"content":"    public static void checkLengthEventDateTime(String dateTime) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":344,"author":{"gitId":"DJ-Tan"},"content":"        if (dateTime.length() !\u003d STRING_LENGTH_EVENT_DATE_FORMAT) {","lastModifiedDate":"2021-09-19"},{"lineNumber":345,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_INVALID_EVENT_DATE_FORMAT);","lastModifiedDate":"2021-09-19"},{"lineNumber":346,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":347,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":348,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":349,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":350,"author":{"gitId":"DJ-Tan"},"content":"     * Save the date time strings into a Date array","lastModifiedDate":"2021-09-19"},{"lineNumber":351,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":352,"author":{"gitId":"DJ-Tan"},"content":"     * @param dates    Date array containing the dates of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":353,"author":{"gitId":"DJ-Tan"},"content":"     * @param dateTime String representation of date time.","lastModifiedDate":"2021-09-19"},{"lineNumber":354,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskType Task type that the date belongs to.","lastModifiedDate":"2021-09-19"},{"lineNumber":355,"author":{"gitId":"DJ-Tan"},"content":"     * @throws ParseException If the date time string fails to convert into date format.","lastModifiedDate":"2021-09-19"},{"lineNumber":356,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":357,"author":{"gitId":"DJ-Tan"},"content":"    public static void splitDates(Date[] dates, String dateTime, TaskType taskType) throws ParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":358,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat sdfDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-09-19"},{"lineNumber":359,"author":{"gitId":"DJ-Tan"},"content":"        if (taskType.equals(TaskType.DEADLINE)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":360,"author":{"gitId":"DJ-Tan"},"content":"            dates[START_DATE] \u003d sdfDate.parse(dateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":361,"author":{"gitId":"DJ-Tan"},"content":"        } else if (taskType.equals(TaskType.EVENT)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":362,"author":{"gitId":"DJ-Tan"},"content":"            String startDate \u003d dateTime.substring(0, STRING_LENGTH_DEADLINE_DATE_FORMAT);","lastModifiedDate":"2021-09-19"},{"lineNumber":363,"author":{"gitId":"DJ-Tan"},"content":"            String endDate \u003d dateTime.substring(STRING_LENGTH_DEADLINE_DATE_FORMAT + 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":364,"author":{"gitId":"DJ-Tan"},"content":"            dates[START_DATE] \u003d sdfDate.parse(startDate);","lastModifiedDate":"2021-09-19"},{"lineNumber":365,"author":{"gitId":"DJ-Tan"},"content":"            dates[END_DATE] \u003d sdfDate.parse(endDate);","lastModifiedDate":"2021-09-19"},{"lineNumber":366,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":367,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":368,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":369,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":370,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the date time fielded is after the current date time.","lastModifiedDate":"2021-09-19"},{"lineNumber":371,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":372,"author":{"gitId":"DJ-Tan"},"content":"     * @param dates    Date array containing the dates of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":373,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskType Task type that the date belongs to.","lastModifiedDate":"2021-09-19"},{"lineNumber":374,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If date time is before the current date time.","lastModifiedDate":"2021-09-19"},{"lineNumber":375,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":376,"author":{"gitId":"DJ-Tan"},"content":"    private static void checkValidDateTime(Date[] dates, TaskType taskType) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":377,"author":{"gitId":"DJ-Tan"},"content":"        compareAgainstCurrentDate(dates, taskType);","lastModifiedDate":"2021-09-19"},{"lineNumber":378,"author":{"gitId":"DJ-Tan"},"content":"        compareStartEndDates(dates, taskType);","lastModifiedDate":"2021-09-19"},{"lineNumber":379,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":380,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":381,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":382,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the dates are after the current date.","lastModifiedDate":"2021-09-19"},{"lineNumber":383,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":384,"author":{"gitId":"DJ-Tan"},"content":"     * @param dates    Date array containing the dates of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":385,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskType Task type that the date belongs to.","lastModifiedDate":"2021-09-19"},{"lineNumber":386,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the dates of the task are before the current date.","lastModifiedDate":"2021-09-19"},{"lineNumber":387,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":388,"author":{"gitId":"DJ-Tan"},"content":"    private static void compareAgainstCurrentDate(Date[] dates, TaskType taskType) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":389,"author":{"gitId":"DJ-Tan"},"content":"        Date todayDate \u003d new Date();","lastModifiedDate":"2021-09-19"},{"lineNumber":390,"author":{"gitId":"DJ-Tan"},"content":"        if (dates[START_DATE].compareTo(todayDate) \u003c\u003d 0) {","lastModifiedDate":"2021-09-30"},{"lineNumber":391,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_INVALID_DATE_TIME);","lastModifiedDate":"2021-09-19"},{"lineNumber":392,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":393,"author":{"gitId":"DJ-Tan"},"content":"        if (taskType.equals(TaskType.EVENT)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":394,"author":{"gitId":"DJ-Tan"},"content":"            if (dates[END_DATE].compareTo(todayDate) \u003c\u003d 0) {","lastModifiedDate":"2021-09-30"},{"lineNumber":395,"author":{"gitId":"DJ-Tan"},"content":"                throw new DukeException(ERROR_INVALID_DATE_TIME);","lastModifiedDate":"2021-09-19"},{"lineNumber":396,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":397,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":398,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":399,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":400,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":401,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the start date comes before the end date.","lastModifiedDate":"2021-09-19"},{"lineNumber":402,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":403,"author":{"gitId":"DJ-Tan"},"content":"     * @param dates    Date array containing the dates of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":404,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskType Task type that the date belongs to.","lastModifiedDate":"2021-09-19"},{"lineNumber":405,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the start date comes after the end date.","lastModifiedDate":"2021-09-19"},{"lineNumber":406,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":407,"author":{"gitId":"DJ-Tan"},"content":"    private static void compareStartEndDates(Date[] dates, TaskType taskType) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":408,"author":{"gitId":"DJ-Tan"},"content":"        if (taskType.equals(TaskType.EVENT)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":409,"author":{"gitId":"DJ-Tan"},"content":"            if (dates[START_DATE].compareTo(dates[END_DATE]) \u003e 0) {","lastModifiedDate":"2021-09-30"},{"lineNumber":410,"author":{"gitId":"DJ-Tan"},"content":"                throw new DukeException(ERROR_INVALID_START_END_DATE);","lastModifiedDate":"2021-09-19"},{"lineNumber":411,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":412,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":413,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":414,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":415,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":416,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the user command only contains the command keyword.","lastModifiedDate":"2021-09-19"},{"lineNumber":417,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":418,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand  User input command.","lastModifiedDate":"2021-09-19"},{"lineNumber":419,"author":{"gitId":"DJ-Tan"},"content":"     * @param keywordLength Length of the command keyword.","lastModifiedDate":"2021-09-19"},{"lineNumber":420,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if user input command is less than or equal to keywordLength + one char space.","lastModifiedDate":"2021-09-19"},{"lineNumber":421,"author":{"gitId":"DJ-Tan"},"content":"     *         False if user input command is more than keywordLength + one char space.","lastModifiedDate":"2021-09-19"},{"lineNumber":422,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":423,"author":{"gitId":"DJ-Tan"},"content":"    private static boolean isOnlyKeyword(String inputCommand, int keywordLength) {","lastModifiedDate":"2021-09-19"},{"lineNumber":424,"author":{"gitId":"DJ-Tan"},"content":"        return inputCommand.length() \u003c\u003d keywordLength + 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":425,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":426,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":427,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":428,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the user inputs a numeric value for the task number.","lastModifiedDate":"2021-09-19"},{"lineNumber":429,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":430,"author":{"gitId":"DJ-Tan"},"content":"     * @param number String representation of the task number.","lastModifiedDate":"2021-09-19"},{"lineNumber":431,"author":{"gitId":"DJ-Tan"},"content":"     * @return Integer value of the task number.","lastModifiedDate":"2021-09-19"},{"lineNumber":432,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If a non-numeric string is given as the task number (Exp: \"one\")","lastModifiedDate":"2021-09-19"},{"lineNumber":433,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":434,"author":{"gitId":"DJ-Tan"},"content":"    private static int convertToInt(String number) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":435,"author":{"gitId":"DJ-Tan"},"content":"        int returnNumber;","lastModifiedDate":"2021-09-19"},{"lineNumber":436,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":437,"author":{"gitId":"DJ-Tan"},"content":"            returnNumber \u003d Integer.parseInt(number);","lastModifiedDate":"2021-09-19"},{"lineNumber":438,"author":{"gitId":"DJ-Tan"},"content":"        } catch (NumberFormatException numberFormatException) {","lastModifiedDate":"2021-09-19"},{"lineNumber":439,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_INVALID_NUMBER);","lastModifiedDate":"2021-09-19"},{"lineNumber":440,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":441,"author":{"gitId":"DJ-Tan"},"content":"        return returnNumber;","lastModifiedDate":"2021-09-19"},{"lineNumber":442,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":443,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":444,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":444}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import java.io.File;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"public class Storage {","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    private static final String DELIMITER \u003d \"@@@\";","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    private static final int TASK_TYPE \u003d 0;","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    private static final int TASK_COMPLETION_STATUS \u003d 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    private static final int TASK_NAME \u003d 2;","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    private static final int TASK_DATE \u003d 3;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_LOAD \u003d \"     File not found. A new list will be started.\";","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_SAVE \u003d \"     Save file not found. List of tasks will not be saved\";","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_UNRECOGNISED_TASK_TYPE \u003d \"     Task type not recognised\";","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    protected String filePath;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     * Loads task data from the file when Duke starts up.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"        checkFileExist();","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"            FileInputStream fileInputStream \u003d new FileInputStream(filePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"            Scanner scanner \u003d new Scanner(fileInputStream);","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"                Task task \u003d parseLine(scanner.nextLine());","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"                tasks.addTask(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(ERROR_LOAD);","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"        return tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the file exists, otherwise new file will be created.","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"    private void checkFileExist() {","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"        File file \u003d new File(System.getProperty(\"user.dir\"), filePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"            ioException.printStackTrace();","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     * Make sense of the string line data loaded from the file","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"     * and adds the saved tasks into the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"     * @param line Single line read from the file as a string.","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there is an error with the string format on the file.","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"    private Task parseLine(String line) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"        String[] words \u003d line.split(DELIMITER);","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"        Task task \u003d parseTask(words);","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"        setTaskCompletionStatus(task, words[TASK_COMPLETION_STATUS]);","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"        return task;","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"     * Creates a new Task depending on the task type specifications.","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"     * @param words String array containing details about the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"     * @return New task depending on task type specifications.","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If an unrecognised task type is detected.","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"     *                       Unlikely to happen unless the file is corrupted.","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"    private Task parseTask(String[] words) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"        Task task;","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"        Date[] dates;","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"        switch (words[TASK_TYPE]) {","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"        case \"T\":","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"            task \u003d new Todo(words[TASK_NAME]);","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"        case \"D\":","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"            dates \u003d Parser.parseDateTime(words[TASK_DATE], TaskType.DEADLINE);","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"            task \u003d new Deadline(words[TASK_NAME], dates[0]);","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"        case \"E\":","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"            dates \u003d Parser.parseDateTime(words[TASK_DATE], TaskType.EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"            task \u003d new Event(words[TASK_NAME], dates[0], dates[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_UNRECOGNISED_TASK_TYPE);","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"        return task;","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"     * Marks a task in the list as completed if defined as such in the save file.","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"     * @param task               Task in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"     * @param completedIndicator \"1\" if task is mark as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"     *                           \"0\" if task is not mark as completed.","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"    private void setTaskCompletionStatus(Task task, String completedIndicator) {","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"        if (isTaskCompleted(completedIndicator)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"            task.markTaskAsDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if a task is marked as completed in the save file.","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"     * @param completedIndicator \"1\" if task is mark as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"     *                           \"0\" if task is not mark as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if task is mark as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"     * False if task is not mark as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"    private boolean isTaskCompleted(String completedIndicator) {","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"        return completedIndicator.equals(\"1\");","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"     * Save the tasks in the file upon exiting Duke.","lastModifiedDate":"2021-09-14"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"    public void saveTask(TaskList tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"            for (int i \u003d 0; i \u003c tasks.getListSize(); i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"                fileWriter.write(tasks.getTaskStringForStorage(i));","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"        } catch (FileNotFoundException fileNotFoundException) {","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(ERROR_SAVE);","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"            ioException.printStackTrace();","lastModifiedDate":"2021-09-13"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"DJ-Tan":153}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"import java.net.URI;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"public class TaskList {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private static final String S_TAB \u003d \"     \";","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    private static final String L_TAB \u003d \"       \";","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_ADD_TASK \u003d S_TAB + \"NOTICE: I\u0027ve added this task...\" + LS","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"            + L_TAB + \"%1$s\" + LS","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"            + S_TAB + \"Now you have %2$s task(s) in the list.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_TASK_IN_LIST \u003d S_TAB + \"NOTICE: Here are the task(s) in your list...\";","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_DELETE_TASK \u003d S_TAB + \"NOTICE: I\u0027ve removed this task...\" + LS","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"            + L_TAB + \"%1$s\" + LS","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"            + S_TAB + \"Now you have %2$s task(s) in the list.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_MARK_TASK_AS_DONE \u003d S_TAB + \"NOTICE: This task is marked as done...\" + LS","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"            + L_TAB + \"%1$s\";","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_OPEN_BROWSER \u003d S_TAB + \"NOTICE: Github page opened in browser...\";","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_MATCHING_TASK \u003d S_TAB + \"NOTICE: Here are the matching tasks in your list...\";","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_NO_TASK_IN_LIST \u003d S_TAB + \"ERROR: There are no tasks in your list.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_TASK_SELECTED \u003d S_TAB + \"ERROR: Invalid task selected.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_NO_MATCHING_TASK \u003d S_TAB + \"ERROR: No matching tasks found.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_URI_FORMAT \u003d S_TAB + \"ERROR: This string cannot be parsed as a URI.\";","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_URI \u003d S_TAB + \"ERROR: Webpage does not / no longer exists.\";","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LIST_ITEM \u003d L_TAB + \"%1$s.%2$s\";","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the number of tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     * @return Size of task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    public int getListSize() {","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"     * Used when loading data from the file.","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"     * @param task Task object to be added","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"     * @param task    Task object to be added.","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"     * @param isPrint Boolean that checks if a message for task adding should be printed.","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    public void addTask(Task task, Ui ui, boolean isPrint) {","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"        if (isPrint) {","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(getMessageForAddTask());","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the string representation of task details","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"     * to be stored as a line in the file.","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskIndex Task index of the task to be stored","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"     * @return String representation of task details to be stored in the file.","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"    public String getTaskStringForStorage(int taskIndex) {","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"        return tasks.get(taskIndex).toFileString() + LS;","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"     * Print all the tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"    public void printList(Ui ui) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_NO_TASK_IN_LIST);","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(MESSAGE_TASK_IN_LIST);","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"            printTaskInList();","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"     * Deletes a task in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskNumber Task number of the task to be deleted.","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui         User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"    public void deleteTask(int taskNumber, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"        if (isListEmpty()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_NO_TASK_IN_LIST);","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"        } else if (doesTaskNumberExist(taskNumber)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_INVALID_TASK_SELECTED);","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"            String taskDetails \u003d getTaskDetails(taskNumber - 1);","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"            tasks.remove(taskNumber - 1);","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(getMessageForDeleteTask(taskDetails));","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"     * Marks a task in the list as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskNumber Task number of the task to be marked as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui         User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"     * @param isPrint    Boolean that checks if a message for task adding should be printed.","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"    public void markAsCompleted(int taskNumber, Ui ui, boolean isPrint) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"        if (doesTaskNumberExist(taskNumber)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_INVALID_TASK_SELECTED);","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"            markTaskAsCompleted(taskNumber - 1);","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"            String taskDetails \u003d getTaskDetails(taskNumber - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"            if (isPrint) {","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"                System.out.println(getMessageForMarkTaskAsDone(taskDetails));","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"     * Open the web browser of the GitHub project.","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui User interface of duke.","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"    public void openBrowser(Ui ui) throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"            URI uri \u003d new URI(\"https://dj-tan.github.io/ip/#command-summary\");","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"            Desktop.getDesktop().browse(uri);","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"            printOpenBrowserMessage(ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"        } catch (URISyntaxException uriSyntaxException) {","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_INVALID_URI_FORMAT);","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_INVALID_URI);","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a message to indicate that the website browser has been opened.","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"    public void printOpenBrowserMessage(Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"        ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(MESSAGE_OPEN_BROWSER);","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"        ui.showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"DJ-Tan"},"content":"     * Checks through existing task list for task names that contains the keyword and prints them.","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"     * @param keyword Keyword to check the task list against.","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      User interface of duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there are no matching tasks found.","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"    public void printMatchingTask(String keyword, Ui ui) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"        ArrayList\u003cString\u003e matchingTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"        findMatchingTask(matchingTaskList, keyword);","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"        if (matchingTaskList.isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_NO_MATCHING_TASK);","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"            printMatchingTaskList(matchingTaskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"DJ-Tan"},"content":"    /*","lastModifiedDate":"2021-09-18"},{"lineNumber":189,"author":{"gitId":"DJ-Tan"},"content":"     * NOTE : \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"DJ-Tan"},"content":"     * The following are private methods that are used to implement SLAP for the","lastModifiedDate":"2021-09-18"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"     * above public methods. These methods are positioned at the bottom to better","lastModifiedDate":"2021-09-18"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"     * visualise the actual methods that can be called from outside this class.","lastModifiedDate":"2021-09-18"},{"lineNumber":193,"author":{"gitId":"DJ-Tan"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":194,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":195,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"     * Get the string representation of the task details.","lastModifiedDate":"2021-09-18"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskIndex Task index of a task in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"     * @return String representation of the task details.","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"    private String getTaskDetails(int taskIndex) {","lastModifiedDate":"2021-09-18"},{"lineNumber":203,"author":{"gitId":"DJ-Tan"},"content":"        return tasks.get(taskIndex).toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"     * Marks a task in the list as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":208,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskIndex Task index of the task to be marked as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":211,"author":{"gitId":"DJ-Tan"},"content":"    private void markTaskAsCompleted(int taskIndex) {","lastModifiedDate":"2021-09-18"},{"lineNumber":212,"author":{"gitId":"DJ-Tan"},"content":"        tasks.get(taskIndex).markTaskAsDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":213,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":214,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":215,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":216,"author":{"gitId":"DJ-Tan"},"content":"     * Gets a confirmation message after a task has been added.","lastModifiedDate":"2021-09-18"},{"lineNumber":217,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":218,"author":{"gitId":"DJ-Tan"},"content":"     * @return Confirmation message that a task has been added.","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"DJ-Tan"},"content":"    private String getMessageForAddTask() {","lastModifiedDate":"2021-09-18"},{"lineNumber":221,"author":{"gitId":"DJ-Tan"},"content":"        String taskDetails \u003d tasks.get(tasks.size() - 1).toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":222,"author":{"gitId":"DJ-Tan"},"content":"        return String.format(MESSAGE_ADD_TASK, taskDetails, tasks.size());","lastModifiedDate":"2021-09-18"},{"lineNumber":223,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":224,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":225,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":226,"author":{"gitId":"DJ-Tan"},"content":"     * Iterates through the list and prints each task","lastModifiedDate":"2021-09-18"},{"lineNumber":227,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":228,"author":{"gitId":"DJ-Tan"},"content":"    private void printTaskInList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":229,"author":{"gitId":"DJ-Tan"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":230,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(formatTaskString((i + 1), getTaskDetails(i)));","lastModifiedDate":"2021-09-18"},{"lineNumber":231,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":232,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":233,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":234,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":235,"author":{"gitId":"DJ-Tan"},"content":"     * Formats the printing of task details as a string.","lastModifiedDate":"2021-09-18"},{"lineNumber":236,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":237,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskNumber  Task number of the task to be printed.","lastModifiedDate":"2021-09-18"},{"lineNumber":238,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskDetails Task details of the task to be printed.","lastModifiedDate":"2021-09-18"},{"lineNumber":239,"author":{"gitId":"DJ-Tan"},"content":"     * @return Formatted string of the task details.","lastModifiedDate":"2021-09-18"},{"lineNumber":240,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":241,"author":{"gitId":"DJ-Tan"},"content":"    private String formatTaskString(int taskNumber, String taskDetails) {","lastModifiedDate":"2021-09-18"},{"lineNumber":242,"author":{"gitId":"DJ-Tan"},"content":"        return String.format(LIST_ITEM, taskNumber, taskDetails);","lastModifiedDate":"2021-09-18"},{"lineNumber":243,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":244,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":245,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":246,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the task list is empty.","lastModifiedDate":"2021-09-18"},{"lineNumber":247,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":248,"author":{"gitId":"DJ-Tan"},"content":"     * @return True: If list is empty.","lastModifiedDate":"2021-09-18"},{"lineNumber":249,"author":{"gitId":"DJ-Tan"},"content":"     *         False: If list is non-empty.","lastModifiedDate":"2021-09-18"},{"lineNumber":250,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":251,"author":{"gitId":"DJ-Tan"},"content":"    private boolean isListEmpty() {","lastModifiedDate":"2021-09-18"},{"lineNumber":252,"author":{"gitId":"DJ-Tan"},"content":"        return tasks.size() \u003d\u003d 0;","lastModifiedDate":"2021-09-18"},{"lineNumber":253,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":254,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":255,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":256,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the list has a given task number.","lastModifiedDate":"2021-09-18"},{"lineNumber":257,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":258,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskNumber Task number of the task to be checked.","lastModifiedDate":"2021-09-18"},{"lineNumber":259,"author":{"gitId":"DJ-Tan"},"content":"     * @return True: If task number exists within the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":260,"author":{"gitId":"DJ-Tan"},"content":"     *         False: If task number does not exist within the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":261,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":262,"author":{"gitId":"DJ-Tan"},"content":"    private boolean doesTaskNumberExist(int taskNumber) {","lastModifiedDate":"2021-09-18"},{"lineNumber":263,"author":{"gitId":"DJ-Tan"},"content":"        return taskNumber \u003e tasks.size() || taskNumber \u003c 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":264,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":265,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":266,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":267,"author":{"gitId":"DJ-Tan"},"content":"     * Returns a formatted confirmation message after a task has been deleted.","lastModifiedDate":"2021-09-18"},{"lineNumber":268,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":269,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskDetails Task details of the task to be deleted.","lastModifiedDate":"2021-09-18"},{"lineNumber":270,"author":{"gitId":"DJ-Tan"},"content":"     * @return Formatted confirmation message of task deletion.","lastModifiedDate":"2021-09-18"},{"lineNumber":271,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":272,"author":{"gitId":"DJ-Tan"},"content":"    private String getMessageForDeleteTask(String taskDetails) {","lastModifiedDate":"2021-09-18"},{"lineNumber":273,"author":{"gitId":"DJ-Tan"},"content":"        return String.format(MESSAGE_DELETE_TASK, taskDetails, tasks.size());","lastModifiedDate":"2021-09-18"},{"lineNumber":274,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":275,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":276,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":277,"author":{"gitId":"DJ-Tan"},"content":"     * Returns a formatted confirmation message after a task has been mark as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":278,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":279,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskDetails Task details of the task to be mark as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":280,"author":{"gitId":"DJ-Tan"},"content":"     * @return Formatted confirmation message of task mark as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":281,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":282,"author":{"gitId":"DJ-Tan"},"content":"    private String getMessageForMarkTaskAsDone(String taskDetails) {","lastModifiedDate":"2021-09-18"},{"lineNumber":283,"author":{"gitId":"DJ-Tan"},"content":"        return String.format(MESSAGE_MARK_TASK_AS_DONE, taskDetails);","lastModifiedDate":"2021-09-18"},{"lineNumber":284,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":285,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":286,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":287,"author":{"gitId":"DJ-Tan"},"content":"     * Finds all tasks containing the keyword and adds them to a String ArrayList.","lastModifiedDate":"2021-09-19"},{"lineNumber":288,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":289,"author":{"gitId":"DJ-Tan"},"content":"     * @param matchingTaskList ArrayList containing strings of task names that matches keywords.","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"DJ-Tan"},"content":"     * @param keyword          Keyword to check the task list against.","lastModifiedDate":"2021-09-19"},{"lineNumber":291,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":292,"author":{"gitId":"DJ-Tan"},"content":"    private void findMatchingTask(ArrayList\u003cString\u003e matchingTaskList, String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":293,"author":{"gitId":"DJ-Tan"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":294,"author":{"gitId":"DJ-Tan"},"content":"            if (task.getTaskName().contains(keyword)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":295,"author":{"gitId":"DJ-Tan"},"content":"                matchingTaskList.add(task.toString());","lastModifiedDate":"2021-09-19"},{"lineNumber":296,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":297,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":298,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":299,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":300,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":301,"author":{"gitId":"DJ-Tan"},"content":"     * Prints out the tasks containing the keywords","lastModifiedDate":"2021-09-19"},{"lineNumber":302,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":303,"author":{"gitId":"DJ-Tan"},"content":"     * @param matchingTaskList ArrayList containing strings of task names that matches keywords.","lastModifiedDate":"2021-09-19"},{"lineNumber":304,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":305,"author":{"gitId":"DJ-Tan"},"content":"    private void printMatchingTaskList(ArrayList\u003cString\u003e matchingTaskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":306,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(MESSAGE_MATCHING_TASK);","lastModifiedDate":"2021-09-19"},{"lineNumber":307,"author":{"gitId":"DJ-Tan"},"content":"        for (int i \u003d 0; i \u003c matchingTaskList.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":308,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(L_TAB + (i + 1) + \".\" + matchingTaskList.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":310,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":311,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":312,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"DJ-Tan":312}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class Ui {","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    private static final String S_TAB \u003d \"     \";","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LINE \u003d \"    ─────────────────────────────────────────────────────────────────────────\";","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    private static final String RIMURU \u003d \"                                               *.\\n\"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"            + \"                     .                          *,,,,,,,,,\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"            + \"                   (           ..##%            **********,*,,,\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"            + \"               . #. . .........##%. ...... . ..///****************.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"            + \"             ...#.......##/...................(/////*****************\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"            + \"           ..#%....%.........................((//////////////**********\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"            + \"         ..%..\u0026..%%%.......................(((///////////////////*//*/***\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"            + \"       ...%......%#....%%\u0026\u0026...............(((///////////////////////////**\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"            + \"      #%*....%,......\u0026\u0026.,..\u0026\u0026..........,#((///////////////////////////////**\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"            + \"     ...%%#,.,,...\u0026\u0026#%\u0026\u0026,.......,.....#(((//////////////////////////////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"            + \"    ......,,,,,\u0026%,,,,,,....,.,,.,,,/#(((//(//////////////////////////////////\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"            + \"   ......,,,,,,\u0026.\u0026,,,,,,,.,,.,,,,##(((/((((///(//////////////////////////////%\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"            + \"   ,,,,,,,,,,,\u0026,,,\u0026,,,,,.,,,,,%#(((((((((((///(////////////////////////////\u0026(/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"            + \"   ,,,,,,,,,.,,,,,,%,,,,,,,%#((((((((((((((((((((//////////////////////(/\u0026////\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"            + \"    ,,,,,,,,,,,,,,,,,,,%%#(((((((((((((((((((((((/(///////////////////@\u0026(/////\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"            + \"      ,,,,,,,,,,,,%%###(((((((((#\u0026@@@@@@@@@@@@@@\u0026@\u0026\u0026\u0026\u0026%%%\u0026#((\u0026///////////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"            + \"         /(((######((((((((((((((((((((((((((((((((((/((/(((/(///(//////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"            + \"          ((((((((((((((((((((((((((((((((((((((((((((((////((/////////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"            + \"           (((((((((((((((((((((((((((((((((((((((((((((((((/(/((/////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"            + \"            /(((((((((((((((((((((((((((((((((((((((((((((((((/////////*/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"            + \"              (/((((((((((((((((((((((((((((((((((((((((((((((/(/////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"            + \"                 (/((((((((((((((((((((((((((((((((((((((((((/////\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"            + \"                     ./(((((((((((((((((((((((((((((((((////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"            + \"                             *//(((((((((((((((((//*\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_WELCOME \u003d S_TAB + \"Welcome to Jura Tempest!\" + LS","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"            + S_TAB + \"I\u0027m Rimuru Tempest, pleased to make your acquaintance.\" + LS","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"            + S_TAB + \"How can I help you today?\";","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_GOODBYE \u003d S_TAB + \"Sayonara. Come visit Jura Tempest again soon!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_LOAD \u003d S_TAB + \"File not found. A new list will be started.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a divider line.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    public void showLine() {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a welcome message.","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(RIMURU);","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(MESSAGE_WELCOME);","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"        showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"    public void showGoodbye() {","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"        showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(MESSAGE_GOODBYE);","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"        showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"     * Prints an error message.","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"     * @param errorMessage Error message (usually from DukeException)","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"        showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"        showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a file load error message.","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"        showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(ERROR_LOAD);","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"        showLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":84}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    protected Task task;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * Class add command constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param task Task to be added to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command to add task to the list","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     * and save changes to an external file.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @param tasks   List that stores all the tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage Reference to the file where data is stored.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"        tasks.addTask(task, ui, true);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        storage.saveTask(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":34}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Abstract method that runs user input commands.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param tasks   List that stores all the tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage Reference to the file where data is stored.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If exception is thrown by Command subclasses.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    public abstract void runCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the exit command is being called.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if Command subclass is exitCommand.","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     *         False if other Command subclasses.","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"        return false;","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    protected int taskNumber;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * Class delete command constructor.","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskNumber ID of task stored in list.","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command to delete a task","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * @param tasks   List that stores all the tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage Reference to the file where data is stored.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"        tasks.deleteTask(taskNumber, ui);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"        storage.saveTask(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"DJ-Tan":33}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * Class done command constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskNumber ID of task stored in list.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command to mark tasks as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * @param tasks   List that stores all the tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage Reference to the file where data is stored.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"        tasks.markAsCompleted(taskNumber, ui, true);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"        storage.saveTask(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":33}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     * Override superclass Command to not perform any actions.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * @param tasks   Not applicable.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      Not applicable.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage Not applicable.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        // Nothing required for the implementation of exit command","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     * Detects that the exit command has been called.","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @return true","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"        return true;","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    protected String keyword;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * Class find command constructor.","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param keyword Task to be added to the list.","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command that prints matching tasks in the list","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * @param tasks   List that stores all the tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      User interface of duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage Reference to the file where data is stored.","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If exception is thrown by Command subclasses.","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"        tasks.printMatchingTask(keyword, ui);","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"DJ-Tan":32}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command to print a list of possible commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param tasks   List that stores all the tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage Not applicable.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        tasks.openBrowser(ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":22}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command that prints the entire task list","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param tasks   List that stores all the tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param ui      User interface of duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param storage Not applicable.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        tasks.printList(ui);","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":22}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    protected String dueDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     * Class deadline constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param dueDate  Date that the task has to be completed by.","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    public Deadline(String taskName, Date dueDate) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"        super(taskName);","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        this.dueDate \u003d simpleDateFormat.format(dueDate);","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the description and due date of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task description and due date.","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     * Formats task details to write onto file.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task details for file format","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"        int stringIsDone \u003d isDone ? 1 : 0;","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"        return \"D\" + DELIMITER + stringIsDone + DELIMITER + taskName + DELIMITER + dueDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    protected String startDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    protected String endDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * Class event constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskName  Name of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param startDate Start date of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param endDate   End date of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    public Event(String taskName, Date startDate, Date endDate) {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        super(taskName);","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        this.startDate \u003d simpleDateFormat.format(startDate);","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        this.endDate \u003d simpleDateFormat.format(endDate);","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the description and held date of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task description and held date.","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + startDate + \" to \" + endDate + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     * Formats task details to write onto file.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task details for file format","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"        int stringIsDone \u003d isDone ? 1 : 0;","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"        return \"E\" + DELIMITER + stringIsDone + DELIMITER + taskName + DELIMITER + startDate + \" \" + endDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":45}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    protected static final String DELIMITER \u003d \"@@@\";","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    protected String taskName;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     * Class Task constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     * Task is initially declared as not completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for taskName.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     * @return String name of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"        return taskName;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     * Sets the task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if a task is completed and returns a corresponding symbol.","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     * @return \u0027X\u0027 for completed, and \u0027 \u0027 for not completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"        return getStatusIcon() + \" \" + taskName;","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"     * Formats task details to write onto file.","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task details for file format","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"        return \"N\" + DELIMITER + taskName;","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"DJ-Tan":57}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":5}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"     * Class Todo constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskName Name of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"        super(taskName);","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"     * Formats task details to write onto file.","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task details for file format","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        String stringIsDone \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"        return \"T\" + DELIMITER + stringIsDone + DELIMITER + taskName;","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":35}},{"path":"text-ui-test/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"T@@@0@@@read book","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"D@@@1@@@return book@@@06/12/2021 1800","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"DJ-Tan":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"delete 2","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"delete 1","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"todo read book","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"deadline return book","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"deadline return book /by","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"deadline /by return book","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"deadline return book /by 06/12/21 1800","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"deadline return book /by 06/12/2021 1800","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"event","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"event project meeting","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"event project meeting /at","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"event /at project meeting","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"event project meeting /at 07/07/2021 2100","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"event project meeting /at 07/12/2021 2100 08/12/2021 2100","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"find","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"find book","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"done","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"done 2","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"list 2","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"delete","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"delete 3","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"done 0","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"INVALID COMMAND","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"help","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"help 1","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"bye 1","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"DJ-Tan":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DJ-Tan":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DJ-Tan":2,"-":36}}]
