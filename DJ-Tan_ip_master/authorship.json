[{"path":"src/main/java/duke/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"public class CommandParser {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    private static final int COMMAND_KEYWORD \u003d 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_DONE \u003d 4;","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_TODO \u003d 4;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_DEADLINE \u003d 8;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_EVENT \u003d 5;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_BY_INDICATOR \u003d 3;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    private static final int STRING_LENGTH_AT_INDICATOR \u003d 3;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    private static final int TASK_NUMBER \u003d 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    private static final String BY_INDICATOR \u003d \"/by\";","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    private static final String AT_INDICATOR \u003d \"/at\";","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    private static final String S_TAB \u003d \"     \";","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    private static final String NL \u003d LS + S_TAB;","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    private static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_DONE \u003d \"Command format: \u0027done \u003cTASK_NUMBER\u003e\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_TODO \u003d \"Command format: \u0027todo \u003cTASK_NAME\u003e\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_DEADLINE \u003d \"Command format: \u0027deadline \u003cTASK_NAME\u003e /by \u003cTASK_DATE\u003e\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"    private static final String FORMAT_EVENT \u003d \"Command format: \u0027event \u003cTASK_NAME\u003e /at \u003cTASK_DATE\u003e\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DEFAULT \u003d S_TAB + \"Invalid command. Type \u0027help\u0027 to see a list of commands.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_BYE \u003d S_TAB + \"ERROR: Type \u0027bye\u0027 without additional parameters to exit.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_LIST \u003d S_TAB + \"ERROR: Type \u0027list\u0027 without additional parameters to print list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DONE_1 \u003d S_TAB + \"ERROR: Provide the task number of the task.\" + NL + FORMAT_DONE;","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DONE_2 \u003d S_TAB + \"ERROR: Provide the task number of one task only.\" + NL + FORMAT_DONE;","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_TODO \u003d S_TAB + \"ERROR: Specify a todo task to be added.\" + NL + FORMAT_TODO;","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DEADLINE_1 \u003d S_TAB + \"ERROR: Specify a task and due date.\" + NL + FORMAT_DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DEADLINE_2 \u003d S_TAB + \"ERROR: Specify due date after /by.\" + NL + FORMAT_DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_DEADLINE_3 \u003d S_TAB + \"ERROR: Specify a due date.\" + NL + FORMAT_DEADLINE;","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_EVENT_1 \u003d S_TAB + \"ERROR: Specify a task and event date.\" + NL + FORMAT_EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_EVENT_2 \u003d S_TAB + \"ERROR: Specify event date after /at.\" + NL + FORMAT_EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_EVENT_3 \u003d S_TAB + \"ERROR: Specify an event date.\" + NL + FORMAT_EVENT;","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_HELP \u003d \"ERROR: Type \u0027help\u0027 without additional parameters to view all commands.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"     * Takes in the user input command and breaks down the data.","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"     * @return Command subclass that corresponds to input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If non-standard input command is detected.","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"    public static Command parse(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"        String[] words \u003d inputCommand.split(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"        switch (words[COMMAND_KEYWORD]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"            return parseByeCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"            return parseListCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_DONE:","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"            return parseDoneCommand(inputCommand, words);","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"            return parseTodoCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"            return parseDeadlineCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"            return parseEventCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"            return parseHelpCommand(inputCommand);","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DEFAULT);","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the exit command.","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"     * @return ExitCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there are superfluous parameters in the exit command.","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseByeCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.equals(COMMAND_BYE)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_BYE);","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the list command.","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"     * @return ListCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there are superfluous parameters in the list command.","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseListCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_LIST);","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"        return new ListCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the done command.","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"     * @param words        User input command with each word stored in a String array.","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"     * @return DoneCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the task number is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"     *                       If there are superfluous parameters in the done command.","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseDoneCommand(String inputCommand, String[] words) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"        if (inputCommand.length() \u003c\u003d STRING_LENGTH_DONE + 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DONE_1);","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"        if (words.length \u003e 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DONE_2);","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"        return new DoneCommand(Integer.parseInt(words[TASK_NUMBER]));","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the todo command.","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"     * @return AddCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If the task name is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseTodoCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"        if (inputCommand.length() \u003c\u003d STRING_LENGTH_TODO + 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"        String taskName \u003d inputCommand.substring(STRING_LENGTH_TODO + 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"        return new AddCommand(taskName, null, TaskType.TODO);","lastModifiedDate":"2021-09-05"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the deadline command.","lastModifiedDate":"2021-09-05"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"     * @return AddCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If only the \u0027deadline\u0027 keyword is specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"     *                       If the \u0027/by\u0027 keyword is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"     *                       If the due date is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseDeadlineCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"        if (inputCommand.length() \u003c\u003d STRING_LENGTH_DEADLINE + 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DEADLINE_1);","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.contains(BY_INDICATOR)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DEADLINE_2);","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":160,"author":{"gitId":"DJ-Tan"},"content":"        int startIndexOfByIndicator \u003d inputCommand.indexOf(BY_INDICATOR);","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"DJ-Tan"},"content":"        int startIndexOfDatetime \u003d startIndexOfByIndicator + STRING_LENGTH_BY_INDICATOR + 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"DJ-Tan"},"content":"        if (inputCommand.length() \u003c\u003d startIndexOfDatetime) {","lastModifiedDate":"2021-09-05"},{"lineNumber":163,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_DEADLINE_3);","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"DJ-Tan"},"content":"        String taskName \u003d inputCommand.substring(STRING_LENGTH_DEADLINE + 1, startIndexOfByIndicator - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"DJ-Tan"},"content":"        String datetime \u003d inputCommand.substring(startIndexOfDatetime);","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"DJ-Tan"},"content":"        return new AddCommand(taskName, datetime, TaskType.DEADLINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":170,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the event command.","lastModifiedDate":"2021-09-05"},{"lineNumber":172,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":173,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":174,"author":{"gitId":"DJ-Tan"},"content":"     * @return AddCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":175,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If only the \u0027event\u0027 keyword is specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":176,"author":{"gitId":"DJ-Tan"},"content":"     *                       If the \u0027/at\u0027 keyword is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"DJ-Tan"},"content":"     *                       If the due date is not specified.","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":179,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseEventCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"DJ-Tan"},"content":"        if (inputCommand.length() \u003c\u003d STRING_LENGTH_EVENT + 1) {","lastModifiedDate":"2021-09-05"},{"lineNumber":181,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_EVENT_1);","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.contains(AT_INDICATOR)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":184,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_EVENT_2);","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"DJ-Tan"},"content":"        int startIndexOfAtIndicator \u003d inputCommand.indexOf(AT_INDICATOR);","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"DJ-Tan"},"content":"        int startIndexOfDatetime \u003d startIndexOfAtIndicator + STRING_LENGTH_AT_INDICATOR + 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"DJ-Tan"},"content":"        if (inputCommand.length() \u003c\u003d startIndexOfDatetime) {","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_EVENT_3);","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":191,"author":{"gitId":"DJ-Tan"},"content":"        String taskName \u003d inputCommand.substring(STRING_LENGTH_EVENT + 1, startIndexOfAtIndicator - 1);","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"DJ-Tan"},"content":"        String datetime \u003d inputCommand.substring(startIndexOfDatetime);","lastModifiedDate":"2021-09-05"},{"lineNumber":193,"author":{"gitId":"DJ-Tan"},"content":"        return new AddCommand(taskName, datetime, TaskType.EVENT);","lastModifiedDate":"2021-09-05"},{"lineNumber":194,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":195,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":196,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"DJ-Tan"},"content":"     * Breaks down the data for the help command.","lastModifiedDate":"2021-09-05"},{"lineNumber":198,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":199,"author":{"gitId":"DJ-Tan"},"content":"     * @param inputCommand User input command.","lastModifiedDate":"2021-09-05"},{"lineNumber":200,"author":{"gitId":"DJ-Tan"},"content":"     * @return HelpCommand subclass.","lastModifiedDate":"2021-09-05"},{"lineNumber":201,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there are superfluous parameters in the help command.","lastModifiedDate":"2021-09-05"},{"lineNumber":202,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":203,"author":{"gitId":"DJ-Tan"},"content":"    private static Command parseHelpCommand(String inputCommand) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":204,"author":{"gitId":"DJ-Tan"},"content":"        if (!inputCommand.equals(COMMAND_HELP)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_HELP);","lastModifiedDate":"2021-09-05"},{"lineNumber":206,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"DJ-Tan"},"content":"        return new HelpCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":209,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":210,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":210}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    private static final String S_TAB \u003d \"     \";","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_WELCOME \u003d S_TAB + \"Welcome to Jura Tempest!\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"                                                + S_TAB + \"I\u0027m Rimuru Tempest, pleased to make your acquaintance.\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"                                                + S_TAB + \"How can I help you today?\";","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_GOODBYE \u003d S_TAB + \"Sayonara. Come visit our country again soon!\";","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"        greetUser();","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"        executeResponse();","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a message that greets the user.","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    private static void greetUser() {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(Picture.RIMURU_LOGO);","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(MESSAGE_WELCOME);","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"        Picture.printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"     * Prints an exit message.","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    private static void exitDuke() {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"        Picture.printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(MESSAGE_GOODBYE);","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"        Picture.printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     * Continually waits for input user commands,","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     * and executes the corresponding actions,","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     * until the exit command is typed.","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    private static void executeResponse() {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"        String userInput;","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"            userInput \u003d in.nextLine().stripLeading().stripTrailing();","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"            try {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"                Command command \u003d CommandParser.parse(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"                command.runCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"                isExit \u003d command.isExitCommand();","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"                Picture.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"                Picture.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"            }","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"        exitDuke();","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DJ-Tan":61,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"     * Class constructor for DukeException.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"     * @param errorMessage Error message that describes what the error is.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":14}},{"path":"src/main/java/duke/Picture.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class Picture {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    public static final String DUKE_LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    public static final String RIMURU_LOGO \u003d \"                                               *.\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"            + \"                     .                          *,,,,,,,,,\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"            + \"                   (           ..##%            **********,*,,,\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"            + \"               . #. . .........##%. ...... . ..///****************.\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"            + \"             ...#.......##/...................(/////*****************\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"            + \"           ..#%....%.........................((//////////////**********\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"            + \"         ..%..\u0026..%%%.......................(((///////////////////*//*/***\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"            + \"       ...%......%#....%%\u0026\u0026...............(((///////////////////////////**\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"            + \"      #%*....%,......\u0026\u0026.,..\u0026\u0026..........,#((///////////////////////////////**\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"            + \"     ...%%#,.,,...\u0026\u0026#%\u0026\u0026,.......,.....#(((//////////////////////////////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"            + \"    ......,,,,,\u0026%,,,,,,....,.,,.,,,/#(((//(//////////////////////////////////\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"            + \"   ......,,,,,,\u0026.\u0026,,,,,,,.,,.,,,,##(((/((((///(//////////////////////////////%\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"            + \"   ,,,,,,,,,,,\u0026,,,\u0026,,,,,.,,,,,%#(((((((((((///(////////////////////////////\u0026(/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"            + \"   ,,,,,,,,,.,,,,,,%,,,,,,,%#((((((((((((((((((((//////////////////////(/\u0026////\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"            + \"    ,,,,,,,,,,,,,,,,,,,%%#(((((((((((((((((((((((/(///////////////////@\u0026(/////\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"            + \"      ,,,,,,,,,,,,%%###(((((((((#\u0026@@@@@@@@@@@@@@\u0026@\u0026\u0026\u0026\u0026%%%\u0026#((\u0026///////////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"            + \"         /(((######((((((((((((((((((((((((((((((((((/((/(((/(///(//////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"            + \"          ((((((((((((((((((((((((((((((((((((((((((((((////((/////////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"            + \"           (((((((((((((((((((((((((((((((((((((((((((((((((/(/((/////////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"            + \"            /(((((((((((((((((((((((((((((((((((((((((((((((((/////////*/\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"            + \"              (/((((((((((((((((((((((((((((((((((((((((((((((/(/////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"            + \"                 (/((((((((((((((((((((((((((((((((((((((((((/////\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"            + \"                     ./(((((((((((((((((((((((((((((((((////*\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"            + \"                             *//(((((((((((((((((//*\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a horizontal separator line.","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    public static void printLine() {","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(\"    ─────────────────────────────────────────────────────────────────────────\");","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":42}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    private static final int MAX_TASK \u003d 100;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    private static final int TASK_NAME_INDEX \u003d 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    private static final int TASK_DATE_INDEX \u003d 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LS \u003d System.lineSeparator();","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    private static final String S_TAB \u003d \"     \";","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    private static final String L_TAB \u003d \"       \";","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_ADD_TASK \u003d S_TAB + \"NOTICE: I\u0027ve added this task...\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"                                                + L_TAB + \"%1$s\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"                                                + S_TAB + \"Now you have %2$s task(s) in the list.\";","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_MARK_TASK_AS_DONE \u003d S_TAB + \"NOTICE: This task is marked as done...\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"                                                        + L_TAB + \"%1$s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_TASK_IN_LIST \u003d S_TAB + \"NOTICE: Here are the task(s) in your list...\";","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    private static final String MESSAGE_HELP \u003d S_TAB + \"NOTICE: This is a list of the possible commands...\";","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_INVALID_TASK_SELECTED \u003d S_TAB + \"ERROR: Invalid task selected.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    private static final String ERROR_NO_TASK_IN_LIST \u003d S_TAB + \"ERROR: There are no tasks in your list.\";","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LIST_ITEM \u003d L_TAB + \"%1$s.%2$s\";","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    private static final String LIST_COMMAND \u003d L_TAB + \"1. list\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"                                            + L_TAB + \"2. todo \u003cTASK\u003e\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"                                            + L_TAB + \"3. deadline \u003cTASK\u003e /by \u003cDATE\u003e\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"                                            + L_TAB + \"4. event \u003cTASK\u003e /at \u003cDATE\u003e\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"                                            + L_TAB + \"5. done \u003cTASK_NO\u003e\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"                                            + L_TAB + \"6. help\" + LS","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"                                            + L_TAB + \"7. bye\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"    private static Task[] tasks \u003d new Task[MAX_TASK];","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"    private static int tasksCount \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"     * Adds a task to the list of existing tasks.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskName The name of task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskDate TODO: null.","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"     *                 DEADLINE: The due date of the task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"     *                 EVENT: The event date of the task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskType The type of task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"    public static void addToList(String taskName, String taskDate, TaskType taskType) {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"DJ-Tan"},"content":"        String[] information \u003d new String[]{taskName, taskDate};","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"DJ-Tan"},"content":"        //String[] information \u003d extractTaskInformation(item, type);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"DJ-Tan"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"DJ-Tan"},"content":"        case TODO:","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"DJ-Tan"},"content":"            tasks[tasksCount] \u003d new Todo(information[TASK_NAME_INDEX]);","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"DJ-Tan"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"DJ-Tan"},"content":"            tasks[tasksCount] \u003d new Deadline(information[TASK_NAME_INDEX], information[TASK_DATE_INDEX]);","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"DJ-Tan"},"content":"        case EVENT:","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"DJ-Tan"},"content":"            tasks[tasksCount] \u003d new Event(information[TASK_NAME_INDEX], information[TASK_DATE_INDEX]);","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"DJ-Tan"},"content":"            break;","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"DJ-Tan"},"content":"        default:","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"DJ-Tan"},"content":"        tasksCount++;","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"DJ-Tan"},"content":"        Picture.printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(getMessageForAddTask());","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"DJ-Tan"},"content":"        Picture.printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":69,"author":{"gitId":"DJ-Tan"},"content":"     * Constructs a generic add task message when a task is added.","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"DJ-Tan"},"content":"     * @return add task message.","lastModifiedDate":"2021-08-28"},{"lineNumber":72,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":73,"author":{"gitId":"DJ-Tan"},"content":"    private static String getMessageForAddTask() {","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"DJ-Tan"},"content":"        final String taskDetails \u003d tasks[tasksCount - 1].toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"DJ-Tan"},"content":"        return String.format(MESSAGE_ADD_TASK, taskDetails, tasksCount);","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"DJ-Tan"},"content":"     * Marks the task associated with the itemNumber as completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"DJ-Tan"},"content":"     * Prints a message to confirm that the task has been marked as completed.","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"DJ-Tan"},"content":"     * @param itemNumber One index greater than the index of the task in the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If itemNumber \u003e number of items in list or not a positive integer","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"DJ-Tan"},"content":"    public static void markAsCompleted(int itemNumber) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":86,"author":{"gitId":"DJ-Tan"},"content":"        if (itemNumber \u003e tasksCount || itemNumber \u003c 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":87,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_INVALID_TASK_SELECTED);","lastModifiedDate":"2021-09-05"},{"lineNumber":88,"author":{"gitId":"DJ-Tan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":89,"author":{"gitId":"DJ-Tan"},"content":"            Picture.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"DJ-Tan"},"content":"            tasks[itemNumber - 1].markTaskAsDone();","lastModifiedDate":"2021-08-26"},{"lineNumber":91,"author":{"gitId":"DJ-Tan"},"content":"            final String taskDetails \u003d tasks[itemNumber - 1].toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(getMessageForMarkTaskAsDone(taskDetails));","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":94,"author":{"gitId":"DJ-Tan"},"content":"        Picture.printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":95,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":96,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":97,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":98,"author":{"gitId":"DJ-Tan"},"content":"     * Constructs a confirmation message when a task is marked as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":99,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":100,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskDetails String containing the description of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":101,"author":{"gitId":"DJ-Tan"},"content":"     * @return confirmation message for a task marked as done.","lastModifiedDate":"2021-08-28"},{"lineNumber":102,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"DJ-Tan"},"content":"    private static String getMessageForMarkTaskAsDone(String taskDetails) {","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"DJ-Tan"},"content":"        return String.format(MESSAGE_MARK_TASK_AS_DONE, taskDetails);","lastModifiedDate":"2021-08-28"},{"lineNumber":105,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":106,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"DJ-Tan"},"content":"     * Prints an error message if an invalid task is selected;","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"DJ-Tan"},"content":"     * otherwise prints all the tasks in the list in ascending order.","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":111,"author":{"gitId":"DJ-Tan"},"content":"    public static void printList() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"DJ-Tan"},"content":"        if (tasksCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":113,"author":{"gitId":"DJ-Tan"},"content":"            throw new DukeException(ERROR_NO_TASK_IN_LIST);","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"DJ-Tan"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"DJ-Tan"},"content":"            Picture.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(MESSAGE_TASK_IN_LIST);","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"DJ-Tan"},"content":"            printTasksInList();","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"DJ-Tan"},"content":"        Picture.printLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"DJ-Tan"},"content":"     * Enumerates through all the tasks in the list and","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"DJ-Tan"},"content":"     * prints each task line by line.","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"DJ-Tan"},"content":"    private static void printTasksInList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":127,"author":{"gitId":"DJ-Tan"},"content":"        String taskDetails;","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"DJ-Tan"},"content":"        for (int i \u003d 0; i \u003c tasksCount; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":129,"author":{"gitId":"DJ-Tan"},"content":"            taskDetails \u003d tasks[i].toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"DJ-Tan"},"content":"            System.out.println(getListItem(i + 1, taskDetails));","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"DJ-Tan"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":132,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":133,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":134,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"DJ-Tan"},"content":"     * Prints one task in the list.","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskNumber  Integer value that the task has been assigned.","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskDetails String description of the task.","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"DJ-Tan"},"content":"     * @return A string numbering the task and the corresponding details.","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"DJ-Tan"},"content":"    private static String getListItem(int taskNumber, String taskDetails) {","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"DJ-Tan"},"content":"        return String.format(LIST_ITEM, taskNumber, taskDetails);","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":146,"author":{"gitId":"DJ-Tan"},"content":"     * Prints the list of all possible commands when the \"help\" command is used.","lastModifiedDate":"2021-08-28"},{"lineNumber":147,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":148,"author":{"gitId":"DJ-Tan"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"DJ-Tan"},"content":"        Picture.printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":150,"author":{"gitId":"DJ-Tan"},"content":"        System.out.println(MESSAGE_HELP + LS + LIST_COMMAND);","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"DJ-Tan"},"content":"        Picture.printLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":152,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":153,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":154}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    private String taskName;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    private String taskDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    private TaskType taskType;","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * Class add command constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskName Name of task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskDate TODO: Not applicable.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *                 DEADLINE: Due date of the task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     *                 EVENT: Event date of the task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskType Type of task to be added.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    public AddCommand(String taskName, String taskDate, TaskType taskType) {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"        this.taskDate \u003d taskDate;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command to add task to the list.","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        TaskManager.addToList(taskName, taskDate, taskType);","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":33}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"     * Abstract method that runs user input commands.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If exception is thrown by Command subclasses.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    public abstract void runCommand() throws DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if the exit command is being called.","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * @return True if Command subclass is exitCommand.","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     *         False if other Command subclasses.","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        return false;","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    };","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":23}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     * Class done command constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     * @param taskNumber ID of task stored in list.","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command to mark task as completed.","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If an invalid task number is provided.","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"        TaskManager.markAsCompleted(taskNumber);","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":27}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"     * Override superclass Command to not perform any actions.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"        // Do nothing for now","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"     * Detects that the exit command has been called.","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     * @return true","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"        return true;","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":22}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command to print a lis of possible commands.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand() {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"        TaskManager.printHelpMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":14}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.command;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"import duke.TaskManager;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     * Runs a command to print the entire task list.","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * @throws DukeException If there are no tasks in the list.","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    public void runCommand() throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"        TaskManager.printList();","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"DJ-Tan":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    protected String dueDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"     * Class deadline constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     * @param description Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     * @param dueDate     Date that the task has to be completed by.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"        super(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the description and due date of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task description and due date.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    protected String heldDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"     * Class event constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     * @param description Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     * @param heldDate    Date when the event is held.","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    public Event(String description, String heldDate) {","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"        super(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"        this.heldDate \u003d heldDate;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the description and held date of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task description and held date.","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + heldDate + \")\";","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":26}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    private String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"     * Class Task constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     * Task is initially declared as not completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"     * @param description Short description of the task.","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"     * Getter for task description.","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"     * @return Short description of task.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"DJ-Tan"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"DJ-Tan"},"content":"     * Sets the task as completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"DJ-Tan"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"DJ-Tan"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"DJ-Tan"},"content":"     * Checks if a task is completed and returns a corresponding symbol.","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"DJ-Tan"},"content":"     * @return \u0027X\u0027 for completed, and \u0027 \u0027 for not completed.","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"DJ-Tan"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"DJ-Tan"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":42,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"DJ-Tan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"DJ-Tan"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"DJ-Tan":47}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public enum TaskType {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"    TODO, DEADLINE, EVENT","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":5}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"     * Class Todo constructor.","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"     * @param description Short description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"        super(description);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"     * @return String containing task description.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"DJ-Tan"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"DJ-Tan"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"DJ-Tan"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"DJ-Tan":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DJ-Tan"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"DJ-Tan"},"content":"todo read book","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"DJ-Tan"},"content":"deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"DJ-Tan"},"content":"deadline return book","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"DJ-Tan"},"content":"deadline return book /by","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"DJ-Tan"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"DJ-Tan"},"content":"event","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"DJ-Tan"},"content":"event project meeting","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"DJ-Tan"},"content":"event project meeting /at","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"DJ-Tan"},"content":"done","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"DJ-Tan"},"content":"done 2","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"DJ-Tan"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"DJ-Tan"},"content":"list 2","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"DJ-Tan"},"content":"done 0","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"INVALID COMMAND","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"DJ-Tan"},"content":"help","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"DJ-Tan"},"content":"help 1","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"DJ-Tan"},"content":"bye 1","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"DJ-Tan"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"DJ-Tan":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"DJ-Tan"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DJ-Tan":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"DJ-Tan"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/task/*.java","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DJ-Tan":1,"-":37}}]
