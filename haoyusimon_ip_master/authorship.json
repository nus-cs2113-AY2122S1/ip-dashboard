[{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"D * 0 * CS2113T ip  * 2021-10-01 2359","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"T * 0 * prepare for CG2027 final","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"haoyusimon":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"# User Guide for Duke","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"## About Duke","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"Duke is a tasks management bot which helps you to manage your daily tasks. With a command-line interface, it is easy and intuitive to use. Furthermore, it is cross-platform and can be conveniently set up on your computer. ","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"## Set-up","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"1. Download the `ip.jar` file from Releases in this repository.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"2. Put the `ip.jar` file into an empty foler.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"3. Open a terminal/Command Prompt window and navigate to the folder containing the `ip.jar` file.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"4. Make sure Java Development Kit 11 is installed on your computer. Key in the command `java -jar ip.jar` and press Enter.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"5. You will see a command-line interface. You can now use it by keying commands (which will be introduced below).","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"### Add different types of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"There are three types of tasks you can add to your list: Event, Deadline and Todo. ","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"### View and search for your tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"You can view all your tasks with details such as their status (have been done or not) and their types (Event E, Deadline D and Todo T). You can even search for specific tasks using keywords. ","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"### Make changes to your tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"You can mark your tasks as done and delete them after you finish them.","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"### Save the data locally","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"The list of tasks you added are automatically backed up in a local txt file. Even if you close the program, you will not lose your data. The next time you start the program, you will see them again. ","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"### `event` - Add an event","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"Add a new Event task to the list. An event has start date/time and end date/time. ","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"Format: `event DESCRIPTION /at START_DATE_TIME to END_DATE_TIME` ","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"(`START_DATE_TIME` and `END_DATE_TIME` have the format `YYYY-MM-DD hhmm`)","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"`event MA2108 exam /at 2021-09-30 0800 to 2021-09-30 1000`","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"A new event \"MA2108 exam\" from 8:00am to 10:00am on 30th Sep is added to the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"event MA2108 exam /at 2021-09-30 0800 to 2021-09-30 1000","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"     added: [E][ ] MA2108 exam (at: 30 Sep 2021 08:00 to 30 Sep 2021 10:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"### `deadline` - Add a deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"haoyusimon"},"content":"Add a new Deadline task to the list. An deadline has a date/time by which it should be finished. ","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"haoyusimon"},"content":"Format: `deadline DESCRIPTION /by DATE_TIME`","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"haoyusimon"},"content":"(`DATE_TIME` have the format `YYYY-MM-DD hhmm`)","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"haoyusimon"},"content":"`deadline CS2113T ip /by 2021-10-01 2359`","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Expected outcome: ","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"haoyusimon"},"content":"A new deadline \"CS2113T ip\" due on 1st Oct, 23:59pm is added to the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":74,"author":{"gitId":"haoyusimon"},"content":"deadline CS2113T ip /by 2021-10-01 2359","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"haoyusimon"},"content":"     added: [D][ ] CS2113T ip (by: 01 Oct 2021 23:59)","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"haoyusimon"},"content":"### `todo` - Add a todo","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"haoyusimon"},"content":"Add a new Todo task to the list. An todo has no date/time. ","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"haoyusimon"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"haoyusimon"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"haoyusimon"},"content":"`todo prepare for CG2027 final`","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"haoyusimon"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"haoyusimon"},"content":"A new todo \"prepare for CG2027 final\" is added to the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"haoyusimon"},"content":"todo prepare for CG2027 final","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"haoyusimon"},"content":"     added: [T][ ] prepare for CG2027 final","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"haoyusimon"},"content":"### `list` - list all tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"haoyusimon"},"content":"All tasks with their details will be listed out. ","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"haoyusimon"},"content":"Format: `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"haoyusimon"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"haoyusimon"},"content":"`list`","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"haoyusimon"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"haoyusimon"},"content":"All tasks are listed out.","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"haoyusimon"},"content":"list","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"haoyusimon"},"content":"     1. [E][ ] MA2108 exam (at: 30 Sep 2021 08:00 to 30 Sep 2021 10:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"haoyusimon"},"content":"     2. [D][ ] CS2113T ip (by: 01 Oct 2021 23:59)","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"haoyusimon"},"content":"     3. [T][ ] prepare for CG2027 final","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"haoyusimon"},"content":"     3 task(s) in total","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"haoyusimon"},"content":"### `done` - mark the task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"haoyusimon"},"content":"Mark a selected task as done, indicating you have finished it. ","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"haoyusimon"},"content":"Format: `done INDEX_OF_SELECTED_TASK`","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"haoyusimon"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"haoyusimon"},"content":"`done 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"haoyusimon"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"haoyusimon"},"content":"The selected task is marked as done with a symbol \"X\" added.","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"haoyusimon"},"content":"done 1","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"haoyusimon"},"content":"     Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"haoyusimon"},"content":"     [E][X] MA2108 exam (at: 30 Sep 2021 08:00 to 30 Sep 2021 10:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"haoyusimon"},"content":"### `find` - find specific tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"haoyusimon"},"content":"Find tasks containing specific keywords.","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"haoyusimon"},"content":"Format: `find KEYWORDS`","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"haoyusimon"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"haoyusimon"},"content":"`find MA2108`","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"haoyusimon"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"haoyusimon"},"content":"The tasks containing keyword \"MA2108\" are listed out.","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"haoyusimon"},"content":"find MA2108","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"haoyusimon"},"content":"     1. [E][X] MA2108 exam (at: 30 Sep 2021 08:00 to 30 Sep 2021 10:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"haoyusimon"},"content":"     1 task(s) in total","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"haoyusimon"},"content":"### `delete` - delete selected tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"haoyusimon"},"content":"Delete selected tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"haoyusimon"},"content":"Format: `delete INDEX_OF_SELECTED_TASK`","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"haoyusimon"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"haoyusimon"},"content":"`delete 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"haoyusimon"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"haoyusimon"},"content":"The selected task is deleted.","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"haoyusimon"},"content":"list","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"haoyusimon"},"content":"     1. [E][X] MA2108 exam (at: 30 Sep 2021 08:00 to 30 Sep 2021 10:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"haoyusimon"},"content":"     2. [D][ ] CS2113T ip (by: 01 Oct 2021 23:59)","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"haoyusimon"},"content":"     3. [T][ ] prepare for CG2027 final","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"haoyusimon"},"content":"     3 task(s) in total","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"haoyusimon"},"content":"delete 1","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"haoyusimon"},"content":"     Noted! I\u0027ve removed this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"haoyusimon"},"content":"     [E][X] MA2108 exam (at: 30 Sep 2021 08:00 to 30 Sep 2021 10:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"haoyusimon"},"content":"list","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"haoyusimon"},"content":"     1. [D][ ] CS2113T ip (by: 01 Oct 2021 23:59)","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"haoyusimon"},"content":"     2. [T][ ] prepare for CG2027 final","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"haoyusimon"},"content":"     2 task(s) in total","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"haoyusimon"},"content":"### `exit` - exit the Duke program","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"haoyusimon"},"content":"Exit the Duke program.","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"haoyusimon"},"content":"Format: `exit`","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"haoyusimon"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"haoyusimon"},"content":"`exit`","lastModifiedDate":"2021-09-29"},{"lineNumber":219,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"haoyusimon"},"content":"Expected outcome: ","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"haoyusimon"},"content":"Duke says goodbye and you exit Duke.","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":224,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"haoyusimon"},"content":"exit","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"haoyusimon"},"content":"     Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"haoyusimon"},"content":"     ________________________________________________________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"haoyusimon"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":230,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"haoyusimon"},"content":"## Summary of commands","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"haoyusimon"},"content":"| Command | Description |","lastModifiedDate":"2021-09-29"},{"lineNumber":234,"author":{"gitId":"haoyusimon"},"content":"----------|--------------","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"haoyusimon"},"content":" `event DESCRIPTION /at START_DATE_TIME to END_DATE_TIME` |  Add a new event","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"haoyusimon"},"content":"  `deadline DESCRIPTION /by DATE_TIME` |  Add a new deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"haoyusimon"},"content":" `todo DESCRIPTION` |  Add a new todo","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"haoyusimon"},"content":" `list` |  List all tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"haoyusimon"},"content":" `done INDEX_OF_SELECTED_TASK` |  Mark a task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"haoyusimon"},"content":"  `find KEYWORDS` |  Find tasks using keyword","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"haoyusimon"},"content":" `delete INDEX_OF_SELECTED_TASK` |  Delete a task","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"haoyusimon"},"content":"  `exit` |  Exit Duke","lastModifiedDate":"2021-09-29"},{"lineNumber":243,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":244,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":245,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":246,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":247,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"haoyusimon":224,"-":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":" * Represents the whole program.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"public class Duke {","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"     * The main function that will firstly execute when the program starts","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"     * @param args command-line arguments which comes with main(). Not used here.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"     * The Duke constructor.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"    public Duke() {","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"        TaskList localTasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"            localTasks \u003d new TaskList(storage.readData());","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"            ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"            localTasks \u003d new TaskList();","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"        this.tasks \u003d localTasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"     * The main body of Duke where all components are integrated.","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"    public void run() {","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"        ui.printGreetings();","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"            try {","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"                Command currentCommand \u003d parser.parse(fullCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"                currentCommand.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"                isExit \u003d currentCommand.isExit();","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"                ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"haoyusimon"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":63}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.command;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.UnsavedFile;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":" * Represents a command to add a deadline.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"    private final String deadlineName;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"    private final LocalDate deadlineDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"    private final String deadlineTime;","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"     * AddDeadlineCommand constructor.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"     * @param deadlineName the name/description of the deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"     * @param deadlineDate the date by which should finish the deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"     * @param deadlineTime the date by which should finish the deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"    public AddDeadlineCommand(String deadlineName, LocalDate deadlineDate, String deadlineTime) {","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"        this.deadlineName \u003d deadlineName;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"     * Add the deadline task to the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks   the TaskList object that takes in the new deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"     * @param ui      the Ui object responsible for printing messages","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"     * @param storage the Storage object responsible for saving data in a local txt file","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"     * @throws UnsavedFile when fail to save the data to local file","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnsavedFile {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"        tasks.addTask(new Deadline(deadlineName, deadlineDate, deadlineTime));","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"        int currentTaskIndex \u003d tasks.getTaskListSize() - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"        ui.printAdded(tasks.getTaskDetails(currentTaskIndex));","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"            storage.writeData(tasks.getTaskList());","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"            throw new UnsavedFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":50}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.command;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.UnsavedFile;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":" * Represents a command to add an event.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"    private final String eventName;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"    private final LocalDate eventStartDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"    private final LocalDate eventEndDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"    private final String eventStartTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"    private final String eventEndTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"     * AddEventCommand constructor.","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"     * @param eventName the name/description of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"     * @param eventStartDate the starting date of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"     * @param eventStartTime the starting time of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"     * @param eventEndDate the ending date of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"     * @param eventEndTime the ending time of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"    public AddEventCommand(String eventName, LocalDate eventStartDate, String eventStartTime,","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"                 LocalDate eventEndDate, String eventEndTime) {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"        this.eventStartDate \u003d eventStartDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"        this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"        this.eventEndDate \u003d eventEndDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"        this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"     * Add the event task to the list","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks   the TaskList object that takes in the new deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"     * @param ui      the Ui object responsible for printing messages","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"     * @param storage the Storage object responsible for saving data in a local txt file","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"     * @throws UnsavedFile if fail to save data to the local file","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnsavedFile {","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"        tasks.addTask(new Event(eventName, eventStartDate, eventStartTime,","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"                eventEndDate, eventEndTime));","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"        int currentTaskIndex \u003d tasks.getTaskListSize() - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"        ui.printAdded(tasks.getTaskDetails(currentTaskIndex));","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"            storage.writeData(tasks.getTaskList());","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"            throw new UnsavedFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":58}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.command;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.UnsavedFile;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":" * Represents a command to add a todo task.","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"    private final String todoName;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"     * The AddTodoCommand constructor.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"     * @param todoName the name/description of the todo task.","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"    public AddTodoCommand(String todoName) {","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"        this.todoName \u003d todoName;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"     * Add the todo task into the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks the TaskList object that takes in the new todo task","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"     * @param ui the Ui object responsible for printing messages","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"     * @param storage the Storage object responsible for saving data in a local txt file","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"     * @throws UnsavedFile if fail to save data in the local file","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws UnsavedFile {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"        tasks.addTask(new ToDo(this.todoName));","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"        int currentTaskIndex \u003d tasks.getTaskListSize() - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"        ui.printAdded(tasks.getTaskDetails(currentTaskIndex));","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"            storage.writeData(tasks.getTaskList());","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"            throw new UnsavedFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":42}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.command;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":" * Represents an abstract command","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"     * The abstract method to be overridden by the subclass of Command to execute","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"     * different functions.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks the TaskList object that takes in the new deadline task","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"     * @param ui the Ui object responsible for printing messages","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"     * @param storage the Storage object responsible for saving data in a local txt file","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"     * @throws DukeException if there is any problem arsing when executing the command","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"     * Indicate whether to exit and do not take in any new command.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"     * @return false by default if the command is not exit.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"        return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":30}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.command;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.InvalidIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.UnsavedFile;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":" * Represents a command to delete a task.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"    private final int selectedTaskIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"     * The DeleteTaskCommand constructor.","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"     * @param selectedTaskIndex the index of the task to be deleted","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"    public DeleteTaskCommand(int selectedTaskIndex) {","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"        this.selectedTaskIndex \u003d selectedTaskIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"     * Delete the selected task from the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks   the TaskList object that deletes the selected task","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"     * @param ui      the Ui object responsible for printing messages","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"     * @param storage the Storage object responsible for saving data in a local txt file","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"     * @throws DukeException when there is invalid index input or cannot save data","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"            ui.printDeleted(tasks.getTaskDetails(this.selectedTaskIndex));","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"            tasks.deleteTask(this.selectedTaskIndex);","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"            storage.writeData(tasks.getTaskList());","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"            throw new InvalidIndex();","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"            throw new UnsavedFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":45}},{"path":"src/main/java/duke/command/DoneTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.command;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.InvalidIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.UnsavedFile;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":" * Represents a command that marks a task as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"public class DoneTaskCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"    private final int currentTaskIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"     * DoneTaskCommand constructor.","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"     * @param currentTaskIndex the index of the task to be marked as done","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"    public DoneTaskCommand(int currentTaskIndex) {","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"        this.currentTaskIndex \u003d currentTaskIndex;","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"     * Mark a task from the list as \"done\" and show it to the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks   the TaskList object where the task is taken from","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"     * @param ui      the Ui object responsible for printing messages","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"     * @param storage the Storage object responsible for saving data in a local txt file","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"     * @throws DukeException when there is invalid index input or cannot save data","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"            tasks.markTaskDone(this.currentTaskIndex);","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"            ui.printMarked(tasks.getTaskDetails(this.currentTaskIndex));","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"            storage.writeData(tasks.getTaskList());","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"            throw new InvalidIndex();","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"            throw new UnsavedFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.command;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":" * Represents a command to exit the program","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"     * Say goodbye to the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks   is not used","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"     * @param ui      the Ui object responsible for printing messages","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"     * @param storage is not used","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"        ui.printBye();","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"     * Indicate whether to exit and do not take in any new command.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"     * @return true for exit command to let the program exit","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"        return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":30}},{"path":"src/main/java/duke/command/FindTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.command;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":" * Represents a command to find tasks using keywords","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"public class FindTasksCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"    private final String keywords;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"     * FindTaskCommand constructor.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"     * @param keywords the keywords to be searched for","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"    public FindTasksCommand(String keywords) {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"     * Print all the tasks found which contain the keywords.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks   the TaskList object that takes in the new deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"     * @param ui      the Ui object responsible for printing messages","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"     * @param storage the Storage object responsible for saving data in a local txt file","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"        TaskList relevantTasks \u003d new TaskList(tasks.getRelevantTaskList(this.keywords));","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"        ui.list(relevantTasks.getTaskList());","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"haoyusimon":31}},{"path":"src/main/java/duke/command/ListAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.command;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Storage;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.system.TaskList;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.system.Ui;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":" * Represents a command to list all tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"public class ListAllCommand extends Command {","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"     * Print out all tasks in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks   the TaskList object stores all the tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"     * @param ui      the Ui object responsible for printing messages","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"     * @param storage is not used","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"        ui.list(tasks.getTaskList());","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":21}},{"path":"src/main/java/duke/exception/CorruptedFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"public class CorruptedFile extends DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"        return \"The backup data file is corrupted. A new backup file has been created.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":10}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"public abstract class DukeException extends Throwable {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"     * Indicate what is the error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"     * @return error message","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"    public abstract String getMessage();","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":12}},{"path":"src/main/java/duke/exception/InvalidIndex.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"public class InvalidIndex extends DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"        return \"The index number you keyed in is invalid.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":10}},{"path":"src/main/java/duke/exception/InvalidInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"public class InvalidInput extends DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"        return \"I am sorry but your command is invalid. Please give me a valid command.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":9}},{"path":"src/main/java/duke/exception/NoDataFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"public class NoDataFile extends DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"        return \"Cannot find the backup data file. A new backup file will be created.\";","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":9}},{"path":"src/main/java/duke/exception/UnknownError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"public class UnknownError extends DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"        return \"There is an unknown error. Please restart this program.\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"haoyusimon":9}},{"path":"src/main/java/duke/exception/UnsavedFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"public class UnsavedFile extends DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"        return \"The backup data file cannot be stored in your computer. All data will be lost once you close the program.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":11}},{"path":"src/main/java/duke/exception/WrongFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.exception;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"public class WrongFormat extends DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"        return \"Your command format is wrong. Please try again.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":9}},{"path":"src/main/java/duke/system/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.system;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.command.AddDeadlineCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"import duke.command.DoneTaskCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"import duke.command.FindTasksCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"import duke.command.ListAllCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.InvalidInput;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.WrongFormat;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.UnknownError;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":" * A system component of the system in charge of interpreting user inputs","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"public class Parser {","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"     * Interprets user inputs and identify commands given by the user","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"     * @param fullCommand raw user input","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"     * @return commands to be executed","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"     * @throws DukeException if there are problems with the input","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"    public Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"            String commandType \u003d getCommandType(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"            switch (commandType) {","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"            case \"list\":","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"                return createListAllCommand(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"            case \"done\":","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"                return createDoneTaskCommand(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"                return createAddDeadlineCommand(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"            case \"event\":","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"                return createAddEventCommand(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"                return createAddTodoCommand(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"                return createDeleteTaskCommand(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"            case \"exit\":","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"                return createExitCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"            case \"find\":","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"                return createFindTasksCommand(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"            default:","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"                throw new InvalidInput();","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"            throw new UnknownError();","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"haoyusimon"},"content":"    private String getCommandType(String inputLine) {","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"haoyusimon"},"content":"        return inputLine.split(\" \")[0];","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"haoyusimon"},"content":"    private int getCurrentTaskIndex(String fullCommand) {","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"haoyusimon"},"content":"        return Integer.parseInt(fullCommand.split(\" \")[1]) - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"haoyusimon"},"content":"    private String getDeadlineName(String fullCommand) {","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"haoyusimon"},"content":"        return fullCommand.substring(\"deadline \".length(), fullCommand.indexOf(\"/by \"));","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"haoyusimon"},"content":"    private String getDeadlineTime(String fullCommand) {","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"haoyusimon"},"content":"        String rawDeadlineDateTime \u003d fullCommand.substring(fullCommand.indexOf(\"/by \") + \"/by \".length());","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"haoyusimon"},"content":"        String deadlineTime \u003d rawDeadlineDateTime.split(\" \")[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"haoyusimon"},"content":"        return deadlineTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"haoyusimon"},"content":"    private LocalDate getDeadlineDate(String fullCommand) {","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"haoyusimon"},"content":"        String rawDeadlineDateTime \u003d fullCommand.substring(fullCommand.indexOf(\"/by \") + \"/by \".length());","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"haoyusimon"},"content":"        String rawDeadlineDate \u003d rawDeadlineDateTime.split(\" \")[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"haoyusimon"},"content":"        LocalDate deadlineDate \u003d LocalDate.parse(rawDeadlineDate);","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"haoyusimon"},"content":"        return deadlineDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":85,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"haoyusimon"},"content":"    private String getEventName(String fullCommand) {","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"haoyusimon"},"content":"        return fullCommand.substring(\"event \".length(), fullCommand.indexOf(\"/at \"));","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"haoyusimon"},"content":"    private LocalDate[] getEventDates(String fullCommand) {","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"haoyusimon"},"content":"        String rawEventDatesTimes \u003d fullCommand.substring(fullCommand.indexOf(\"/at \") + \"/at \".length());","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"haoyusimon"},"content":"        String rawEventStartDateTime \u003d rawEventDatesTimes.split(\" to \")[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"haoyusimon"},"content":"        String rawEventEndDateTime \u003d rawEventDatesTimes.split(\" to \")[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"haoyusimon"},"content":"        String rawEventStartDate \u003d rawEventStartDateTime.split(\" \")[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"haoyusimon"},"content":"        String rawEventEndDate \u003d rawEventEndDateTime.split(\" \")[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"haoyusimon"},"content":"        LocalDate eventStartDate \u003d LocalDate.parse(rawEventStartDate);","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"haoyusimon"},"content":"        LocalDate eventEndDate \u003d LocalDate.parse(rawEventEndDate);","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"haoyusimon"},"content":"        return new LocalDate[] {eventStartDate, eventEndDate};","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"haoyusimon"},"content":"    private String[] getEventTimes(String fullCommand) {","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"haoyusimon"},"content":"        String rawEventDatesTimes \u003d fullCommand.substring(fullCommand.indexOf(\"/at \") + \"/at \".length());","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"haoyusimon"},"content":"        String rawEventStartDateTime \u003d rawEventDatesTimes.split(\" to \")[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"haoyusimon"},"content":"        String rawEventEndDateTime \u003d rawEventDatesTimes.split(\" to \")[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"haoyusimon"},"content":"        String eventStartTime \u003d rawEventStartDateTime.split(\" \")[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"haoyusimon"},"content":"        String eventEndTime \u003d rawEventEndDateTime.split(\" \")[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"haoyusimon"},"content":"        return new String[] {eventStartTime, eventEndTime};","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"haoyusimon"},"content":"    private String getTodoName(String fullCommand) {","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"haoyusimon"},"content":"        return fullCommand.substring(\"todo \".length());","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"haoyusimon"},"content":"    private boolean isCompleteEventCommand(String fullCommand) {","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"haoyusimon"},"content":"        if (!fullCommand.contains(\"/at \")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"haoyusimon"},"content":"            int hoursStartIndex \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"haoyusimon"},"content":"            int hoursEndIndex \u003d 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"haoyusimon"},"content":"            int minutesStartIndex \u003d 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"haoyusimon"},"content":"            LocalDate[] EventDates \u003d getEventDates(fullCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"haoyusimon"},"content":"            String[] EventTimes \u003d getEventTimes(fullCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"haoyusimon"},"content":"            for (String i: EventTimes) {","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"haoyusimon"},"content":"                int hours \u003d Integer.parseInt(i.substring(hoursStartIndex, hoursEndIndex));","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"haoyusimon"},"content":"                int minutes \u003d Integer.parseInt(i.substring(minutesStartIndex));","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"haoyusimon"},"content":"                if (hours \u003e 23 || hours \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"haoyusimon"},"content":"                    return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"haoyusimon"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"haoyusimon"},"content":"                if (minutes \u003e 59 || minutes \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"haoyusimon"},"content":"                    return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"haoyusimon"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"haoyusimon"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"haoyusimon"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"haoyusimon"},"content":"        } catch (DateTimeParseException | NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"haoyusimon"},"content":"    private boolean isCompleteTodoCommand(String fullCommand) {","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"haoyusimon"},"content":"        int lengthOfHeader \u003d \"todo \".length();","lastModifiedDate":"2021-09-24"},{"lineNumber":142,"author":{"gitId":"haoyusimon"},"content":"        if (fullCommand.length() \u003c\u003d lengthOfHeader) {","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":144,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":145,"author":{"gitId":"haoyusimon"},"content":"        return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":146,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":147,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":148,"author":{"gitId":"haoyusimon"},"content":"    private boolean isCompleteListCommand(String fullCommand) {","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"haoyusimon"},"content":"        int lengthOfHeader \u003d \"list\".length();","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"haoyusimon"},"content":"        if (fullCommand.length() !\u003d lengthOfHeader) {","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"haoyusimon"},"content":"        return true;","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"haoyusimon"},"content":"    private boolean isCompleteDoneCommand(String fullCommand) {","lastModifiedDate":"2021-09-24"},{"lineNumber":157,"author":{"gitId":"haoyusimon"},"content":"        int lengthOfHeader \u003d \"done \".length();","lastModifiedDate":"2021-09-24"},{"lineNumber":158,"author":{"gitId":"haoyusimon"},"content":"        int requiredArguments \u003d 2;","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"haoyusimon"},"content":"        String[] arguments \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-09-24"},{"lineNumber":160,"author":{"gitId":"haoyusimon"},"content":"        if (fullCommand.length() \u003c\u003d lengthOfHeader) {","lastModifiedDate":"2021-09-24"},{"lineNumber":161,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":163,"author":{"gitId":"haoyusimon"},"content":"        if (arguments.length \u003e requiredArguments) {","lastModifiedDate":"2021-09-24"},{"lineNumber":164,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":165,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"haoyusimon"},"content":"        return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":168,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"haoyusimon"},"content":"    private boolean isCompleteDeleteCommand(String fullCommand) {","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"haoyusimon"},"content":"        int lengthOfHeader \u003d \"delete \".length();","lastModifiedDate":"2021-09-24"},{"lineNumber":171,"author":{"gitId":"haoyusimon"},"content":"        int requiredArguments \u003d 2;","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"haoyusimon"},"content":"        String[] arguments \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"haoyusimon"},"content":"        if (fullCommand.length() \u003c\u003d lengthOfHeader) {","lastModifiedDate":"2021-09-24"},{"lineNumber":174,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":175,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":176,"author":{"gitId":"haoyusimon"},"content":"        if (arguments.length \u003e requiredArguments) {","lastModifiedDate":"2021-09-24"},{"lineNumber":177,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":179,"author":{"gitId":"haoyusimon"},"content":"        return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":182,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":183,"author":{"gitId":"haoyusimon"},"content":"    private boolean isCompleteDeadlineCommand(String fullCommand) {","lastModifiedDate":"2021-09-24"},{"lineNumber":184,"author":{"gitId":"haoyusimon"},"content":"        if (!fullCommand.contains(\"/by \")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":185,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":186,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":187,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"haoyusimon"},"content":"            int hoursStartIndex \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"haoyusimon"},"content":"            int hoursEndIndex \u003d 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"haoyusimon"},"content":"            int minutesStartIndex \u003d 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"haoyusimon"},"content":"            LocalDate DeadlineDate \u003d getDeadlineDate(fullCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"haoyusimon"},"content":"            String DeadlineTime \u003d getDeadlineTime(fullCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":193,"author":{"gitId":"haoyusimon"},"content":"            int hours \u003d Integer.parseInt(DeadlineTime.substring(hoursStartIndex, hoursEndIndex));","lastModifiedDate":"2021-09-27"},{"lineNumber":194,"author":{"gitId":"haoyusimon"},"content":"            int minutes \u003d Integer.parseInt(DeadlineTime.substring(minutesStartIndex));","lastModifiedDate":"2021-09-27"},{"lineNumber":195,"author":{"gitId":"haoyusimon"},"content":"            if (hours \u003e 23 || hours \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"haoyusimon"},"content":"                return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"haoyusimon"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"haoyusimon"},"content":"            if (minutes \u003e 59 || minutes \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":199,"author":{"gitId":"haoyusimon"},"content":"                return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":200,"author":{"gitId":"haoyusimon"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":201,"author":{"gitId":"haoyusimon"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":202,"author":{"gitId":"haoyusimon"},"content":"        } catch (DateTimeParseException | NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-27"},{"lineNumber":204,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":205,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":206,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":207,"author":{"gitId":"haoyusimon"},"content":"    private boolean isCompleteFindCommand(String fullCommand) {","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"haoyusimon"},"content":"        if (fullCommand.length() \u003c\u003d \"find \".length()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"haoyusimon"},"content":"            return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"haoyusimon"},"content":"        return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"haoyusimon"},"content":"    private String getKeywords(String fullCommand) {","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"haoyusimon"},"content":"        return fullCommand.substring(\"find \".length());","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"haoyusimon"},"content":"    private Command createListAllCommand(String fullCommand) throws WrongFormat {","lastModifiedDate":"2021-09-27"},{"lineNumber":218,"author":{"gitId":"haoyusimon"},"content":"        if (!isCompleteListCommand(fullCommand)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":219,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-25"},{"lineNumber":220,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"haoyusimon"},"content":"        return new ListAllCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":222,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":223,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":224,"author":{"gitId":"haoyusimon"},"content":"    private Command createDoneTaskCommand(String fullCommand) throws WrongFormat {","lastModifiedDate":"2021-09-27"},{"lineNumber":225,"author":{"gitId":"haoyusimon"},"content":"        if (!isCompleteDoneCommand(fullCommand)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":226,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-24"},{"lineNumber":227,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":228,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":229,"author":{"gitId":"haoyusimon"},"content":"            int currentTaskIndex \u003d getCurrentTaskIndex(fullCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":230,"author":{"gitId":"haoyusimon"},"content":"            return new DoneTaskCommand(currentTaskIndex);","lastModifiedDate":"2021-09-24"},{"lineNumber":231,"author":{"gitId":"haoyusimon"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":232,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-24"},{"lineNumber":233,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":234,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":235,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":236,"author":{"gitId":"haoyusimon"},"content":"    private Command createAddDeadlineCommand(String fullCommand) throws WrongFormat {","lastModifiedDate":"2021-09-27"},{"lineNumber":237,"author":{"gitId":"haoyusimon"},"content":"        if (!isCompleteDeadlineCommand(fullCommand)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":238,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-24"},{"lineNumber":239,"author":{"gitId":"haoyusimon"},"content":"        } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":240,"author":{"gitId":"haoyusimon"},"content":"            String deadlineName \u003d getDeadlineName(fullCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":241,"author":{"gitId":"haoyusimon"},"content":"            LocalDate deadlineDate \u003d getDeadlineDate(fullCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":242,"author":{"gitId":"haoyusimon"},"content":"            String deadlineTime \u003d getDeadlineTime(fullCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":243,"author":{"gitId":"haoyusimon"},"content":"            return new AddDeadlineCommand(deadlineName, deadlineDate, deadlineTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":244,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":245,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":246,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":247,"author":{"gitId":"haoyusimon"},"content":"    private Command createAddEventCommand(String fullCommand) throws WrongFormat {","lastModifiedDate":"2021-09-27"},{"lineNumber":248,"author":{"gitId":"haoyusimon"},"content":"        if (!isCompleteEventCommand(fullCommand)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":249,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-24"},{"lineNumber":250,"author":{"gitId":"haoyusimon"},"content":"        } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":251,"author":{"gitId":"haoyusimon"},"content":"            String eventName \u003d getEventName(fullCommand);","lastModifiedDate":"2021-09-24"},{"lineNumber":252,"author":{"gitId":"haoyusimon"},"content":"            LocalDate eventStartDate \u003d getEventDates(fullCommand)[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":253,"author":{"gitId":"haoyusimon"},"content":"            String eventStartTime \u003d getEventTimes(fullCommand)[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":254,"author":{"gitId":"haoyusimon"},"content":"            LocalDate eventEndDate \u003d getEventDates(fullCommand)[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":255,"author":{"gitId":"haoyusimon"},"content":"            String eventEndTime \u003d getEventTimes(fullCommand)[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":256,"author":{"gitId":"haoyusimon"},"content":"            return new AddEventCommand(eventName, eventStartDate, eventStartTime,","lastModifiedDate":"2021-09-25"},{"lineNumber":257,"author":{"gitId":"haoyusimon"},"content":"                    eventEndDate, eventEndTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":258,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":259,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":260,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"haoyusimon"},"content":"    private Command createAddTodoCommand(String fullCommand) throws WrongFormat {","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"haoyusimon"},"content":"        if (!isCompleteTodoCommand(fullCommand)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":263,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-24"},{"lineNumber":264,"author":{"gitId":"haoyusimon"},"content":"        } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":265,"author":{"gitId":"haoyusimon"},"content":"            String todoName \u003d getTodoName(fullCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"haoyusimon"},"content":"            return new AddTodoCommand(todoName);","lastModifiedDate":"2021-09-24"},{"lineNumber":267,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":268,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":269,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":270,"author":{"gitId":"haoyusimon"},"content":"    private Command createDeleteTaskCommand(String fullCommand) throws WrongFormat {","lastModifiedDate":"2021-09-27"},{"lineNumber":271,"author":{"gitId":"haoyusimon"},"content":"        if (!isCompleteDeleteCommand(fullCommand)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":272,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-24"},{"lineNumber":273,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":274,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":275,"author":{"gitId":"haoyusimon"},"content":"            int selectedTaskIndex \u003d Integer.parseInt(fullCommand.split(\" \")[1]) - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":276,"author":{"gitId":"haoyusimon"},"content":"            return new DeleteTaskCommand(selectedTaskIndex);","lastModifiedDate":"2021-09-24"},{"lineNumber":277,"author":{"gitId":"haoyusimon"},"content":"        } catch (NumberFormatException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":278,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-24"},{"lineNumber":279,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":280,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"haoyusimon"},"content":"    private Command createExitCommand() {","lastModifiedDate":"2021-09-27"},{"lineNumber":283,"author":{"gitId":"haoyusimon"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-09-24"},{"lineNumber":284,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":285,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":286,"author":{"gitId":"haoyusimon"},"content":"    private Command createFindTasksCommand(String fullCommand) throws WrongFormat {","lastModifiedDate":"2021-09-27"},{"lineNumber":287,"author":{"gitId":"haoyusimon"},"content":"        if (!isCompleteFindCommand(fullCommand)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":288,"author":{"gitId":"haoyusimon"},"content":"            throw new WrongFormat();","lastModifiedDate":"2021-09-26"},{"lineNumber":289,"author":{"gitId":"haoyusimon"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":290,"author":{"gitId":"haoyusimon"},"content":"            String keywords \u003d getKeywords(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":291,"author":{"gitId":"haoyusimon"},"content":"            return new FindTasksCommand(keywords);","lastModifiedDate":"2021-09-26"},{"lineNumber":292,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":293,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":294,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":294}},{"path":"src/main/java/duke/system/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.system;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.CorruptedFile;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import duke.exception.NoDataFile;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"import java.io.File;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":" * A system component in charge of reading/saving data from local file","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"public class Storage {","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"     * Read data from the local file in a default path.","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"     * @return ArrayList that contains all the tasks stored locally","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"     * @throws DukeException if there is any file-related problems","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"    public ArrayList\u003cTask\u003e readData() throws DukeException {","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"        String filePath \u003d \"data.txt\";","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"            return DecodeDataFile(file);","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"        } catch (ArrayIndexOutOfBoundsException | CorruptedFile e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"            throw new CorruptedFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"            throw new NoDataFile();","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"    private ArrayList\u003cTask\u003e DecodeDataFile(File file) throws FileNotFoundException, CorruptedFile {","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"                String currentLine \u003d s.nextLine();","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"                tasks \u003d DecodeLine(currentLine, tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"            return tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"            throw new ArrayIndexOutOfBoundsException();","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"        } catch (CorruptedFile e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"            throw new CorruptedFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"    private ArrayList\u003cTask\u003e DecodeTodo(String[] currentTaskData, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"        String todoName \u003d currentTaskData[2];","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"haoyusimon"},"content":"        tasks.add(new ToDo(todoName));","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"haoyusimon"},"content":"        String todoStatus \u003d currentTaskData[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"haoyusimon"},"content":"        if (todoStatus.equals(\"1\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"haoyusimon"},"content":"            int currentTaskIndex \u003d tasks.size() - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"haoyusimon"},"content":"            tasks.get(currentTaskIndex).markAsDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"haoyusimon"},"content":"        return tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"haoyusimon"},"content":"    private ArrayList\u003cTask\u003e DecodeDeadline(String[] currentTaskData, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"haoyusimon"},"content":"        String deadlineName \u003d currentTaskData[2];","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"haoyusimon"},"content":"        String rawDeadlineDateTime \u003d currentTaskData[3];","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"haoyusimon"},"content":"        String rawDeadlineDate \u003d rawDeadlineDateTime.split(\" \")[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"haoyusimon"},"content":"        String deadlineTime \u003d rawDeadlineDateTime.split(\" \")[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"haoyusimon"},"content":"        LocalDate deadlineDate \u003d LocalDate.parse(rawDeadlineDate);","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"haoyusimon"},"content":"        tasks.add(new Deadline(deadlineName, deadlineDate, deadlineTime));","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"haoyusimon"},"content":"        String deadlineStatus \u003d currentTaskData[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"haoyusimon"},"content":"        if (deadlineStatus.equals(\"1\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"haoyusimon"},"content":"            int currentTaskIndex \u003d tasks.size() - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"haoyusimon"},"content":"            tasks.get(currentTaskIndex).markAsDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"haoyusimon"},"content":"        return tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"haoyusimon"},"content":"    private ArrayList\u003cTask\u003e DecodeEvent(String[] currentTaskData, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"haoyusimon"},"content":"        String eventName \u003d currentTaskData[2];","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"haoyusimon"},"content":"        String rawEventDatesTimes \u003d currentTaskData[3];","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"haoyusimon"},"content":"        String rawEventStartDateTime \u003d rawEventDatesTimes.split(\" to \")[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"haoyusimon"},"content":"        String rawEventEndDateTime \u003d rawEventDatesTimes.split(\" to \")[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"haoyusimon"},"content":"        String rawEventStartDate \u003d rawEventStartDateTime.split(\" \")[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"haoyusimon"},"content":"        LocalDate eventStartDate \u003d LocalDate.parse(rawEventStartDate);","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"haoyusimon"},"content":"        String eventStartTime \u003d rawEventStartDateTime.split(\" \")[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"haoyusimon"},"content":"        String rawEventEndDate \u003d rawEventEndDateTime.split(\" \")[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"haoyusimon"},"content":"        LocalDate eventEndDate \u003d LocalDate.parse(rawEventEndDate);","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"haoyusimon"},"content":"        String eventEndTime \u003d rawEventEndDateTime.split(\" \")[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"haoyusimon"},"content":"        tasks.add(new Event(eventName, eventStartDate, eventStartTime,","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"haoyusimon"},"content":"                eventEndDate, eventEndTime));","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"haoyusimon"},"content":"        String eventStatus \u003d currentTaskData[1];","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"haoyusimon"},"content":"        if (eventStatus.equals(\"1\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"haoyusimon"},"content":"            int currentTaskIndex \u003d tasks.size() - 1;","lastModifiedDate":"2021-09-24"},{"lineNumber":99,"author":{"gitId":"haoyusimon"},"content":"            tasks.get(currentTaskIndex).markAsDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":101,"author":{"gitId":"haoyusimon"},"content":"        return tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"haoyusimon"},"content":"    private ArrayList\u003cTask\u003e DecodeLine(String currentLine, ArrayList\u003cTask\u003e tasks) throws CorruptedFile {","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"haoyusimon"},"content":"        ArrayList\u003cTask\u003e updatedTasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"haoyusimon"},"content":"        String[] currentTaskData \u003d currentLine.split(\" \\\\* \");","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"haoyusimon"},"content":"        String taskType \u003d currentTaskData[0];","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"haoyusimon"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"haoyusimon"},"content":"        case \"T\":","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"haoyusimon"},"content":"            updatedTasks \u003d DecodeTodo(currentTaskData, tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"haoyusimon"},"content":"            break;","lastModifiedDate":"2021-09-24"},{"lineNumber":112,"author":{"gitId":"haoyusimon"},"content":"        case \"D\":","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"haoyusimon"},"content":"            updatedTasks \u003d DecodeDeadline(currentTaskData, tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"haoyusimon"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"haoyusimon"},"content":"        case \"E\":","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"haoyusimon"},"content":"            updatedTasks \u003d DecodeEvent(currentTaskData, tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"haoyusimon"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"haoyusimon"},"content":"        default:","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"haoyusimon"},"content":"            throw new CorruptedFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":121,"author":{"gitId":"haoyusimon"},"content":"        return updatedTasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":123,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":124,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"haoyusimon"},"content":"     * Back up all tasks in the local txt file in a default path","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks task list that holds all the tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"haoyusimon"},"content":"     * @throws IOException if there is problem in writing to local file","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"haoyusimon"},"content":"    public void writeData(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":130,"author":{"gitId":"haoyusimon"},"content":"        String filePath \u003d \"data.txt\";","lastModifiedDate":"2021-09-24"},{"lineNumber":131,"author":{"gitId":"haoyusimon"},"content":"        String updatedData \u003d EncodeTask(tasks);","lastModifiedDate":"2021-09-24"},{"lineNumber":132,"author":{"gitId":"haoyusimon"},"content":"        try {","lastModifiedDate":"2021-09-24"},{"lineNumber":133,"author":{"gitId":"haoyusimon"},"content":"            writeToFile(filePath, updatedData);","lastModifiedDate":"2021-09-24"},{"lineNumber":134,"author":{"gitId":"haoyusimon"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":135,"author":{"gitId":"haoyusimon"},"content":"            throw new IOException();","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":137,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":138,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"haoyusimon"},"content":"    private String EncodeTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":140,"author":{"gitId":"haoyusimon"},"content":"        String updatedData \u003d \"\";","lastModifiedDate":"2021-09-24"},{"lineNumber":141,"author":{"gitId":"haoyusimon"},"content":"        String deadlineIndicator \u003d \"(by:\";","lastModifiedDate":"2021-09-24"},{"lineNumber":142,"author":{"gitId":"haoyusimon"},"content":"        String eventIndicator \u003d \"(at:\";","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"haoyusimon"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-24"},{"lineNumber":144,"author":{"gitId":"haoyusimon"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"haoyusimon"},"content":"            String currentTaskName \u003d currentTask.getTaskName();","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"haoyusimon"},"content":"            String currentTaskString \u003d currentTask.toString();","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"haoyusimon"},"content":"            String taskType \u003d currentTaskString.substring(1, 2);","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"haoyusimon"},"content":"            boolean isDone \u003d currentTask.getIsDone();","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"haoyusimon"},"content":"            String taskStatus;","lastModifiedDate":"2021-09-24"},{"lineNumber":150,"author":{"gitId":"haoyusimon"},"content":"            if (isDone) {","lastModifiedDate":"2021-09-24"},{"lineNumber":151,"author":{"gitId":"haoyusimon"},"content":"                taskStatus \u003d \"1\";","lastModifiedDate":"2021-09-24"},{"lineNumber":152,"author":{"gitId":"haoyusimon"},"content":"            } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":153,"author":{"gitId":"haoyusimon"},"content":"                taskStatus \u003d \"0\";","lastModifiedDate":"2021-09-24"},{"lineNumber":154,"author":{"gitId":"haoyusimon"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":155,"author":{"gitId":"haoyusimon"},"content":"            if (currentTaskString.contains(deadlineIndicator)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"haoyusimon"},"content":"                String deadlineDateTime \u003d ((Deadline) currentTask).getDeadlineDateTime(false);","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"haoyusimon"},"content":"                updatedData +\u003d taskType","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"haoyusimon"},"content":"                        + \" * \" + taskStatus","lastModifiedDate":"2021-09-24"},{"lineNumber":159,"author":{"gitId":"haoyusimon"},"content":"                        + \" * \" + currentTaskName","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"haoyusimon"},"content":"                        + \" * \" + deadlineDateTime","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"haoyusimon"},"content":"                        + System.lineSeparator();","lastModifiedDate":"2021-09-24"},{"lineNumber":162,"author":{"gitId":"haoyusimon"},"content":"            } else if (currentTaskString.contains(eventIndicator)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"haoyusimon"},"content":"                String eventDatesTimes \u003d ((Event)currentTask).getEventDatesTimes(false);","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"haoyusimon"},"content":"                updatedData +\u003d taskType","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"haoyusimon"},"content":"                        + \" * \" + taskStatus","lastModifiedDate":"2021-09-24"},{"lineNumber":166,"author":{"gitId":"haoyusimon"},"content":"                        + \" * \" + currentTaskName","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"haoyusimon"},"content":"                        + \" * \" + eventDatesTimes","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"haoyusimon"},"content":"                        + System.lineSeparator();","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"haoyusimon"},"content":"            } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":170,"author":{"gitId":"haoyusimon"},"content":"                updatedData +\u003d taskType","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"haoyusimon"},"content":"                        + \" * \" + taskStatus","lastModifiedDate":"2021-09-24"},{"lineNumber":172,"author":{"gitId":"haoyusimon"},"content":"                        + \" * \" + currentTaskName","lastModifiedDate":"2021-09-25"},{"lineNumber":173,"author":{"gitId":"haoyusimon"},"content":"                        + System.lineSeparator();","lastModifiedDate":"2021-09-24"},{"lineNumber":174,"author":{"gitId":"haoyusimon"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":175,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":176,"author":{"gitId":"haoyusimon"},"content":"        return updatedData;","lastModifiedDate":"2021-09-24"},{"lineNumber":177,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":178,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":179,"author":{"gitId":"haoyusimon"},"content":"    private void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-09-24"},{"lineNumber":180,"author":{"gitId":"haoyusimon"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-24"},{"lineNumber":181,"author":{"gitId":"haoyusimon"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-09-24"},{"lineNumber":182,"author":{"gitId":"haoyusimon"},"content":"        fw.close();","lastModifiedDate":"2021-09-24"},{"lineNumber":183,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":184,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":184}},{"path":"src/main/java/duke/system/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.system;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":" * A system component that manipulates tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"public class TaskList {","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"     * TaskList constructor for a given task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks arraylist that holds all the tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"     * TaskList constructor for a new empty list.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"     * Only used when the local file is corrupted.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"     * Mark a task as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"     * @param currentTaskIndex the index of the selected task","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"     * @throws IndexOutOfBoundsException if the index given is invalid","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"    public void markTaskDone(int currentTaskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"        this.tasks.get(currentTaskIndex).markAsDone();","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"     * Get the full information of a task.","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"     * @param currentTaskIndex the index of the selected task","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"     * @return the full information of the task as a String.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"    public String getTaskDetails(int currentTaskIndex) {","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"        return this.tasks.get(currentTaskIndex).toString();","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"     * Get the list of tasks in the ArrayList format.","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"     * @return a ArrayList containing all the tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"        return this.tasks;","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"     * Add a new task to the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"     * @param newTask the new task to be added","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"haoyusimon"},"content":"    public void addTask(Task newTask) {","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"haoyusimon"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"haoyusimon"},"content":"     * Delete a task from the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"haoyusimon"},"content":"     * @param currentTaskIndex the index of the selected task","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"haoyusimon"},"content":"    public void deleteTask(int currentTaskIndex) {","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"haoyusimon"},"content":"        tasks.remove(currentTaskIndex);","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"haoyusimon"},"content":"     * Get the number of tasks in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"haoyusimon"},"content":"     * @return the number of tasks as an integer.","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"haoyusimon"},"content":"    public int getTaskListSize() {","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"haoyusimon"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"haoyusimon"},"content":"     * Get tasks that the user is searching for.","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"haoyusimon"},"content":"     * @param keywords keywords used by the user to search","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"haoyusimon"},"content":"     * @return a list of relevant tasks as ArrayList.","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"haoyusimon"},"content":"    public ArrayList\u003cTask\u003e getRelevantTaskList(String keywords) {","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"haoyusimon"},"content":"        ArrayList\u003cTask\u003e relevantTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"haoyusimon"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"haoyusimon"},"content":"            Task currentTask \u003d this.tasks.get(i);","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"haoyusimon"},"content":"            if (currentTask.containsKeywords(keywords)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"haoyusimon"},"content":"                relevantTasks.add(currentTask);","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"haoyusimon"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"haoyusimon"},"content":"        return relevantTasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":96,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":96}},{"path":"src/main/java/duke/system/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.system;","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":" * A system component responsible for interaction with the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"public class Ui {","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"    static final String DUKE_LOGO \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"            \"      ____        _        \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"            \"     |  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"            \"     | | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"            \"     | |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"            \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"    static final String LINE_SEPARATOR \u003d \"     __________________________________________\" +","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"            \"______________________________________________________________\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"    static final String SPACING \u003d \"     \";","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"    static final String CANNOT_IDENTIFY \u003d","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"            \"I am sorry, but I do not know what do you mean. \" +","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"                    \"Please key in a valid input.\";","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"    static final String GREETINGS \u003d LINE_SEPARATOR","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"            + SPACING + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"            + SPACING + \"What can I do for you?\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"            + LINE_SEPARATOR;","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"    static final String COUNT_NUMBER \u003d \" task(s) in total\";","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"     * Print greeting message when the program starts.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"    public void printGreetings() {","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"        System.out.println(DUKE_LOGO + GREETINGS);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"     * Print messages after marking a task as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"     * @param taskDetail the detail of the task marked as done","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"    public void printMarked(String taskDetail) {","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"        String update \u003d LINE_SEPARATOR","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"                + SPACING + \"Nice! I\u0027ve marked this task as done: \\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"                + SPACING + taskDetail + \"\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"                + LINE_SEPARATOR;","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"        System.out.println(update);","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"     * Print error messages when there are errors.","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"     * @param errorMessage error message to be printed","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"    public void printErrorMessage(String errorMessage) {","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"        String error \u003d LINE_SEPARATOR","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"                + SPACING + errorMessage + \"\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"                + LINE_SEPARATOR;","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"        System.out.println(error);","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"haoyusimon"},"content":"     * Print messages after adding a task.","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"haoyusimon"},"content":"     * @param taskDetail the detail of the task added","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"haoyusimon"},"content":"    public void printAdded(String taskDetail) {","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"haoyusimon"},"content":"        String response \u003d LINE_SEPARATOR","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"haoyusimon"},"content":"                + SPACING + \"added: \" + taskDetail + \"\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"haoyusimon"},"content":"                + LINE_SEPARATOR;","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"haoyusimon"},"content":"        System.out.println(response);","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"haoyusimon"},"content":"     * Print messages after deleting a task.","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"haoyusimon"},"content":"     * @param taskDetail the detail of the task deleted","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"haoyusimon"},"content":"    public void printDeleted(String taskDetail) {","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"haoyusimon"},"content":"        String update \u003d LINE_SEPARATOR","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"haoyusimon"},"content":"                + SPACING + \"Noted! I\u0027ve removed this task: \\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"haoyusimon"},"content":"                + SPACING + taskDetail + \"\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"haoyusimon"},"content":"                + LINE_SEPARATOR;","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"haoyusimon"},"content":"        System.out.println(update);","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":81,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"haoyusimon"},"content":"     * Print goodbye to the user before exiting.","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"haoyusimon"},"content":"    public void printBye() {","lastModifiedDate":"2021-09-24"},{"lineNumber":86,"author":{"gitId":"haoyusimon"},"content":"        String Bye \u003d LINE_SEPARATOR","lastModifiedDate":"2021-09-24"},{"lineNumber":87,"author":{"gitId":"haoyusimon"},"content":"                + SPACING + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2021-09-24"},{"lineNumber":88,"author":{"gitId":"haoyusimon"},"content":"                + LINE_SEPARATOR;","lastModifiedDate":"2021-09-24"},{"lineNumber":89,"author":{"gitId":"haoyusimon"},"content":"        System.out.println(Bye);","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":91,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":92,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"haoyusimon"},"content":"     * List all the tasks in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"haoyusimon"},"content":"     * @param tasks the task list holding tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"haoyusimon"},"content":"    public void list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"haoyusimon"},"content":"        String listOutput \u003d LINE_SEPARATOR;","lastModifiedDate":"2021-09-24"},{"lineNumber":98,"author":{"gitId":"haoyusimon"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"haoyusimon"},"content":"            listOutput +\u003d SPACING + (i + 1) + \". \"","lastModifiedDate":"2021-09-24"},{"lineNumber":100,"author":{"gitId":"haoyusimon"},"content":"                    + tasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":102,"author":{"gitId":"haoyusimon"},"content":"        listOutput +\u003d \"\\n\" + SPACING + tasks.size() + COUNT_NUMBER + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"haoyusimon"},"content":"        listOutput +\u003d LINE_SEPARATOR;","lastModifiedDate":"2021-09-24"},{"lineNumber":104,"author":{"gitId":"haoyusimon"},"content":"        System.out.println(listOutput);","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":106,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":108,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"haoyusimon"},"content":"     * Read the command from the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"haoyusimon"},"content":"     * @return the user\u0027s command as String.","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"haoyusimon"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-24"},{"lineNumber":113,"author":{"gitId":"haoyusimon"},"content":"        String fullCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"haoyusimon"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"haoyusimon"},"content":"        fullCommand \u003d in.nextLine();","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"haoyusimon"},"content":"        return fullCommand;","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":118,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"haoyusimon":118}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":" * Represents a deadline task.","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"    private final LocalDate deadlineDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"    private final String deadlineTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"     * Deadline task constructor.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"     * @param deadlineName the name/description of the deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"     * @param deadlineDate the date by which should finish the deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"     * @param deadlineTime the time by which should finish the deadline task","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"    public Deadline(String deadlineName, LocalDate deadlineDate, String deadlineTime) {","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"        super(deadlineName);","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"        this.deadlineTime \u003d deadlineTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"     * Get the deadline date and time.","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"     * @param isNewFormat whether show dates in a new format or old format from the user","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"     * @return the deadline date and time as String","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"    public String getDeadlineDateTime(boolean isNewFormat) {","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"        int minutesStartIndex \u003d 0;","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"        int minutesEndIndex \u003d 2;","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"        int hoursStartIndex \u003d 2;","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"        String deadlineDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"        if (isNewFormat) {","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"            deadlineDateTime \u003d this.deadlineDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"                    + \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"                    + this.deadlineTime.substring(minutesStartIndex, minutesEndIndex)","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"                    + \":\"","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"                    + this.deadlineTime.substring(hoursStartIndex);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"        } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"            deadlineDateTime \u003d this.deadlineDate.toString()","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"                    + \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"                    + this.deadlineTime.substring(minutesStartIndex, minutesEndIndex)","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"                    + this.deadlineTime.substring(hoursStartIndex);","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"        return deadlineDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"     * Show the full information of the deadline task.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"     * @return the full information of the deadline task as String","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"        return \"[D]\" + \"[\" + this.getTaskStatusInString() + \"] \" + this.getTaskName()","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"                + \"(by: \" + this.getDeadlineDateTime(true) + \")\";","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"haoyusimon":61}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":" * Represents an event task.","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"    private final LocalDate eventStartDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"    private final LocalDate eventEndDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"    private final String eventStartTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"    private final String eventEndTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"     * Event task constructor.","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"     * @param eventName the name/description of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"     * @param eventStartDate the starting date of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"     * @param eventStartTime the starting time of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"     * @param eventEndDate the ending date of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"     * @param eventEndTime the ending time of the event task","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"    public Event(String eventName, LocalDate eventStartDate, String eventStartTime,","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"                 LocalDate eventEndDate, String eventEndTime) {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"        super(eventName);","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"        this.eventStartDate \u003d eventStartDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"        this.eventStartTime \u003d eventStartTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"        this.eventEndDate \u003d eventEndDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"        this.eventEndTime \u003d eventEndTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"     * Get the starting and ending date and time of the event task.","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"     * @param isNewFormat whether use a new date format(different from the user old format)","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"     * @return the starting/ending date and time of the event task in the new/old format","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"    public String getEventDatesTimes(boolean isNewFormat) {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"        int minutesStartIndex \u003d 0;","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"        int minutesEndIndex \u003d 2;","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"        int hoursStartIndex \u003d 2;","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"        String eventDatesTimes;","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"        if (isNewFormat) {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"            eventDatesTimes \u003d this.eventStartDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"                    + \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventStartTime.substring(minutesStartIndex,minutesEndIndex)","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"                    + \":\"","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventStartTime.substring(hoursStartIndex)","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"                    + \" to \"","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventEndDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"))","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"                    + \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventEndTime.substring(minutesStartIndex,minutesEndIndex)","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"                    + \":\"","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventEndTime.substring(hoursStartIndex);","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"        } else {","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"            eventDatesTimes \u003d this.eventStartDate.toString()","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"                    + \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventStartTime.substring(minutesStartIndex,minutesEndIndex)","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventStartTime.substring(hoursStartIndex)","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"haoyusimon"},"content":"                    + \" to \"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventEndDate.toString()","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"haoyusimon"},"content":"                    + \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventEndTime.substring(minutesStartIndex,minutesEndIndex)","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"haoyusimon"},"content":"                    + this.eventEndTime.substring(hoursStartIndex);","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"haoyusimon"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"haoyusimon"},"content":"        return eventDatesTimes;","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"haoyusimon"},"content":"     * Show the full information of the event task.","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"haoyusimon"},"content":"     * @return the full information of the event task as String","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"haoyusimon"},"content":"    public String toString() {","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"haoyusimon"},"content":"        return \"[E]\" + \"[\" + this.getTaskStatusInString() + \"] \" + this.getTaskName()","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"haoyusimon"},"content":"                + \"(at: \" + this.getEventDatesTimes(true) + \")\";","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"haoyusimon":77}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":" * Represents a task with task name and status (done or not).","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"public class Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"    private final String taskName; //need to change?","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"    private Boolean isDone;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"     * Task constructor.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"     * @param taskName the name/description of the task","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"     * Get the task status (done or not done) as String.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"     * @return \"X\" if done, \" \" if not done","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"    public String getTaskStatusInString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":25,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"haoyusimon"},"content":"     * Mark the task as done.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"haoyusimon"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"haoyusimon"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"haoyusimon"},"content":"     * Get the name/description of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"haoyusimon"},"content":"     * @return the name of the task in String","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"haoyusimon"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"haoyusimon"},"content":"        return this.taskName;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"haoyusimon"},"content":"     * Check if the task name/description contains a given keywords string.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"haoyusimon"},"content":"     * @param keywords keywords to be searched for","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"haoyusimon"},"content":"     * @return true if the task contains the given keywords, else return no","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"haoyusimon"},"content":"    public boolean containsKeywords(String keywords) {","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"haoyusimon"},"content":"        return this.toString().contains(keywords);","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"haoyusimon"},"content":"     * Get the isDone attribute.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"haoyusimon"},"content":"     * @return the isDone (either true or false)","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"haoyusimon"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"haoyusimon"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"haoyusimon"},"content":"     * Show the full information of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"haoyusimon"},"content":"     * @return the full information of the task as String","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"haoyusimon"},"content":"    public String toString() {","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"haoyusimon"},"content":"        return \"[\" + this.getTaskStatusInString() + \"] \" + this.getTaskName();","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"haoyusimon":68}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":" * Represents a Todo task.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"     * Todo constructor.","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"     * @param todoName the name/description of the Todo task","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"    public ToDo(String todoName) {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"haoyusimon"},"content":"        super(todoName);","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"haoyusimon"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"haoyusimon"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"haoyusimon"},"content":"     * Show full information of the Todo task.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"haoyusimon"},"content":"     * @return the full information of the Todo task as String","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"haoyusimon"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"haoyusimon"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"haoyusimon"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"haoyusimon"},"content":"        return \"[T]\" + \"[\" + this.getTaskStatusInString() + \"] \" + this.getTaskName();","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"haoyusimon"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"haoyusimon":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"haoyusimon"},"content":"deadline CS3230 Assignment /by 3rd Sep","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"haoyusimon"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"haoyusimon"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"haoyusimon"},"content":"todo CS2113T Coursemology ","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"haoyusimon"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"haoyusimon"},"content":"done 2","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"event CS2101 Team Meeting /at 2nd Sep","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"haoyusimon"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"haoyusimon"},"content":"done 3","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"haoyusimon":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"haoyusimon"},"content":"del ACTUAL.TXT","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"haoyusimon"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"haoyusimon"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"haoyusimon"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"haoyusimon"},"content":"pause","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"haoyusimon":5,"-":19}}]
