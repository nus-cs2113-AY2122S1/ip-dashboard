[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run Duke` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"   Hello! I\u0027m Duke","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"   What can I do for you?","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"   ------------","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ngoivanessa":4,"-":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"Duke is a task manager that makes use of the command line interface. Users can add, delete, search and save different types of tasks in this application.","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":"## Table of Contents","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"* [Features and Usage](#features-and-usage)","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":"    * [Add Tasks](#add-tasks)","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"    * [List Tasks](#list-tasks)","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"    * [Set status of tasks](#set-status-of-task)","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"    * [Search for tasks](#search-for-tasks)","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"    * [Delete Tasks](#delete-tasks)","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":"    * [Exit the program](#exit-the-program)","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"## Quick Start","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"1. Ensure you have `Java 11` installed on your device.","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"2. Download the latest jar file [here](https://github.com/ngoivanessa/ip/releases/tag/A-Release)","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":"3. Save it to an empty folder.","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":"4. Open any terminal and navigate to the folder the jar is saved in.","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"5. Enter `java -jar duke.jar` into the terminal to run Duke. You should see the following output:","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"Hello from","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":" ____        _        ","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ngoivanessa"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"ngoivanessa"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ngoivanessa"},"content":"|____/ \\__,_|_|\\_\\___","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"ngoivanessa"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"ngoivanessa"},"content":"What can I do for you?","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"ngoivanessa"},"content":"## Features and Usage","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"ngoivanessa"},"content":"### Add tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"ngoivanessa"},"content":"You can add three types of tasks; `todo`, `deadline` and `event`.","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"ngoivanessa"},"content":"#### Usage","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"ngoivanessa"},"content":"For `todo`: `todo \u003ctask name\u003e`","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"ngoivanessa"},"content":"Example: `todo return book`","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"ngoivanessa"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"ngoivanessa"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"ngoivanessa"},"content":"[T] [ ] return book","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"ngoivanessa"},"content":"Now you have 1 tasks in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"ngoivanessa"},"content":"For `deadline`: `deadline \u003ctask name\u003e /by \u003cdate and time\u003e`","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"ngoivanessa"},"content":"Example: `deadline return book /by Sunday 2pm`","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"ngoivanessa"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"ngoivanessa"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"ngoivanessa"},"content":"[D] [ ] return book  (by: Sunday 2pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"ngoivanessa"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"ngoivanessa"},"content":"For `event`: `event \u003ctask name\u003e /at \u003cdate and time\u003e`","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"ngoivanessa"},"content":"Example: `event go to library /at Saturday 3pm`","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"ngoivanessa"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"ngoivanessa"},"content":"[E] [ ] go to library  (at: Saturday 3pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"ngoivanessa"},"content":"Now you have 3 tasks in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"ngoivanessa"},"content":"### List tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"ngoivanessa"},"content":"You can view your current task list using `list`.","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"ngoivanessa"},"content":"#### Usage","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"ngoivanessa"},"content":"`list`","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"ngoivanessa"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"ngoivanessa"},"content":"1.[T] [ ] return book","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"ngoivanessa"},"content":"2.[D] [ ] return book  (by: Sunday 2pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"ngoivanessa"},"content":"3.[E] [ ] go to library  (at: Saturday 3pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"ngoivanessa"},"content":"### Set status of task","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"ngoivanessa"},"content":"You can change the status of a task from not done to done using `done`.","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"ngoivanessa"},"content":"#### Usage","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"ngoivanessa"},"content":"`done \u003ctask number\u003e`","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"ngoivanessa"},"content":"Example: `done 2`","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"ngoivanessa"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":114,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"ngoivanessa"},"content":"Nice, I\u0027ve marked this task as done:","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"ngoivanessa"},"content":"[D] [X] return book  (by: Sunday 2pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"ngoivanessa"},"content":"### Search for tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"ngoivanessa"},"content":"You can search for tasks using keywords using `find`.","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"ngoivanessa"},"content":"#### Usage","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"ngoivanessa"},"content":"`find \u003ckeyword(s)\u003e`","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"ngoivanessa"},"content":"**NOTE**: Multiple words / numbers can be searched.","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"ngoivanessa"},"content":"Example: `find book`","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"ngoivanessa"},"content":"With current list being:","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"ngoivanessa"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"ngoivanessa"},"content":"1.[T] [ ] return book","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"ngoivanessa"},"content":"2.[D] [X] return book  (by: Sunday 2pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"ngoivanessa"},"content":"3.[E] [ ] go to library  (at: Saturday 3pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"ngoivanessa"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"ngoivanessa"},"content":"Here are the matching tasks in your list","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"ngoivanessa"},"content":"[T] [ ] return book","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"ngoivanessa"},"content":"[D] [X] return book  (by: Sunday 2pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"ngoivanessa"},"content":"### Delete tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"ngoivanessa"},"content":"You can delete tasks from the list using `delete`.","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"ngoivanessa"},"content":"#### Usage","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"ngoivanessa"},"content":"`delete \u003ctask number\u003e`","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"ngoivanessa"},"content":"Example: `delete 2`","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"ngoivanessa"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"ngoivanessa"},"content":"\u003e delete 1","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"ngoivanessa"},"content":"Noted, I\u0027ve removed this task:","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"ngoivanessa"},"content":"[T] [ ] return book","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"ngoivanessa"},"content":"Now you have 2 tasks in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"ngoivanessa"},"content":"\u003e list","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"ngoivanessa"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-10-01"},{"lineNumber":173,"author":{"gitId":"ngoivanessa"},"content":"1.[D] [X] return book  (by: Sunday 2pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":174,"author":{"gitId":"ngoivanessa"},"content":"2.[E] [ ] go to library  (at: Saturday 3pm)","lastModifiedDate":"2021-10-01"},{"lineNumber":175,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":176,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":177,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":178,"author":{"gitId":"ngoivanessa"},"content":"### Exit the program","lastModifiedDate":"2021-10-01"},{"lineNumber":179,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":180,"author":{"gitId":"ngoivanessa"},"content":"Exit the program using `bye`.","lastModifiedDate":"2021-10-01"},{"lineNumber":181,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":182,"author":{"gitId":"ngoivanessa"},"content":"#### Usage","lastModifiedDate":"2021-10-01"},{"lineNumber":183,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":184,"author":{"gitId":"ngoivanessa"},"content":"`bye`","lastModifiedDate":"2021-10-01"},{"lineNumber":185,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":186,"author":{"gitId":"ngoivanessa"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":187,"author":{"gitId":"ngoivanessa"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":188,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":189,"author":{"gitId":"ngoivanessa"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-10-01"},{"lineNumber":190,"author":{"gitId":"ngoivanessa"},"content":"------------","lastModifiedDate":"2021-10-01"},{"lineNumber":191,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ngoivanessa":170,"-":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":" * \u003ch1\u003eDuke Task Manager\u003c/h1\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":" * Implements a task manager which can track 3 types of tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":" *","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":" * It contains a {@code Ui} class to deal with user interactions,","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":" * a {@code TaskList} class to keep track of all tasks,","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":" * a {@code Storage} class to save and load the data, and","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":" * a {@code Parser} class to interpret user input and carry out instructions.","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"public class Duke {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"    /*ATTRIBUTES*/","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ngoivanessa"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ngoivanessa"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"ngoivanessa"},"content":"     * Constructor for {@code Duke} class","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"ngoivanessa"},"content":"     * @param filePath Indicates the path to a file in the hard disk where tasks are stored to or loaded from.","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"ngoivanessa"},"content":"    public Duke (String filePath){","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ngoivanessa"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ngoivanessa"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ngoivanessa"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ngoivanessa"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"ngoivanessa"},"content":"     * Main method where programe is run","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"ngoivanessa"},"content":"     * @param args Unused","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"ngoivanessa"},"content":"     * @throws DukeException Errors specific to Duke","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"ngoivanessa"},"content":"     * @throws IOException Errors regarding external text file","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"ngoivanessa"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"ngoivanessa"},"content":"        Duke duke \u003d new Duke (\"duke.txt\");","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"ngoivanessa"},"content":"        duke.ui.printStartMessage();","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ngoivanessa"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"ngoivanessa"},"content":"            duke.tasks \u003d duke.storage.loadTasksFromFile();","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"ngoivanessa"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"ngoivanessa"},"content":"            System.out.println(\"File not found\");","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"ngoivanessa"},"content":"        String input, error;","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ngoivanessa"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"ngoivanessa"},"content":"        Task t;","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"ngoivanessa"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"ngoivanessa"},"content":"        while (!isBye) {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"ngoivanessa"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ngoivanessa"},"content":"            if (input.equalsIgnoreCase((\"bye\"))) { //end program","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ngoivanessa"},"content":"                isBye \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"ngoivanessa"},"content":"                duke.ui.printByeMessage();","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"ngoivanessa"},"content":"            } else if (input.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"ngoivanessa"},"content":"                duke.tasks.printTaskList(); //print duke.task list","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"ngoivanessa"},"content":"            } else if (input.startsWith(\"done \")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"ngoivanessa"},"content":"                int index \u003d duke.parser.getTaskNumber(input);","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"ngoivanessa"},"content":"                duke.tasks.setDoneTask(index - 1, duke.tasks);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"ngoivanessa"},"content":"            } else if (input.startsWith(\"delete \")){","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ngoivanessa"},"content":"                int index \u003d duke.parser.getTaskNumber(input);","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"ngoivanessa"},"content":"                duke.ui.deleteTaskFromList(duke.tasks.getTask(index - 1), duke.tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"ngoivanessa"},"content":"            } else if (input.startsWith(\"todo \")) { //duke.task is a todo","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"ngoivanessa"},"content":"                String description \u003d input.substring(4).trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"ngoivanessa"},"content":"                if (description.isEmpty()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"ngoivanessa"},"content":"                    error \u003d \"toDoDescriptionEmptyException\";","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"ngoivanessa"},"content":"                    throw new DukeException(error);","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"ngoivanessa"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"ngoivanessa"},"content":"                    t \u003d new Todo(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"ngoivanessa"},"content":"                    duke.ui.addTaskToList(t, duke.tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"ngoivanessa"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"ngoivanessa"},"content":"            } else if (input.startsWith(\"deadline \")) { //duke.task is a deadline","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"ngoivanessa"},"content":"                String description \u003d duke.parser.getDescription(input, 9);","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"ngoivanessa"},"content":"                String by \u003d duke.parser.getDateTime(input);","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"ngoivanessa"},"content":"                t \u003d new Deadline(description, by);","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"ngoivanessa"},"content":"                duke.ui.addTaskToList(t, duke.tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"ngoivanessa"},"content":"            } else if (input.startsWith(\"event \")) { //duke.task is an event","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"ngoivanessa"},"content":"                String description \u003d duke.parser.getDescription(input, 6);","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"ngoivanessa"},"content":"                String at \u003d duke.parser.getDateTime(input);","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"ngoivanessa"},"content":"                t \u003d new Event(description, at);","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"ngoivanessa"},"content":"                duke.ui.addTaskToList(t, duke.tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"ngoivanessa"},"content":"            } else if (input.startsWith(\"find \")){","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"ngoivanessa"},"content":"                String key \u003d duke.parser.getSearchKey(input);","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"ngoivanessa"},"content":"                duke.tasks.searchList(duke.tasks, key);","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"ngoivanessa"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"ngoivanessa"},"content":"            else {","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"ngoivanessa"},"content":"                error \u003d \"unrecognisedTask\";","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"ngoivanessa"},"content":"                throw new DukeException(error);","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"ngoivanessa"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"ngoivanessa":126}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":" * A class of exceptions which are unique to duke","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"        if (message.equals(\"toDoDescriptionEmptyException\")){","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"            System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":"        else if(message.equals(\"unrecognisedTask\")){","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ngoivanessa":19}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":" * A class which helps to make sense of user input by separating command details","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"public class Parser {","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":"     * Extracts the particular task number from user input","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"     * @param input User input","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"     * @return (Index + 1) of task number","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":"    public int getTaskNumber (String input){","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":"        String[] splitString \u003d input.split(\" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"        return Integer.parseInt(splitString[1]);","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":"     * Extract key to search for from user input","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":"     * @param input User input","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"     * @return String to search for in task list","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"    public String getSearchKey (String input){","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"        return input.substring(5);","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ngoivanessa"},"content":"     * Extracts description of events and deadlines from user input","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"ngoivanessa"},"content":"     * @param input User input","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"ngoivanessa"},"content":"     * @param startIndex Starting index to extract substring (9 for deadline, 6 for events)","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"ngoivanessa"},"content":"     * @return Description of event or deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"ngoivanessa"},"content":"    public String getDescription (String input, int startIndex){","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ngoivanessa"},"content":"        int slash \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ngoivanessa"},"content":"        return input.substring(startIndex, slash);","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"ngoivanessa"},"content":"     * Extract date and time of events and deadlines from user input","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"ngoivanessa"},"content":"     * @param input User input","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"ngoivanessa"},"content":"     * @return Date and time of event or deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"ngoivanessa"},"content":"    public String getDateTime (String input){","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ngoivanessa"},"content":"        int slash \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"ngoivanessa"},"content":"        return input.substring(slash + 4);","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"ngoivanessa"},"content":"     * Extracts details of task from external storage file","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"ngoivanessa"},"content":"     * @param fullText A line in the external storage file","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"ngoivanessa"},"content":"     * @param key String to split description and date and time (by: for deadlines, at: for events)","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"ngoivanessa"},"content":"     * @return Array containing description, date and time","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"ngoivanessa"},"content":"    public String[] extractDetails(String fullText, String key){","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"ngoivanessa"},"content":"        String[] details \u003d new String[2];","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"ngoivanessa"},"content":"        int index \u003d fullText.lastIndexOf(key);","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"ngoivanessa"},"content":"        details[0] \u003d fullText.substring(0, index).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"ngoivanessa"},"content":"        details[1] \u003d fullText.substring(index + 4, fullText.length() - 1).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"ngoivanessa"},"content":"        return details;","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ngoivanessa":70}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"import java.io.File;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":" * A class representing a storage space which saves the task list to the hard disk,","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":" * or loads the task list from the hard disk each time {@code Duke} is run","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":"public class Storage {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"    private String filePath \u003d \"duke.txt\";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"     * Constructor for {@code Storage} class","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"     * @param filePath The location of the file that stores the task list data","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ngoivanessa"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ngoivanessa"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"ngoivanessa"},"content":"     * Writes task list to external storage file","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"ngoivanessa"},"content":"     * @param tasks Task list to be written","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"ngoivanessa"},"content":"     * @throws IOException If the file in the hard disk cannot be found","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"ngoivanessa"},"content":"    public void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ngoivanessa"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"ngoivanessa"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++){","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ngoivanessa"},"content":"            Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"ngoivanessa"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ngoivanessa"},"content":"                clearFile();","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ngoivanessa"},"content":"                String status \u003d \"ND\";","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ngoivanessa"},"content":"                if (currentTask.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ngoivanessa"},"content":"                    status \u003d \"D\";","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"ngoivanessa"},"content":"                }","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ngoivanessa"},"content":"                fw.write(currentTask.type + \" | \" + status + \" | \"","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ngoivanessa"},"content":"                        + currentTask.description + System.lineSeparator());","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"ngoivanessa"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ngoivanessa"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"ngoivanessa"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"ngoivanessa"},"content":"        fw.close();","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"ngoivanessa"},"content":"     * Clears external storage file","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"ngoivanessa"},"content":"     * @throws IOException If the file in the hard disk cannot be found","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"ngoivanessa"},"content":"    public void clearFile() throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"ngoivanessa"},"content":"        FileWriter f \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ngoivanessa"},"content":"        f.write(\"\");","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ngoivanessa"},"content":"        f.close();","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"ngoivanessa"},"content":"     * Loads previously saved tasks from a file in the hard disk into a task list","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"ngoivanessa"},"content":"     * @return A TaskList of previously saved tasks loaded from the hard disk","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"ngoivanessa"},"content":"     * @throws IOException If the file cannot be found","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"ngoivanessa"},"content":"     * @throws DukeException If file input does not match tasks types supported by duke","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"ngoivanessa"},"content":"    public TaskList loadTasksFromFile() throws IOException, DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"ngoivanessa"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ngoivanessa"},"content":"        Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ngoivanessa"},"content":"        String[] taskInfo;","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ngoivanessa"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ngoivanessa"},"content":"            String input \u003d s.nextLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"ngoivanessa"},"content":"            taskInfo \u003d input.split(\"\\\\|\");","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"ngoivanessa"},"content":"            boolean status \u003d taskInfo[1].trim().equals(\"D\");","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"ngoivanessa"},"content":"            Task t;","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"ngoivanessa"},"content":"            switch (taskInfo[0].trim()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"ngoivanessa"},"content":"            case \"T\":","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"ngoivanessa"},"content":"                t \u003d new Todo(taskInfo[2].trim());","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"ngoivanessa"},"content":"                t.isDone \u003d status;","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"ngoivanessa"},"content":"                tasks.addTask(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"ngoivanessa"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"ngoivanessa"},"content":"            case \"D\": {","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"ngoivanessa"},"content":"                String fullText \u003d taskInfo[2];","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"ngoivanessa"},"content":"                String[] details \u003d new String[2];","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"ngoivanessa"},"content":"                details \u003d parser.extractDetails(fullText,\"(by:\" );","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"ngoivanessa"},"content":"                t \u003d new Deadline(details[0], details[1]);","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"ngoivanessa"},"content":"                t.isDone \u003d status;","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"ngoivanessa"},"content":"                tasks.addTask(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"ngoivanessa"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"ngoivanessa"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"ngoivanessa"},"content":"            case \"E\": {","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"ngoivanessa"},"content":"                String fullText \u003d taskInfo[2];","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"ngoivanessa"},"content":"                String[] details \u003d new String[2];","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"ngoivanessa"},"content":"                details \u003d parser.extractDetails(fullText,\"(at:\" );","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"ngoivanessa"},"content":"                t \u003d new Event(details[0], details[1]);","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"ngoivanessa"},"content":"                t.isDone \u003d status;","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"ngoivanessa"},"content":"                tasks.addTask(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"ngoivanessa"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"ngoivanessa"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"ngoivanessa"},"content":"            default: {","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"ngoivanessa"},"content":"                throw new DukeException(\"unrecognisedTask\");","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"ngoivanessa"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"ngoivanessa"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"ngoivanessa"},"content":"        s.close();","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"ngoivanessa"},"content":"        return tasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ngoivanessa":129}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":" * Represents a list of tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"public class TaskList {","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"    private Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"     * Constructor for {@code TaskList} class. Creates a new {@code} TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"     * Calculates size of TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ngoivanessa"},"content":"     * @return Number of tasks in TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ngoivanessa"},"content":"    public int getSize(){","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ngoivanessa"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"ngoivanessa"},"content":"     * Returns a particular task based on task number specified by the user","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"ngoivanessa"},"content":"     * @param taskNumber The index of the task to be retrieved","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"ngoivanessa"},"content":"     * @return Task corresponding to the taskNumber in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"ngoivanessa"},"content":"    public Task getTask(int taskNumber){","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"ngoivanessa"},"content":"        return tasks.get(taskNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"ngoivanessa"},"content":"     * Adds a task a task list","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"ngoivanessa"},"content":"     * @param t Task to be added to the list","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"ngoivanessa"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ngoivanessa"},"content":"        tasks.add(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"ngoivanessa"},"content":"     * Deletes a task from a task list","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"ngoivanessa"},"content":"     * @param t Task to be deleted from the list","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"ngoivanessa"},"content":"    public void removeTask (Task t){","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ngoivanessa"},"content":"        tasks.remove(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"ngoivanessa"},"content":"     * Prints details of a particular task based on task number specified by the user","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"ngoivanessa"},"content":"     * Details include type of task, status (done/ not done) and description","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"ngoivanessa"},"content":"     * @param taskNumber Index of task to be printed","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"ngoivanessa"},"content":"    public void printTask(int taskNumber){","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ngoivanessa"},"content":"        String type \u003d tasks.get(taskNumber).type;","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ngoivanessa"},"content":"        String icon \u003d tasks.get(taskNumber).getStatusIcon();","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"[\" + type + \"]\" + \" [\" + icon + \"] \"","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"ngoivanessa"},"content":"                + tasks.get(taskNumber).description);","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"ngoivanessa"},"content":"     * Prints entire task list","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"ngoivanessa"},"content":"    public void printTaskList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ngoivanessa"},"content":"        ui.printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ngoivanessa"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ngoivanessa"},"content":"            System.out.print((i + 1) + \".\");","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ngoivanessa"},"content":"            printTask(i);","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ngoivanessa"},"content":"        ui.printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"ngoivanessa"},"content":"     * Changes status of a particular task to done and prints the task out","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"ngoivanessa"},"content":"     * @param taskNumber Index of task to be set as done","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"ngoivanessa"},"content":"     * @param tasks Entire task list","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"ngoivanessa"},"content":"     * @throws IOException Errors relating to writing to external storage file","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"ngoivanessa"},"content":"    public void setDoneTask(int taskNumber, TaskList tasks) throws IOException {","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"ngoivanessa"},"content":"        tasks.getTask(taskNumber).setDone(true);","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"ngoivanessa"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"ngoivanessa"},"content":"        ui.printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Nice, I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"ngoivanessa"},"content":"        String type \u003d tasks.getTask(taskNumber).type;","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"ngoivanessa"},"content":"        String icon \u003d tasks.getTask(taskNumber).getStatusIcon();","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"[\" + type + \"]\" + \" [\" + icon + \"] \" + tasks.getTask(taskNumber).description);","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"ngoivanessa"},"content":"        ui.printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"ngoivanessa"},"content":"     * Searches entire task list to find all tasks that contains key, then prints those tasks out","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"ngoivanessa"},"content":"     * @param tasks Entire task list","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"ngoivanessa"},"content":"     * @param key String to search for","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"ngoivanessa"},"content":"    public void searchList(TaskList tasks, String key){","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"ngoivanessa"},"content":"        boolean keyExists \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"ngoivanessa"},"content":"        ui.printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Here are the matching tasks in your list\");","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"ngoivanessa"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"ngoivanessa"},"content":"            if (tasks.getTask(i).description.contains(key)){","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"ngoivanessa"},"content":"                keyExists \u003d true;","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"ngoivanessa"},"content":"                printTask(i);","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"ngoivanessa"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"ngoivanessa"},"content":"        if (!keyExists){","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"ngoivanessa"},"content":"            System.out.println(\"Sorry, no matching tasks exist\");","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"ngoivanessa"},"content":"        ui.printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ngoivanessa":145}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":" * A class that reads user input and displays messages for the user","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"public class Ui {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"    private static Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":"     * Prints a horizontal line separator between commands","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":"    public void printHorizontalLine() {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"        for (int i \u003d 0; i \u003c 11; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"-\");","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"     * Prints duke\u0027s greeting message","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ngoivanessa"},"content":"    public void printStartMessage() {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Hello from\");","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\" ____        _        \\n\" +","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"ngoivanessa"},"content":"                \"|  _ \\\\ _   _| | _____ \\n\" +","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"ngoivanessa"},"content":"                \"| | | | | | | |/ / _ \\\\\\n\" +","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"ngoivanessa"},"content":"                \"| |_| | |_| |   \u003c  __/\\n\" +","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"ngoivanessa"},"content":"                \"|____/ \\\\__,_|_|\\\\_\\\\___\");","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ngoivanessa"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"ngoivanessa"},"content":"     * Prints duke\u0027s goodbye message when application is exited","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"ngoivanessa"},"content":"    public void printByeMessage() {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ngoivanessa"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ngoivanessa"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"ngoivanessa"},"content":"     * Adds task to task list","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"ngoivanessa"},"content":"     * @param t Task to be added","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"ngoivanessa"},"content":"     * @param tasks Task list that task is to be added to","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"ngoivanessa"},"content":"     * @throws IOException If the external storage file cannot be found when attempting to write","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"ngoivanessa"},"content":"    public void addTaskToList(Task t, TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"ngoivanessa"},"content":"        tasks.addTask(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"ngoivanessa"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ngoivanessa"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"ngoivanessa"},"content":"        t.printTaskDisplay();","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"ngoivanessa"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"ngoivanessa"},"content":"     * Deletes task from task list","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"ngoivanessa"},"content":"     * @param t Task to be deleted","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"ngoivanessa"},"content":"     * @param tasks Task list to delete task from","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"ngoivanessa"},"content":"     * @throws IOException If the external storage file cannot be found when attempting to write","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"ngoivanessa"},"content":"    public void deleteTaskFromList (Task t, TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"ngoivanessa"},"content":"        tasks.removeTask(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"ngoivanessa"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"ngoivanessa"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Noted, I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"ngoivanessa"},"content":"        String type \u003d t.type;","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"ngoivanessa"},"content":"        String icon \u003d t.getStatusIcon();","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"[\" + type + \"]\" + \" [\" + icon + \"] \" + t.description);","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list\");","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ngoivanessa"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ngoivanessa":85}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":" * A class representing a deadline with a name, and date and time of the deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":"    private String name; //name of duke.task only (eg return book)","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"    protected String by; //due date","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"     * Constructor for the {@code Deadline} class","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":"     * @param name Name of the deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"     * @param by Date and time of the deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"        description \u003d name + \" (by: \" + by + \")\"; //name + due date","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":"        type \u003d \"D\";","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"     * Prints added deadline message","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"ngoivanessa"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ngoivanessa"},"content":"    public void printTaskDisplay() {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"[D] [ ] \" + description);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ngoivanessa":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":" * A class representing an event with a name, date and time of event","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"public class Event extends Task {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":"    private String name; //name of duke.task only (eg return book)","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"    protected String at; //time","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"     * Constructor for {@code Event} class","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":"     * @param name Name of event","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"     * @param at Date and time of event","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"    public Event(String name, String at) {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"        description \u003d name + \" (at: \" + at + \")\"; //name + time","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":"        type \u003d \"E\";","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ngoivanessa"},"content":"     * Prints added event message","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ngoivanessa"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ngoivanessa"},"content":"    public void printTaskDisplay() {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"[E] [ ] \" + description);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ngoivanessa":35}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":" * A class representing a task","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"public class Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"    public String type \u003d \" \"; //empty for basic duke.task, T: todo, D: deadline, E: event","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":"    public String description;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"    public boolean isDone;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":"     * Constructor for {@code Task} class","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"    public Task() {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":"     * Overloaded constructor for {@code Task} class","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"     * @param description String to be stored as task description","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"ngoivanessa"},"content":"     * Set status of task","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"ngoivanessa"},"content":"     * @param done Boolean value of task, false for not done, true for done","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"ngoivanessa"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"ngoivanessa"},"content":"        isDone \u003d done;","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"ngoivanessa"},"content":"     * Sets status icon for task","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"ngoivanessa"},"content":"     * @return String contains status character","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"ngoivanessa"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ngoivanessa"},"content":"        return (isDone ? \"X\" : \" \"); //set icon as \"X\" for done, \" \" for not done","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"ngoivanessa"},"content":"     * Prints added task message","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"ngoivanessa"},"content":"    public void printTaskDisplay() {","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"added: \" + description);","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ngoivanessa":56}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"/**","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":" * A class representing a todo task with a name","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":" */","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"ngoivanessa"},"content":"     * Constructor of {@code Todo} class","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ngoivanessa"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"ngoivanessa"},"content":"     * @param description Name of todo task","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"ngoivanessa"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ngoivanessa"},"content":"        super(description);","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ngoivanessa"},"content":"        type \u003d \"T\";","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ngoivanessa"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ngoivanessa"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ngoivanessa"},"content":"     * Prints added todo task message","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"ngoivanessa"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"ngoivanessa"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ngoivanessa"},"content":"    public void printTaskDisplay() {","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ngoivanessa"},"content":"        System.out.println(\"[T] [ ] \" + description);","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ngoivanessa"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ngoivanessa"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ngoivanessa":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ngoivanessa"},"content":"todo borrow book","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"ngoivanessa"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"ngoivanessa"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"ngoivanessa"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"ngoivanessa"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"ngoivanessa"},"content":"done 3","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"ngoivanessa"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"ngoivanessa"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"ngoivanessa":8}}]
