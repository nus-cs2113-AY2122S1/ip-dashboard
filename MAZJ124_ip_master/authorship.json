[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MAZJ124":2,"-":22}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"    protected String by;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"        this.taskType \u003d \u0027D\u0027;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"        String date \u003d by.split(\" \", 2)[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"        return super.getTaskInfo() + \"(by: \" + date + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"MAZJ124":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"    private static final String LINE_SEPARATOR \u003d \"------------------------------------\";","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"    private static final String HELLO_MESSAGE \u003d \"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    private static final String ERROR_MESSAGE \u003d \"You need to specify the task type!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"        printHelloMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"        handleCommand();","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"MAZJ124"},"content":"        printByeMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"    private static void handleCommand() {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"        String input;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"                String keyword \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"                switch (keyword) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"MAZJ124"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"MAZJ124"},"content":"                    continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"MAZJ124"},"content":"                case \"list\":","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"MAZJ124"},"content":"                    listTasks();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"MAZJ124"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"MAZJ124"},"content":"                    addTodo(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"MAZJ124"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"MAZJ124"},"content":"                    addDeadline(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"MAZJ124"},"content":"                case \"event\":","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"MAZJ124"},"content":"                    addEvent(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"MAZJ124"},"content":"                case \"done\":","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"MAZJ124"},"content":"                    finishTask(input);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"MAZJ124"},"content":"                default:","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"MAZJ124"},"content":"                    promptInvalidInput();","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"MAZJ124"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"MAZJ124"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"MAZJ124"},"content":"                System.out.println(DukeException.getErrorMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"MAZJ124"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"MAZJ124"},"content":"                System.out.println(\"You are supposed to enter a number!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"MAZJ124"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"MAZJ124"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"MAZJ124"},"content":"    private static void promptInvalidInput() throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"MAZJ124"},"content":"        throw new DukeException(ERROR_MESSAGE);","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"MAZJ124"},"content":"    private static void finishTask(String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"MAZJ124"},"content":"        int index \u003d Integer.parseInt(input.split(\" \", 2)[1].trim());","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"MAZJ124"},"content":"        if (index \u003e tasks.size()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You don\u0027t have so many tasks yet!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"MAZJ124"},"content":"        tasks.get(index - 1).completeTask();","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(\"Nice! I have marked this task as done: \");","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(tasks.get(index - 1).getTaskInfo());","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"MAZJ124"},"content":"    private static void addEvent(String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"MAZJ124"},"content":"        String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"MAZJ124"},"content":"        String description;","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"MAZJ124"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"MAZJ124"},"content":"        boolean noInput \u003d inputSplit.length \u003d\u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"MAZJ124"},"content":"        if (noInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You have to specify the task!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"MAZJ124"},"content":"        boolean noSeparator \u003d !input.contains(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"MAZJ124"},"content":"        if (noSeparator) {","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"Your task is not in the right format\");","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"MAZJ124"},"content":"        String[] inputWords \u003d input.split(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"MAZJ124"},"content":"        boolean noTask \u003d inputWords[0].trim().equals(\"event\");","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"MAZJ124"},"content":"        boolean noDate \u003d inputWords.length \u003d\u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"MAZJ124"},"content":"        if (noTask || noDate) {","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"Your task is not in the right format\");","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"MAZJ124"},"content":"        description \u003d inputWords[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"MAZJ124"},"content":"        at \u003d inputWords[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"MAZJ124"},"content":"        tasks.add(new Event(description, at));","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(tasks.get(tasks.size() - 1).getTaskInfo());","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"MAZJ124"},"content":"    private static void addDeadline(String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"MAZJ124"},"content":"        String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"MAZJ124"},"content":"        String description;","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"MAZJ124"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"MAZJ124"},"content":"        boolean noInput \u003d inputSplit.length \u003d\u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"MAZJ124"},"content":"        if (noInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You have to specify the task!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"MAZJ124"},"content":"        boolean noSeparator \u003d !input.contains(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"MAZJ124"},"content":"        if (noSeparator) {","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"Your task is not in the right format\");","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"MAZJ124"},"content":"        String[] inputWords \u003d input.split(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"MAZJ124"},"content":"        boolean noTask \u003d inputWords[0].trim().equals(\"deadline\");","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"MAZJ124"},"content":"        boolean noDate \u003d inputWords.length \u003d\u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"MAZJ124"},"content":"        if (noTask || noDate) {","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"Your task is not in the right format\");","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"MAZJ124"},"content":"        description \u003d inputWords[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"MAZJ124"},"content":"        by \u003d inputWords[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"MAZJ124"},"content":"        tasks.add(new Deadline(description, by));","lastModifiedDate":"2021-08-31"},{"lineNumber":126,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(tasks.get(tasks.size() - 1).getTaskInfo());","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":129,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"MAZJ124"},"content":"    private static void addTodo(String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"MAZJ124"},"content":"        String[] inputSplit \u003d input.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"MAZJ124"},"content":"        boolean noInput \u003d inputSplit.length \u003d\u003d 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"MAZJ124"},"content":"        if (noInput) {","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You have to specify the task!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":137,"author":{"gitId":"MAZJ124"},"content":"        tasks.add(new Todo(input));","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(tasks.get(tasks.size() - 1).getTaskInfo());","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-08-31"},{"lineNumber":140,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"MAZJ124"},"content":"    private static void listTasks() throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"MAZJ124"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You do not have any tasks in your list!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"MAZJ124"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"MAZJ124"},"content":"            tasks.get(i).printTask(i + 1);","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"MAZJ124"},"content":"    private static void printHelloMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(HELLO_MESSAGE);","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":158,"author":{"gitId":"MAZJ124"},"content":"    private static void printByeMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":159,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(BYE_MESSAGE);","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(LINE_SEPARATOR);","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MAZJ124":155,"-":7}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"    protected static String errorMessage;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"    public static String getErrorMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"MAZJ124":14}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"    protected String at;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"        this.taskType \u003d \u0027E\u0027;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"        String date \u003d at.split(\" \", 2)[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"        return super.getTaskInfo() + \"(at: \" + date + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"MAZJ124":17}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"    protected String description;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"    protected char taskType \u003d \u0027U\u0027; //for unspecified task type","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"    public Task(String description){","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"    public String getStatus(){","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"        return (isDone) ? \"[X]\" : \"[ ]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"        return \"[\" + taskType + \"]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"        return getTaskType() + getStatus() + description.split(\" \", 2)[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"    public void printTask(int index){","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(index + \".\" + getTaskInfo());","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"MAZJ124":33}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"        this.taskType \u003d \u0027T\u0027;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"MAZJ124":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"todo study","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"deadline finish assignment /by Sunday 3pm","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"event attend meeting /at Monday 2-4pm","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"done 3","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"MAZJ124":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MAZJ124":1,"-":20}}]
