[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MAZJ124":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"Hello there! This is Duke, your personal **Command Line Interface (CLI) chatbot for you to manage your daily tasks**.","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"## Quick Start ","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"1. Ensure you have Java ```11``` or above installed in your computer.","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"2. Download the latest version of ```Duke.jar``` here.","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"3. Copy the file over to the **home folder** you intend to use for your bot.","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"4. Navigate to the home folder specified previously using any terminal interface.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"5. Execute the command ```java -har Duke.jar``` and the bot will start running. You should be seeing something similar to the example given below.","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"Hello from","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":" ____        _        ","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"Hello! I\u0027m duke.Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"What can I do for you?","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"### Adding a Todo: ```todo```","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"Add a Todo task into the task list.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"Todo tasks should only contain a task description.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"Format: ```todo \u003cdescription\u003e```  ","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"Example: ","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"$todo study for CS2113T","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"MAZJ124"},"content":"Got it! I\u0027ve added the following task:","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"MAZJ124"},"content":"[T][ ]study for CS2113T","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"MAZJ124"},"content":"Now you have 1 tasks in your list","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":39,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"MAZJ124"},"content":"### Adding a Deadline: ```deadline```","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"MAZJ124"},"content":"Add a Deadline into the task list.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"MAZJ124"},"content":"Deadlines should contain the task description and date.","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"MAZJ124"},"content":"Format: ```deadline \u003cdescription\u003e/by \u003cdate\u003e```  ","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"MAZJ124"},"content":"Example: ","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"MAZJ124"},"content":"$deadline submit CS2101 reflection /by 21 Sept","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"MAZJ124"},"content":"Got it! I\u0027ve added the following task:","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"MAZJ124"},"content":"[D][ ]submit CS2101 reflection(by: 21 Sept)","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"MAZJ124"},"content":"Now you have 2 tasks in your list","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":54,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"MAZJ124"},"content":"### Adding an Event: ```event```","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"MAZJ124"},"content":"Add an Event into the task list.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"MAZJ124"},"content":"Events should contain the task description and event time.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"MAZJ124"},"content":"Format: ```event \u003cdescription\u003e/at \u003ctime\u003e```  ","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"MAZJ124"},"content":"Example:","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"MAZJ124"},"content":"$event attend online career fair /at Sunday 2-4pm","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"MAZJ124"},"content":"Got it! I\u0027ve added the following task:","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"MAZJ124"},"content":"[E][ ]attend online career fair(at: Sunday 2-4pm)","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"MAZJ124"},"content":"Now you have 3 tasks in your list","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"MAZJ124"},"content":"### Listing all tasks: ```list```","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"MAZJ124"},"content":"List all tasks in the task list.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"MAZJ124"},"content":"Each entry includes the following information: task type, whether it is done, task description, and date (if any).  ","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"MAZJ124"},"content":"Format: ```list```  ","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"MAZJ124"},"content":"Example:","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"MAZJ124"},"content":"$list","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"MAZJ124"},"content":"Here are all the tasks in your list:","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"MAZJ124"},"content":"1.[T][ ]study for CS2113T","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"MAZJ124"},"content":"2.[D][ ]submit CS2101 reflection(by: 21 Sept)","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"MAZJ124"},"content":"3.[E][ ]attend online career fair(at: Sunday 2-4pm)","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":85,"author":{"gitId":"MAZJ124"},"content":"### Marking a task as completed: ```done```  ","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"MAZJ124"},"content":"Mark a specific task as completed.   ","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"MAZJ124"},"content":"Index from the user should be a valid value in the list of tasks.","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"MAZJ124"},"content":"Format: ```done \u003ctaskIndex\u003e```  ","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"MAZJ124"},"content":"Example: ","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"MAZJ124"},"content":"$done 1","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"MAZJ124"},"content":"Nice! I have marked this task as done:","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"MAZJ124"},"content":"[T][X]study for CS2113T","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"MAZJ124"},"content":"### Removing a task: ```delete```","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"MAZJ124"},"content":"Remove a specific task from the task list.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"MAZJ124"},"content":"Index from the user should be a valid value in the list.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"MAZJ124"},"content":"Format: ```delete \u003ctaskIndex\u003e```  ","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"MAZJ124"},"content":"Example:","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"MAZJ124"},"content":"$delete 2","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"MAZJ124"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"MAZJ124"},"content":"[D][ ]submit CS2101 reflection(by: 21 Sept)","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"MAZJ124"},"content":"Now you have 2 tasks in your list","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"MAZJ124"},"content":"### Searching for a task: ```find```","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"MAZJ124"},"content":"Looks for a ```keyword``` input by the user among all tasks.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"MAZJ124"},"content":"Format: ```find \u003ckeyword\u003e```  ","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"MAZJ124"},"content":"Example: ","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"MAZJ124"},"content":"$find study","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"MAZJ124"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"MAZJ124"},"content":"1.[T][X]study for CS2113T","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"MAZJ124"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"MAZJ124"},"content":"### Exiting the program: ```bye```","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"MAZJ124"},"content":"Terminates the bot.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"MAZJ124"},"content":"Format: ```bye```  ","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"MAZJ124"},"content":"Example:","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":130,"author":{"gitId":"MAZJ124"},"content":"$bye","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"MAZJ124"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"MAZJ124"},"content":"------------------------------------","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"MAZJ124"},"content":"### Saving data locally","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"MAZJ124"},"content":"Tasks stored in the task list will be stored into a text file under ```\u003chome_directory\u003e/data.duke.txt``` everytime the ","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"MAZJ124"},"content":"bot gets terminated.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"MAZJ124"},"content":"Similarly, the bot will also read from the same file everytime the bot starts to run and load the task list with all ","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"MAZJ124"},"content":"the previously saved tasks.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"MAZJ124"},"content":"In the scenario where the directory or file required is missing, the bot will automatically create such a directory and ","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"MAZJ124"},"content":"file for the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"MAZJ124"},"content":"## Command Summary","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"MAZJ124"},"content":"| Action  | Format | Example  |","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"MAZJ124"},"content":"| ------------- | ------------- | ------------- |","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"MAZJ124"},"content":"| Adding a Todo  | ```todo \u003cdescription\u003e```  | ```todo study for CS2113T```  |","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"MAZJ124"},"content":"| Adding a Deadline  | ```deadline \u003cdescription\u003e/by \u003cdate\u003e```  | ```deadline submit CS2101 reflection /by 21 Sept```  |","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"MAZJ124"},"content":"| Adding an Event  | ```event \u003cdescription\u003e/at \u003ctime\u003e```  | ```deadline submit CS2101 reflection /by 21 Sept```  |","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"MAZJ124"},"content":"| Listing all tasks  | ```list```  | ```list```  |","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"MAZJ124"},"content":"| Marking task as completed  | ```done \u003ctaskIndex\u003e```  | ````done 1````  |","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"MAZJ124"},"content":"| Removing a task  | ```delete \u003ctaskIndex\u003e```  | ```delete 2```  |","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"MAZJ124"},"content":"| Searching for a task  | ```find \u003ckeyword\u003e```  | ````find study```` |","lastModifiedDate":"2021-09-20"},{"lineNumber":154,"author":{"gitId":"MAZJ124"},"content":"| Terminating the bot  | ```bye```  | ```bye```  |","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"MAZJ124":134,"-":20}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"    protected String by;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"        this.taskType \u003d \u0027D\u0027;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"        return by;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"        String date \u003d by.split(\" \", 2)[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"        return super.getTaskInfo() + \"(by: \" + date + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"MAZJ124":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"    private static TaskManager taskManager \u003d new TaskManager(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"        storage.loadTasks(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"        ui.printHelloMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"        handleCommand();","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"        ui.printByeMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"     * Handles the commands entered by users and gives respective output","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"MAZJ124"},"content":"     * This process continues until user enters \"bye\" to terminate the program","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"MAZJ124"},"content":"    private static void handleCommand() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"        String input;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"                String keyword \u003d parser.getPrefix(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"                switch (keyword) {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"                case \"bye\":","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"MAZJ124"},"content":"                    if (parser.getInputWordCount(input) !\u003d 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"MAZJ124"},"content":"                        ui.promptInvalidInput();","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"MAZJ124"},"content":"                    }","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"MAZJ124"},"content":"                case \"list\":","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"MAZJ124"},"content":"                    taskManager.listTasks();","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"MAZJ124"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"MAZJ124"},"content":"                    taskManager.addTodo(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"MAZJ124"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"MAZJ124"},"content":"                    taskManager.addDeadline(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"MAZJ124"},"content":"                case \"event\":","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"MAZJ124"},"content":"                    taskManager.addEvent(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"MAZJ124"},"content":"                case \"done\":","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"MAZJ124"},"content":"                    taskManager.finishTask(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"MAZJ124"},"content":"                case \"delete\":","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"MAZJ124"},"content":"                    taskManager.deleteTask(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"MAZJ124"},"content":"                case \"find\":","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"MAZJ124"},"content":"                    taskManager.findTask(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"MAZJ124"},"content":"                default:","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"MAZJ124"},"content":"                    ui.promptInvalidInput();","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"MAZJ124"},"content":"                    break;","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"MAZJ124"},"content":"                }","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"MAZJ124"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"MAZJ124"},"content":"                ui.printMessage(DukeException.getErrorMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"MAZJ124"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"MAZJ124"},"content":"                ui.printMessage(\"You are supposed to enter a number!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"MAZJ124"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"MAZJ124"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":71,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"MAZJ124":70,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":" * This class are for the exceptions that might be thrown by Duke","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"    protected static String errorMessage;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"    public static String getErrorMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"MAZJ124":17}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"    protected String at;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"        this.taskType \u003d \u0027E\u0027;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"    public String getAt() {","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"        return at;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"        String date \u003d at.split(\" \", 2)[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"        return super.getTaskInfo() + \"(at: \" + date + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"MAZJ124":21}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":" * This class deals with input from users and tries to make sense of it","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"public class Parser {","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"     * Process input from user for the first word of the input","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"     * The first word usually contains crucial information such as task types or actions","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"     * @return first word from the user input","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"    public String getPrefix(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"        String[] inputWords \u003d input.split(\" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"        return inputWords[0].toLowerCase();","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"    ","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"     * Strips the first word from the user input","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"MAZJ124"},"content":"     * @return the remaining content from the user other than the first word","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"    public String getInputBody(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"        String[] inputWords \u003d input.split(\" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"        return inputWords[1];","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"     * Get the description for the task (only used when it is a deadline or event separated by \u0027/\u0027)","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"MAZJ124"},"content":"     * @return task description from the input task","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskDescription(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"MAZJ124"},"content":"        String[] separatedInput \u003d input.split(\"/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"MAZJ124"},"content":"        return separatedInput[0].trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"MAZJ124"},"content":"     * Get the date for the task (only used when it is a deadline or event separated by \"/\")","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"MAZJ124"},"content":"     * @return task date from the input task (deadline or event date)","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskDate(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"MAZJ124"},"content":"        String[] separatedInput \u003d input.split(\"/\", 2);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"MAZJ124"},"content":"        return separatedInput[1].trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"MAZJ124"},"content":"     * Count for the number of words in the user input","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"MAZJ124"},"content":"     * @return number of words in the input","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"MAZJ124"},"content":"    public int getInputWordCount(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"MAZJ124"},"content":"        return input.split(\" \").length;","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"MAZJ124"},"content":"     * Extracts the number from the user input (used in delete or done commands)","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"MAZJ124"},"content":"     * @return number included in the user input","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"MAZJ124"},"content":"    public int getInputIndex(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"MAZJ124"},"content":"        return Integer.parseInt(input.split(\" \", 2)[1].trim());","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"MAZJ124"},"content":"     * Checks for situations where there is only a command but no content after it","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"MAZJ124"},"content":"     * @return true if the user only entered the command without further content, false otherwise","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"MAZJ124"},"content":"    public boolean isNoTaskDescription(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"MAZJ124"},"content":"        String[] inputWords \u003d getTaskDescription(input).split(\" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"MAZJ124"},"content":"        return inputWords.length \u003d\u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"MAZJ124"},"content":"     * Check for situations where user did not input a date or time when required","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"MAZJ124"},"content":"     * @return true if user input is missing a date or time, false otherwise","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"MAZJ124"},"content":"    public boolean isNoDate(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"MAZJ124"},"content":"        String[] inputWords \u003d input.split(\" \", 2)[1].split(\"/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"MAZJ124"},"content":"        return inputWords.length \u003c\u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"MAZJ124"},"content":"     * Checks whether the separator \"/\" is missing in the user input","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"MAZJ124"},"content":"     * @return true if the separator is missing, false otherwise","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"MAZJ124"},"content":"    public boolean isNoSeparator(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"MAZJ124"},"content":"        return !input.contains(\"/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"MAZJ124"},"content":"     * Checks for whether the input task is in the wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"MAZJ124"},"content":"     * An input task can be wrong in format if it falls under any of the following situations:","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"MAZJ124"},"content":"     * 1. Deadline or event without a \"/\"","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"MAZJ124"},"content":"     * 2. Deadline or event without a task description","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"MAZJ124"},"content":"     * 3. Deadline or event without a date","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"MAZJ124"},"content":"     * @return true if the input task is in the wrong format, false otherwise","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"MAZJ124"},"content":"    public boolean isWrongFormat(String input) {","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"MAZJ124"},"content":"        boolean isNoSeparator \u003d isNoSeparator(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"MAZJ124"},"content":"        boolean isNoTask \u003d isNoTaskDescription(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"MAZJ124"},"content":"        boolean isNoDate \u003d isNoDate(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"MAZJ124"},"content":"        return isNoSeparator || isNoTask || isNoDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"MAZJ124":122}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"import java.io.File;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":" * This class reads from and writes to a specified text file in the project to store tasks locally","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"public class Storage {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"    protected static final String FILE_PATH \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"    protected static final String GAP \u003d \" / \";","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"     * Loads tasks stored in a specific text file and add it to the task list","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"     * If errors are encountered, prints the error message and terminates the program","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"     * @param tasks the task list where all loaded tasks will be added to","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"    public void loadTasks(TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"MAZJ124"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"MAZJ124"},"content":"            addTasksIntoList(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"MAZJ124"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"     * Loads file with a specific file path, and create the file if the specified file path does not exist","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"     * @return the file that is loaded from the file path","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"MAZJ124"},"content":"     * @throws IOException if the specified file path does not exist","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"MAZJ124"},"content":"    public File loadFile() throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"MAZJ124"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"MAZJ124"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"MAZJ124"},"content":"            File dir \u003d new File(\"data\");","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"MAZJ124"},"content":"            dir.mkdir();","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"MAZJ124"},"content":"            File newFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"MAZJ124"},"content":"            newFile.createNewFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"MAZJ124"},"content":"            return newFile;","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"MAZJ124"},"content":"        return file;","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"MAZJ124"},"content":"     * Add tasks read from a specified text file into the task list","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"MAZJ124"},"content":"     * @param tasks the task list where all loaded tasks will be added to","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"MAZJ124"},"content":"     * @throws IOException when errors are encountered when reading from the file at the specified file path","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"MAZJ124"},"content":"    public void addTasksIntoList(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"MAZJ124"},"content":"        File file \u003d loadFile();","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"MAZJ124"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"MAZJ124"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"MAZJ124"},"content":"            String entry \u003d s.nextLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"MAZJ124"},"content":"            String[] entryComponents \u003d entry.split(GAP);","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"MAZJ124"},"content":"            String description \u003d entryComponents[0] + \" \" + entryComponents[2];","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"MAZJ124"},"content":"            switch (entryComponents[0]) {","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"MAZJ124"},"content":"            case \"T\":","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"MAZJ124"},"content":"                tasks.addTodo(description);","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"MAZJ124"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"MAZJ124"},"content":"            case \"D\":","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"MAZJ124"},"content":"                String by \u003d \"by \" + entryComponents[3];","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"MAZJ124"},"content":"                tasks.addDeadline(description, by);","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"MAZJ124"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"MAZJ124"},"content":"            case \"E\":","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"MAZJ124"},"content":"                String at \u003d \"at \" + entryComponents[3];","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"MAZJ124"},"content":"                tasks.addEvent(description, at);","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"MAZJ124"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"MAZJ124"},"content":"            default:","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"MAZJ124"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"MAZJ124"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"MAZJ124"},"content":"            if (entryComponents[1].equals(\"X\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"MAZJ124"},"content":"                tasks.completeTask(tasks.getSize() - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"MAZJ124"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"MAZJ124"},"content":"     * Tries to write content from the task list to the text file at the specified file path","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"MAZJ124"},"content":"     * If errors are encountered, prints the error message and terminates the program","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"MAZJ124"},"content":"     * @param tasks the task list where all the content are read from","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"MAZJ124"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"MAZJ124"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"MAZJ124"},"content":"            writeTasksToFile(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"MAZJ124"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"MAZJ124"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"MAZJ124"},"content":"     * Goes through the task list and add them into the text file at the specified file path","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"MAZJ124"},"content":"     * @param tasks the task list that is being read","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"MAZJ124"},"content":"     * @throws IOException when errors are encountered when writing into the file at the specified file path","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"MAZJ124"},"content":"    public void writeTasksToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"MAZJ124"},"content":"        FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"MAZJ124"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"MAZJ124"},"content":"            Task task \u003d tasks.getTask(i);","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"MAZJ124"},"content":"            String details \u003d task.getDescription().substring(task.getDescription().indexOf(\" \") + 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"MAZJ124"},"content":"            String date \u003d \"\";","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"MAZJ124"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"MAZJ124"},"content":"                date \u003d ((Deadline) task).getBy().split(\" \", 2)[1].trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"MAZJ124"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"MAZJ124"},"content":"                date \u003d ((Event) task).getAt().split(\" \", 2)[1].trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"MAZJ124"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"MAZJ124"},"content":"            String taskLabel \u003d task.getType() + GAP + task.getIsDone() + GAP;","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"MAZJ124"},"content":"            String taskBody \u003d details.trim() + GAP + date + System.lineSeparator();","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"MAZJ124"},"content":"            fileWriter.write(taskLabel + taskBody);","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"MAZJ124"},"content":"        fileWriter.close();","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"MAZJ124":121}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":" * This class represents individual instances of tasks and allows operation on individual tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"    protected String description;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"    protected char taskType \u003d \u0027U\u0027; //for unspecified task type","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"    public Task(String description){","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"        return description;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"    public char getType() {","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"        return taskType;","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"MAZJ124"},"content":"    public char getIsDone() {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"MAZJ124"},"content":"        return (isDone) ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"        return \"[\" + getType() + \"]\";","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"    public String getStatus(){","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"        return \"[\" + getIsDone() + \"]\";","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"MAZJ124"},"content":"    public void completeTask() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"MAZJ124"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"MAZJ124"},"content":"    public String getTaskInfo() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"MAZJ124"},"content":"        return getTaskType() + getStatus() + description.split(\" \", 2)[1];","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"MAZJ124"},"content":"    public String getFormattedTask(int index){","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"MAZJ124"},"content":"        return index + \".\" + getTaskInfo();","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"MAZJ124":48}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":" * This class deals with operations on the list storing all the tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"public class TaskList {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"    protected static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"     * Gets the number of tasks in the task list","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"     * @return number of tasks in the task list","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"     * Accesses a specific task at the given index","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"     * @param index index of the task that the user wants to access","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"     * @return the task at the specified index in the list","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"MAZJ124"},"content":"     * Add a todo task into the list of tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"MAZJ124"},"content":"     * @param description description of the todo task added","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"MAZJ124"},"content":"    public void addTodo(String description) {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"MAZJ124"},"content":"        tasks.add(new Todo(description));","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"MAZJ124"},"content":"     * Add a deadline into the list of tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"MAZJ124"},"content":"     * @param description description of the task added","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"MAZJ124"},"content":"     * @param by deadline of the task added","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"MAZJ124"},"content":"    public void addDeadline(String description, String by) {","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"MAZJ124"},"content":"        tasks.add(new Deadline(description, by));","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"MAZJ124"},"content":"     * Add an event into the list of tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"MAZJ124"},"content":"     * @param description description of the event added","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"MAZJ124"},"content":"     * @param at time where the event added is going to happen","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"MAZJ124"},"content":"    public void addEvent(String description, String at) {","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"MAZJ124"},"content":"        tasks.add(new Event(description, at));","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"MAZJ124"},"content":"     * Mark a specific task as done","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"MAZJ124"},"content":"     * @param index index of the completed task","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"MAZJ124"},"content":"    public void completeTask(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"MAZJ124"},"content":"        tasks.get(index).completeTask();","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"MAZJ124"},"content":"     * Delete a specific task","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"MAZJ124"},"content":"     * @param index index of the task that the user wants to delete","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"MAZJ124"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"MAZJ124"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"MAZJ124"},"content":"     * Lists out all tasks currently in the list","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"MAZJ124"},"content":"     * @return a message which includes a prompt and all the tasks in the task list","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"MAZJ124"},"content":"    public String listTask() {","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"MAZJ124"},"content":"        String message \u003d \"Here are all the tasks in your list:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"MAZJ124"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"MAZJ124"},"content":"            message +\u003d System.lineSeparator();","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"MAZJ124"},"content":"            message +\u003d tasks.get(i).getFormattedTask(i + 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"MAZJ124"},"content":"        return message;","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"MAZJ124":95}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"public class TaskManager {","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"    protected static TaskList tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"    protected static Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"    protected static final Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"     * This class is in charge of operations on the task lists based on user input","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"     * @param tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"    public TaskManager(TaskList tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"     * Deletes a task from the task list","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"     * @throws DukeException if the input index exceeds the current number of tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"    public void deleteTask(String input) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"MAZJ124"},"content":"        int index \u003d parser.getInputIndex(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"MAZJ124"},"content":"        if (index \u003e tasks.getSize()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You don\u0027t have so many tasks yet!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"        ui.printDeletedTask(tasks.getTask(index - 1), tasks.getSize() - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"        tasks.deleteTask(index - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"     * Marks a task from the task list as completed","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"MAZJ124"},"content":"     * @throws DukeException if the input index exceeds the current number of tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"MAZJ124"},"content":"    public void finishTask(String input) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"MAZJ124"},"content":"        int index \u003d parser.getInputIndex(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"MAZJ124"},"content":"        if (index \u003e tasks.getSize()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You don\u0027t have so many tasks yet!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"MAZJ124"},"content":"        Task inputTask \u003d tasks.getTask(index - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"MAZJ124"},"content":"        inputTask.completeTask();","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"MAZJ124"},"content":"        ui.printCompletedTask(inputTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"MAZJ124"},"content":"     * Adds an event into the task list and prints confirmation","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"MAZJ124"},"content":"     * @throws DukeException if there is no task body or the task is not in the right format","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"MAZJ124"},"content":"    public void addEvent(String input) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"MAZJ124"},"content":"        boolean isNoInput \u003d parser.getInputWordCount(input) \u003d\u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"MAZJ124"},"content":"        if (isNoInput) {","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You have to specify the task!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"MAZJ124"},"content":"        if (parser.isWrongFormat(input)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"Your task is not in the right format\");","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"MAZJ124"},"content":"        String description \u003d parser.getTaskDescription(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"MAZJ124"},"content":"        String at \u003d parser.getTaskDate(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"MAZJ124"},"content":"        tasks.addEvent(description, at);","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"MAZJ124"},"content":"        Task recentTask \u003d tasks.getTask(tasks.getSize() - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"MAZJ124"},"content":"        ui.printAddedTask(recentTask, tasks.getSize());","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"MAZJ124"},"content":"     * Adds an deadline into the task list and prints confirmation","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"MAZJ124"},"content":"     * @throws DukeException if there is no task body or the task is not in the right format","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"MAZJ124"},"content":"    public void addDeadline(String input) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"MAZJ124"},"content":"        boolean isNoInput \u003d parser.getInputWordCount(input) \u003d\u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"MAZJ124"},"content":"        if (isNoInput) {","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You have to specify the task!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"MAZJ124"},"content":"        if (parser.isWrongFormat(input)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"Your task is not in the right format\");","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"MAZJ124"},"content":"        String description \u003d parser.getTaskDescription(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"MAZJ124"},"content":"        String by \u003d parser.getTaskDate(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"MAZJ124"},"content":"        tasks.addDeadline(description, by);","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"MAZJ124"},"content":"        Task recentTask \u003d tasks.getTask(tasks.getSize() - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"MAZJ124"},"content":"        ui.printAddedTask(recentTask, tasks.getSize());","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"MAZJ124"},"content":"     * Adds a todo to the task list and prints confirmation","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"MAZJ124"},"content":"     * @param input input from user","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"MAZJ124"},"content":"     * @throws DukeException if there is no task body in the input","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"MAZJ124"},"content":"    public void addTodo(String input) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"MAZJ124"},"content":"        boolean isNoInput \u003d parser.getInputWordCount(input) \u003d\u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"MAZJ124"},"content":"        if (isNoInput) {","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You have to specify the task!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"MAZJ124"},"content":"        tasks.addTodo(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"MAZJ124"},"content":"        Task recentTask \u003d tasks.getTask(tasks.getSize() - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"MAZJ124"},"content":"        ui.printAddedTask(recentTask, tasks.getSize());","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"MAZJ124"},"content":"     * Lists down all the tasks in the task list on the console","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"MAZJ124"},"content":"     * @throws DukeException if the task list is empty","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"MAZJ124"},"content":"    public void listTasks() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"MAZJ124"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"You do not have any tasks in your list!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"MAZJ124"},"content":"        ui.printMessage(tasks.listTask());","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"MAZJ124"},"content":"    public void findTask(String input) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"MAZJ124"},"content":"        boolean isNoInput \u003d parser.getInputWordCount(input) \u003d\u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"MAZJ124"},"content":"        if (isNoInput) {","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"MAZJ124"},"content":"            throw new DukeException(\"Your search field cannot be empty!\");","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"MAZJ124"},"content":"        String search \u003d parser.getInputBody(input);","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"MAZJ124"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"MAZJ124"},"content":"        String initialMessage \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"MAZJ124"},"content":"        String message \u003d initialMessage;","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"MAZJ124"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"MAZJ124"},"content":"            Task currentTask \u003d tasks.getTask(i);","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"MAZJ124"},"content":"            if (currentTask.getDescription().contains(search)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"MAZJ124"},"content":"                index++;","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"MAZJ124"},"content":"                message +\u003d System.lineSeparator();","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"MAZJ124"},"content":"                message +\u003d currentTask.getFormattedTask(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"MAZJ124"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"MAZJ124"},"content":"        if (message.equals(initialMessage)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"MAZJ124"},"content":"            message \u003d \"There are no matching results in your list:(\";","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"MAZJ124"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"MAZJ124"},"content":"        ui.printMessage(message);","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"MAZJ124":140}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"        this.taskType \u003d \u0027T\u0027;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"MAZJ124":9}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"import java.sql.SQLSyntaxErrorException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":" * This class is in charge of printing required outputs to the console","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"public class Ui {","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"MAZJ124"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"MAZJ124"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"MAZJ124"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"MAZJ124"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"MAZJ124"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"MAZJ124"},"content":"    private static final String LINE_SEPARATOR \u003d \"------------------------------------\" + System.lineSeparator();","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"MAZJ124"},"content":"    private static final String HELLO_MESSAGE \u003d \"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\";","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"MAZJ124"},"content":"    private static final String ERROR_MESSAGE \u003d \"You need to specify the task type!\";","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"MAZJ124"},"content":"    protected Scanner in;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"MAZJ124"},"content":"    public Ui() {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"MAZJ124"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"MAZJ124"},"content":"     * Prints input message with a better style and format to the console","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"MAZJ124"},"content":"     * @param message the message to be printed","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"MAZJ124"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"MAZJ124"},"content":"        String formattedMessage \u003d LINE_SEPARATOR + message + System.lineSeparator() + LINE_SEPARATOR;","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"MAZJ124"},"content":"        System.out.print(formattedMessage);","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"MAZJ124"},"content":"     * Prints greeting message to user when starting the bot","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"MAZJ124"},"content":"    public void printHelloMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"MAZJ124"},"content":"        System.out.println(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"MAZJ124"},"content":"        printMessage(HELLO_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"MAZJ124"},"content":"     * Prints farewell message to user when terminating the bot","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"MAZJ124"},"content":"    public void printByeMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"MAZJ124"},"content":"        printMessage(BYE_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"MAZJ124"},"content":"     * Prompts the user that the user input is not valid","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"MAZJ124"},"content":"    public void promptInvalidInput() {","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"MAZJ124"},"content":"        printMessage(ERROR_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"MAZJ124"},"content":"     * Prints confirmation when a task is added to the list, together with its details and the total task count","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"MAZJ124"},"content":"     * @param addedTask the task that is going to be added into the list","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"MAZJ124"},"content":"     * @param taskCount total number of tasks in the list after the addition","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"MAZJ124"},"content":"    public void printAddedTask(Task addedTask, int taskCount) {","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"MAZJ124"},"content":"        String taskAddedConfirmation \u003d \"Got it! I\u0027ve added the following task:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"MAZJ124"},"content":"        String promptTaskCount \u003d \"Now you have \" + taskCount + \" tasks in your list\";","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"MAZJ124"},"content":"        String formattedMessage \u003d taskAddedConfirmation + System.lineSeparator() +","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"MAZJ124"},"content":"                addedTask.getTaskInfo() +  System.lineSeparator() + promptTaskCount;","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"MAZJ124"},"content":"        printMessage(formattedMessage);","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"MAZJ124"},"content":"     * Prints confirmation when a task is completed, together with its details","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"MAZJ124"},"content":"     * @param completedTask the task that is being completed","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"MAZJ124"},"content":"    public void printCompletedTask(Task completedTask) {","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"MAZJ124"},"content":"        String taskCompletedConfirmation \u003d \"Nice! I have marked this task as done:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"MAZJ124"},"content":"        String formattedMessage \u003d taskCompletedConfirmation +","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"MAZJ124"},"content":"                System.lineSeparator() + completedTask.getTaskInfo();","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"MAZJ124"},"content":"        printMessage(formattedMessage);","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"MAZJ124"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"MAZJ124"},"content":"     * Prints confirmation when a task is removed from the list, together with its details and the total task count","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"MAZJ124"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"MAZJ124"},"content":"     * @param deletedTask the task that is going to be deleted","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"MAZJ124"},"content":"     * @param taskCount total number of tasks in the list after the deletion","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"MAZJ124"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"MAZJ124"},"content":"    public void printDeletedTask(Task deletedTask, int taskCount) {","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"MAZJ124"},"content":"        String taskDeletedConfirmation \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"MAZJ124"},"content":"        String promptTaskCount \u003d \"Now you have \" + taskCount + \" tasks in your list\";","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"MAZJ124"},"content":"        String formattedMessage \u003d taskDeletedConfirmation + System.lineSeparator() +","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"MAZJ124"},"content":"                deletedTask.getTaskInfo() + System.lineSeparator() + promptTaskCount;","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"MAZJ124"},"content":"        printMessage(formattedMessage);","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"MAZJ124"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"MAZJ124"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"MAZJ124"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"MAZJ124":99}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"MAZJ124"},"content":"todo study","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"MAZJ124"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"MAZJ124"},"content":"deadline finish assignment /by Sunday 3pm","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"MAZJ124"},"content":"event attend meeting /at Monday 2-4pm","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"MAZJ124"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"MAZJ124"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"MAZJ124"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"MAZJ124"},"content":"done 3","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"MAZJ124"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"MAZJ124"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"MAZJ124":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"MAZJ124"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"MAZJ124":1,"-":20}}]
