[{"path":"src/main/java/duke/control/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.ByeCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"    private static TaskList list;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"    public Duke() {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"        this.list \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"        storage.loadDataFromFile(list);","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"     * Runs the main process of duke","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"     * Runs an infinite loop of receiving user input and processing it.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"     * the \"bye\" command breaks the loop, ending the method.","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"    public static void run() {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"        String userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"        while (true) {","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"JMattChiam"},"content":"            userInput \u003d Ui.getUserResponse(in);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"JMattChiam"},"content":"            Command command;","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"JMattChiam"},"content":"            try {","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"JMattChiam"},"content":"                command \u003d Ui.processInput(userInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"JMattChiam"},"content":"            } catch (InvalidInputFormatException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"JMattChiam"},"content":"                Ui.printInvalidInputMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"JMattChiam"},"content":"                continue;","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"JMattChiam"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"JMattChiam"},"content":"            if (command instanceof ByeCommand) {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"JMattChiam"},"content":"                command.executeCommand(list, userInput, storage);","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"JMattChiam"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"JMattChiam"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"JMattChiam"},"content":"            command.executeCommand(list, userInput, storage);","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"JMattChiam"},"content":"            Ui.printResponseSeparator();","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"JMattChiam"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"JMattChiam"},"content":"        new Duke();","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"JMattChiam"},"content":"        run();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JMattChiam":46,"-":2}},{"path":"src/main/java/duke/control/InvalidInputFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"public class InvalidInputFormatException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JMattChiam":4}},{"path":"src/main/java/duke/control/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":" * Takes input for adding Tasks and parses the information. Input is a String, either from user or from save file.","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"    private static final int FILE_TASKTYPE_INDEX \u003d 1;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"    private static final int FILE_DATETIME_INDEX_OFFSET \u003d 3;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"    private static final int DATETIME_START_INDEX_OFFSET \u003d 4;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"    private static final int FILE_ISDONE_INDEX \u003d 4;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"    private static final int DATE_DATETIME_INDEX \u003d 4;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"    private static final int TODO_NAME_START_INDEX \u003d 5;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"    private static final int EVENT_NAME_START_INDEX \u003d 6;","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"    private static final int SEARCHTERM_START_INDEX \u003d 7;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"    private static final int FILE_TASK_NAME_INDEX \u003d 7;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"    private static final int DEADLINE_NAME_START_INDEX \u003d 9;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"     * Parses the user input to obtain Date and Time information for Deadline and Event tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"     * Method is called by parseTaskType, which performs the check for whether the input is in the correct format,","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"     * so it can be assumed that the input is valid. Format is yyyy-mm-dd xx:xx","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"     * @param input user input String","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"JMattChiam"},"content":"     * @return the Date and Time information for a Deadline or Event task","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"JMattChiam"},"content":"    protected static LocalDateTime parseInputForDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"JMattChiam"},"content":"        int markerIndex \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"JMattChiam"},"content":"        int dateTimeStartIndex \u003d markerIndex + DATETIME_START_INDEX_OFFSET;","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"JMattChiam"},"content":"        String dateTimeString \u003d input.substring(dateTimeStartIndex).trim().replace(\u0027 \u0027, \u0027T\u0027);","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"JMattChiam"},"content":"        //dateTimeString.replace(\" \", \"T\");","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"JMattChiam"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(dateTimeString);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"JMattChiam"},"content":"        return dateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"JMattChiam"},"content":"     * Parses task type from user input for adding a new task to the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"JMattChiam"},"content":"     * Task type is either Todo, Deadline or Event.","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"JMattChiam"},"content":"     * @param input line of input from user","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"JMattChiam"},"content":"     * @return TaskType of the input","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"JMattChiam"},"content":"     * @throws InvalidInputFormatException","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"JMattChiam"},"content":"    protected static TaskList.TaskType parseTaskType(String input) throws InvalidInputFormatException {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"JMattChiam"},"content":"        if (input.startsWith(\"deadline\") \u0026\u0026 input.contains(\" /by \")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"JMattChiam"},"content":"            return TaskList.TaskType.DEADLINE;","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"JMattChiam"},"content":"        if (input.startsWith(\"event\") \u0026\u0026 input.contains(\" /at \")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"JMattChiam"},"content":"            return TaskList.TaskType.EVENT;","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"JMattChiam"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"JMattChiam"},"content":"            return TaskList.TaskType.TODO;","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"JMattChiam"},"content":"        throw new InvalidInputFormatException();","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"JMattChiam"},"content":"     * Parses task description from user input for adding a new task to the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"JMattChiam"},"content":"     * @param input Line of input from user","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"JMattChiam"},"content":"     * @param taskType type of task, Todo, Deadline or event, which affects the start index of the description.","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"JMattChiam"},"content":"     * @return Description of the task to be added to the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"JMattChiam"},"content":"    protected static String parseDescription(String input, TaskList.TaskType taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"JMattChiam"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"JMattChiam"},"content":"        case TODO:","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"JMattChiam"},"content":"            return input.substring(TODO_NAME_START_INDEX);","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"JMattChiam"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"JMattChiam"},"content":"            return input.substring(DEADLINE_NAME_START_INDEX, input.indexOf(\" /\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"JMattChiam"},"content":"        case EVENT:","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"JMattChiam"},"content":"            return input.substring(EVENT_NAME_START_INDEX, input.indexOf(\" /\"));","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"JMattChiam"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"JMattChiam"},"content":"            return input;","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"JMattChiam"},"content":"     * returns the LocalDateTime from input from a \"date\" command","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"JMattChiam"},"content":"     * \"date\" command is only concerned with date, so placeholder time of 00:00 is set.","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"JMattChiam"},"content":"     * @param input user input","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"JMattChiam"},"content":"     * @return date in user input","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"JMattChiam"},"content":"    protected static LocalDateTime parseDateTimeFromDateCommand(String input) {","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"JMattChiam"},"content":"        String dateTimeString \u003d input.substring(DATE_DATETIME_INDEX).trim() + \"T00:00\";","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"JMattChiam"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(dateTimeString);","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"JMattChiam"},"content":"        return date;","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"JMattChiam"},"content":"     * Returns the search term for a search command","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"JMattChiam"},"content":"     * @param input user input","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"JMattChiam"},"content":"     * @return search term, in lower case.","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"JMattChiam"},"content":"    protected static String parseSearchTerm(String input) {","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"JMattChiam"},"content":"        String searchTerm \u003d \"\";","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"JMattChiam"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"JMattChiam"},"content":"            searchTerm \u003d input.substring(SEARCHTERM_START_INDEX).trim().toLowerCase();","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"JMattChiam"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"Please include a search term.\");","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"JMattChiam"},"content":"        return searchTerm;","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"JMattChiam"},"content":"     * Parses the isDone status from a line of input from save file.","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"JMattChiam"},"content":"     * @param inputLineFromFile line of input from save file","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"JMattChiam"},"content":"     * @return isDone, whether the task in the input line is done.","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"JMattChiam"},"content":"     * @throws InvalidInputFormatException","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"JMattChiam"},"content":"    protected static boolean parseIsDoneFromFile(String inputLineFromFile) throws InvalidInputFormatException {","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"JMattChiam"},"content":"        switch (inputLineFromFile.charAt(FILE_ISDONE_INDEX)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"JMattChiam"},"content":"        case (\u0027 \u0027):","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"JMattChiam"},"content":"            return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"JMattChiam"},"content":"        case (\u0027X\u0027):","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"JMattChiam"},"content":"            return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"JMattChiam"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"JMattChiam"},"content":"            throw new InvalidInputFormatException();","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"JMattChiam"},"content":"     * Parses the task type from a line of input from save file.","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"JMattChiam"},"content":"     * Task type is either Todo, Deadline or Event","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"JMattChiam"},"content":"     * @param inputLineFromFile line of input from save file","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"JMattChiam"},"content":"     * @return the TaskType of the task from the input line","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"JMattChiam"},"content":"     * @throws InvalidInputFormatException","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"JMattChiam"},"content":"    protected static TaskList.TaskType parseTaskTypeFromFile(String inputLineFromFile) throws","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"JMattChiam"},"content":"            InvalidInputFormatException {","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"JMattChiam"},"content":"        switch (inputLineFromFile.charAt(FILE_TASKTYPE_INDEX)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"JMattChiam"},"content":"        case (\u0027T\u0027):","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"JMattChiam"},"content":"            return TaskList.TaskType.TODO;","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"JMattChiam"},"content":"        case (\u0027D\u0027):","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"JMattChiam"},"content":"            return TaskList.TaskType.DEADLINE;","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"JMattChiam"},"content":"        case (\u0027E\u0027):","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"JMattChiam"},"content":"            return TaskList.TaskType.EVENT;","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"JMattChiam"},"content":"        default:","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"JMattChiam"},"content":"            throw new InvalidInputFormatException();","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"JMattChiam"},"content":"     * Parses date and time information from a line from the save file.","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"JMattChiam"},"content":"     * Data is saved in the form [D][X] name (by: MMM d yyyy","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"JMattChiam"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"JMattChiam"},"content":"     * @param inputLineFromFile","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"JMattChiam"},"content":"     * @return the date and time of the task object from the input line, in the form of a LocalDateTime object.","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"JMattChiam"},"content":"     * @throws InvalidInputFormatException","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"JMattChiam"},"content":"    protected static LocalDateTime parseDateTimeFromFile(String inputLineFromFile) throws InvalidInputFormatException {","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"JMattChiam"},"content":"        int markerIndex \u003d inputLineFromFile.indexOf(\"DT: \");","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"JMattChiam"},"content":"        int dateTimeStartIndex \u003d markerIndex + FILE_DATETIME_INDEX_OFFSET;","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"JMattChiam"},"content":"        String dateTimeString \u003d inputLineFromFile.substring(dateTimeStartIndex).trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"JMattChiam"},"content":"        return LocalDateTime.parse(dateTimeString);","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":156,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":157,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"JMattChiam"},"content":"     * Parses task description from a line from the save file","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"JMattChiam"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"JMattChiam"},"content":"     * @param inputLineFromFile","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"JMattChiam"},"content":"     * @param taskType","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"JMattChiam"},"content":"     * @return","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"JMattChiam"},"content":"     * @throws InvalidInputFormatException","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"JMattChiam"},"content":"     * @throws StringIndexOutOfBoundsException","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"JMattChiam"},"content":"    protected static String parseDescriptionFromFile(String inputLineFromFile, TaskList.TaskType taskType) throws","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"JMattChiam"},"content":"            InvalidInputFormatException, StringIndexOutOfBoundsException {","lastModifiedDate":"2021-09-17"},{"lineNumber":168,"author":{"gitId":"JMattChiam"},"content":"        if (taskType.equals(TaskList.TaskType.TODO)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":169,"author":{"gitId":"JMattChiam"},"content":"            return inputLineFromFile.substring(FILE_TASK_NAME_INDEX);","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"JMattChiam"},"content":"        } else if (taskType.equals(TaskList.TaskType.DEADLINE) || taskType.equals(TaskList.TaskType.EVENT)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"JMattChiam"},"content":"            return inputLineFromFile.substring(FILE_TASK_NAME_INDEX, inputLineFromFile.indexOf(\" DT:\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"JMattChiam"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":173,"author":{"gitId":"JMattChiam"},"content":"            throw new InvalidInputFormatException();","lastModifiedDate":"2021-09-17"},{"lineNumber":174,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":175,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":176}},{"path":"src/main/java/duke/control/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"import java.io.File;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":" * Handles operations related to saving and loading the TaskList data into/from an external .txt file","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"public class Storage {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"    private static String filePath;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"    public Storage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"        setPath();","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"     * Checks and ensures that the save file exists in the correct location. Creates the directory and/or file if","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"     * required.","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"     * save file must have the path ../Data/dukeData.txt","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"JMattChiam"},"content":"    protected static void createFile() throws IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"JMattChiam"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"JMattChiam"},"content":"        File dir \u003d new File(System.getProperty(\"user.dir\") + \"/Data\");","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"JMattChiam"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"JMattChiam"},"content":"            dir.mkdir();","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"JMattChiam"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"JMattChiam"},"content":"            file.createNewFile();","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"JMattChiam"},"content":"     * Saves the current list data into a text file.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"JMattChiam"},"content":"     * It ensures that the save file exists in the correct location, then overrides it with the current data.","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"JMattChiam"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"JMattChiam"},"content":"     * @param list TaskList that will be saved","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"JMattChiam"},"content":"    public static void saveData(TaskList list) {","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"JMattChiam"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"JMattChiam"},"content":"            createFile();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"JMattChiam"},"content":"            writeDukeDataIntoFile(list);","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"JMattChiam"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"Something went wrong, your data was not saved\");","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"JMattChiam"},"content":"    private static void writeDukeDataIntoFile(TaskList list) throws IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"JMattChiam"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"JMattChiam"},"content":"        ArrayList\u003cTask\u003e taskList \u003d list.getTaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"JMattChiam"},"content":"        for (int i \u003d 0; i \u003c list.getNumberOfEntries(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"JMattChiam"},"content":"            fw.write(taskList.get(i).toStringForSave() + System.lineSeparator());","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"JMattChiam"},"content":"        fw.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"JMattChiam"},"content":"     * Reads the data from the save file and loads it into the current Duke list.","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"JMattChiam"},"content":"     * The data will only be read if the save file is not empty.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"JMattChiam"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"JMattChiam"},"content":"     * @param list TaskList object to add the data to","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"JMattChiam"},"content":"     * @throws IOException If the save file is not found","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"JMattChiam"},"content":"    protected static void loadDataFromFile(TaskList list) {","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"JMattChiam"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"JMattChiam"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"JMattChiam"},"content":"            try {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"JMattChiam"},"content":"                Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"JMattChiam"},"content":"                while (scanner.hasNext()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"JMattChiam"},"content":"                    list.addEntryFromFile(scanner.nextLine());","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"JMattChiam"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"JMattChiam"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"JMattChiam"},"content":"                Ui.printLoadSaveErrorMessage();","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"JMattChiam"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"JMattChiam"},"content":"     * Wipes saved data","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"JMattChiam"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"JMattChiam"},"content":"     * @throws IOException if the save file is not found","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"JMattChiam"},"content":"    protected static void clearSavedData() throws IOException {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"JMattChiam"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"JMattChiam"},"content":"        fw.write(\"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"JMattChiam"},"content":"        fw.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"JMattChiam"},"content":"     * Checks if the save file is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"JMattChiam"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"JMattChiam"},"content":"     * @return true is the save file is empty, false otherwise.","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"JMattChiam"},"content":"    protected static boolean isEmpty() {","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"JMattChiam"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"JMattChiam"},"content":"        if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"JMattChiam"},"content":"            return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"JMattChiam"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"JMattChiam"},"content":"     * Sets the filePath static variable.","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"JMattChiam"},"content":"     * filePath is set according to the directory that the user has launched Duke from","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"JMattChiam"},"content":"    protected static void setPath() {","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"JMattChiam"},"content":"        filePath \u003d System.getProperty(\"user.dir\") + \"/Data/dukeData.txt\";","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"JMattChiam"},"content":"     * Returns the path to the save file","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"JMattChiam"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"JMattChiam"},"content":"     * @return filePath the String of the save file\u0027s location","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"JMattChiam"},"content":"    public static String getFilePath() {","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"JMattChiam"},"content":"        return filePath;","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":123}},{"path":"src/main/java/duke/control/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"import duke.task.TaskWithDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"public class TaskList {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"    private int numberOfEntries \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"    enum TaskType {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"        TODO,","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"        DEADLINE,","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"        EVENT,","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"JMattChiam"},"content":"     * Adds a new entry into the list. Entries are Tasks which can either be Todo, Deadline or Event objects.","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"JMattChiam"},"content":"     * Deadline and Event entries have an additional parameter of date and/or time which must also be set.","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"JMattChiam"},"content":"     * @param input user input","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"JMattChiam"},"content":"     * @throws InvalidInputFormatException user input is not in the correct format.","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"JMattChiam"},"content":"    public void addEntryToList(String input) throws InvalidInputFormatException {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"JMattChiam"},"content":"        TaskType entryType \u003d Parser.parseTaskType(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"JMattChiam"},"content":"        String description \u003d Parser.parseDescription(input, entryType);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"JMattChiam"},"content":"        Task newEntry;","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"JMattChiam"},"content":"        switch (entryType) {","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"JMattChiam"},"content":"        case TODO:","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"JMattChiam"},"content":"            newEntry \u003d new ToDo(description);","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"JMattChiam"},"content":"            taskList.add(newEntry);","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"JMattChiam"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"JMattChiam"},"content":"        case DEADLINE:","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"JMattChiam"},"content":"            newEntry \u003d new Deadline(description, Parser.parseInputForDateTime(input));","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"JMattChiam"},"content":"            taskList.add(newEntry);","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"JMattChiam"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"JMattChiam"},"content":"        case EVENT:","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"JMattChiam"},"content":"            newEntry \u003d new Event(description, Parser.parseInputForDateTime(input));","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"JMattChiam"},"content":"            taskList.add(newEntry);","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"JMattChiam"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"JMattChiam"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"JMattChiam"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"JMattChiam"},"content":"        printAddEntryMessage(taskList.get(numberOfEntries));","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"JMattChiam"},"content":"        numberOfEntries++;","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"JMattChiam"},"content":"     * Deletes an item from the list","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"JMattChiam"},"content":"     * @param entryNumber the entry number for the item to be deleted. To the user, the list indexes from 1, so the","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"JMattChiam"},"content":"     *                    actual index of the item is entryNumber-1","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"JMattChiam"},"content":"    public void deleteEntry(int entryNumber) {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"JMattChiam"},"content":"        printDeleteEntryMessage(taskList.get(entryNumber-1));","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"JMattChiam"},"content":"        taskList.remove(entryNumber-1);","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"JMattChiam"},"content":"        numberOfEntries--;","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"JMattChiam"},"content":"     * Sets an entry in the list as done","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"JMattChiam"},"content":"     * @param entryNumber the entry number of the list item to be set. To the user, the list indexes from 1, so the","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"JMattChiam"},"content":"     *                          actual index of the item is entryNumber-1","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"JMattChiam"},"content":"    public void doneEntry(int entryNumber) {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"JMattChiam"},"content":"        (taskList.get(entryNumber-1)).setDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"JMattChiam"},"content":"        System.out.println((taskList.get(entryNumber-1)).getName() + \" done. Well done.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"JMattChiam"},"content":"     * Adds an entry to the list using one line of input obtained from the save file.","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"JMattChiam"},"content":"     * The string is stored in the same format as it is displayed: [T][X] name (at: dateTime)","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"JMattChiam"},"content":"     * InvalidInputFormatException will be thrown and caught if the data in the save file is not of the correct format.","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"JMattChiam"},"content":"     * i.e. it was saved incorrectly","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"JMattChiam"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"JMattChiam"},"content":"     * @param inputLineFromFile the String input that is read from the save file.","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"JMattChiam"},"content":"    protected void addEntryFromFile(String inputLineFromFile) {","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"JMattChiam"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"JMattChiam"},"content":"            TaskType entryType \u003d Parser.parseTaskTypeFromFile(inputLineFromFile);","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"JMattChiam"},"content":"            boolean isDone \u003d Parser.parseIsDoneFromFile(inputLineFromFile);","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"JMattChiam"},"content":"            String description \u003d Parser.parseDescriptionFromFile(inputLineFromFile, entryType);","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"JMattChiam"},"content":"            Task newEntry;","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"JMattChiam"},"content":"            switch (entryType) {","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"JMattChiam"},"content":"            case TODO:","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"JMattChiam"},"content":"                newEntry \u003d new ToDo(description);","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"JMattChiam"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"JMattChiam"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"JMattChiam"},"content":"                newEntry \u003d addDeadlineFromFile(inputLineFromFile, description);","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"JMattChiam"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"JMattChiam"},"content":"            case EVENT:","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"JMattChiam"},"content":"                newEntry \u003d addEventFromFile(inputLineFromFile, description);","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"JMattChiam"},"content":"                break;","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"JMattChiam"},"content":"            default:","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"JMattChiam"},"content":"                throw new InvalidInputFormatException();","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"JMattChiam"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"JMattChiam"},"content":"            taskList.add(newEntry);","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"JMattChiam"},"content":"            if (isDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"JMattChiam"},"content":"                taskList.get(numberOfEntries).setDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"JMattChiam"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"JMattChiam"},"content":"            numberOfEntries++;","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"JMattChiam"},"content":"        } catch (InvalidInputFormatException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"Something went wrong, could not load saved data\");","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"JMattChiam"},"content":"    private Deadline addDeadlineFromFile(String inputLineFromFile, String description) throws","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"JMattChiam"},"content":"            InvalidInputFormatException{","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"JMattChiam"},"content":"        LocalDateTime dateTime \u003d Parser.parseDateTimeFromFile(inputLineFromFile);","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"JMattChiam"},"content":"        return new Deadline(description, dateTime);","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"JMattChiam"},"content":"    private Event addEventFromFile(String inputLineFromFile, String description) throws InvalidInputFormatException {","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"JMattChiam"},"content":"        LocalDateTime dateTime \u003d Parser.parseDateTimeFromFile(inputLineFromFile);","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"JMattChiam"},"content":"        return new Event(description, dateTime);","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"JMattChiam"},"content":"    public int getNumberOfEntries() {","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"JMattChiam"},"content":"        return numberOfEntries;","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":128,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"JMattChiam"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"JMattChiam"},"content":"        return taskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"JMattChiam"},"content":"    private Boolean isSearchMatched(String searchTerm, Task entry) {","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"JMattChiam"},"content":"        return entry.getName().contains(searchTerm);","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"JMattChiam"},"content":"    public void printSearchList(String input) {","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"JMattChiam"},"content":"        String searchTerm \u003d Parser.parseSearchTerm(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"JMattChiam"},"content":"        int matchCount \u003d 0;","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"JMattChiam"},"content":"        for (int i \u003d 0; i \u003c numberOfEntries; i++) {","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"JMattChiam"},"content":"            if (searchTerm.equals(\"\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"JMattChiam"},"content":"                break;","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"JMattChiam"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"JMattChiam"},"content":"            if (isSearchMatched(searchTerm, taskList.get(i))) {","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"JMattChiam"},"content":"                printEntry(taskList.get(i), i);","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"JMattChiam"},"content":"                matchCount++;","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"JMattChiam"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"Number of results: \" + matchCount);","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"JMattChiam"},"content":"     * Prints entry, for use in list command","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"JMattChiam"},"content":"     * @param entry Task entry from list","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"JMattChiam"},"content":"     * @param entryIndex index of the task from the list. Index is displayed as index + 1 as the list starts from 1 to","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"JMattChiam"},"content":"     *                   the user.","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"JMattChiam"},"content":"    public void printEntry(Task entry, int entryIndex) {","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"JMattChiam"},"content":"        int entryNumber \u003d entryIndex + 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(entryNumber + \".\" + entry.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"JMattChiam"},"content":"    public void printList() {","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"JMattChiam"},"content":"        if (numberOfEntries \u003d\u003d 0) {","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"your list is empty\");","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"JMattChiam"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"Here is your current list\");","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"JMattChiam"},"content":"            for (int i \u003d 0; i \u003c numberOfEntries; i++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":169,"author":{"gitId":"JMattChiam"},"content":"                printEntry(taskList.get(i), i);","lastModifiedDate":"2021-09-12"},{"lineNumber":170,"author":{"gitId":"JMattChiam"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":171,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"You have \" + (numberOfEntries) + \" task(s) on your list.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":173,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":174,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":175,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"JMattChiam"},"content":"     * Prints all the list entries that occur on a specific date.","lastModifiedDate":"2021-09-21"},{"lineNumber":177,"author":{"gitId":"JMattChiam"},"content":"     * @param input user input, in the form \"date yyyy-mm-dd\"","lastModifiedDate":"2021-09-21"},{"lineNumber":178,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":179,"author":{"gitId":"JMattChiam"},"content":"    public void printTasksOnDate(String input) {","lastModifiedDate":"2021-09-21"},{"lineNumber":180,"author":{"gitId":"JMattChiam"},"content":"        LocalDateTime date \u003d Parser.parseDateTimeFromDateCommand(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":181,"author":{"gitId":"JMattChiam"},"content":"        for (int i \u003d 0; i \u003c numberOfEntries; i++) {","lastModifiedDate":"2021-09-21"},{"lineNumber":182,"author":{"gitId":"JMattChiam"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2021-09-21"},{"lineNumber":183,"author":{"gitId":"JMattChiam"},"content":"            if (t instanceof Deadline || t instanceof Event) {","lastModifiedDate":"2021-09-21"},{"lineNumber":184,"author":{"gitId":"JMattChiam"},"content":"                if (isSameDate(date, (TaskWithDateTime) t)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":185,"author":{"gitId":"JMattChiam"},"content":"                    printEntry(t, i);","lastModifiedDate":"2021-09-21"},{"lineNumber":186,"author":{"gitId":"JMattChiam"},"content":"                }","lastModifiedDate":"2021-09-21"},{"lineNumber":187,"author":{"gitId":"JMattChiam"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":188,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":189,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":190,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":191,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":192,"author":{"gitId":"JMattChiam"},"content":"     * returns true if a Deadline or Event object has the same date as input date.","lastModifiedDate":"2021-09-21"},{"lineNumber":193,"author":{"gitId":"JMattChiam"},"content":"     * Cannot directly compare the LocalDateTime of the two objects as this method is only concerned with the date.","lastModifiedDate":"2021-09-21"},{"lineNumber":194,"author":{"gitId":"JMattChiam"},"content":"     * @param date date to check","lastModifiedDate":"2021-09-21"},{"lineNumber":195,"author":{"gitId":"JMattChiam"},"content":"     * @param entry entry to match with the date","lastModifiedDate":"2021-09-21"},{"lineNumber":196,"author":{"gitId":"JMattChiam"},"content":"     * @return true if entry\u0027s date matches with input date.","lastModifiedDate":"2021-09-21"},{"lineNumber":197,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":198,"author":{"gitId":"JMattChiam"},"content":"    private Boolean isSameDate(LocalDateTime date, TaskWithDateTime entry) {","lastModifiedDate":"2021-09-21"},{"lineNumber":199,"author":{"gitId":"JMattChiam"},"content":"        LocalDateTime entryDateTime \u003d entry.getDateTime();","lastModifiedDate":"2021-09-21"},{"lineNumber":200,"author":{"gitId":"JMattChiam"},"content":"        int year \u003d date.getYear();","lastModifiedDate":"2021-09-21"},{"lineNumber":201,"author":{"gitId":"JMattChiam"},"content":"        int month \u003d date.getMonthValue();","lastModifiedDate":"2021-09-21"},{"lineNumber":202,"author":{"gitId":"JMattChiam"},"content":"        int day \u003d date.getDayOfMonth();","lastModifiedDate":"2021-09-21"},{"lineNumber":203,"author":{"gitId":"JMattChiam"},"content":"        int entryYear \u003d entryDateTime.getYear();","lastModifiedDate":"2021-09-21"},{"lineNumber":204,"author":{"gitId":"JMattChiam"},"content":"        int entryMonth \u003d entryDateTime.getMonthValue();","lastModifiedDate":"2021-09-21"},{"lineNumber":205,"author":{"gitId":"JMattChiam"},"content":"        int entryDay \u003d entryDateTime.getDayOfMonth();","lastModifiedDate":"2021-09-21"},{"lineNumber":206,"author":{"gitId":"JMattChiam"},"content":"        return (year \u003d\u003d entryYear) \u0026\u0026 (month \u003d\u003d entryMonth) \u0026\u0026 (day \u003d\u003d entryDay);","lastModifiedDate":"2021-09-21"},{"lineNumber":207,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":208,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":209,"author":{"gitId":"JMattChiam"},"content":"    public void printAddEntryMessage(Task entry) {","lastModifiedDate":"2021-09-12"},{"lineNumber":210,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"I\u0027ve added the following task:\");","lastModifiedDate":"2021-09-12"},{"lineNumber":211,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(entry.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":212,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":213,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":214,"author":{"gitId":"JMattChiam"},"content":"    public void printDeleteEntryMessage(Task entry) {","lastModifiedDate":"2021-09-12"},{"lineNumber":215,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"I\u0027ve deleted the following entry\");","lastModifiedDate":"2021-09-12"},{"lineNumber":216,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(entry.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":217,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"JMattChiam":218}},{"path":"src/main/java/duke/control/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.ByeCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.DateCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.SearchCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.TaskCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.DoneCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.DeleteCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.HelpCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"import duke.control.command.ListCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"    static final String RESPONSE_SEPARATOR \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"            \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"Bye! See you soon!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"    public static void printInvalidInputMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"I don\u0027t know what you mean, please look at the instructions and try again\");","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"JMattChiam"},"content":"    public static void printMissingDateTimeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"Command not entered properly, remember to use \\\"/by\\\" or \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"JMattChiam"},"content":"                \"\\\"/at\\\" modifiers for deadline and event tasks respectively. Type \\\"help\\\"\" +","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"JMattChiam"},"content":"                \" for more information\");","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"JMattChiam"},"content":"    public static void printLoadSaveErrorMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"Something went wrong, could not load save file.\");","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"JMattChiam"},"content":"    private static void printInvalidDateTimeFormatMessage() {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"date and time information in the wrong format. Please enter date and time as \" +","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"JMattChiam"},"content":"                \"yyyy-mm-ddTxx:xx where xx:xx is 24-hour time\");","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"JMattChiam"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"JMattChiam"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"JMattChiam"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"JMattChiam"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"JMattChiam"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"JMattChiam"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"I am currently able to help you keep track of tasks\");","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"scheduled to receive a personality soon, exciting!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"Type \\\"help\\\" to find out what I can do for you.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"JMattChiam"},"content":"        printResponseSeparator();","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"JMattChiam"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"I currently support 3 types of tasks: todo, deadline and event\");","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"To add a todo task: todo task name\");","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"To add a deadline task: deadline task name /by yyyy-mm-dd xx:xx where xx:xx is the time\");","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"To add an event task: event task name /at yyyy-mm-dd xx:xx where xx:xx is the time\");","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"To delete a task in the list: delete x where x is the entry number\");","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"To see your current list, use the command \\\"list\\\"\");","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"To cross out an entry, use the command \\\"done x\\\" where x is the entry number\");","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"To see all tasks of a certain date, use the command \\\"date yyyy-mm-dd\\\"\");","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(\"When you\u0027re done, type \\\"bye\\\" to end the program (automatically saves your current list)\");","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"JMattChiam"},"content":"    public static void printResponseSeparator() {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"JMattChiam"},"content":"        System.out.println(RESPONSE_SEPARATOR);","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"JMattChiam"},"content":"    public static String getUserResponse(Scanner in) {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"JMattChiam"},"content":"        String line;","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"JMattChiam"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"JMattChiam"},"content":"        while (isEmptyLine(line)) {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"JMattChiam"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"JMattChiam"},"content":"        return line;","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"JMattChiam"},"content":"    protected static boolean isEmptyLine(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"JMattChiam"},"content":"        String userInput \u003d input.trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"JMattChiam"},"content":"        if (userInput.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"JMattChiam"},"content":"            return true;","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"JMattChiam"},"content":"        return false;","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"JMattChiam"},"content":"     * Processes the user input and returns the command type from the input.","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"JMattChiam"},"content":"     * Commands are: list, help, bye, done, delete, todo, deadline or event","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"JMattChiam"},"content":"     * @param input user input, one line.","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"JMattChiam"},"content":"     * @return Command object of the correct command according to the input","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"JMattChiam"},"content":"     * @throws InvalidInputFormatException","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"JMattChiam"},"content":"    protected static Command processInput(String input) throws InvalidInputFormatException {","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"JMattChiam"},"content":"        Command command;","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"JMattChiam"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"JMattChiam"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"JMattChiam"},"content":"        } else if (input.equals(\"help\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"JMattChiam"},"content":"            command \u003d new HelpCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"JMattChiam"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"JMattChiam"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"JMattChiam"},"content":"        } else if (input.startsWith(\"done\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"JMattChiam"},"content":"            command \u003d new DoneCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"JMattChiam"},"content":"        } else if (input.startsWith(\"search\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"JMattChiam"},"content":"            command \u003d new SearchCommand();","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"JMattChiam"},"content":"        } else if (input.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"JMattChiam"},"content":"            command \u003d new DeleteCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"JMattChiam"},"content":"        } else if (input.startsWith(\"date\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"JMattChiam"},"content":"            command \u003d new DateCommand();","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"JMattChiam"},"content":"        } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"JMattChiam"},"content":"            command \u003d new TaskCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"JMattChiam"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"JMattChiam"},"content":"            throw new InvalidInputFormatException();","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"JMattChiam"},"content":"        return command;","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":119}},{"path":"src/main/java/duke/control/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Storage;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"    public void executeCommand(TaskList list, String input, Storage storage) {","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"        Ui.printExitMessage();","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"        Storage.saveData(list);","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":14}},{"path":"src/main/java/duke/control/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"    public void executeCommand(TaskList list, String input, Storage storage){};","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":8}},{"path":"src/main/java/duke/control/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control.command;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Storage;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"    public void executeCommand(TaskList list, String input, Storage storage) {","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"        list.printTasksOnDate(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"JMattChiam":11}},{"path":"src/main/java/duke/control/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"    private static final int DELETE_NUMBER_INDEX \u003d 7;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"    public void executeCommand(TaskList list, String input, Storage storage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"            int entryNumber \u003d Integer.parseInt(input.substring(DELETE_NUMBER_INDEX));","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"            list.deleteEntry(entryNumber);","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"            //entry number is an invalid character","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"the delete command is of the form \\\"delete x\\\" where x is an entry number\");","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"            //entry number is missing","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"The delete command must have an entry number, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"                    \"enter it in the form \\\"delete x\\\" where x is an entry number\");","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"            //entry number does not exist in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"That entry number does not exist in your list\");","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":26}},{"path":"src/main/java/duke/control/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"    private static final int DONE_NUMBER_INDEX \u003d 5;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"    public void executeCommand(TaskList list, String input, Storage storage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"            int entryNumber \u003d Integer.parseInt(input.substring(DONE_NUMBER_INDEX));","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"            list.doneEntry(entryNumber);","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"            //entry number is an invalid character","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"the done command is of the form \\\"done x\\\" where x is an entry number\");","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"            //entry number is missing","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"The done command must have an entry number, \" +","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"                    \"enter it in the form \\\"done x\\\" where x is an entry number\");","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"            //entry number does not exist in the list","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"That entry number does not exist in your list\");","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":26}},{"path":"src/main/java/duke/control/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"    public void executeCommand(TaskList list, String input, Storage storage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"        Ui.printHelpMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":13}},{"path":"src/main/java/duke/control/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    public void executeCommand(TaskList list, String input, Storage storage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"        list.printList();","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":12}},{"path":"src/main/java/duke/control/command/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control.command;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Storage;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"public class SearchCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    public void executeCommand(TaskList list, String input, Storage storage) {","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"        list.printSearchList(input);","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"JMattChiam":12}},{"path":"src/main/java/duke/control/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.control.command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import duke.control.InvalidInputFormatException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"import duke.control.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"import duke.control.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"    public void executeCommand(TaskList list, String input, Storage storage) {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"            list.addEntryToList(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"            storage.saveData(list);","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"            System.out.println(\"todo, deadline or event commands must have task descriptions\");","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"        } catch (InvalidInputFormatException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"            Ui.printMissingDateTimeMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"JMattChiam":21}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"public class Deadline extends TaskWithDateTime {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    public Deadline(String name, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"        super(name);","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"        return dateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"        int hours \u003d dateTime.getHour();","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"        int minutes \u003d dateTime.getMinute();","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"JMattChiam"},"content":"        return (getTaskSymbol() + getStatusSymbol() + \" \" + name + \" (by: \" +","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"JMattChiam"},"content":"                dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + hours + \":\" + minutes + \" )\");","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"JMattChiam"},"content":"     * returns the Deadline object as a string in the form to be saved into save file","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"JMattChiam"},"content":"     * @return Deadline in the form [D][X] Description DT: LocalDateTime","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"JMattChiam"},"content":"    public String toStringForSave() {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"JMattChiam"},"content":"        return (getTaskSymbol() + getStatusSymbol() + \" \" + name + \" DT: \" + dateTime.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"JMattChiam":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"public class Event extends TaskWithDateTime {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    public Event(String name, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"        super(name);","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"        return dateTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"        int hours \u003d dateTime.getHour();","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"        int minutes \u003d dateTime.getMinute();","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"JMattChiam"},"content":"        return (getTaskSymbol() + getStatusSymbol() + \" \" + name + \" (at: \" +","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"JMattChiam"},"content":"                dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + hours + \":\" + minutes + \" )\");","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"JMattChiam"},"content":"     * returns the Event object as a string in the form to be saved into save file","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"JMattChiam"},"content":"     * @return Deadline in the form [E][X] Description DT: LocalDateTime","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"JMattChiam"},"content":"    public String toStringForSave() {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"JMattChiam"},"content":"        return (getTaskSymbol() + getStatusSymbol() + \" \" + name + \" DT: \" + dateTime.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"JMattChiam":39}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"    protected String name;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"    public String getStatusSymbol() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"        return (\"[\" + (isDone ? \"X\" : \" \") + \"]\");","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"    public String getName() {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"        return name;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"JMattChiam"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"JMattChiam"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"JMattChiam"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"JMattChiam"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"JMattChiam"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"JMattChiam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"JMattChiam"},"content":"        return (getTaskSymbol() + getStatusSymbol() + \" \" + name);","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"JMattChiam"},"content":"     * returns the task symbol according to the type of Task.","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"JMattChiam"},"content":"     * [T] for Todo, [D] for Deadline, [E] for Event.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"JMattChiam"},"content":"     * @return task type symbol","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"JMattChiam"},"content":"    public abstract String getTaskSymbol();","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"JMattChiam"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"JMattChiam"},"content":"     * returns the task object in String form for saving into save file","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"JMattChiam"},"content":"     * In the form [a][b] Description DT: LocalDateTime","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"JMattChiam"},"content":"     * a is task type, b is isDone status, DT: LocalDateTime only for Deadline or Event classes.","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"JMattChiam"},"content":"     * @return Task object as a String","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"JMattChiam"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"JMattChiam"},"content":"    public abstract String toStringForSave();","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"JMattChiam":50}},{"path":"src/main/java/duke/task/TaskWithDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.task;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"public abstract class TaskWithDateTime extends Task {","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"    public TaskWithDateTime(String name) {","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"        super(name);","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"    public abstract LocalDateTime getDateTime();","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"JMattChiam":12}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"        super(name);","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"    public String getTaskSymbol() {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"        return (getTaskSymbol() + getStatusSymbol() + \" \" + name);","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"JMattChiam"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"JMattChiam"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"JMattChiam"},"content":"    public String toStringForSave() {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"        return toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"JMattChiam"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"JMattChiam"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"JMattChiam":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"help","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"todo task 1","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"deadline task 2 /by 2020-12-09T12:00","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"event task 3 /at 2021-12-12T09:30","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"done 1","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"done 2","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"done 3","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"delete 1","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"done a","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"done 5","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"delete 1","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"delete 1","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"bye","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"JMattChiam":14}},{"path":"text-ui-test/input2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JMattChiam"},"content":"help","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"JMattChiam"},"content":"todo task 1","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"JMattChiam"},"content":"deadline task 2 /by 2020-12-09T12:00","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"JMattChiam"},"content":"event task 3 /at 2021-12-12T09:30","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"JMattChiam"},"content":"list","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"JMattChiam"},"content":"done 1","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"JMattChiam"},"content":"done 2","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"JMattChiam"},"content":"done 3","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"JMattChiam"},"content":"delete 1","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"done a","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"JMattChiam"},"content":"done 5","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"JMattChiam"},"content":"delete 1","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"JMattChiam"},"content":"delete 1","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"JMattChiam"},"content":"bye","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"JMattChiam":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JMattChiam"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\control\\*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JMattChiam"},"content":"java -classpath ..\\bin duke.control.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JMattChiam":2,"-":19}}]
