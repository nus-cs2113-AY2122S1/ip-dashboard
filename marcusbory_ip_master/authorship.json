[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"marcusbory"},"content":"## References","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"marcusbory"},"content":"Converting text for Alfred: https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dType%20Something%20","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"marcusbory":3,"-":24}},{"path":"src/main/java/Alfred.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"import alfred.manager.MessageManager;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"import alfred.manager.TaskManager;","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"marcusbory"},"content":"public class Alfred {","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"marcusbory"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"marcusbory"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"marcusbory"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"marcusbory"},"content":"        String userInput;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"marcusbory"},"content":"        while (true) {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"marcusbory"},"content":"            userInput \u003d scanner.nextLine().trim();","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"marcusbory"},"content":"            if (userInput.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"marcusbory"},"content":"                MessageManager.shutdownMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"marcusbory"},"content":"                return;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"marcusbory"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"marcusbory"},"content":"            taskManager.processInput(userInput);","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"marcusbory"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"marcusbory"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"marcusbory":20}},{"path":"src/main/java/alfred/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"package alfred.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"public class EmptyDescriptionException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"marcusbory":4}},{"path":"src/main/java/alfred/exception/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"package alfred.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"public class InvalidDateException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"marcusbory":4}},{"path":"src/main/java/alfred/manager/MessageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"package alfred.manager;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"import alfred.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"marcusbory"},"content":"public abstract class MessageManager {","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"marcusbory"},"content":"    public static final String LINE \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"marcusbory"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"marcusbory"},"content":"            \" **********************************\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"marcusbory"},"content":"            \" *     _    _  __              _  *\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"marcusbory"},"content":"            \" *    / \\\\  | |/ _|_ __ ___  __| | *\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"marcusbory"},"content":"            \" *   / _ \\\\ | | |_| \u0027__/ _ \\\\/ _` | *\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"marcusbory"},"content":"            \" *  / ___ \\\\| |  _| | |  __/ (_| | *\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"marcusbory"},"content":"            \" * /_/   \\\\_\\\\_|_| |_|  \\\\___|\\\\__,_| *\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"marcusbory"},"content":"            \" **********************************\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"marcusbory"},"content":"    private static void printMessageTemplate(String s) {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"marcusbory"},"content":"        System.out.println(LINE + s + LINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"marcusbory"},"content":"    public static void initMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"marcusbory"},"content":"        String messageString \u003d \" Welcome back, Master Wayne.\\n\" + \" How may I be of service to you?\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"marcusbory"},"content":"        System.out.println(LOGO + \"\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"marcusbory"},"content":"        printMessageTemplate(messageString);","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"marcusbory"},"content":"    public static void shutdownMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"marcusbory"},"content":"        printMessageTemplate(\" Very well sir, I shall leave you to your own devices.\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"marcusbory"},"content":"    public static void completeTaskMessage(int index, String taskDescription) {","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"marcusbory"},"content":"        String messageString \u003d  \"Duly noted on completion of task, sir.\\n\" + \"    \" + index + \".\" + taskDescription + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"marcusbory"},"content":"        printMessageTemplate(messageString);","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"marcusbory"},"content":"    public static void addTaskMessage(Task t, int numberOfTasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"marcusbory"},"content":"        String messageString \u003d \" I shall put this in your schedule, Master Wayne: \\n    \" + t.toString() + \"\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"marcusbory"},"content":"                \" Sir, the number of Tasks you have scheduled currently amounts to \" + numberOfTasks + \".\" + \"\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"marcusbory"},"content":"        printMessageTemplate(messageString);","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"marcusbory"},"content":"    // Error Messages","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"marcusbory"},"content":"    public static void invalidCommandMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"marcusbory"},"content":"        printMessageTemplate(\" Perhaps you could rephrase that in a way us civilians could comprehend.\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"marcusbory"},"content":"    };","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"marcusbory"},"content":"    public static void emptyDescriptionMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"marcusbory"},"content":"        printMessageTemplate(\" Master Wayne, if you do not specify your task, I\u0027m afraid I cannot note it down.\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"marcusbory"},"content":"    public static void invalidIndexMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"marcusbory"},"content":"        String messageString \u003d \" Sir, the bats must\u0027ve gone to your head.\\n\" + \" Do try again with a number that \" +","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"marcusbory"},"content":"                \"identifies your task to mark for completion.\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"marcusbory"},"content":"        printMessageTemplate(messageString);","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"marcusbory"},"content":"    public static void uninitialisedTaskIndexMessage(int numberOfTasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"marcusbory"},"content":"        String noTaskMessageString \u003d \" Sir, you have nothing scheduled, and thus nothing to complete.\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"marcusbory"},"content":"        String singularMessageString \u003d \" Sir, might I remind you that you only have 1 task.\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"marcusbory"},"content":"                \" Try again with a number in that range.\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"marcusbory"},"content":"        String pluralMessageString \u003d \" Sir, might I remind you that you only have \" + numberOfTasks + \" tasks.\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"marcusbory"},"content":"                \" Try again with a number in that range.\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"marcusbory"},"content":"        switch (numberOfTasks) {","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"marcusbory"},"content":"        case 0:","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"marcusbory"},"content":"            printMessageTemplate(noTaskMessageString);","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"marcusbory"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"marcusbory"},"content":"        case 1:","lastModifiedDate":"2021-09-05"},{"lineNumber":67,"author":{"gitId":"marcusbory"},"content":"            printMessageTemplate(singularMessageString);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"marcusbory"},"content":"            break;","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"marcusbory"},"content":"        default:","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"marcusbory"},"content":"            printMessageTemplate(pluralMessageString);","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"marcusbory"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"marcusbory"},"content":"    public static void indexOutOfBoundsMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"marcusbory"},"content":"        printMessageTemplate(\" My old age only allows up to 100 tasks, sir.\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":77,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"marcusbory"},"content":"    public static void invalidDateMessage() {","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"marcusbory"},"content":"        printMessageTemplate(\" Is there not a date for your so-called deadline or event, sir?\\n\");","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"marcusbory"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"marcusbory":81}},{"path":"src/main/java/alfred/manager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"package alfred.manager;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"import alfred.exception.EmptyDescriptionException;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"import alfred.exception.InvalidDateException;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"marcusbory"},"content":"import alfred.task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"marcusbory"},"content":"import alfred.task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"marcusbory"},"content":"import alfred.task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"marcusbory"},"content":"import alfred.task.Todo;","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"marcusbory"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"marcusbory"},"content":"    private Task[] tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"marcusbory"},"content":"    private int listIndex;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"marcusbory"},"content":"    private final int TASK_LIST_SIZE \u003d 100;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"marcusbory"},"content":"    public TaskManager() {","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"marcusbory"},"content":"        tasks \u003d new Task[TASK_LIST_SIZE];","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"marcusbory"},"content":"        listIndex \u003d 0;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"marcusbory"},"content":"        MessageManager.initMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"marcusbory"},"content":"    public void processInput(String userInput) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"marcusbory"},"content":"        String[] destructuredInputs \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"marcusbory"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"marcusbory"},"content":"            switch (destructuredInputs[0]) {","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"marcusbory"},"content":"            case \"list\":","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"marcusbory"},"content":"                listTasks();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"marcusbory"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"marcusbory"},"content":"            case \"done\":","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"marcusbory"},"content":"                completeTask(userInput);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"marcusbory"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"marcusbory"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"marcusbory"},"content":"                addTodo(userInput);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"marcusbory"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"marcusbory"},"content":"            case \"event\":","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"marcusbory"},"content":"                addEvent(userInput);","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"marcusbory"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"marcusbory"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"marcusbory"},"content":"                addDeadline(userInput);","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"marcusbory"},"content":"                break;","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"marcusbory"},"content":"            default:","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"marcusbory"},"content":"                MessageManager.invalidCommandMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"marcusbory"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"marcusbory"},"content":"        } catch (EmptyDescriptionException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"marcusbory"},"content":"            MessageManager.emptyDescriptionMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"marcusbory"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"marcusbory"},"content":"            MessageManager.invalidIndexMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"marcusbory"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"marcusbory"},"content":"            MessageManager.uninitialisedTaskIndexMessage(listIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"marcusbory"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"marcusbory"},"content":"            MessageManager.indexOutOfBoundsMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"marcusbory"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"marcusbory"},"content":"            MessageManager.invalidDateMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"marcusbory"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"marcusbory"},"content":"    private void listTasks() {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"marcusbory"},"content":"        System.out.print(MessageManager.LINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"marcusbory"},"content":"        if (listIndex \u003d\u003d 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"marcusbory"},"content":"            System.out.println(\" Your schedule is clear, Master Wayne.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"marcusbory"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"marcusbory"},"content":"            System.out.println(\" Your tasks, sir:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"marcusbory"},"content":"            for (int i \u003d 0; i \u003c listIndex; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"marcusbory"},"content":"                System.out.println(\" \" + (i + 1) + \".\" + tasks[i].toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"marcusbory"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"marcusbory"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"marcusbory"},"content":"        System.out.println(MessageManager.LINE);","lastModifiedDate":"2021-09-05"},{"lineNumber":68,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"marcusbory"},"content":"    private void completeTask(String userInput) throws NumberFormatException, IndexOutOfBoundsException, NullPointerException {","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"marcusbory"},"content":"        String[] destructuredInputs \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-05"},{"lineNumber":72,"author":{"gitId":"marcusbory"},"content":"        int index \u003d Integer.parseInt(destructuredInputs[1]) - 1;","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"marcusbory"},"content":"        tasks[index].setTaskDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"marcusbory"},"content":"        MessageManager.completeTaskMessage(index + 1, tasks[index].toString());","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"marcusbory"},"content":"    private void addTodo(String userInput) throws EmptyDescriptionException {","lastModifiedDate":"2021-09-05"},{"lineNumber":78,"author":{"gitId":"marcusbory"},"content":"        String[] destructuredInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"marcusbory"},"content":"        if (destructuredInputs.length \u003c 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":80,"author":{"gitId":"marcusbory"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-09-05"},{"lineNumber":81,"author":{"gitId":"marcusbory"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":82,"author":{"gitId":"marcusbory"},"content":"        String todoName \u003d destructuredInputs[1];","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"marcusbory"},"content":"        Todo t \u003d new Todo(todoName);","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"marcusbory"},"content":"        tasks[listIndex] \u003d t;","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"marcusbory"},"content":"        listIndex++;","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"marcusbory"},"content":"        MessageManager.addTaskMessage(t, listIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":87,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":89,"author":{"gitId":"marcusbory"},"content":"    private void addEvent(String userInput) throws EmptyDescriptionException, InvalidDateException {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"marcusbory"},"content":"        String[] destructuredInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"marcusbory"},"content":"        if (destructuredInputs.length \u003c 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"marcusbory"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"marcusbory"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"marcusbory"},"content":"        String[] destructuredArguments \u003d destructuredInputs[1].split(\" /at \", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"marcusbory"},"content":"        if (destructuredArguments.length \u003c 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"marcusbory"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"marcusbory"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"marcusbory"},"content":"        Event e \u003d new Event(destructuredArguments[0], destructuredArguments[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":99,"author":{"gitId":"marcusbory"},"content":"        tasks[listIndex] \u003d e;","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"marcusbory"},"content":"        listIndex++;","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"marcusbory"},"content":"        MessageManager.addTaskMessage(e, listIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"marcusbory"},"content":"    private void addDeadline(String userInput) throws EmptyDescriptionException, InvalidDateException {","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"marcusbory"},"content":"        String[] destructuredInputs \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"marcusbory"},"content":"        if (destructuredInputs.length \u003c 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"marcusbory"},"content":"            throw new EmptyDescriptionException();","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"marcusbory"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"marcusbory"},"content":"        String[] destructuredArguments \u003d destructuredInputs[1].split(\" /by \", 2);","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"marcusbory"},"content":"        if (destructuredArguments.length \u003c 2) {","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"marcusbory"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"marcusbory"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"marcusbory"},"content":"        Deadline d \u003d new Deadline(destructuredArguments[0], destructuredArguments[1]);","lastModifiedDate":"2021-08-31"},{"lineNumber":114,"author":{"gitId":"marcusbory"},"content":"        tasks[listIndex] \u003d d;","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"marcusbory"},"content":"        listIndex++;","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"marcusbory"},"content":"        MessageManager.addTaskMessage(d, listIndex);","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":118,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":119,"author":{"gitId":"marcusbory"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"marcusbory":119}},{"path":"src/main/java/alfred/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"package alfred.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"marcusbory"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"marcusbory"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"marcusbory"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"marcusbory"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"marcusbory"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"marcusbory"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"marcusbory"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"marcusbory":15}},{"path":"src/main/java/alfred/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"package alfred.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"    protected String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"marcusbory"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"marcusbory"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"marcusbory"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"marcusbory"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"marcusbory"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"marcusbory"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"marcusbory"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"marcusbory":15}},{"path":"src/main/java/alfred/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"package alfred.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"marcusbory"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"marcusbory"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"marcusbory"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"marcusbory"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"marcusbory"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"marcusbory"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"marcusbory"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"marcusbory"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"marcusbory"},"content":"        return \"[\" + getStatusIcon() +\"] \" + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"marcusbory"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"marcusbory"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"marcusbory"},"content":"    public void setTaskDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"marcusbory"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"marcusbory"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"marcusbory":28}},{"path":"src/main/java/alfred/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"package alfred.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"marcusbory"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"marcusbory"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"marcusbory"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"marcusbory"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"marcusbory"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"marcusbory"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"marcusbory"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"marcusbory":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"marcusbory"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"marcusbory"},"content":"todo Fix spine and get stronger","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"marcusbory"},"content":"event Meet Catwoman at Parliament House /at next Friday","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"marcusbory"},"content":"deadline Save Gotham City with The Bat /by before it\u0027s too late","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"marcusbory"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"marcusbory"},"content":"done 1","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"marcusbory"},"content":"done 2","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"marcusbory"},"content":"done 3","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"marcusbory"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"marcusbory"},"content":"bye","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"marcusbory":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"marcusbory"},"content":"java -classpath ..\\bin Alfred \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"marcusbory":1,"-":20}}]
