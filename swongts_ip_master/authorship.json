[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"E | 1 | three  | three","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"D | 1 | four  | four","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"D | 0 | one  | one","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"Pepepopo is a desktop app for **managing tasks**, optimized for use via a Command Line Interface (CLI).","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"* [Quick Start](#quick-start)","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"* [Features](#features)","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"  * [Adding a task](#adding-a-task)","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    * [Todo: `todo`](#todo-todo)","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"    * [Deadline: `deadline`](#deadline-deadline)","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    * [Event: `event`](#event-event)","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"  * [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"  * [Set task as done: `done`](#set-task-as-done-done)","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"  * [Deleting a task: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"  * [Finding task by name: `find`](#finding-task-by-name-find)","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"  * [Listing deadlines within given date: `date`](#listing-deadlines-within-given-date-date)","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"  * [Exiting the program: `bye`](#exiting-the-program-bye)","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"  * [Saving the data](#saving-the-data)","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"  * [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"## Quick Start","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"2. Download the latest pepepopo.jar from [here](https://github.com/swongts/ip/releases/tag/A-Release).","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"3. Copy the file to the folder you want to use as the home folder for Pepepopo.","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"4. Go to your command prompt and change to the directory of the home folder","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"5. Run pepepopo by typing `java -jar ip.jar` and press enter","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"6. Refer to the [Features](#features) below for the details of each command.","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"### Adding a task","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"Adds a task to your tasklist.","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"### Types of task:","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"#### Todo: `todo`","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"Adds a todo task.","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"* DESCRIPTION cannot be left blank","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"Example:","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"* `todo read book`","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"#### Deadline: `deadline`","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"Adds a task with a due date.","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"Format: `deadline DESCRIPTION /byDATETIME`","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"* DESCRIPTION cannot be left blank","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"* Format of parameter input DATETIME should be `D-M-YYYY HHmm`","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"Example:","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"* `deadline read book /by 8-8-2020 1230`","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"#### Event: `event`","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"Adds a task that happens on a specific date and time.","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"Format: `event DESCRIPTION /atDATETIME`","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"* DESCRIPTION cannot be left blank","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"* Format of parameter input DATETIME should be `D-M-YYYY HHmm`","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"Example:","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"* `event read book /at 8-8-2020 1230`","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"Lists all tasks within tasklist.","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"Format: `list`","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"### Set task as done: `done`","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"Marks task in tasklist as done.","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"Format: `done TASK_NUM`","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"* Marks task at specified TASK_NUM as done","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"* TASK_NUM is same numbering as seen from `list` command","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"* TASK_NUM must be an integer within the number of tasks in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"Example: ","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"* `done 1` marks first task in the list as done","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"Deletes specified task from the task list.","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"Format: `delete TASK_NUM`","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"* Deletes task at specified TASK_NUM","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"* TASK_NUM must be an integer within the number of tasks in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"Example:","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"* `delete 1` deletes first task in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"### Finding task by name: `find`","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"Finds task with description matching any of the given keywords.","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"Example: ","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"* `find book` will return all tasks with book in the description","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"### Listing deadlines within given date: `date`","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"Lists all deadlines that are before or on the given date and time","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"Format: `date DATETIME`","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"* Format of parameter input DATETIME should be `D-M-YYYY HHmm`","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"Example:","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"* `date 8-8-2020` returns all deadlines that ends before 8th August 2020 at 12.30","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"Exits the program.","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"### Saving the data","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"Pepepopo data will automatically be saved in a file with filepath `/data/tasks.txt`.","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"### Editing the data file","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"Advanced users are welcome to update data directly by editing the data file.","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"* However, if the changes to the data file do not follow the formatting of how the tasks are saved, pepepopo will not be able to run.","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"Users may have to delete the file and start again.","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"## Command Summary","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"Command | Format","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"------------ | -------------","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"todo | `todo DESCRIPTION`","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"deadline | `deadline DESCRIPTION /byDATETIME`","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"event | `event DESCRIPTION /atDATETIME`","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"list | `list`","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"swongts"},"content":"done | `done TASK_NUM`","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"swongts"},"content":"delete | `delete TASK_NUM`","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"swongts"},"content":"find | `find KEYWORD`","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"swongts"},"content":"date | `date DATETIME`","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"swongts"},"content":"bye| `bye`","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"-":22,"swongts":107}},{"path":"src/main/java/Duke/Constants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class Constants {","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_DATE \u003d \"date\";","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"    public static final String COMMAND_INCORRECT \u003d \"incorrect\";","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    public static final String FILE \u003d \"file\";","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    public static final String DATEANDTIME \u003d \"dateandtime\";","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":16}},{"path":"src/main/java/Duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"    private LocalDateTime by;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    private String unformattedBy;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    private String formattedBy;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     * Class constructor for Deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     * @param unformattedBy Date and time deadline should be done by","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"     * @throws DateTimeParseException If date and time given by user do not follow the format","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    public Deadline (String description, String unformattedBy) throws DateTimeParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"        this.unformattedBy \u003d unformattedBy;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"        this.by \u003d convertBy();","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"        this.formattedBy \u003d formatBy();","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     * Get String by that user input, used to save to file","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"     * @return Date and time that user input, unformatted","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    public String getUnformattedBy() {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        return unformattedBy;","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"     * Get by that has been formatted to be of type LocalDateTime","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"     * @return Date and time that has been formatted","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"        return by;","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"     * Converts String by to be LocalDateTime object","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"     * @return by as a LocalDateTime object","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"    private LocalDateTime convertBy() throws DateTimeParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"        return LocalDateTime.parse(unformattedBy, formatter);","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"     * Converts LocalDateTime object to be formatted String by","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"     * @return formatted String by","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"    public String formatBy() {","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HHmm\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"     * Used to print deadline including its task type and the due date","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"     * @return String to print when trying to print object Deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedBy + \")\";","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"swongts":73}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.commands.Command;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import static Duke.Constants.COMMAND_INCORRECT;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import static Duke.Constants.FILE;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"public class Duke {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"     * Class constructor for duke, initialises ui, tasks and storage","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     * @param filePath Path to where the file that saves tasks is located","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"        } catch (DukeException | DateTimeParseException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"            ui.showError(FILE);","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"     * Loop that runs program, terminates when isExit is set to true","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"     * Program reads user input and executes command","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    public void run() {","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"            try {","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"                ui.showToUser(\"\");","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"                ui.showError(COMMAND_INCORRECT);","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"     * Provides file path to run the program","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"     * @param args Not applicable","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"swongts":57}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"swongts":4}},{"path":"src/main/java/Duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    private LocalDateTime at;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    private String unformattedAt;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    private String formattedAt;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     * Class constructor for Event","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"     * @param unformattedAt Date and time event should be on","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"     * @throws DateTimeParseException If date and time given by user do not follow the format","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    public Event (String description, String unformattedAt) throws DateTimeParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"        this.unformattedAt \u003d unformattedAt;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"        this.at \u003d convertAt();","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"        this.formattedAt \u003d formatAt();","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"     * Get String at that user input, used to save to file","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"     * @return Date and time that user input, unformatted","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"    public String getUnformattedAt() {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"        return unformattedAt;","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"     * Converts String at to be LocalDateTime object","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"     * @return at as a LocalDateTime object","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"    private LocalDateTime convertAt() throws DateTimeParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"        return LocalDateTime.parse(unformattedAt, formatter);","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"     * Converts LocalDateTime object to be formatted String at","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"     * @return formatted String at","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"    public String formatAt() {","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"        return at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy, HHmm\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"     * Used to print event including its task type and when it occurs","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"     * @return String to print when trying to print object Event","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + formattedAt + \")\";","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"swongts":65}},{"path":"src/main/java/Duke/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class Messages {","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"    public static final String GREETING \u003d \"Hello! I\u0027m Pepepopo\\n\" +","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"            \"What can I do for you?\";","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    public static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"    public static final String BYE \u003d \"PLEASE DONT LEAVE :( \\n\" +","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"            \"a....noo.....ahhhhh..\\n\" +","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"            \"..AAAAAAGHHHH.......pepepopo loved u :(\";","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    public static final String TASK_ADD \u003d \"New task! Pepepopo has added it to the list: \";","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    public static final String TASK_DONE \u003d \"Yay! Pepepopo has marked your task as done:\";","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    public static final String TASK_DELETE \u003d \"Alright! Pepepopo has removed the task:\";","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"    public static final String NEW_FILE \u003d \"Pepepopo has created new data file!\";","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    public static final String TODO_EMPTY \u003d \"Todo cannot be empty!\";","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    public static final String DEADLINE_EMPTY \u003d \"Deadline cannot be empty!\";","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    public static final String EVENT_EMPTY \u003d \"Event cannot be empty!\";","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    public static final String FIND_EMPTY \u003d \"Find cannot be empty!\";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    public static final String INPUT_INVALID \u003d \"Invalid input, try another command\";","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    public static final String NUMBER_INVALID \u003d \"Please enter a valid number after the command\";","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    public static final String DATE_INVALID \u003d \"Please enter a valid date and time\";","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    public static final String FILE_CORRUPT \u003d \"Pepepopo can\u0027t read your corrupted file :(\\n\" +","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"            \"Please delete your file and try again.\";","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":24}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.commands.*;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"import static Duke.Constants.*;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"import static Duke.Constants.COMMAND_BYE;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"public class Parser {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"    private static final String DEADLINE_BY_PREFIX \u003d \"/by \";","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    private static final String EVENT_AT_PREFIX \u003d \"/at \";","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"     * Parses user input and creates the corresponding Command object","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"     * @param input User input","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"     * @return Command object that corresponds to input","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     * @throws DukeException If command user input is invalid","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"        String[] commandAndParams \u003d splitCommandString(input, \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"        String command \u003d commandAndParams[0];","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"        String params \u003d commandAndParams[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"        switch (command) {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"                return parseTodo(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"                return new IncorrectCommand(COMMAND_TODO);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"                return parseDeadline(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"                return new IncorrectCommand(COMMAND_DEADLINE);","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"                return new IncorrectCommand(DATEANDTIME);","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"                return parseEvent(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"                return new IncorrectCommand(COMMAND_EVENT);","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"                return new IncorrectCommand(DATEANDTIME);","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"        case COMMAND_DONE:","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"                return parseDone(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"            } catch(DukeException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"                return new IncorrectCommand(COMMAND_DONE);","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"                return parseDelete(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"            } catch (DukeException e){","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"                return new IncorrectCommand(COMMAND_DELETE);","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"                return parseFind(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"                return new IncorrectCommand(COMMAND_FIND);","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"        case COMMAND_DATE:","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"            return parseDate(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"        case COMMAND_BYE:","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"            return new ByeCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"        default:","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"    private static Command parseTodo(String params) throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"        if (params.equals(\"\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"        Todo t \u003d new Todo(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"        return new AddCommand(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"    private static Command parseDeadline(String params) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"        if (params.equals(\"\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"        String[] descAndBy \u003d splitCommandString(params, DEADLINE_BY_PREFIX);","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"        String description \u003d descAndBy[0];","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"        String by \u003d descAndBy[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"        Deadline d \u003d new Deadline(description, by);","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"        return new AddCommand(d);","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"    private static Command parseEvent(String params) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"        if (params.equals(\"\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"        String[] descAndAt \u003d splitCommandString(params, EVENT_AT_PREFIX);","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        String description \u003d descAndAt[0];","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"        String at \u003d descAndAt[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"        Event e \u003d new Event(description, at);","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"        return new AddCommand(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"    private static Command parseDone(String params) throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"            int taskNumber \u003d findTaskNumber(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"            return new DoneCommand(taskNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"    private static Command parseDelete(String params) throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"        int taskNumber \u003d findTaskNumber(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"        return new DeleteCommand(taskNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"    private static Command parseFind(String params) throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"        if (params.equals(\"\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"        return new FindCommand(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"swongts"},"content":"    private static Command parseDate(String params) throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"swongts"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"swongts"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(params, formatter);","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"swongts"},"content":"        return new DateCommand(dateTime);","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"swongts"},"content":"    private static int findTaskNumber(String params) throws DukeException {","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"swongts"},"content":"            int taskNumber \u003d Integer.parseInt(params);","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"swongts"},"content":"            if (taskNumber \u003e Task.getTaskCount()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"swongts"},"content":"                throw new DukeException();","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"swongts"},"content":"            return (taskNumber - 1);","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"swongts"},"content":"        } catch (NumberFormatException e){","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"swongts"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"swongts"},"content":"    private static String[] splitCommandString(String input, String separator) {","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"swongts"},"content":"        String[] split \u003d input.trim().split(separator, 2);","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"swongts"},"content":"        return split.length \u003d\u003d 2 ? split : new String[] {split[0], \"\"};","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":148}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import java.io.File;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"import static Duke.Messages.DIVIDER;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"import static Duke.Messages.NEW_FILE;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"public class Storage {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    private static final String TODO_TYPE \u003d \"T\";","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    private static final String DEADLINE_TYPE \u003d \"D\";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    private static final String EVENT_TYPE \u003d \"E\";","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    private String filePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * Class constructor for Storage","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     * @param filePath path to file which saves tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"     * Loads tasks saved in the file and returns the TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"     * Creates a new directory and file if it is not already created and TaskList will be empty","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"     * @return TaskList object containing tasks from the file","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"     * @throws DukeException If file is corrupted and not saved according to the format","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"     * @throws DateTimeParseException If date and time saved in the file does not follow the format","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"    public TaskList load() throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"            return readFile(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"                Path pathFilePath \u003d Paths.get(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"                Files.createDirectories(pathFilePath.getParent());","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"                System.out.print(NEW_FILE + \"\\n\" + DIVIDER + \"\\n\");","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"            } catch (IOException e1) {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"                e1.printStackTrace();","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"        return new TaskList();","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"    private TaskList readFile(String filePath) throws FileNotFoundException, DukeException, DateTimeParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"        TaskList fileTasks \u003d new TaskList();","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"            String rawLineData \u003d s.nextLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"            String [] lineData \u003d splitDataString(rawLineData);","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"            manageTaskFromFile(lineData, fileTasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"        return fileTasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"    private void manageTaskFromFile(String[] lineData, TaskList fileTasks) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"        String taskType \u003d lineData[0];","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"        boolean isDone \u003d lineData[1].equals(\"1\");","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"        String description \u003d lineData[2];","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"        String extraDescription \u003d lineData[3];","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"        Task taskToAdd;","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"        case(TODO_TYPE):","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"            taskToAdd \u003d new Todo(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"        case(DEADLINE_TYPE):","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"            taskToAdd \u003d new Deadline(description, extraDescription);","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"        case(EVENT_TYPE):","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"            taskToAdd \u003d new Event(description, extraDescription);","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"        default:","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"        taskToAdd.setDone(isDone);","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"        fileTasks.addTask(taskToAdd);","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"     * Saves tasks to file in a formatted manner","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"     * @param tasks TaskList containing Task to be saved to the file","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"    public void writeToFile(TaskList tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"            for (int i \u003d 0; i \u003c tasks.tasksLength(); i +\u003d 1) {","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"                String textToWrite \u003d tasks.formatTaskForFile(i);","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"                fw.write(textToWrite);","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"            fw.close();","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"    private static String[] splitDataString(String input) throws DukeException {","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"        String[] split \u003d input.trim().split(\" \\\\| \", 4);","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"        if (split.length \u003c 3) {","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"        return split.length \u003d\u003d 4 ? split: new String[] {split[0], split[1], split[2], \"\"};","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":115}},{"path":"src/main/java/Duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"    protected String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"     * Class constructor for Task","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"     * Returns description of task","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     * @return Description of task","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"        return description;","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"     * Returns status icon according to whether the task is done.","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"     * [X] for done","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"     * [ ] for not done","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"     * @return Status icon","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"        return (isDone? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     * Returns task count","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"     * @return Number of tasks that has been added","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    public static int getTaskCount()  {","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"        return taskCount;","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"     * Sets isDone to boolean b given","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"     * @param b Boolean to set isDone to","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"    public void setDone(boolean b) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"        isDone \u003d b;","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"     * Sets the task count","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"     * @param amt Amt to add to the current task count","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"    public static void setTaskCount(int amt) {","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"        Task.taskCount +\u003d amt;","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"     * Used to print task","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"     * @return String to print when trying to print object Task","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"        return getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"swongts":75}},{"path":"src/main/java/Duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"public class TaskList {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     * Class constructor for TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"     * Returns number of tasks in TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     * @return Number of tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"    public int tasksLength() {","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"     * Adds Task to TaskList from file","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"     * @param t Task to be added","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"        tasks.add(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"        Task.setTaskCount(1);","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"     * Adds Task to TaskList from user input","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"     * @param t Task to be added","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"    public void addTask(Task t, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"        tasks.add(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"        Task.setTaskCount(1);","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"        ui.showAdd(t);","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"     * Deletes Task from TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"     * @param taskNumber Numbering of task presented in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"    public void deleteTask(int taskNumber, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"        Task.setTaskCount(-1);","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"        ui.showDelete(task);","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"        tasks.remove(taskNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"     * Marks Task as done","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"     * @param taskNumber Numbering of task presented in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"    public void doneTask(int taskNumber, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"        Task task \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"        task.setDone(true);","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"        ui.showDone(task);","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"     * Shows user the list of all tasks with numbering","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"    public void showTaskList(Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"        showList(tasks, ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"     * Shows user the list of all tasks that contains the keyword","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"     * @param search Keyword to search for","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"    public void showFilteredTaskList(String search, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"        ArrayList\u003cTask\u003e filteredtasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"                .filter(t -\u003e t.getDescription().contains(search))","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"        showList(filteredtasks, ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"     * Iterates through an ArrayList to print out all tasks within","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"     * @param tasks Arraylist of tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"    private void showList(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        for (Task item : tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"            int curr \u003d tasks.indexOf(item) + 1;","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"            System.out.println(curr + \".\" + item);","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"        ui.showToUser(\"\");","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"     * Shows user the list of all deadlines that occur before or on Date dateTime","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"     * @param dateTime Date that deadlines should be within","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"     * @param ui","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"    public void showListForDate(LocalDateTime dateTime, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"        int curr \u003d 1;","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"        for (Task t: tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"                curr \u003d showDeadlineForDate((Deadline)t, dateTime, curr, ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"swongts"},"content":"    private int showDeadlineForDate(Deadline d, LocalDateTime dateTime, int curr, Ui ui) {","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"swongts"},"content":"        if (isWithinDate(d, dateTime)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"swongts"},"content":"            ui.showTask(curr, d);","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"swongts"},"content":"            return curr + 1;","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"swongts"},"content":"        return curr;","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"swongts"},"content":"    private boolean isWithinDate(Deadline d, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"swongts"},"content":"        LocalDateTime deadlineDateTime \u003d d.getBy();","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"swongts"},"content":"        if (deadlineDateTime.isBefore(dateTime) | deadlineDateTime.isEqual(dateTime)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"swongts"},"content":"            if (!d.isDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"swongts"},"content":"                return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"swongts"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"swongts"},"content":"        return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"swongts"},"content":"     * Format Task to be saved into the file","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"swongts"},"content":"     * @param taskNumber Index of task in tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"swongts"},"content":"     * @return Text to be written into file","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"swongts"},"content":"    public String formatTaskForFile(int taskNumber) {","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"swongts"},"content":"        Task t \u003d tasks.get(taskNumber);","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"swongts"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"swongts"},"content":"        String taskType \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"swongts"},"content":"        String status \u003d getStringStatus(t.isDone);","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"swongts"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"swongts"},"content":"            description \u003d t.getDescription();","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"swongts"},"content":"            taskType \u003d \"T\";","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"swongts"},"content":"        else if (t instanceof Deadline) {","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"swongts"},"content":"            description \u003d String.format(\"%s | %s\", t.getDescription(), ((Deadline) t).getUnformattedBy());","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"swongts"},"content":"            taskType \u003d \"D\";","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"swongts"},"content":"        else if (t instanceof Event) {","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"swongts"},"content":"            description \u003d String.format(\"%s | %s\", t.getDescription(), ((Event) t).getUnformattedAt());","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"swongts"},"content":"            taskType \u003d \"E\";","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"swongts"},"content":"        String textToWrite \u003d String.format(\"%s | %s | %s\\n\", taskType, status, description);","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"swongts"},"content":"        return textToWrite;","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"swongts"},"content":"    private static String getStringStatus(boolean b) {","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"swongts"},"content":"        String status;","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"swongts"},"content":"        if (b) {","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"swongts"},"content":"            status \u003d \"1\";","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"swongts"},"content":"        } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"swongts"},"content":"            status \u003d \"0\";","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"swongts"},"content":"        return status;","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":179,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":179}},{"path":"src/main/java/Duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"     * Class constructor for Todo","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"     * @param description Description of Todo","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     * Used to print todo including its task type and when it occurs","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"     * @return String to print when trying to print object Todo","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"swongts":23}},{"path":"src/main/java/Duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import static Duke.Messages.*;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import static Duke.Constants.*;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"public class Ui {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"     * Reads user input","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     * @return User input","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"        String line;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"        return line;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     * Shows user welcome message","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"        showToUser(GREETING);","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"     * Shows user bye message","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    public void showBye() {","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"        showToUser(BYE);","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":37,"author":{"gitId":"swongts"},"content":"     * Shows user that task has been added","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"swongts"},"content":"     * @param task Task that has been added","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"swongts"},"content":"    public void showAdd(Task task) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"swongts"},"content":"        showToUser(TASK_ADD +","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"swongts"},"content":"                \"\\n  \" + task +","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"swongts"},"content":"                \"\\nYou now have \" + Task.getTaskCount() + \" task(s) in your list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"swongts"},"content":"     * Shows user that task has been marked as done","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"swongts"},"content":"     * @param task Task that has been marked as done","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"swongts"},"content":"    public void showDone(Task task) {","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"swongts"},"content":"        showToUser(TASK_DONE +","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"swongts"},"content":"                \"\\n  \" + task);","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"swongts"},"content":"     * Shows user that task has been deleted","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"swongts"},"content":"     * @param task Task that has been deleted","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"swongts"},"content":"    public void showDelete(Task task) {","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"swongts"},"content":"        showToUser(TASK_DELETE +","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"swongts"},"content":"                \"\\n  \" + task +","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"swongts"},"content":"                \"\\nYou now have \" + Task.getTaskCount() + \" task(s) in your list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"swongts"},"content":"     * Shows user the task with numbering","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"swongts"},"content":"     * @param curr Numbering of the task","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"swongts"},"content":"     * @param task Task to be shown","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"swongts"},"content":"    public void showTask(int curr, Task task) {","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"swongts"},"content":"        System.out.print(curr + \".\" + task + \"\\n\");","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"swongts"},"content":"     * Shows user the error message according to the error type","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"swongts"},"content":"     * @param errorType Type of error","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"swongts"},"content":"    public void showError(String errorType) {","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"swongts"},"content":"        switch (errorType) {","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"swongts"},"content":"        case COMMAND_TODO:","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"swongts"},"content":"            showToUser(TODO_EMPTY);","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"swongts"},"content":"        case COMMAND_DEADLINE:","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"swongts"},"content":"            showToUser(DEADLINE_EMPTY);","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"swongts"},"content":"        case COMMAND_EVENT:","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"swongts"},"content":"            showToUser(EVENT_EMPTY);","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"swongts"},"content":"        case COMMAND_DONE:","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"swongts"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"swongts"},"content":"            showToUser(NUMBER_INVALID);","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"swongts"},"content":"        case COMMAND_FIND:","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"swongts"},"content":"            showToUser(FIND_EMPTY);","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"swongts"},"content":"        case COMMAND_INCORRECT:","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"swongts"},"content":"            showToUser(INPUT_INVALID);","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"swongts"},"content":"        case FILE:","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"swongts"},"content":"            showToUser(FILE_CORRUPT);","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"swongts"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"swongts"},"content":"        case DATEANDTIME:","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"swongts"},"content":"            showToUser(DATE_INVALID);","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"swongts"},"content":"     * Shows user the message","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"swongts"},"content":"     * @param text Message to be shown","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"swongts"},"content":"    public void showToUser(String text) {","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"swongts"},"content":"        if (!text.equals(\"\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"swongts"},"content":"            System.out.println(text);","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"swongts"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"swongts"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":123}},{"path":"src/main/java/Duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import Duke.Task;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import Duke.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import Duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    private Task task;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     * Class constructor of AddCommand","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     * @param task Task to be added to tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     * Adds task to tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     * Saves tasks to file","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * @param tasks Tasklist for Task to be added to","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     * @param storage File management interface","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"        tasks.addTask(task, ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":33}},{"path":"src/main/java/Duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import Duke.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import Duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"     * Shows user bye message","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     * @param tasks TaskList containing Task","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     * @param storage File management interface","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"        ui.showBye();","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     * Sets exit boolean to true, so that while loop terminates and program ends","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * @return Boolean for while loop to exit","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":30}},{"path":"src/main/java/Duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import Duke.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import Duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"     * Abstract class for other commands to execute their operation","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"     * @param tasks TaskList containing Task","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     * @param storage File management system","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    public abstract void execute (TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"     * Default isExit boolean is set to false, so that while loop will continue","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"     * @return Default isExit boolean","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"        return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":25}},{"path":"src/main/java/Duke/commands/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import Duke.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import Duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     * Class constructor for DateCommand","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     * @param dateTime Date and time to find the deadlines before","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    public DateCommand(LocalDateTime dateTime) {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     * Shows list of deadlines that occur before dateTime","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * @param tasks TaskList containing Task","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     * @param storage File management system","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"        tasks.showListForDate(dateTime, ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":32}},{"path":"src/main/java/Duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import Duke.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import Duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"     * Class constructor for DeleteCommand","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     * @param taskNumber index of Task in taskList","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"     * Deletes task from tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     * Saves current tasks to file","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     * @param tasks TaskList containing Task","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     * @param storage File management system","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"        tasks.deleteTask(taskNumber, ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":32}},{"path":"src/main/java/Duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import Duke.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import Duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    private int taskNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"     * Class constructor for DoneCommand","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     * @param taskNumber index of Task in tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"     * Marks task as done","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     * Saves tasks to file","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     * @param tasks TaskList containing Task","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     * @param storage File management system","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"        tasks.doneTask(taskNumber, ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"        storage.writeToFile(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":32}},{"path":"src/main/java/Duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.DukeException;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import Duke.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import Duke.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"import Duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    private String search;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     * Class constructor for FindCommand","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     * @param search Keyword to search for","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    public FindCommand (String search) {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"        this.search \u003d search;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     * Find tasks that contain search in their description","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     * @param tasks TaskList containing Task","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     * @param storage File management system","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"        tasks.showFilteredTaskList(search, ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":31}},{"path":"src/main/java/Duke/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import Duke.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import Duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"    private String errorType;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"     * Class constructor for IncorrectCommand","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     * @param errorType Type of error","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"    public IncorrectCommand(String errorType) {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"        this.errorType \u003d errorType;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"     * Shows user the error message according to the corresponding error type","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"swongts"},"content":"     * @param tasks TaskList containing Task","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"swongts"},"content":"     * @param storage File management system","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"swongts"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"swongts"},"content":"        ui.showError(errorType);","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":30}},{"path":"src/main/java/Duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"package Duke.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"swongts"},"content":"import Duke.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"swongts"},"content":"import Duke.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"swongts"},"content":"import Duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"swongts"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"swongts"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"swongts"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"swongts"},"content":"     * Shows user a list of all task in tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"swongts"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"swongts"},"content":"     * @param tasks TaskList containing Task","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"swongts"},"content":"     * @param ui User interface","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"swongts"},"content":"     * @param storage File management system","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"swongts"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"swongts"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"swongts"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"swongts"},"content":"        tasks.showTaskList(ui);","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"swongts"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"swongts"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"swongts":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"swongts"},"content":"todo hello","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"swongts":1}}]
