[{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"T | 1 | read book","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"D | 1 | return book | june 6th","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"T | 0 | borrow book","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"exetr":4}},{"path":"src/main/java/Esteban.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"import command.*;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"import task.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"import task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"exetr"},"content":"import task.ToDo;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"exetr"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"exetr"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"exetr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"exetr"},"content":"public class Esteban {","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"exetr"},"content":"        Headers.printBanner();","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"exetr"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"exetr"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"exetr"},"content":"            tasks \u003d Data.read();","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"exetr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"exetr"},"content":"            System.out.println(\"  (!) FATAL: Could not process data file, starting with empty data\");","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"exetr"},"content":"        boolean isContinue \u003d true;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"exetr"},"content":"        String line;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"exetr"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"exetr"},"content":"        while (isContinue) {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"exetr"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"exetr"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"exetr"},"content":"            Command cmd \u003d getCommand(line);","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"exetr"},"content":"            switch(cmd) {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"exetr"},"content":"            case BYE:","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"exetr"},"content":"                Headers.printExit();","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"exetr"},"content":"                isContinue \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"exetr"},"content":"                break;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"exetr"},"content":"            case LIST:","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"exetr"},"content":"                Headers.printSeparator();","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"exetr"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"exetr"},"content":"                    System.out.println((i+1) + \". \" + tasks.get(i).toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"exetr"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"exetr"},"content":"                Headers.printSeparator();","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"exetr"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"exetr"},"content":"            case TODO:","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"exetr"},"content":"                try {","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"exetr"},"content":"                    ToDo newToDo \u003d new ToDo(line.substring(6), false);","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"exetr"},"content":"                    tasks.add(newToDo);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (+) Added: \"+ newToDo);","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (i) You have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"exetr"},"content":"                    Data.write(tasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"exetr"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Todo description cannot be empty!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Format: /todo \u003cdescription\u003e\");","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"exetr"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"exetr"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"exetr"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"exetr"},"content":"                try {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"exetr"},"content":"                    String description \u003d line.substring(10, line.indexOf(\"-by\")).strip();","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"exetr"},"content":"                    String time \u003d line.substring(line.indexOf(\"-by\") + 4).strip();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"exetr"},"content":"                    Deadline newDeadline \u003d new Deadline(description, time, false);","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"exetr"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (+) Added: \"+ newDeadline);","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) You have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"exetr"},"content":"                    Data.write(tasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"exetr"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Invalid/missing values\");","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Format: /deadline \u003cdescription\u003e -by \u003cdate\u003e\");","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"exetr"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"exetr"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"exetr"},"content":"            case EVENT:","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"exetr"},"content":"                try {","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"exetr"},"content":"                    String des \u003d line.substring(7, line.indexOf(\"-from\")).strip();","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"exetr"},"content":"                    String from \u003d line.substring(line.indexOf(\"-from\") + 6, line.indexOf(\"-to\")).strip();","lastModifiedDate":"2021-09-01"},{"lineNumber":73,"author":{"gitId":"exetr"},"content":"                    String to \u003d line.substring(line.indexOf(\"-to\") + 4).strip();","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"exetr"},"content":"                    Event newEvent \u003d new Event(des, from , to, false);","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"exetr"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2021-09-01"},{"lineNumber":76,"author":{"gitId":"exetr"},"content":"                    System.out.println(\" (+) Added: \"+ newEvent);","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"exetr"},"content":"                    System.out.println(\" (!) You have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-09-01"},{"lineNumber":78,"author":{"gitId":"exetr"},"content":"                    Data.write(tasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"exetr"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Invalid/missing values\");","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Format: /event \u003cdescription\u003e -from \u003cdate\u003e -to \u003cdate\u003e\");","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"exetr"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"exetr"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"exetr"},"content":"            case DONE:","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"exetr"},"content":"                try {","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"exetr"},"content":"                    String[] values \u003d line.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"exetr"},"content":"                    int value \u003d Integer.parseInt(values[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":88,"author":{"gitId":"exetr"},"content":"                    tasks.get(value - 1).setStatus(true);","lastModifiedDate":"2021-08-25"},{"lineNumber":89,"author":{"gitId":"exetr"},"content":"                    System.out.println(\" (+) Marked as Done: \"+ tasks.get(value - 1).toString());","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"exetr"},"content":"                    Data.write(tasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"exetr"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Task ID cannot be empty!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Format: /done \u003cid\u003e\");","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"exetr"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Task ID does not exist \u003e:(\");","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"exetr"},"content":"                }","lastModifiedDate":"2021-08-25"},{"lineNumber":97,"author":{"gitId":"exetr"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"exetr"},"content":"            case DELETE:","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"exetr"},"content":"                try {","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"exetr"},"content":"                    String[] values \u003d line.split(\" \");","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"exetr"},"content":"                    int value \u003d Integer.parseInt(values[1]);","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"exetr"},"content":"                    Task currentTask \u003d tasks.get(value - 1);","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"exetr"},"content":"                    tasks.remove(currentTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (-) Removed: \"+ currentTask.toString());","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) You have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"exetr"},"content":"                    Data.write(tasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"exetr"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Task ID cannot be empty!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Format: /delete \u003cid\u003e\");","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"exetr"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"exetr"},"content":"                    System.out.println(\"  (!) Task ID does not exist \u003e:(\");","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"exetr"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"exetr"},"content":"                break;","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"exetr"},"content":"            default:","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"exetr"},"content":"                System.out.println(\"  (!) Unrecognised Command! \");","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"exetr"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":118,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":120,"author":{"gitId":"exetr"},"content":"    public static Command getCommand(String input){","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"exetr"},"content":"        Command cmd \u003d Command.UNKNOWN;","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"exetr"},"content":"        if (input.equals(\"/bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"exetr"},"content":"            cmd \u003d Command.BYE;","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"exetr"},"content":"        } else if (input.equals(\"/list\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"exetr"},"content":"            cmd \u003d Command.LIST;","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"exetr"},"content":"        } else if (input.startsWith(\"/todo\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"exetr"},"content":"            cmd \u003d Command.TODO;","lastModifiedDate":"2021-09-01"},{"lineNumber":128,"author":{"gitId":"exetr"},"content":"        } else if (input.startsWith(\"/deadline\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"exetr"},"content":"            cmd \u003d Command.DEADLINE;","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"exetr"},"content":"        } else if (input.startsWith(\"/event\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"exetr"},"content":"            cmd \u003d Command.EVENT;","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"exetr"},"content":"        } else if (input.startsWith(\"/done\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"exetr"},"content":"            cmd \u003d Command.DONE;","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"exetr"},"content":"        } else if (input.startsWith(\"/delete\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"exetr"},"content":"            cmd \u003d Command.DELETE;","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":137,"author":{"gitId":"exetr"},"content":"        return cmd;","lastModifiedDate":"2021-09-01"},{"lineNumber":138,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"exetr":137,"-":2}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"package command;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"public enum Command {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"    BYE, LIST, TODO, DEADLINE, EVENT, DONE, UNKNOWN, DELETE","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"exetr"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"exetr":5}},{"path":"src/main/java/command/Data.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"package command;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"exetr"},"content":"import task.Event;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"exetr"},"content":"import task.Task;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"exetr"},"content":"import task.ToDo;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"exetr"},"content":"import java.io.File;","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"exetr"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"exetr"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"exetr"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"exetr"},"content":"public class Data {","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"exetr"},"content":"    public static void write(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"exetr"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"exetr"},"content":"            FileWriter fw \u003d new FileWriter(\"data/data.txt\");","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"exetr"},"content":"            for (Task currentTask : tasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"exetr"},"content":"                fw.write(getTaskData(currentTask) + System.lineSeparator());","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"exetr"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"exetr"},"content":"            fw.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"exetr"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"exetr"},"content":"            System.out.println(\"  (!) FATAL: IO Error\");","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"exetr"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"exetr"},"content":"    public static ArrayList\u003cTask\u003e read() throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"exetr"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"exetr"},"content":"        /*","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"exetr"},"content":"        Check for whether ./data directory exists","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"exetr"},"content":"        if not, create ./data directory","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"exetr"},"content":"        */","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"exetr"},"content":"        File dir \u003d new File(\"data\");","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"exetr"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"exetr"},"content":"            dir.mkdir();","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"exetr"},"content":"        /*","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"exetr"},"content":"        Check for whether ./data/data.txt exists","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"exetr"},"content":"        if so, process list of tasks contained within","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"exetr"},"content":"        if not, create new, empty data.txt file","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"exetr"},"content":"        */","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"exetr"},"content":"        File data \u003d new File(\"data/data.txt\");","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"exetr"},"content":"        if (data.exists()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"exetr"},"content":"            System.out.println(\"  (+) Data file found: \" + data.getAbsolutePath());","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"exetr"},"content":"            /*","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"exetr"},"content":"            Read data.txt line by line and populate tasks list accordingly","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"exetr"},"content":"             */","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"exetr"},"content":"            Scanner s \u003d new Scanner(data);","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"exetr"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"exetr"},"content":"                String[] line \u003d s.nextLine().split(\" \\\\| \");","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"exetr"},"content":"                Boolean status \u003d false;","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"exetr"},"content":"                if (line[1].equals(\"1\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"exetr"},"content":"                    status \u003d true;","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"exetr"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"exetr"},"content":"                switch(line[0]) {","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"exetr"},"content":"                case \"T\":","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"exetr"},"content":"                    ToDo newToDo \u003d new ToDo(line[2], status);","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"exetr"},"content":"                    tasks.add(newToDo);","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"exetr"},"content":"                    break;","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"exetr"},"content":"                case \"D\":","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"exetr"},"content":"                    Deadline newDeadline \u003d new Deadline(line[2], line[3], status);","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"exetr"},"content":"                    tasks.add(newDeadline);","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"exetr"},"content":"                    break;","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"exetr"},"content":"                case \"E\":","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"exetr"},"content":"                    Event newEvent \u003d new Event(line[2], line[3], line[4], status);","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"exetr"},"content":"                    tasks.add(newEvent);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"exetr"},"content":"                    break;","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"exetr"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"exetr"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"exetr"},"content":"            System.out.println(\"  (+) Loaded \" + tasks.size() + \" entries\");","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"exetr"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"exetr"},"content":"            System.out.println(\"  (!) Data file not found\");","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"exetr"},"content":"            System.out.println(\"  (+) Empty data file created: \" + data.getAbsolutePath());","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"exetr"},"content":"        return tasks;","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"exetr"},"content":"    private static String getTaskData(Task current) {","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"exetr"},"content":"        String output \u003d \"\";","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"exetr"},"content":"        if (current instanceof ToDo) {","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"exetr"},"content":"            output +\u003d \"T | \" + convertStatus(current.getStatus()) + \" | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"exetr"},"content":"            output +\u003d current.getDescription();","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"exetr"},"content":"        } else if (current instanceof Deadline) {","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"exetr"},"content":"            output +\u003d \"D | \" + convertStatus(current.getStatus()) + \" | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"exetr"},"content":"            output +\u003d current.getDescription() + \" | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"exetr"},"content":"            output +\u003d ((Deadline) current).getTime();","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"exetr"},"content":"        } else if (current instanceof Event) {","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"exetr"},"content":"            output +\u003d \"E | \" + convertStatus(current.getStatus()) + \" | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"exetr"},"content":"            output +\u003d current.getDescription() + \" | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"exetr"},"content":"            output +\u003d ((Event) current).getStart() + \" | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"exetr"},"content":"            output +\u003d ((Event) current).getEnd() + \" | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"exetr"},"content":"        return output;","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"exetr"},"content":"    private static int convertStatus(String status) {","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"exetr"},"content":"        if (status.equals(\"X\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"exetr"},"content":"            return 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"exetr"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"exetr"},"content":"            return 0;","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"exetr"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"exetr":105}},{"path":"src/main/java/command/Headers.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"package command;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"public class Headers {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"    public static void printBanner() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"exetr"},"content":"        final String logo \u003d \" _____    _       _                 \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"exetr"},"content":"                + \"|  ___|  | |     | |                \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"exetr"},"content":"                + \"| |__ ___| |_ ___| |__   __ _ _ __  \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"exetr"},"content":"                + \"|  __/ __| __/ _ \\\\ \u0027_ \\\\ / _` | \u0027_ \\\\ \\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"exetr"},"content":"                + \"| |__\\\\__ \\\\ ||  __/ |_) | (_| | | | |\\n\"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"exetr"},"content":"                + \"\\\\____/___/\\\\__\\\\___|_.__/ \\\\__,_|_| |_|\";","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"exetr"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"exetr"},"content":"        System.out.println(\"Hola! Soy Esteban, what can I do for you?\");","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"exetr"},"content":"    public static void printExit() {","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"exetr"},"content":"        System.out.println(\"Gracias! Hope to see you again soon!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"exetr"},"content":"    public static void printSeparator() {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"exetr"},"content":"        System.out.println(\"------------------------------------------------------------\");","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"exetr"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"exetr":23}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"package task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"import task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"exetr"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"exetr"},"content":"    private String time;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"exetr"},"content":"    public Deadline (String desc, String time, Boolean status) {","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"exetr"},"content":"        super(desc, status);","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"exetr"},"content":"        setTime(time);","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"exetr"},"content":"    public void setTime(String time) {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"exetr"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"exetr"},"content":"    public String getTime() {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"exetr"},"content":"        return time;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"exetr"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"exetr"},"content":"        return \"[d] [\" + getStatus() + \"] \" + getDescription()","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"exetr"},"content":"                + \" (By: \" + time + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"exetr"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"exetr":25}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"package task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"import task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"exetr"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"exetr"},"content":"    private String start;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"exetr"},"content":"    private String end;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"exetr"},"content":"    public Event(String desc, String start, String end, Boolean status) {","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"exetr"},"content":"        super(desc, status);","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"exetr"},"content":"        setTime(start, end);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"exetr"},"content":"    public void setTime(String start, String end) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"exetr"},"content":"        this.start \u003d start;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"exetr"},"content":"        this.end \u003d end;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"exetr"},"content":"    public String getStart() {","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"exetr"},"content":"        return start;","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"exetr"},"content":"    public String getEnd() {","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"exetr"},"content":"        return end;","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"exetr"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"exetr"},"content":"        return \"[e] [\" + getStatus() + \"] \" + getDescription()","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"exetr"},"content":"                + \" (\" + getStart() + \" to \" + getEnd() + \")\";","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"exetr"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"exetr":32}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"package task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"    private String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"exetr"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"exetr"},"content":"    public Task(String desc, Boolean status) {","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"exetr"},"content":"        setDescription(desc);","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"exetr"},"content":"        setStatus(status);","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"exetr"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"exetr"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"exetr"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"exetr"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"exetr"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"exetr"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"exetr"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"exetr"},"content":"        String result;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"exetr"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"exetr"},"content":"            result \u003d \"X\";","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"exetr"},"content":"        } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"exetr"},"content":"            result \u003d \" \";","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"exetr"},"content":"        return result;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"exetr"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"exetr"},"content":"        return \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"exetr"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"exetr":37}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"package task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"import task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"exetr"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"exetr"},"content":"    public ToDo(String desc, Boolean status) {","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"exetr"},"content":"        super(desc, status);","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"exetr"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"exetr"},"content":"        return \"[t] [\" + getStatus() + \"] \" + getDescription();","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"exetr"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"exetr"},"content":"    public String toDataString() {","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"exetr"},"content":"        String output \u003d \"T | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"exetr"},"content":"        if (getStatus().equals(\"X\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"exetr"},"content":"            output +\u003d \"1 | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"exetr"},"content":"        } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"exetr"},"content":"            output +\u003d \"0 | \";","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"exetr"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"exetr"},"content":"        output +\u003d getDescription();","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"exetr"},"content":"        return output;","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"exetr"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"exetr"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"exetr":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"exetr"},"content":"/todo return $$ to jack","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"exetr"},"content":"/deadline assignment -by sunday","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"exetr"},"content":"/list","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"exetr"},"content":"/done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"exetr"},"content":"/list","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"exetr"},"content":"/event lecture -from monday 2pm -to monday 4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"exetr"},"content":"/list","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"exetr"},"content":"/bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"exetr":8}}]
