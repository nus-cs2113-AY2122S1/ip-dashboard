[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"### 1. Add and Delete Tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"There are three different types of tasks that can be tracked - ","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":"todo, deadline and event.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":"### 2. List Tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":"A list of all the tasks will show. Details such as ","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"which category of task, completion of task and description","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"of tasks will be shown.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"### 3. Complete Tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"Once you are done with a task, you can mark","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kairoskoh"},"content":"the task as completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kairoskoh"},"content":"### 4. Find Tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kairoskoh"},"content":"Search for tasks with a certain keyword. This ","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kairoskoh"},"content":"will allow you to see specific tasks that","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kairoskoh"},"content":"contains the keyword of your choice.","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"kairoskoh"},"content":"### `todo` - Adds todo task","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kairoskoh"},"content":"Begin your input with a \u0027todo\u0027 followed by","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kairoskoh"},"content":"the description of the todo task.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"kairoskoh"},"content":"`todo borrow book`","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"kairoskoh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kairoskoh"},"content":"A new todo task with the corresponding description","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"kairoskoh"},"content":"will be added.","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"kairoskoh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"kairoskoh"},"content":"[T] [ ] borrow book","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kairoskoh"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kairoskoh"},"content":"### `deadline` - Adds deadline task","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"kairoskoh"},"content":"Begin your input with a \u0027deadline\u0027 followed by","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kairoskoh"},"content":"the description of the deadline task. Remember to include \u0027/by\u0027","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"kairoskoh"},"content":"followed by the deadline description at the end.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"kairoskoh"},"content":"`deadline return book /by tonight`","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"kairoskoh"},"content":"A new deadline task with the corresponding description","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"kairoskoh"},"content":"and deadline will be added.","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"kairoskoh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"kairoskoh"},"content":"[D] [ ] return book (by: tonight)","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"kairoskoh"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"kairoskoh"},"content":"### `event` - Adds event task","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"kairoskoh"},"content":"Begin your input with a \u0027event\u0027 followed by","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"kairoskoh"},"content":"the description of the event task. Remember to include \u0027/at\u0027","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"kairoskoh"},"content":"followed by the event timing description at the end.","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"kairoskoh"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"kairoskoh"},"content":"`event library party /at tonight 10pm`","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"kairoskoh"},"content":"A new event task with the corresponding description","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"kairoskoh"},"content":"and event timing will be added.","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"kairoskoh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"kairoskoh"},"content":"[E] [ ] library party (at: tonight 10pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"kairoskoh"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"kairoskoh"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"kairoskoh"},"content":"Removes a specific task from the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"kairoskoh"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"kairoskoh"},"content":"`delete 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"kairoskoh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"kairoskoh"},"content":"A specified task will be removed.","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"kairoskoh"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"kairoskoh"},"content":"1.[ ] library party ","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"kairoskoh"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"kairoskoh"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"kairoskoh"},"content":"A list of all tasks will be shown.","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"kairoskoh"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"kairoskoh"},"content":"`list`","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"kairoskoh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"kairoskoh"},"content":"A list of all tasks will be shown according to ","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"kairoskoh"},"content":"the sequence that they were added.","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"kairoskoh"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"kairoskoh"},"content":"1.[T] [ ] eat meat","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"kairoskoh"},"content":"2.[D] [ ] drink water (by: tonight)","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"kairoskoh"},"content":"3.[E] [ ] workout (at: midnight)","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"kairoskoh"},"content":"### `done` - Mark a task as completed","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"kairoskoh"},"content":"A specified task will be marked as completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"kairoskoh"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"kairoskoh"},"content":"`done 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"kairoskoh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"kairoskoh"},"content":"A specified task will be marked as completed. This","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"kairoskoh"},"content":"task will still remain on the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"kairoskoh"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"kairoskoh"},"content":"1.[X] eat meat","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"kairoskoh"},"content":"### `find` - Find tasks containing keyword","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"kairoskoh"},"content":"All tasks in the list containing the specific","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"kairoskoh"},"content":"keyword will be shown.","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"kairoskoh"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"kairoskoh"},"content":"`find water`","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"kairoskoh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"kairoskoh"},"content":"All tasks in the list containing the specific","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"kairoskoh"},"content":"keyword will be shown.","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"kairoskoh"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"kairoskoh"},"content":"2.[D] [ ] drink water (by: tonight)","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"kairoskoh"},"content":"### `bye` - Terminates program safely","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"kairoskoh"},"content":"Duke will be terminated safely.","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"kairoskoh"},"content":"Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"kairoskoh"},"content":"`bye`","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"kairoskoh"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"kairoskoh"},"content":"A goodbye message will be shown.","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"kairoskoh"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"kairoskoh"},"content":" ","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"kairoskoh"},"content":"--------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"kairoskoh"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kairoskoh":165,"-":27}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"import duke.processes.Parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"import duke.processes.Storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"import duke.processes.TaskList;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kairoskoh"},"content":"import duke.processes.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kairoskoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"        Storage.loadTasks(tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"        activeChat(tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"        Storage.saveTasks(tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kairoskoh"},"content":"        Ui.printGoodbyeMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"kairoskoh"},"content":"    private static void activeChat(TaskList tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kairoskoh"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kairoskoh"},"content":"        String input;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kairoskoh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kairoskoh"},"content":"        while(!isBye){","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kairoskoh"},"content":"            //store input into String","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kairoskoh"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kairoskoh"},"content":"            //process input","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"kairoskoh"},"content":"            isBye \u003d Parser.processInput(tasks, input);","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kairoskoh":32,"-":2}},{"path":"src/main/java/duke/exceptions/IllegalTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"public class IllegalTaskException extends Exception{","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"kairoskoh":4}},{"path":"src/main/java/duke/processes/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke.processes;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"import duke.exceptions.IllegalTaskException;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kairoskoh"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kairoskoh"},"content":"public class Parser {","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kairoskoh"},"content":"     * Returns a boolean to break the while loop.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":"     * This method also processes what user inputs.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"     * @param tasks is an instance of the public class TaskList,","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"     *              where the list of tasks and counter for number of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"     *              can be found and is updated based on user inputs.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"     * @param input is the entire chunk of message that user inputs.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"     * @return boolean whether input starts with \u0027Bye\u0027","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kairoskoh"},"content":"    public static boolean processInput(TaskList tasks, String input) {","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kairoskoh"},"content":"        boolean isBye \u003d false;","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kairoskoh"},"content":"        if (input.equals(\"bye\")){ //check if bye","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kairoskoh"},"content":"            isBye \u003d true;","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kairoskoh"},"content":"        } else if (input.startsWith(\"list\")) { //check if list","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kairoskoh"},"content":"            processList(tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kairoskoh"},"content":"        } else if (input.startsWith(\"done\") ) { //check if done","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kairoskoh"},"content":"            processDone(tasks, input);","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kairoskoh"},"content":"        } else if (input.startsWith(\"delete\") ) { //check if delete","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kairoskoh"},"content":"            processDelete(tasks, input);","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kairoskoh"},"content":"        } else if (input.startsWith(\"find\") ) {","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kairoskoh"},"content":"            processFind(tasks, input);","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kairoskoh"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kairoskoh"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kairoskoh"},"content":"                tasks.counter \u003d processTasks(tasks, input); //process tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"kairoskoh"},"content":"            } catch ( IllegalTaskException e ) {","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kairoskoh"},"content":"                System.out.println(\"Please include /by for deadline and /at for event\");","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"kairoskoh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"kairoskoh"},"content":"        return isBye;","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"kairoskoh"},"content":"    private static void processFind(TaskList tasks, String input) {","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"kairoskoh"},"content":"        int findCount \u003d 0;","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"kairoskoh"},"content":"        String keyword \u003d input.substring(5);","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kairoskoh"},"content":"        Ui.printFindMessageStart();","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"kairoskoh"},"content":"        for(int i \u003d 0; i \u003c tasks.counter; i +\u003d 1) {","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"kairoskoh"},"content":"            Task currTask \u003d tasks.list.get(i);","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kairoskoh"},"content":"            if( currTask.getDescription().contains(keyword) ){","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"kairoskoh"},"content":"                Ui.printListOfTaskSubMessage(currTask,i);","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kairoskoh"},"content":"                findCount +\u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kairoskoh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"kairoskoh"},"content":"        if(findCount \u003d\u003d 0) {","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kairoskoh"},"content":"            Ui.printFindNothingMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"kairoskoh"},"content":"        Ui.printFindMessageEnd();","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kairoskoh"},"content":"    private static void processDelete(TaskList tasks, String input) {","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"kairoskoh"},"content":"        int deletePos \u003d input.indexOf(\"delete\");","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"kairoskoh"},"content":"        if (tasks.list.size() !\u003d 0) {","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"kairoskoh"},"content":"            if (input.length() \u003c deletePos + 7) {","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"kairoskoh"},"content":"                Ui.printDeleteButNotSpecificMessage(); //when input contains delete but no number","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"kairoskoh"},"content":"            } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"kairoskoh"},"content":"                processValidDelete(tasks, input, deletePos); //when input contains delete and specified number","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"kairoskoh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"kairoskoh"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"kairoskoh"},"content":"            Ui.printDeleteButEmptyMessage(); //when input contains delete but list is empty","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"kairoskoh"},"content":"    private static void processValidDelete(TaskList tasks, String input, int deletePos) {","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"kairoskoh"},"content":"        String itemNumDone \u003d input.substring(deletePos + 7, deletePos + 8);","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"kairoskoh"},"content":"        int itemNum \u003d Integer.parseInt(itemNumDone);","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"kairoskoh"},"content":"        Ui.printDeleteMessage(tasks.list, itemNum);","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"kairoskoh"},"content":"        tasks.list.remove(itemNum - 1);","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"kairoskoh"},"content":"        tasks.counter -\u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"kairoskoh"},"content":"    private static void processList(TaskList tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"kairoskoh"},"content":"        if (tasks.list.size() !\u003d 0){","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"kairoskoh"},"content":"            Ui.printListMessage(tasks);","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"kairoskoh"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"kairoskoh"},"content":"            Ui.printListButEmptyMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kairoskoh"},"content":"    private static void processDone(TaskList tasks, String input) {","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"kairoskoh"},"content":"        int donePos \u003d input.indexOf(\"done\");","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"kairoskoh"},"content":"        if (tasks.list.size() !\u003d 0) {","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"kairoskoh"},"content":"            if (input.length() \u003c donePos + 5) {","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"kairoskoh"},"content":"                Ui.printDoneButNotSpecificMessage(); //when input contains done but no number","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"kairoskoh"},"content":"            } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"kairoskoh"},"content":"                processValidDone(tasks, input, donePos); //when input contains done and specified number","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"kairoskoh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"kairoskoh"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"kairoskoh"},"content":"            Ui.printDoneButEmptyMessage(); //when input contains done but list is empty","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"kairoskoh"},"content":"    private static void processValidDone(TaskList tasks, String input, int donePos) {","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"kairoskoh"},"content":"        String itemNumDone \u003d input.substring(donePos + 5, donePos + 6);","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"kairoskoh"},"content":"        int itemNum \u003d Integer.parseInt(itemNumDone);","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"kairoskoh"},"content":"        tasks.list.get(itemNum - 1).setDone();","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"kairoskoh"},"content":"        Ui.printDoneMessage(tasks.list, itemNum);","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"kairoskoh"},"content":"    private static int processTasks(TaskList tasks, String input) throws IllegalTaskException{","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"kairoskoh"},"content":"        if ( ( input.startsWith(\"deadline\") || input.startsWith(\"event\") ) \u0026\u0026 !input.contains(\"/\")){","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"kairoskoh"},"content":"            throw new IllegalTaskException();","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"kairoskoh"},"content":"        if (input.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"kairoskoh"},"content":"            String description \u003d input.substring(5);","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"kairoskoh"},"content":"            ToDo newTask \u003d new ToDo(description);","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"kairoskoh"},"content":"            tasks.list.add(tasks.counter, newTask);","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"kairoskoh"},"content":"            tasks.counter +\u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"kairoskoh"},"content":"            Ui.printAddedTaskMessage(newTask, tasks.counter);","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"kairoskoh"},"content":"        } else if (input.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"kairoskoh"},"content":"            int donePos \u003d input.indexOf(\"/\"); //finds pos of \u0027/\u0027","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"kairoskoh"},"content":"            String description \u003d input.substring(9,donePos);","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"kairoskoh"},"content":"            if (!input.substring(donePos + 1, donePos + 3).equals(\"by\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"kairoskoh"},"content":"                throw new IllegalTaskException();","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"kairoskoh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"kairoskoh"},"content":"            String date \u003d input.substring(donePos + 4);","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"kairoskoh"},"content":"            Deadline newTask \u003d new Deadline(description,date);","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"kairoskoh"},"content":"            tasks.list.add(tasks.counter, newTask);","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"kairoskoh"},"content":"            tasks.counter +\u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"kairoskoh"},"content":"            Ui.printAddedTaskMessage(newTask, tasks.counter);","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"kairoskoh"},"content":"        } else if (input.startsWith(\"event\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"kairoskoh"},"content":"            int donePos \u003d input.indexOf(\"/\"); //finds pos of \u0027/\u0027","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"kairoskoh"},"content":"            String description \u003d input.substring(6,donePos);","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"kairoskoh"},"content":"            if (!input.substring(donePos + 1, donePos + 3).equals(\"at\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"kairoskoh"},"content":"                throw new IllegalTaskException();","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"kairoskoh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"kairoskoh"},"content":"            String date \u003d input.substring(donePos + 4);","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"kairoskoh"},"content":"            Event newTask \u003d new Event(description,date);","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"kairoskoh"},"content":"            tasks.list.add(tasks.counter, newTask);","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"kairoskoh"},"content":"            tasks.counter +\u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"kairoskoh"},"content":"            Ui.printAddedTaskMessage(newTask, tasks.counter);","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"kairoskoh"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"kairoskoh"},"content":"            System.out.println(\"Please specify tasks: todo, deadline or event\");","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"kairoskoh"},"content":"            System.out.println(\"Example - type in the following: todo read book\");","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"kairoskoh"},"content":"        return tasks.counter;","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"kairoskoh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kairoskoh":146}},{"path":"src/main/java/duke/processes/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke.processes;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"import java.io.File;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kairoskoh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":"public class Storage {","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"     * Loads pre-existing tasks found in DukeTaskData.txt.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"     * If there is no DukeTaskData.txt, a new file will be created.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"     * There is no output if tasks are loaded successfully.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"     * @param tasks is an instance of the public class TaskList,","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kairoskoh"},"content":"     *              where the list of tasks and counter for number of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kairoskoh"},"content":"     *              can be found and is updated based on user inputs.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kairoskoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kairoskoh"},"content":"    public static void loadTasks(TaskList tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kairoskoh"},"content":"        File DukeTaskData \u003d new File(\"DukeTaskData.txt\");","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kairoskoh"},"content":"        Scanner scan;","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kairoskoh"},"content":"        String[] execute;","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Currently Loading List of Tasks\");","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kairoskoh"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kairoskoh"},"content":"            scan \u003d new Scanner(DukeTaskData);","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kairoskoh"},"content":"            if (DukeTaskData.exists()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kairoskoh"},"content":"                while (scan.hasNext()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"kairoskoh"},"content":"                    execute \u003d scan.nextLine().split(\"/\");","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kairoskoh"},"content":"                    processLoading(tasks, execute);","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"kairoskoh"},"content":"                }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"kairoskoh"},"content":"            } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"kairoskoh"},"content":"                FileWriter f \u003d new FileWriter(DukeTaskData.getAbsoluteFile());","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kairoskoh"},"content":"                f.close();","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kairoskoh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"kairoskoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"kairoskoh"},"content":"            System.out.println(\"There is an issue with the data file.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"kairoskoh"},"content":"            System.out.println(\"A new file will be created.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kairoskoh"},"content":"            System.out.println(\"No action is required. Cheers!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"kairoskoh"},"content":"        } finally {","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"kairoskoh"},"content":"            System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"kairoskoh"},"content":"    private static void processLoading(TaskList tasks, String[] execute) {","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"kairoskoh"},"content":"        switch (execute[0]) {","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kairoskoh"},"content":"        case \"T\":","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"kairoskoh"},"content":"            ToDo taskTodo \u003d new ToDo(execute[2]);","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"kairoskoh"},"content":"            tasks.list.add(taskTodo);","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"kairoskoh"},"content":"            tasks.counter +\u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"kairoskoh"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kairoskoh"},"content":"        case \"D\":","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"kairoskoh"},"content":"            Deadline taskDeadline \u003d new Deadline(execute[2], execute[3]);","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"kairoskoh"},"content":"            tasks.list.add(taskDeadline);","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"kairoskoh"},"content":"            tasks.counter +\u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"kairoskoh"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"kairoskoh"},"content":"        case \"E\":","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"kairoskoh"},"content":"            Event taskEvent \u003d new Event(execute[2], execute[3]);","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"kairoskoh"},"content":"            tasks.list.add(taskEvent);","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"kairoskoh"},"content":"            tasks.counter +\u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"kairoskoh"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"kairoskoh"},"content":"        default:","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"kairoskoh"},"content":"            System.out.println(\"Error With File\");","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"kairoskoh"},"content":"        if (execute[1].equalsIgnoreCase(\"X\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"kairoskoh"},"content":"            tasks.list.get(tasks.list.size() - 1).setDone();","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"kairoskoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"kairoskoh"},"content":"     * Saves existing tasks into DukeTaskData.txt.","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"kairoskoh"},"content":"     * There is no output if tasks are saved successfully.","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"kairoskoh"},"content":"     * @param tasks is an instance of the public class TaskList,","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"kairoskoh"},"content":"     *              where the list of tasks and counter for number of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"kairoskoh"},"content":"     *              can be found and is updated based on user inputs.","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"kairoskoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"kairoskoh"},"content":"    public static void saveTasks(TaskList tasks) throws IOException {","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"kairoskoh"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"kairoskoh"},"content":"            FileWriter fw \u003d new FileWriter(\"DukeTaskData.txt\");","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kairoskoh"},"content":"            for (int i \u003d 0; i \u003c\u003d tasks.counter - 1; i +\u003d 1) {","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"kairoskoh"},"content":"                fw.write(tasks.list.get(i).getLetter() + \"/\"","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"kairoskoh"},"content":"                        + tasks.list.get(i).getStatusIcon() + \"/\"","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"kairoskoh"},"content":"                        + tasks.list.get(i).getDescription() + \"/\"","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"kairoskoh"},"content":"                        + tasks.list.get(i).getDateOnly() + System.lineSeparator());","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"kairoskoh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"kairoskoh"},"content":"            fw.close();","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"kairoskoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"kairoskoh"},"content":"            System.out.println(\"There is an error\" + e.getMessage());","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"kairoskoh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kairoskoh":99}},{"path":"src/main/java/duke/processes/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke.processes;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":" * When an instance of this class is created, other classes","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kairoskoh"},"content":" * and methods can access the ArrayList and the counter.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":" * This ensures that the entire code updates and draws information","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kairoskoh"},"content":" * from a single ArrayList and a single integer counter.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"public class TaskList {","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"    public ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"    public int counter \u003d 0;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kairoskoh":18}},{"path":"src/main/java/duke/processes/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke.processes;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"public class Ui {","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kairoskoh"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kairoskoh"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kairoskoh"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kairoskoh"},"content":"    public static void printDoneMessage(ArrayList\u003cTask\u003e list, int itemNum) {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"kairoskoh"},"content":"        System.out.println( itemNum + \".[\" + list.get(itemNum - 1).getStatusIcon() + \"] \" + list.get(itemNum - 1).getDescription() );","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"kairoskoh"},"content":"    public static void printListMessage(TaskList tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"kairoskoh"},"content":"        for(int i \u003d 0; i \u003c tasks.counter; i +\u003d 1){","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"kairoskoh"},"content":"            printListOfTaskSubMessage(tasks.list.get(i), i);","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"kairoskoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kairoskoh"},"content":"    public static void printListButEmptyMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"List is empty. Time to get productive!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kairoskoh"},"content":"    public static void printDoneButNotSpecificMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Please specify which task is done.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"kairoskoh"},"content":"    public static void printDoneButEmptyMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Unable to tick off list.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"List is empty. Time to get productive!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"kairoskoh"},"content":"    public static void printAddedTaskMessage(Task task, int i) {","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"[\" + task.getLetter() + \"] \"","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"kairoskoh"},"content":"                + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"kairoskoh"},"content":"                + task.getDescription()","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"kairoskoh"},"content":"                + task.getDate() );","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Now you have \" + i + \" tasks in the list.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"kairoskoh"},"content":"    public static void printListOfTaskSubMessage(Task task, int i) {","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(i + 1","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"kairoskoh"},"content":"                + \".[\" + task.getLetter() + \"] \"","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"kairoskoh"},"content":"                + \"[\" + task.getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"kairoskoh"},"content":"                + task.getDescription()","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"kairoskoh"},"content":"                + task.getDate() );","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"kairoskoh"},"content":"    public static void printDeleteMessage(ArrayList\u003cTask\u003e list, int itemNum) {","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"kairoskoh"},"content":"        System.out.println( itemNum + \".[\" + list.get(itemNum - 1).getStatusIcon() + \"] \" + list.get(itemNum - 1).getDescription() );","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Now you have \" + ( list.size() - 1 )+ \" tasks in the list.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"kairoskoh"},"content":"    public static void printDeleteButNotSpecificMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Please specify which task is to be deleted.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"kairoskoh"},"content":"    public static void printDeleteButEmptyMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Unable to delete.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"List is empty. Time to get productive!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"kairoskoh"},"content":"    public static void printFindMessageStart() {","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"kairoskoh"},"content":"    public static void printFindMessageEnd() {","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"--------------------\");","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"kairoskoh"},"content":"    public static void printFindNothingMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"kairoskoh"},"content":"        System.out.println(\"(there are 0 matches)\");","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"kairoskoh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"kairoskoh":114}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"    protected final static char LETTER \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kairoskoh"},"content":"    protected String date;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kairoskoh"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"    public char getLetter() {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"        return LETTER;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kairoskoh"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kairoskoh"},"content":"        return \"(by: \" + date + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kairoskoh"},"content":"    public String getDateOnly() { return date; }","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kairoskoh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kairoskoh":27}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"    protected final static char LETTER \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kairoskoh"},"content":"    protected String date;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kairoskoh"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"    public char getLetter() {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"        return LETTER;","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kairoskoh"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kairoskoh"},"content":"        return \"(at: \" + date + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"kairoskoh"},"content":"    public String getDateOnly() { return date; }","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kairoskoh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kairoskoh":26}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"    public Task(){","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kairoskoh"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kairoskoh"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"kairoskoh"},"content":"    public String getDescription(){","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"kairoskoh"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"kairoskoh"},"content":"    public void setDone(){","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"kairoskoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"kairoskoh"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"kairoskoh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"kairoskoh"},"content":"    public char getLetter() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"kairoskoh"},"content":"        return \u0027 \u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"kairoskoh"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"kairoskoh"},"content":"        return \" \";","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kairoskoh"},"content":"    public String getDateOnly() { return \" \"; }","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"kairoskoh"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"kairoskoh":41}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kairoskoh"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"kairoskoh"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"kairoskoh"},"content":"    protected final static char LETTER \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"kairoskoh"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"kairoskoh"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"kairoskoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"kairoskoh"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"kairoskoh"},"content":"    public char getLetter() {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"kairoskoh"},"content":"        return LETTER;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"kairoskoh"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"kairoskoh"},"content":"        return \"\";","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"kairoskoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"kairoskoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"kairoskoh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"kairoskoh":23}}]
