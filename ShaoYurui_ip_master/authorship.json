[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"https://shaoyurui.github.io/ip/ ","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ShaoYurui":4,"-":24}},{"path":"data/Task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ShaoYurui":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"### Personal Schedule ","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":"You can tell Duke to add some tasks to the Todo list. You can also mark the task as done or even delete the item. A neat list will help","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"you to ensure everything is on track, and you will not miss out on the important events.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"### Local Storage","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"Duke uses local storage to store the information of your Todo list, so do worry about someone else may steal your trip information","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"online. But to be careful not to mess with the data files, or else the duke may no longer remember your trip information.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"### InSeNSitIVE tO CASes","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"Duke is not sensitive to upper or lower cases so that you do not need to worry about the casing when communicate with Duke.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"### `Hi` - Interact with Duke.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"Use command `Hi` to interact with Duke by saying \"Hi\".","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"`Hi`","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"Duke will greet you back!","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ShaoYurui"},"content":"HI","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ShaoYurui"},"content":"                                                Hello! I\u0027m Duke","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ShaoYurui"},"content":"                                                What can I do for you?","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":41,"author":{"gitId":"ShaoYurui"},"content":"### `Bye` - End the conversation with Duke.","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"ShaoYurui"},"content":"Use command `bye` or `end` to end the conversation with Duke, but do not worry about your Todo list, it is stored locally,","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ShaoYurui"},"content":"the information will remain the same as long as you do not mess with the data files.","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ShaoYurui"},"content":"Example of usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ShaoYurui"},"content":"`Bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ShaoYurui"},"content":"Expected outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"ShaoYurui"},"content":"Duke will save all the data to data files locally, and terminate the program.","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"ShaoYurui"},"content":"bye","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"ShaoYurui"},"content":"                                      Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"ShaoYurui"},"content":"### `Todo [description]` - Add a task to Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"ShaoYurui"},"content":"Use command `todo` followed by the description of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ShaoYurui"},"content":"`todo CS2113 Tutorial`","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ShaoYurui"},"content":"Expected outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"ShaoYurui"},"content":"Duke will take note of the task and add it to the Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"ShaoYurui"},"content":"todo CS2113 Tutorial","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"ShaoYurui"},"content":"                                     Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"ShaoYurui"},"content":"                                     [T][ ]cs2113 tutorial","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"ShaoYurui"},"content":"                                     Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ShaoYurui"},"content":"### `Event [description] at [date]` - Add a event with date to Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"ShaoYurui"},"content":"Use command `event` followed by the description of the task, and `at` followed by the date.","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"ShaoYurui"},"content":"Example of usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"ShaoYurui"},"content":"`event CS2113 Lecturte at Friday 2pm`","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"ShaoYurui"},"content":"Expected outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"ShaoYurui"},"content":"Duke will take note of the event and its time, then add it to the Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"ShaoYurui"},"content":"event CS2113 Lecturte at Friday 2pm","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"ShaoYurui"},"content":"                                    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"ShaoYurui"},"content":"                                    [E][ ]cs2113 lecturte (friday 2pm)","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"ShaoYurui"},"content":"                                    Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"ShaoYurui"},"content":"### `Deadline [description] by [deadline]` - Add a deadline with date to Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"ShaoYurui"},"content":"Use command `deadline` followed by the description of the task, and `by` followed by the date.","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"ShaoYurui"},"content":"Example of usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"ShaoYurui"},"content":"`deadline CS2113 Project by 2020-10-01`","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"ShaoYurui"},"content":"Expected outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"ShaoYurui"},"content":"Duke will take note of the deadline and its time, then add it to the Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"ShaoYurui"},"content":"deadline CS2113 Project by 2020-10-01","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"ShaoYurui"},"content":"                                    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"ShaoYurui"},"content":"                                    [D][ ]cs2113 project (01 Oct 2020)","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"ShaoYurui"},"content":"                                    Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"ShaoYurui"},"content":"### `List` - list out to view the entire Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"ShaoYurui"},"content":"Use command `list` .","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"ShaoYurui"},"content":"Example of usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"ShaoYurui"},"content":"`list`","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"ShaoYurui"},"content":"Expected outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"ShaoYurui"},"content":"Duke will list out the Todo List","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"ShaoYurui"},"content":"list","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"ShaoYurui"},"content":"                                 Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"ShaoYurui"},"content":"                                 1. [T][ ]cs2113 tutorial","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"ShaoYurui"},"content":"                                 2. [E][ ]cs2113 lecturte (friday 2pm)","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"ShaoYurui"},"content":"                                 3. [D][ ]cs2113 project (01 Oct 2020)","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"ShaoYurui"},"content":"### `Delete [index]` - delete a specific task in the Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"ShaoYurui"},"content":"Use command `delete` followed by the number index of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"ShaoYurui"},"content":"Example of usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"ShaoYurui"},"content":"`delete 3`","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"ShaoYurui"},"content":"Duke will remove the specific task from the Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"ShaoYurui"},"content":"delete 3","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"ShaoYurui"},"content":"                                     I have deleted the following task","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"ShaoYurui"},"content":"                                     [D][ ]cs2113 project (2020-10-1)","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"ShaoYurui"},"content":"                                     Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":171,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"ShaoYurui"},"content":"### `Done [index]` - Mark a specific task as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"ShaoYurui"},"content":"Use command `done` followed by the index of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"ShaoYurui"},"content":"Example of usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":179,"author":{"gitId":"ShaoYurui"},"content":"`done 2`","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"ShaoYurui"},"content":"Expected outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"ShaoYurui"},"content":"Duke will mark the specific task as done, shown as `[X]` in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"ShaoYurui"},"content":"done 2","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"ShaoYurui"},"content":"                            Congrats! you have done the following task","lastModifiedDate":"2021-09-30"},{"lineNumber":189,"author":{"gitId":"ShaoYurui"},"content":"                            [E][X]cs2113 lecturte (friday 2pm)","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":191,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":193,"author":{"gitId":"ShaoYurui"},"content":"### `Find [description]` - Find task that contains description.","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"ShaoYurui"},"content":"Use command `find` followed by the description or the information of the item","lastModifiedDate":"2021-09-30"},{"lineNumber":196,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":197,"author":{"gitId":"ShaoYurui"},"content":"Example of usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"ShaoYurui"},"content":"`find lecture`","lastModifiedDate":"2021-09-30"},{"lineNumber":200,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"ShaoYurui"},"content":"Expected outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"ShaoYurui"},"content":"Duke will search for the tasks that contains information of the item and list out all the matches.","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"ShaoYurui"},"content":"find lecture","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"ShaoYurui"},"content":"                             Here are the matching tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":209,"author":{"gitId":"ShaoYurui"},"content":"                             Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"ShaoYurui"},"content":"                             1. [E][X]cs2113 lecturte (friday 2pm)","lastModifiedDate":"2021-09-30"},{"lineNumber":211,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":212,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":213,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":214,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"ShaoYurui"},"content":"### `Clear` - Clear all the tasks in the Todo list.","lastModifiedDate":"2021-09-30"},{"lineNumber":216,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"ShaoYurui"},"content":"Use command `clear`.","lastModifiedDate":"2021-09-30"},{"lineNumber":218,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"ShaoYurui"},"content":"Example of usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":220,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"ShaoYurui"},"content":"`clear`","lastModifiedDate":"2021-09-30"},{"lineNumber":222,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":223,"author":{"gitId":"ShaoYurui"},"content":"Expected outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":224,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":225,"author":{"gitId":"ShaoYurui"},"content":"Duke will take clear the entire Todo list. Now the Todo list is empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":226,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"ShaoYurui"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":229,"author":{"gitId":"ShaoYurui"},"content":"clear","lastModifiedDate":"2021-09-30"},{"lineNumber":230,"author":{"gitId":"ShaoYurui"},"content":"                                                 Cleared all the tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"ShaoYurui"},"content":"______________________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":232,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ShaoYurui":207,"-":26}},{"path":"src/main/java/com/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"import com.command.Command;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"import com.duke.Duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":" * The Main logic and function flow of the project","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"public class Main {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"     * The main function that the project execute","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"        Duke duke \u003d new Duke(\"Task.txt\");","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"        Command command \u003d new Command(duke);","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"        String line;","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"        do {","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"        } while (command.handle(line));","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ShaoYurui":28}},{"path":"src/main/java/com/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.command;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"import com.duke.Duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"import com.task.Deadline;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"import com.task.Event;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":"import com.task.Task;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":"import com.task.Todo;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":" * Represents a command given by user, and command Duke to execute the command","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"public class Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"    Duke duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"    private final ArrayList\u003cString\u003e COMMAND_LIST \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"     * Constructor of Command, set the target duke to command","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"     * @param duke Duke object, the target duke to command","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"    public Command(Duke duke) {","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"        this.duke \u003d duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"        COMMAND_LIST.add(\"\");","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"     * Interpret the command given by user and command duke to execute it.","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"     * @param line String object representing the command given by user","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"     * @return Returns true if the command is not exit, return false if the command is exit","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ShaoYurui"},"content":"    public boolean handle(String line){","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ShaoYurui"},"content":"        line \u003d line.toLowerCase();","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ShaoYurui"},"content":"        switch(line) {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ShaoYurui"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ShaoYurui"},"content":"        case \"end\":","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ShaoYurui"},"content":"            duke.endDuke();","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"ShaoYurui"},"content":"            return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ShaoYurui"},"content":"        case \"hi\":","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"ShaoYurui"},"content":"        case \"hello\":","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ShaoYurui"},"content":"            duke.greet();","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ShaoYurui"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ShaoYurui"},"content":"        case \"list\":","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ShaoYurui"},"content":"            duke.listOut(duke.getList());","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ShaoYurui"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"ShaoYurui"},"content":"        case \"clear\":","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ShaoYurui"},"content":"            duke.clear();","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ShaoYurui"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"ShaoYurui"},"content":"        default:","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ShaoYurui"},"content":"            handle_task(line);","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"ShaoYurui"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"ShaoYurui"},"content":"        return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ShaoYurui"},"content":"    public void handle_task(String line){","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"ShaoYurui"},"content":"        if(line.contains(\"done\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"ShaoYurui"},"content":"            duke.markDone(line);","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"ShaoYurui"},"content":"        } else if (line.contains(\"delete\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"ShaoYurui"},"content":"            duke.deleteItem(line);","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"ShaoYurui"},"content":"        } else if (line.contains(\"todo\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"ShaoYurui"},"content":"            line \u003d line.substring(5);","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"ShaoYurui"},"content":"            duke.addList(new Todo(line));","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ShaoYurui"},"content":"        } else if (line.contains(\"add\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ShaoYurui"},"content":"            line \u003d line.substring(4);","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ShaoYurui"},"content":"            duke.addList(new Todo(line));","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"ShaoYurui"},"content":"        } else if (line.contains(\"find\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"ShaoYurui"},"content":"            line \u003d line.substring(5).trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"ShaoYurui"},"content":"            duke.find(line);","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"ShaoYurui"},"content":"        } else if (line.contains(\"deadline\") || line.contains(\"event\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"ShaoYurui"},"content":"            handle_task_time(line);","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"ShaoYurui"},"content":"        } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"ShaoYurui"},"content":"            duke.unknownAction();","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ShaoYurui"},"content":"    public void handle_task_time(String line){","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ShaoYurui"},"content":"        int SEPARATOR_START_INDEX \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ShaoYurui"},"content":"        int SEPARATOR_END_INDEX \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ShaoYurui"},"content":"        int DESCRIPTION_INDEX \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ShaoYurui"},"content":"        if (line.contains(\"by\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"ShaoYurui"},"content":"            SEPARATOR_START_INDEX \u003d line.indexOf(\"by\");","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ShaoYurui"},"content":"            SEPARATOR_END_INDEX \u003d SEPARATOR_START_INDEX+1;","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"ShaoYurui"},"content":"        } else if (line.contains(\"at\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"ShaoYurui"},"content":"            SEPARATOR_START_INDEX \u003d line.indexOf(\"at\");","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"ShaoYurui"},"content":"            SEPARATOR_END_INDEX \u003d SEPARATOR_START_INDEX+1;","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"ShaoYurui"},"content":"        } else if (line.contains(\"@\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"ShaoYurui"},"content":"            SEPARATOR_START_INDEX \u003d line.indexOf(\"@\");","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"ShaoYurui"},"content":"            SEPARATOR_END_INDEX \u003d SEPARATOR_START_INDEX;","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"ShaoYurui"},"content":"        } else if (line.contains(\"/\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"ShaoYurui"},"content":"            SEPARATOR_START_INDEX \u003d line.indexOf(\"/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"ShaoYurui"},"content":"            SEPARATOR_END_INDEX \u003d SEPARATOR_START_INDEX;","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"ShaoYurui"},"content":"        } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"ShaoYurui"},"content":"            duke.help();","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"ShaoYurui"},"content":"            return;","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"ShaoYurui"},"content":"        String time \u003d line.substring(SEPARATOR_END_INDEX+1);","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"ShaoYurui"},"content":"        if (line.contains(\"deadline\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"ShaoYurui"},"content":"            DESCRIPTION_INDEX\u003d9;","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"ShaoYurui"},"content":"            line \u003d line.substring(DESCRIPTION_INDEX, SEPARATOR_START_INDEX);","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"ShaoYurui"},"content":"            duke.addList(new Deadline(line,time));","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"ShaoYurui"},"content":"        } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"ShaoYurui"},"content":"            DESCRIPTION_INDEX\u003d6;","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"ShaoYurui"},"content":"            line \u003d line.substring(DESCRIPTION_INDEX, SEPARATOR_START_INDEX);","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"ShaoYurui"},"content":"            duke.addList(new Event(line, time));","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ShaoYurui":114}},{"path":"src/main/java/com/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"import com.file.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"import com.task.*;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"import com.ui.UI;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":" * Represents a Duke robot that can respond to the user\u0027s input, it has \u003ccode\u003estorage\u003c/code\u003e to store information into PC,","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":" * \u003ccode\u003etasks\u003c/code\u003e to store list of tasks, \u003ccode\u003eui\u003c/code\u003e to regulate output to users and \u003ccode\u003estatus\u003c/code\u003e to","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":" * represent whether the Duke bot is active.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"    private final UI ui \u003d new UI();","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"     * Constructor of Duke class, initialises Duke by loading information from the storage file and show welcome screen.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"     * @param filePath String Object representing the path to storage file","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"        ui.welcome();","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"        loadFromFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ShaoYurui"},"content":"     * Loads the information stored in the storage file, into TaskList object tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ShaoYurui"},"content":"    public void loadFromFile() {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ShaoYurui"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ShaoYurui"},"content":"            ArrayList\u003cString\u003e Lines \u003d storage.readFile();","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ShaoYurui"},"content":"            for(String line : Lines) {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ShaoYurui"},"content":"                if (line.contains(\"[T]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ShaoYurui"},"content":"                    String description \u003d line.substring(6);","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ShaoYurui"},"content":"                    tasks.addTask(new Todo(description));","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ShaoYurui"},"content":"                } else if (line.contains(\"[E]\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ShaoYurui"},"content":"                    String description \u003d line.substring(6, line.indexOf(\"(\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"ShaoYurui"},"content":"                    String ddl \u003d line.substring(line.indexOf(\"(\")+1, line.indexOf(\")\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"ShaoYurui"},"content":"                    tasks.addTask(new Event(description, ddl));","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ShaoYurui"},"content":"                } else if (line.contains(\"[D]\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ShaoYurui"},"content":"                    String description \u003d line.substring(6, line.indexOf(\"(\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"ShaoYurui"},"content":"                    String ddl \u003d line.substring(line.indexOf(\"(\")+1, line.indexOf(\")\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"ShaoYurui"},"content":"                    tasks.addTask(new Deadline(description, ddl));","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"ShaoYurui"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ShaoYurui"},"content":"                tasks.getList().get(tasks.getList().size()-1).setDone(line.contains(\"[X]\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"ShaoYurui"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ShaoYurui"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"unable to locate file\");","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ShaoYurui"},"content":"            ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ShaoYurui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"unable to create file\");","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"ShaoYurui"},"content":"            ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ShaoYurui"},"content":"     * Terminates the Duke bot, show farewell message and set the status to false","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ShaoYurui"},"content":"    public void endDuke() {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"ShaoYurui"},"content":"        ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":74,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"ShaoYurui"},"content":"     * Greets the users by showing welcome message","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"ShaoYurui"},"content":"    public void greet() {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(\"What can I do for you?\");","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ShaoYurui"},"content":"        ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":84,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":85,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ShaoYurui"},"content":"     * Provides the users with tips about command format","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"ShaoYurui"},"content":"    public void help() {","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(\"PLease the command in the following format\");","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(\"event [TASK] by [DATE]\");","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(\"deadline [TASK] by [DATE]\");","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"ShaoYurui"},"content":"        ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"ShaoYurui"},"content":"     * Responses to unknown actions","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"ShaoYurui"},"content":"    public void unknownAction() {","lastModifiedDate":"2021-08-26"},{"lineNumber":101,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(\"Sorry! I don\u0027t understand\");","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"ShaoYurui"},"content":"        ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":105,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"ShaoYurui"},"content":"     * Searches for task object in the TaskList tasks that contains the item, and show users all the matches","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"ShaoYurui"},"content":"     * @param item String object that represents a task item","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"ShaoYurui"},"content":"    public void find(String item) {","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"ShaoYurui"},"content":"        TaskList matches \u003d new TaskList();","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"ShaoYurui"},"content":"        for (Task i : tasks.getList()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"ShaoYurui"},"content":"            if (i.toString().contains(item)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"ShaoYurui"},"content":"                matches.getList().add(i);","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"ShaoYurui"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"ShaoYurui"},"content":"        if (matches.getList().size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"No matches found\");","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"ShaoYurui"},"content":"        } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"ShaoYurui"},"content":"            listOut(matches);","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":127,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"ShaoYurui"},"content":"     * Adds a Task object to the TaskList tasks, and show users the current number of tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"ShaoYurui"},"content":"     * @param item Task object that represents a task item","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"ShaoYurui"},"content":"    public void addList(Task item) {","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"ShaoYurui"},"content":"        tasks.addTask(item);","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(tasks.getList().get(tasks.getList().size()-1).toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"ShaoYurui"},"content":"        ui.print(\"Now you have \" + tasks.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"ShaoYurui"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"ShaoYurui"},"content":"            storage.rewriteFile(tasks.getList());","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"ShaoYurui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"unable to write to file\");","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"ShaoYurui"},"content":"        ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":144,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":145,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"ShaoYurui"},"content":"     * lists out all the Task object in the TaskList tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"ShaoYurui"},"content":"     * @param tasks TaskList object that represents a todo list","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"ShaoYurui"},"content":"    public void listOut(TaskList tasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"ShaoYurui"},"content":"        if (tasks.getList().size()\u003d\u003d0) {","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"Woohooo no tasks due ~~~~\");","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"ShaoYurui"},"content":"        } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"Now you have \" + tasks.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":157,"author":{"gitId":"ShaoYurui"},"content":"        for (int i \u003d 0; i \u003c tasks.getList().size(); i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"ShaoYurui"},"content":"            ui.print((i+1) + \". \"+tasks.getList().get(i).toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":160,"author":{"gitId":"ShaoYurui"},"content":"        ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":162,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":163,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"ShaoYurui"},"content":"     * Marks a specific task as done and update it to the storage file","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"ShaoYurui"},"content":"     * @param line String object that represents the user command","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"ShaoYurui"},"content":"    public void markDone(String line) {","lastModifiedDate":"2021-09-09"},{"lineNumber":170,"author":{"gitId":"ShaoYurui"},"content":"        try {","lastModifiedDate":"2021-09-09"},{"lineNumber":171,"author":{"gitId":"ShaoYurui"},"content":"            line \u003d line.replaceAll(\"[^(\\\\d)]\", \"\");","lastModifiedDate":"2021-09-09"},{"lineNumber":172,"author":{"gitId":"ShaoYurui"},"content":"            int index \u003d Integer.parseInt(line);","lastModifiedDate":"2021-09-09"},{"lineNumber":173,"author":{"gitId":"ShaoYurui"},"content":"            index -\u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":174,"author":{"gitId":"ShaoYurui"},"content":"            tasks.getList().get(index).setDone(true);","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"Congrats! you have done the following task\");","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(tasks.getList().get(index).toString());","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"ShaoYurui"},"content":"            storage.rewriteFile(tasks.getList());","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"ShaoYurui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-09"},{"lineNumber":179,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"please enter the index of the task\");","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"ShaoYurui"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":181,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"number entered is invalid\");","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"ShaoYurui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":183,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"Unable to write files\");","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"ShaoYurui"},"content":"            ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":186,"author":{"gitId":"ShaoYurui"},"content":"        ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":188,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":189,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":191,"author":{"gitId":"ShaoYurui"},"content":"     * Clears the entire tasks list, leaving an empty list","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":193,"author":{"gitId":"ShaoYurui"},"content":"    public void clear() {","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"ShaoYurui"},"content":"        while (tasks.getList().size() \u003e 0) {","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"ShaoYurui"},"content":"            tasks.getList().remove(0);","lastModifiedDate":"2021-09-30"},{"lineNumber":196,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":197,"author":{"gitId":"ShaoYurui"},"content":"       try {","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"ShaoYurui"},"content":"           storage.rewriteFile(tasks.getList());","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"ShaoYurui"},"content":"           ui.print(\"Cleared all the tasks\");","lastModifiedDate":"2021-09-30"},{"lineNumber":200,"author":{"gitId":"ShaoYurui"},"content":"           ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"ShaoYurui"},"content":"       } catch (IOException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"ShaoYurui"},"content":"           ui.print(\"Unable to write files\");","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"ShaoYurui"},"content":"           ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":207,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":209,"author":{"gitId":"ShaoYurui"},"content":"     * deletes a specific task from the tasks list and update it to the storage file","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":211,"author":{"gitId":"ShaoYurui"},"content":"     * @param line String object representing the user\u0027s command","lastModifiedDate":"2021-09-30"},{"lineNumber":212,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":213,"author":{"gitId":"ShaoYurui"},"content":"    public void deleteItem(String line) {","lastModifiedDate":"2021-09-15"},{"lineNumber":214,"author":{"gitId":"ShaoYurui"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":215,"author":{"gitId":"ShaoYurui"},"content":"            line \u003d line.replaceAll(\"[^(\\\\d)]\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"ShaoYurui"},"content":"            int index \u003d Integer.parseInt(line);","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"ShaoYurui"},"content":"            index -\u003d 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"ShaoYurui"},"content":"            String deletedItem \u003d tasks.getList().get(index).toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"ShaoYurui"},"content":"            tasks.getList().remove(index);","lastModifiedDate":"2021-09-30"},{"lineNumber":220,"author":{"gitId":"ShaoYurui"},"content":"            storage.rewriteFile(tasks.getList());","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"I have deleted the following task\");","lastModifiedDate":"2021-09-30"},{"lineNumber":222,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(deletedItem);","lastModifiedDate":"2021-09-30"},{"lineNumber":223,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"Now you have \" + tasks.getList().size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":224,"author":{"gitId":"ShaoYurui"},"content":"            ui. endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":225,"author":{"gitId":"ShaoYurui"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"Please enter the index of the task.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"ShaoYurui"},"content":"            listOut(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"ShaoYurui"},"content":"        } catch(NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":229,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"Number entered is invalid.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":230,"author":{"gitId":"ShaoYurui"},"content":"            listOut(tasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"ShaoYurui"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-16"},{"lineNumber":232,"author":{"gitId":"ShaoYurui"},"content":"            ui.print(\"Unable to write files\");","lastModifiedDate":"2021-09-30"},{"lineNumber":233,"author":{"gitId":"ShaoYurui"},"content":"            ui.endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":234,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"ShaoYurui"},"content":"    public TaskList getList(){","lastModifiedDate":"2021-09-30"},{"lineNumber":239,"author":{"gitId":"ShaoYurui"},"content":"        return tasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":240,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"ShaoYurui":239,"-":2}},{"path":"src/main/java/com/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"    ","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"ShaoYurui":5}},{"path":"src/main/java/com/file/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.file;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"import com.task.Task;","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":" * Represents a file manager that read from or write to a file, fileName representing the name of the storage file","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":" * filePath representing the path to the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"public class Storage {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"    String fileName;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"    String filePath;","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"     * Constructor of Storage, sets the fileName and filePath","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"     * @param fileName the name of the storage file","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"    public Storage(String fileName) {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"        this.filePath \u003d \"data/\"+ this.fileName;","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"     * Checks if the path exist, and create one if the path does not exist.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ShaoYurui"},"content":"     * @throws IOException If the filepath cannot be created.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ShaoYurui"},"content":"    public void checkPath() throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ShaoYurui"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ShaoYurui"},"content":"        directory.mkdir();","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ShaoYurui"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ShaoYurui"},"content":"        f.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ShaoYurui"},"content":"     * reads from the file and return ArrayList\u003cString\u003e lines object that stores information","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"ShaoYurui"},"content":"     * @return ArrayList\u003cString\u003e lines object that stores information","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ShaoYurui"},"content":"     * @throws IOException If the filepath cannot be created or cannot be found.","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"ShaoYurui"},"content":"    public ArrayList\u003cString\u003e readFile() throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ShaoYurui"},"content":"        checkPath();","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"ShaoYurui"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ShaoYurui"},"content":"        File f \u003d new File(filePath); // create a File for the given file path","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ShaoYurui"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ShaoYurui"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ShaoYurui"},"content":"            lines.add(s.nextLine());","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"ShaoYurui"},"content":"        return lines;","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"ShaoYurui"},"content":"     * writes the ArrayList\u003cTask\u003e lines into the files","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"ShaoYurui"},"content":"     * @param lines representing the list of tasks information","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ShaoYurui"},"content":"     * @throws IOException If the file cannot be created or cannot be found","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ShaoYurui"},"content":"    public void rewriteFile(ArrayList\u003cTask\u003e lines) throws IOException {","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"ShaoYurui"},"content":"        checkPath();","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"ShaoYurui"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"ShaoYurui"},"content":"        fw.write(\"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"ShaoYurui"},"content":"        for (Task line : lines) {","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"ShaoYurui"},"content":"            fw.append(line.toString()).append(\"\\n\");","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"ShaoYurui"},"content":"        fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ShaoYurui":80}},{"path":"src/main/java/com/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"import com.time.Time;","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":" * Represents a task with deadline by.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"public class Deadline extends Todo {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":"    protected Time by;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"     * Constructor of the Deadline, stores the description and deadline time.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"     * @param description String object representing the information about the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"     * @param ddl String object representing the time of the object.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"    public Deadline(String description, String ddl) {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"        super(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"        this.by \u003d new Time(ddl);","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"        this.type\u003d \"[D]\";","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"        return this.by.toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"    public void setBy(String ddl) {","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"        this.by \u003d new Time(ddl);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ShaoYurui"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"ShaoYurui"},"content":"        return super.toString() + \"(\" + this.by.toString() + \")\";","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"ShaoYurui":39}},{"path":"src/main/java/com/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"import com.time.Time;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":" * Represents an event with deadline by, inherent from class Todo.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":"public class Event extends Todo{","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"    protected Time by;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"     * Constructor of the Event, stores the description and deadline time.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"     * @param description String object representing the information about the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"     * @param ddl String object representing the time of the object.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"    public Event(String description, String ddl) {","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"        super(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"        this.by \u003d new Time(ddl);","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"        this.type\u003d \"[E]\";","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"        return this.by.toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"    public void setBy(String ddl) {","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"        this.by \u003d new Time(ddl);","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ShaoYurui"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"ShaoYurui"},"content":"        return super.toString() + \"(\" + this.by.toString() + \")\";","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"ShaoYurui":40}},{"path":"src/main/java/com/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":" * Represents a task with boolean isDone, true representing the task is done, false the otherwise.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":"public class Task {","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"    String description;","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"     * Constructor of the Task, stores the description.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"     * @param description String object representing the information about the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"    public Task (String description) {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"    public void setDone(boolean isDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"        return description;","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ShaoYurui"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"ShaoYurui"},"content":"        return description;","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ShaoYurui":41}},{"path":"src/main/java/com/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.task;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":" * Represent a list of \u003ccode\u003eTask\u003c/code\u003e object, use \u003ccode\u003eArrayList\u003cTask\u003e list\u003c/code\u003e to store information,","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":" * can add to the list and get the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"public class TaskList {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"    private final ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"     * Add a task item to the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"     * @param item Task object representing a task.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"    public void addTask(Task item) {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"        list.add(item);","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"     * Getter method, returns the list","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"     * @return ArrayList\u003cTask\u003e list","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"        return list;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ShaoYurui":32}},{"path":"src/main/java/com/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":" * Represents a task todo.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":"    protected String type \u003d \"[T]\";","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"     * Constructor of the Todo, stores the description.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"     * @param description String object representing the information about the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"        super(description);","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"    public String toString() {","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"        String status \u003d null;","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"        if (this.isDone){","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"            status \u003d \"[X]\";","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"        } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"            status \u003d \"[ ]\";","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"        return this.type + status +  super.toString();","lastModifiedDate":"2021-09-10"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"ShaoYurui":34}},{"path":"src/main/java/com/time/Time.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.time;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":" * Represents a Time object, in the form of \"Sunday\", or in the form of \"1 Oct 2021\"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"public class Time {","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"    String time;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"     * Constructor of the Time, converts the String line into LocalDate if possible.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"     * @param line String object representing the time","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"    public Time(String line) {","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"        this.time \u003d interpret(line);","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"     * Converts the String line into LocalDate if possible. If cannot, then keep the original format","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"     * @param line String object representing the time","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"    public String interpret(String line) {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"        String time;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"        line \u003d line.trim();","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"            LocalDate d1 \u003d LocalDate.parse(line);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"            time \u003d d1.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ShaoYurui"},"content":"            time \u003d line;","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ShaoYurui"},"content":"        return time;","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ShaoYurui"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"ShaoYurui"},"content":"        return time;","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ShaoYurui":46}},{"path":"src/main/java/com/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ShaoYurui"},"content":"package com.ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ShaoYurui"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ShaoYurui"},"content":" * Represents an ui interface of duke that help to auto indent the duke output to users.","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ShaoYurui"},"content":" * outputLines to store the lines that duke want to output, LineCount is the number of lines","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ShaoYurui"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ShaoYurui"},"content":"public class UI {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ShaoYurui"},"content":"    private String[] outputLines \u003d new String[100];","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ShaoYurui"},"content":"    private int LineCount \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ShaoYurui"},"content":"    private final static String LINESEPARATER \u003d \"\\t______________________________________________________________________\";","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ShaoYurui"},"content":"     * Display the welcome messages and Duke logo","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ShaoYurui"},"content":"    public void welcome(){","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ShaoYurui"},"content":"        printLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ShaoYurui"},"content":"        System.out.println(\"\\tHello from\");","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ShaoYurui"},"content":"        System.out.println(\"\\t ____        _        \");","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ShaoYurui"},"content":"        System.out.println(\"\\t| _ \\\\ _   _| | _____ \");","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ShaoYurui"},"content":"        System.out.println(\"\\t| | | | | | | |/ / _ \\\\\");","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ShaoYurui"},"content":"        System.out.println(\"\\t| |_| | |_| |   \u003c  __/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ShaoYurui"},"content":"        System.out.println(\"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\");","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ShaoYurui"},"content":"        endLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ShaoYurui"},"content":"     * Prints the line separator","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ShaoYurui"},"content":"    public void printLine() {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ShaoYurui"},"content":"        System.out.println(LINESEPARATER);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ShaoYurui"},"content":"     * Store the line output into outputLines, waiting to output.","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ShaoYurui"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ShaoYurui"},"content":"     * @param line a single line that Duke wants to output","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ShaoYurui"},"content":"    public void print(String line) {","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ShaoYurui"},"content":"        outputLines[LineCount++] \u003d line;","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ShaoYurui"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"ShaoYurui"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ShaoYurui"},"content":"     * auto indent and output all the lines that duke want to output so that the entire output looks neat.","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ShaoYurui"},"content":"     * and print a line separator at the end.","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ShaoYurui"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ShaoYurui"},"content":"    public void endLine() {","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ShaoYurui"},"content":"        int max_len \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"ShaoYurui"},"content":"        for (int i \u003d 0; i \u003c LineCount; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ShaoYurui"},"content":"            if (outputLines[i].length() \u003e max_len) {","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ShaoYurui"},"content":"                max_len \u003d outputLines[i].length();","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"ShaoYurui"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"ShaoYurui"},"content":"        for (int i \u003d 0; i \u003c LineCount; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"ShaoYurui"},"content":"            for (int j \u003d 0; j \u003c LINESEPARATER.length() - max_len + 3; j++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"ShaoYurui"},"content":"                System.out.print(\" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"ShaoYurui"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"ShaoYurui"},"content":"            System.out.println(outputLines[i]);","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ShaoYurui"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ShaoYurui"},"content":"        printLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"ShaoYurui"},"content":"        System.out.print(\"\\t\");","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"ShaoYurui"},"content":"        LineCount \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"ShaoYurui"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"ShaoYurui"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ShaoYurui":64}}]
