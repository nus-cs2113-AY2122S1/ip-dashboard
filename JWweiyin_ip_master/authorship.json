[{"path":"myDirectory/myFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"D | 0 | eat bread | 2021/09/20 1600","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"T | 0 | water bottle","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"T | 0 | cry","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"T | 0 | oowoo","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"T | 1 | oowoo javer","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"JWweiyin":5}},{"path":"myDirectory/myFileCopy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"D | 0 | eat bread | 2021/09/20 1600","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"T | 0 | water bottle","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"T | 0 | cry","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"T | 0 | oowoo","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"T | 1 | oowoo javer","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"JWweiyin":5}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-20"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"    public static final String DIVIDER_LINE \u003d \"\\t__________________________________________________\";","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"     * Prints the divider line before and after each printed message.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"    public static void printLine() {","lastModifiedDate":"2021-08-14"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(DIVIDER_LINE);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-14"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-14"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"     * Prints the greeting message at the start when the program runs.","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"    public static void Greet() {","lastModifiedDate":"2021-08-14"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"        printLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke, your friendly agenda chatbot!\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"                + \"\\tIs there anything I can do for you today?\");","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"        printLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"JWweiyin"},"content":"     * Prints the goodbye message right before the program ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"JWweiyin"},"content":"    public static void Bye() {","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"JWweiyin"},"content":"        printLine();","lastModifiedDate":"2021-08-14"},{"lineNumber":30,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tBye. Have a productive day!\");","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"JWweiyin"},"content":"        printLine();","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"JWweiyin"},"content":"     * Prints the Duke logo.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"JWweiyin"},"content":"    private static void DukeLogo() {","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"JWweiyin"},"content":"        String logo \u003d \" ____        _        \" + System.lineSeparator()","lastModifiedDate":"2021-09-05"},{"lineNumber":39,"author":{"gitId":"JWweiyin"},"content":"                + \"|  _ \\\\ _   _| | _____ \" + System.lineSeparator()","lastModifiedDate":"2021-09-05"},{"lineNumber":40,"author":{"gitId":"JWweiyin"},"content":"                + \"| | | | | | | |/ / _ \\\\\" + System.lineSeparator()","lastModifiedDate":"2021-09-05"},{"lineNumber":41,"author":{"gitId":"JWweiyin"},"content":"                + \"| |_| | |_| |   \u003c  __/\" + System.lineSeparator()","lastModifiedDate":"2021-09-05"},{"lineNumber":42,"author":{"gitId":"JWweiyin"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"JWweiyin"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"JWweiyin"},"content":"        DukeLogo();","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"JWweiyin"},"content":"        Greet();","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"JWweiyin"},"content":"        Storage.initialiseFiles();","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"JWweiyin"},"content":"        Storage.startupScanFileContents();","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"JWweiyin"},"content":"        Scanner in \u003d Ui.getScanner();","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"JWweiyin"},"content":"        String line \u003d Ui.getLine(in);","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"JWweiyin"},"content":"        String[] words \u003d Ui.getWords(line);","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"JWweiyin"},"content":"        Parser.programLogic(in, line, words);","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"JWweiyin"},"content":"        Bye();","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":57,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JWweiyin":54,"-":4}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"public class Parser {","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"     * Calls the appropriate command based on the input by the user.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"     * @param in scanner that takes in the input","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"     * @param line the line of input given by the user","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"     * @param words the array consisting of the words in the line of input","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"    static void programLogic(Scanner in, String line, String[] words) {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"        while (!words[0].equals(\"bye\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"            try {","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"                switch (words[0]) {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"                case \"todo\":","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"                    TaskList.prepareToAddTodo(line);","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"                case \"deadline\":","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"                    TaskList.prepareToAddDeadline(line);","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"                case \"event\":","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"                    TaskList.prepareToAddEvent(line);","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"JWweiyin"},"content":"                case \"list\":","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"JWweiyin"},"content":"                    TaskList.listTasks();","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"JWweiyin"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"JWweiyin"},"content":"                case \"done\":","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"JWweiyin"},"content":"                    int markedIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"JWweiyin"},"content":"                    TaskList.markAsDone(markedIndex);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"JWweiyin"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"JWweiyin"},"content":"                case \"delete\":","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"JWweiyin"},"content":"                    int deleteIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"JWweiyin"},"content":"                    TaskList.deleteTask(deleteIndex);","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"JWweiyin"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"JWweiyin"},"content":"                case \"find\":","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"JWweiyin"},"content":"                    TaskList.findTasks(line.substring(4).trim());","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"JWweiyin"},"content":"                    break;","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"JWweiyin"},"content":"                case \"filter\":","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"JWweiyin"},"content":"                    TaskList.filterDates(line);","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"JWweiyin"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"JWweiyin"},"content":"                default:","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"JWweiyin"},"content":"                    TaskList.printInvalid();","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"JWweiyin"},"content":"                    break;","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"JWweiyin"},"content":"                }","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"JWweiyin"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"JWweiyin"},"content":"                TaskList.printInvalid();","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"JWweiyin"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"JWweiyin"},"content":"                Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"JWweiyin"},"content":"                System.out.println(\"\\tThe index has to be an integer.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"JWweiyin"},"content":"                Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"JWweiyin"},"content":"            } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"JWweiyin"},"content":"                Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"JWweiyin"},"content":"                System.out.println(\"\\tThis is not a valid date and time. \" +","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"JWweiyin"},"content":"                        \"Deadline and Event tasks require\" + System.lineSeparator() +","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"JWweiyin"},"content":"                        \"\\tdate and time (24hr format) in the following format: \");","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"JWweiyin"},"content":"                System.out.println(\"\\tyyyy/mm/dd hhmm\");","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"JWweiyin"},"content":"                Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"JWweiyin"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"JWweiyin"},"content":"            line \u003d Ui.getLine(in);","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"JWweiyin"},"content":"            words \u003d Ui.getWords(line);","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"JWweiyin":64}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"import java.io.File;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"import java.nio.file.StandardCopyOption;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"public class Storage {","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"     * Writes content into the file myFile.txt.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"     * @param content the content to be written into the file","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"    public static void writeToFile(String content) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"        FileWriter fw \u003d new FileWriter(\"./myDirectory/myFile.txt\", true);","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"        fw.write(content);","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"        fw.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"        copyToFile();","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"     * Copies all the contents of myFile.txt into myFileCopy.txt.","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"JWweiyin"},"content":"    private static void copyToFile() throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"JWweiyin"},"content":"        Files.copy(Paths.get(\"./myDirectory/myFile.txt\"),","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"JWweiyin"},"content":"                Paths.get(\"./myDirectory/myFileCopy.txt\"), StandardCopyOption.REPLACE_EXISTING);","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"JWweiyin"},"content":"     * Deletes the storage content of the task at index index.","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"JWweiyin"},"content":"     * @param index the line in the file myFile.txt to be deleted","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"JWweiyin"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"JWweiyin"},"content":"    public static void deleteEntry(int index) throws IOException {","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"JWweiyin"},"content":"        File f1 \u003d new File(\"./myDirectory/myFileCopy.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"JWweiyin"},"content":"        FileWriter fwClear \u003d new FileWriter(\"./myDirectory/myFile.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"JWweiyin"},"content":"        fwClear.write(\"\");","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"JWweiyin"},"content":"        fwClear.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"JWweiyin"},"content":"        FileWriter fw \u003d new FileWriter(\"./myDirectory/myFile.txt\", true);","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"JWweiyin"},"content":"        Scanner s \u003d new Scanner(f1);","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"JWweiyin"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"JWweiyin"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"JWweiyin"},"content":"            if (i !\u003d index) {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"JWweiyin"},"content":"                String word \u003d s.nextLine() + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"JWweiyin"},"content":"                fw.write(word);","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"JWweiyin"},"content":"            } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"JWweiyin"},"content":"                String skip \u003d s.nextLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"JWweiyin"},"content":"                fw.write(\"\");","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"JWweiyin"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"JWweiyin"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"JWweiyin"},"content":"        fw.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"JWweiyin"},"content":"        s.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"JWweiyin"},"content":"        copyToFile();","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"JWweiyin"},"content":"     * Changes the content of the file myFile.txt at line index to show the task as done","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"JWweiyin"},"content":"     * @param index the line to be overwritten as a completed task","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"JWweiyin"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"JWweiyin"},"content":"    public static void markEntryDone(int index) throws IOException {","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"JWweiyin"},"content":"        File f1 \u003d new File(\"./myDirectory/myFileCopy.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"JWweiyin"},"content":"        FileWriter fwClear \u003d new FileWriter(\"./myDirectory/myFile.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"JWweiyin"},"content":"        fwClear.write(\"\");","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"JWweiyin"},"content":"        fwClear.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"JWweiyin"},"content":"        FileWriter fw \u003d new FileWriter(\"./myDirectory/myFile.txt\", true);","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"JWweiyin"},"content":"        Scanner s \u003d new Scanner(f1);","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"JWweiyin"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"JWweiyin"},"content":"        while (s.hasNextLine()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"JWweiyin"},"content":"            if (i !\u003d index) {","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"JWweiyin"},"content":"                String word \u003d s.nextLine() + System.lineSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"JWweiyin"},"content":"                fw.write(word);","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"JWweiyin"},"content":"            } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"JWweiyin"},"content":"                String skip \u003d s.nextLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"JWweiyin"},"content":"                String[] words \u003d skip.split(\"\\\\|\");","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"JWweiyin"},"content":"                words[1] \u003d \"1\";","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"JWweiyin"},"content":"                String together \u003d words[0].trim() + \" | \" + words[1].trim() + \" | \" + words[2].trim();","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"JWweiyin"},"content":"                if (words.length \u003e 3) {","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"JWweiyin"},"content":"                    together \u003d together + \" | \" + words[3].trim();","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"JWweiyin"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"JWweiyin"},"content":"                fw.write(together + System.lineSeparator());","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"JWweiyin"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"JWweiyin"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"JWweiyin"},"content":"        fw.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"JWweiyin"},"content":"        s.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"JWweiyin"},"content":"        copyToFile();","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"JWweiyin"},"content":"     * Creates the directory myDirectory and the files myFile.txt and myFileCopy.txt if","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"JWweiyin"},"content":"     * they have not been created yet.","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"JWweiyin"},"content":"    public static void initialiseFiles() {","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"JWweiyin"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"JWweiyin"},"content":"            File dir \u003d new File(\"./myDirectory\");","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"JWweiyin"},"content":"            if (dir.mkdir()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"JWweiyin"},"content":"                System.out.println(\"Directory created: \" + dir.getName());","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"JWweiyin"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"JWweiyin"},"content":"            File f \u003d new File(\"./myDirectory/myFile.txt\");","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"JWweiyin"},"content":"            File f1 \u003d new File(\"./myDirectory/myFileCopy.txt\");","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"JWweiyin"},"content":"            if (f.createNewFile()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"JWweiyin"},"content":"                System.out.println(\"File created: \" + f.getName());","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"JWweiyin"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"JWweiyin"},"content":"            if (f1.createNewFile()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"JWweiyin"},"content":"                System.out.println(\"File created: \" + f1.getName());","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"JWweiyin"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"JWweiyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"JWweiyin"},"content":"     * Reads in the input from the file myFile.txt and sends each line to the task processor.","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"JWweiyin"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"JWweiyin"},"content":"    public static void startupScanFileContents() throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"JWweiyin"},"content":"        File f \u003d new File(\"./myDirectory/myFile.txt\");","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"JWweiyin"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"JWweiyin"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"JWweiyin"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"JWweiyin"},"content":"            TaskProcessor.callTaskMethod(s.nextLine(), index);","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"JWweiyin"},"content":"            index +\u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"JWweiyin":130}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"import exceptions.*;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"import tasks.*;","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"public class TaskList {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"    public static final int SLASH_INDEX_DEADLINE \u003d 8;","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"    public static final int SLASH_INDEX_EVENT \u003d 5;","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"    public static final String TODO_VALID \u003d \"\\t- todo Read book\";","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"    public static final String EVENT_VALID \u003d \"\\t- event Book club /at 2021/09/20 1400\";","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"    public static final String DEADLINE_VALID \u003d \"\\t- deadline Return book /by 2021/09/24 1600\";","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"    private static int taskCount \u003d 0;","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"     * Prints an error message when an invalid command has been entered.","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"    public static void printInvalid() {","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tHey bud, the command you printed is invalid.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tHere\u0027s some examples of valid commands:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(TODO_VALID);","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(EVENT_VALID);","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(DEADLINE_VALID);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"JWweiyin"},"content":"     * Trims the entered command to get the description of the todo task, adds the todo task to","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"JWweiyin"},"content":"     * the list of tasks and prints a message informing the user that the todo task has been","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"JWweiyin"},"content":"     * added.","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"JWweiyin"},"content":"     * @param description the line of input given by the parser","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"JWweiyin"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"JWweiyin"},"content":"    public static void prepareToAddTodo(String description) throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"JWweiyin"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"JWweiyin"},"content":"            String todoDescription \u003d trimTodoDescription(description);","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"JWweiyin"},"content":"            printNewTodo(todoDescription);","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"JWweiyin"},"content":"            Storage.writeToFile(\"T | 0 | \" + todoDescription.trim() + System.lineSeparator());","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"JWweiyin"},"content":"        } catch (EmptyTodoException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tHey bud, the command you printed is invalid.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tA todo can\u0027t be empty. Here\u0027s a valid example:\");","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(TODO_VALID);","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"JWweiyin"},"content":"    private static String trimTodoDescription(String description) throws EmptyTodoException {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"JWweiyin"},"content":"        String todoDescription \u003d description.substring(4).trim();","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"JWweiyin"},"content":"        if (todoDescription.isEmpty()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":59,"author":{"gitId":"JWweiyin"},"content":"            throw new EmptyTodoException();","lastModifiedDate":"2021-09-05"},{"lineNumber":60,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":61,"author":{"gitId":"JWweiyin"},"content":"        return todoDescription;","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":63,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"JWweiyin"},"content":"    private static void printNewTodo(String todoDescription) {","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"JWweiyin"},"content":"        addTodo(todoDescription);","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":68,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tAdded todo: \" + todoDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":70,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":71,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":72,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"JWweiyin"},"content":"     * Adds a todo task with the description todoDescription to the list of tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"JWweiyin"},"content":"     * @param todoDescription the description of the todo task.","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"JWweiyin"},"content":"    public static void addTodo(String todoDescription) {","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"JWweiyin"},"content":"        tasks.add(new Todo(todoDescription));","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"JWweiyin"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"JWweiyin"},"content":"     * Trims the entered command to get the description and date/time of the deadline task, adds the","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"JWweiyin"},"content":"     * deadline task to the list of tasks and prints a message informing","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"JWweiyin"},"content":"     * the user that the deadline task has been added.","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"JWweiyin"},"content":"     * @param description the line of input given by the parser.","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"JWweiyin"},"content":"    public static void prepareToAddDeadline(String description) {","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"JWweiyin"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"JWweiyin"},"content":"            String[] deadline \u003d trimDeadlineDescription(description);","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"JWweiyin"},"content":"            printNewDeadline(deadline[0], deadline[1]);","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"JWweiyin"},"content":"            Storage.writeToFile(\"D | 0 | \" + deadline[0].trim() + \" | \" +","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"JWweiyin"},"content":"                    deadline[1].trim() + System.lineSeparator());","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"JWweiyin"},"content":"        } catch (NoSlashDeadlineException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":95,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tHey bud, the command you printed is invalid.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tDeadline commands require a slash. Here\u0027s a valid example:\");","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(DEADLINE_VALID);","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"JWweiyin"},"content":"        } catch (DeadlineEmptyException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tHey bud, the command you printed is invalid.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tThe description or deadline of a deadline command can\u0027t be empty. \" +","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"JWweiyin"},"content":"                    \"Here\u0027s a valid example: \");","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(DEADLINE_VALID);","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"JWweiyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":107,"author":{"gitId":"JWweiyin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":109,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":111,"author":{"gitId":"JWweiyin"},"content":"    private static String[] trimDeadlineDescription(String description) throws NoSlashDeadlineException,","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"JWweiyin"},"content":"            DeadlineEmptyException {","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"JWweiyin"},"content":"        int slashIndex \u003d description.indexOf(\"by\");","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"JWweiyin"},"content":"        String[] deadline \u003d new String[2];","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"JWweiyin"},"content":"        if (slashIndex \u003e SLASH_INDEX_DEADLINE) {","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"JWweiyin"},"content":"            deadline[0] \u003d description.substring(SLASH_INDEX_DEADLINE, slashIndex - 1).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"JWweiyin"},"content":"            deadline[1] \u003d description.substring(slashIndex + 3).trim();","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"JWweiyin"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":119,"author":{"gitId":"JWweiyin"},"content":"            throw new NoSlashDeadlineException();","lastModifiedDate":"2021-09-05"},{"lineNumber":120,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":121,"author":{"gitId":"JWweiyin"},"content":"        if (deadline[0].isEmpty() || deadline[1].isEmpty()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":122,"author":{"gitId":"JWweiyin"},"content":"            throw new DeadlineEmptyException();","lastModifiedDate":"2021-09-05"},{"lineNumber":123,"author":{"gitId":"JWweiyin"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":124,"author":{"gitId":"JWweiyin"},"content":"            return deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"JWweiyin"},"content":"    private static void printNewDeadline(String deadlineDescription, String deadlineBy) {","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"JWweiyin"},"content":"        addDeadline(deadlineDescription, deadlineBy);","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tAdded deadline: \" + deadlineDescription + \" (by: \" + deadlineBy + \u0027)\u0027);","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":135,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"JWweiyin"},"content":"     * Adds a deadline task with the description deadlineDescription","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"JWweiyin"},"content":"     * and the deadline deadlineBy to the list of tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"JWweiyin"},"content":"     * @param deadlineDescription the description of the deadline task","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"JWweiyin"},"content":"     * @param deadlineBy the date/time when the deadline must be completed","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"JWweiyin"},"content":"    public static void addDeadline(String deadlineDescription, String deadlineBy) {","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"JWweiyin"},"content":"        tasks.add(new Deadline(deadlineDescription, deadlineBy));","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"JWweiyin"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"JWweiyin"},"content":"     * Trims the entered command to get the description and date/time of the event task, adds the","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"JWweiyin"},"content":"     * event task to the list of tasks and prints a message informing","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"JWweiyin"},"content":"     * the user that the event task has been added.","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"JWweiyin"},"content":"     * @param description the line of input given by the parser","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"JWweiyin"},"content":"    public static void prepareToAddEvent(String description) {","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"JWweiyin"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"JWweiyin"},"content":"            String[] event \u003d trimEventDescription(description);","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"JWweiyin"},"content":"            printNewEvent(event[0], event[1]);","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"JWweiyin"},"content":"            Storage.writeToFile(\"E | 0 | \" + event[0].trim() + \" | \" +","lastModifiedDate":"2021-09-20"},{"lineNumber":157,"author":{"gitId":"JWweiyin"},"content":"                    event[1] + System.lineSeparator());","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"JWweiyin"},"content":"        } catch (NoSlashEventException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":160,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tHey bud, the command you printed is invalid.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":161,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tEvent commands require a slash. Here\u0027s a valid example:\");","lastModifiedDate":"2021-09-05"},{"lineNumber":162,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(EVENT_VALID);","lastModifiedDate":"2021-09-20"},{"lineNumber":163,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":164,"author":{"gitId":"JWweiyin"},"content":"        } catch (EventEmptyException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":166,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tHey bud, the command you printed is invalid.\");","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tThe description or event time of a event command can\u0027t be empty. \" +","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"JWweiyin"},"content":"                    \"Here\u0027s a valid example: \");","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(EVENT_VALID);","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":171,"author":{"gitId":"JWweiyin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":172,"author":{"gitId":"JWweiyin"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-12"},{"lineNumber":173,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"JWweiyin"},"content":"    public static String[] trimEventDescription(String description) throws NoSlashEventException, EventEmptyException {","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"JWweiyin"},"content":"        int slashIndex \u003d description.indexOf(\"/at\");","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"JWweiyin"},"content":"        String[] event \u003d new String[2];","lastModifiedDate":"2021-09-05"},{"lineNumber":179,"author":{"gitId":"JWweiyin"},"content":"        if (slashIndex \u003e SLASH_INDEX_EVENT) {","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"JWweiyin"},"content":"            event[0] \u003d description.substring(SLASH_INDEX_EVENT, slashIndex - 1).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":181,"author":{"gitId":"JWweiyin"},"content":"            event[1] \u003d description.substring(slashIndex + 3).trim();","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"JWweiyin"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"JWweiyin"},"content":"            throw new NoSlashEventException();","lastModifiedDate":"2021-09-05"},{"lineNumber":184,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"JWweiyin"},"content":"        if (event[0].isEmpty() || event[1].isEmpty()) {","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"JWweiyin"},"content":"            throw new EventEmptyException();","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"JWweiyin"},"content":"        } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"JWweiyin"},"content":"            return event;","lastModifiedDate":"2021-09-05"},{"lineNumber":189,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":190,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":191,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":192,"author":{"gitId":"JWweiyin"},"content":"    private static void printNewEvent(String eventDescription, String eventAt) {","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"JWweiyin"},"content":"        addEvent(eventDescription, eventAt);","lastModifiedDate":"2021-09-20"},{"lineNumber":194,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":195,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tAdded event: \" + eventDescription + \" (at: \" + eventAt + \u0027)\u0027);","lastModifiedDate":"2021-08-29"},{"lineNumber":196,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":198,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":199,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"JWweiyin"},"content":"     * Adds an event task with the description eventDescription","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"JWweiyin"},"content":"     * and the event date/time eventAt to the list of tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"JWweiyin"},"content":"     * @param eventDescription the description of the event task","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"JWweiyin"},"content":"     * @param eventAt the date/time at which the event happens","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"JWweiyin"},"content":"    public static void addEvent(String eventDescription, String eventAt) {","lastModifiedDate":"2021-09-20"},{"lineNumber":206,"author":{"gitId":"JWweiyin"},"content":"        tasks.add(new Event(eventDescription, eventAt));","lastModifiedDate":"2021-09-12"},{"lineNumber":207,"author":{"gitId":"JWweiyin"},"content":"        taskCount +\u003d 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":208,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":209,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":210,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"JWweiyin"},"content":"     * Lists all the tasks currently available.","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"JWweiyin"},"content":"    public static void listTasks() {","lastModifiedDate":"2021-09-20"},{"lineNumber":214,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":215,"author":{"gitId":"JWweiyin"},"content":"        if (taskCount \u003e 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":216,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":217,"author":{"gitId":"JWweiyin"},"content":"            printTasks(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":218,"author":{"gitId":"JWweiyin"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":219,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tYou have no tasks.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":220,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":221,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":222,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":223,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":224,"author":{"gitId":"JWweiyin"},"content":"    private static void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":225,"author":{"gitId":"JWweiyin"},"content":"        int i \u003d 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":226,"author":{"gitId":"JWweiyin"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":227,"author":{"gitId":"JWweiyin"},"content":"            System.out.print(\u0027\\t\u0027);","lastModifiedDate":"2021-08-21"},{"lineNumber":228,"author":{"gitId":"JWweiyin"},"content":"            System.out.print(i + \". \");","lastModifiedDate":"2021-09-12"},{"lineNumber":229,"author":{"gitId":"JWweiyin"},"content":"            System.out.print(t.toString() + System.lineSeparator());","lastModifiedDate":"2021-09-12"},{"lineNumber":230,"author":{"gitId":"JWweiyin"},"content":"            i +\u003d 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":231,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":232,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":233,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":234,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":235,"author":{"gitId":"JWweiyin"},"content":"     * Marks the task of index index as done and prints a message informing the user that","lastModifiedDate":"2021-09-23"},{"lineNumber":236,"author":{"gitId":"JWweiyin"},"content":"     * the task has been marked as done","lastModifiedDate":"2021-09-23"},{"lineNumber":237,"author":{"gitId":"JWweiyin"},"content":"     * @param index index of the task to be marked done","lastModifiedDate":"2021-09-23"},{"lineNumber":238,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":239,"author":{"gitId":"JWweiyin"},"content":"  ","lastModifiedDate":"2021-09-23"},{"lineNumber":240,"author":{"gitId":"JWweiyin"},"content":"    public static void markAsDone(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":241,"author":{"gitId":"JWweiyin"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":242,"author":{"gitId":"JWweiyin"},"content":"            printMarkedTask(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":243,"author":{"gitId":"JWweiyin"},"content":"        } catch (IndexOutOfBoundsException | IOException | NumberFormatException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":244,"author":{"gitId":"JWweiyin"},"content":"            printTaskNotExist();","lastModifiedDate":"2021-09-20"},{"lineNumber":245,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":246,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":247,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":248,"author":{"gitId":"JWweiyin"},"content":"    private static void printMarkedTask(int index) throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":249,"author":{"gitId":"JWweiyin"},"content":"        String taskDescription \u003d tasks.get(index).getDescription();","lastModifiedDate":"2021-09-12"},{"lineNumber":250,"author":{"gitId":"JWweiyin"},"content":"        markTaskAsDone(index);","lastModifiedDate":"2021-09-14"},{"lineNumber":251,"author":{"gitId":"JWweiyin"},"content":"        Storage.markEntryDone(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":252,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":253,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tNice! You completed this task:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":254,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\t  [X] \" + taskDescription);","lastModifiedDate":"2021-09-12"},{"lineNumber":255,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":256,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":257,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":258,"author":{"gitId":"JWweiyin"},"content":"    public static void markTaskAsDone(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":259,"author":{"gitId":"JWweiyin"},"content":"        tasks.get(index).setAsDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":260,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":261,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":262,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":263,"author":{"gitId":"JWweiyin"},"content":"     * Deletes the task of index index, and prints a message to inform the user that","lastModifiedDate":"2021-09-23"},{"lineNumber":264,"author":{"gitId":"JWweiyin"},"content":"     * the task has been deleted.","lastModifiedDate":"2021-09-23"},{"lineNumber":265,"author":{"gitId":"JWweiyin"},"content":"     * @param index index of the task to be deleted","lastModifiedDate":"2021-09-23"},{"lineNumber":266,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":267,"author":{"gitId":"JWweiyin"},"content":"    public static void deleteTask(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":268,"author":{"gitId":"JWweiyin"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":269,"author":{"gitId":"JWweiyin"},"content":"            printDeleteTask(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":270,"author":{"gitId":"JWweiyin"},"content":"        } catch (IndexOutOfBoundsException | IOException | NumberFormatException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":271,"author":{"gitId":"JWweiyin"},"content":"            printTaskNotExist();","lastModifiedDate":"2021-09-20"},{"lineNumber":272,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":273,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":274,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":275,"author":{"gitId":"JWweiyin"},"content":"    private static void printTaskNotExist() {","lastModifiedDate":"2021-09-20"},{"lineNumber":276,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":277,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tThat task doesn\u0027t exist.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":278,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":279,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":280,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":281,"author":{"gitId":"JWweiyin"},"content":"    private static void printDeleteTask(int index) throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":282,"author":{"gitId":"JWweiyin"},"content":"        String taskDescription \u003d tasks.get(index).toString();","lastModifiedDate":"2021-09-12"},{"lineNumber":283,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":284,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\tSeems like you didn\u0027t want this task:\");","lastModifiedDate":"2021-09-12"},{"lineNumber":285,"author":{"gitId":"JWweiyin"},"content":"        System.out.println(\"\\t\" + taskDescription);","lastModifiedDate":"2021-09-12"},{"lineNumber":286,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":287,"author":{"gitId":"JWweiyin"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":288,"author":{"gitId":"JWweiyin"},"content":"        Storage.deleteEntry(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":289,"author":{"gitId":"JWweiyin"},"content":"        taskCount -\u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":290,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":291,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":292,"author":{"gitId":"JWweiyin"},"content":"    public static void findTasks(String keyword) {","lastModifiedDate":"2021-09-20"},{"lineNumber":293,"author":{"gitId":"JWweiyin"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-20"},{"lineNumber":294,"author":{"gitId":"JWweiyin"},"content":"                .filter((t) -\u003e t.getDescription().toLowerCase().contains(keyword.toLowerCase()))","lastModifiedDate":"2021-09-20"},{"lineNumber":295,"author":{"gitId":"JWweiyin"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-20"},{"lineNumber":296,"author":{"gitId":"JWweiyin"},"content":"        if (!filteredList.isEmpty()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":297,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":298,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tHere are the matching tasks in your list: \");","lastModifiedDate":"2021-09-20"},{"lineNumber":299,"author":{"gitId":"JWweiyin"},"content":"            printTasks(filteredList);","lastModifiedDate":"2021-09-20"},{"lineNumber":300,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":301,"author":{"gitId":"JWweiyin"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":302,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":303,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\t That keyword did not turn up any searches.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":304,"author":{"gitId":"JWweiyin"},"content":"            Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":305,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":306,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":307,"author":{"gitId":"JWweiyin"},"content":"  ","lastModifiedDate":"2021-09-23"},{"lineNumber":308,"author":{"gitId":"JWweiyin"},"content":"    public static void filterDates(String content) {","lastModifiedDate":"2021-09-20"},{"lineNumber":309,"author":{"gitId":"JWweiyin"},"content":"        String dateString \u003d content.substring(7);","lastModifiedDate":"2021-09-20"},{"lineNumber":310,"author":{"gitId":"JWweiyin"},"content":"        LocalDate ld \u003d TimeHandler.getDate(dateString);","lastModifiedDate":"2021-09-20"},{"lineNumber":311,"author":{"gitId":"JWweiyin"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-20"},{"lineNumber":312,"author":{"gitId":"JWweiyin"},"content":"                .filter((t) -\u003e t instanceof Deadline || t instanceof Event)","lastModifiedDate":"2021-09-20"},{"lineNumber":313,"author":{"gitId":"JWweiyin"},"content":"                .filter((t) -\u003e Task.getDate(t).equals(ld))","lastModifiedDate":"2021-09-20"},{"lineNumber":314,"author":{"gitId":"JWweiyin"},"content":"                .sorted(Comparator.comparing(Task::getTime))","lastModifiedDate":"2021-09-20"},{"lineNumber":315,"author":{"gitId":"JWweiyin"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-20"},{"lineNumber":316,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":317,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":318,"author":{"gitId":"JWweiyin"},"content":"        if (!filteredList.isEmpty()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":319,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tThese are the tasks for \" + ld + \": \");","lastModifiedDate":"2021-09-20"},{"lineNumber":320,"author":{"gitId":"JWweiyin"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":321,"author":{"gitId":"JWweiyin"},"content":"            for (Task t : filteredList) {","lastModifiedDate":"2021-09-20"},{"lineNumber":322,"author":{"gitId":"JWweiyin"},"content":"                System.out.println(\"\\t\" + i + \". \" + t.toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":323,"author":{"gitId":"JWweiyin"},"content":"                i +\u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":324,"author":{"gitId":"JWweiyin"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":325,"author":{"gitId":"JWweiyin"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":326,"author":{"gitId":"JWweiyin"},"content":"            System.out.println(\"\\tNo tasks set for \" + ld + \".\");","lastModifiedDate":"2021-09-20"},{"lineNumber":327,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":328,"author":{"gitId":"JWweiyin"},"content":"        Duke.printLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":329,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":330,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JWweiyin":330}},{"path":"src/main/java/TaskProcessor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"public class TaskProcessor {","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"     * Takes in one line of input from the scanner and adds the task to the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"     * @param command the line of input from the scanner","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"     * @param index the index of the current task","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"    public static void callTaskMethod(String command, int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"        String[] words \u003d command.split(\"\\\\|\");","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"        switch (words[0].trim()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"        case \"T\":","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"            TaskList.addTodo(words[2].trim());","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"        case \"D\":","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"            TaskList.addDeadline(words[2].trim(),words[3].trim());","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"        case \"E\":","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"            TaskList.addEvent(words[2].trim(), words[3].trim());","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"        if (words[1].trim().equals(\"1\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"            TaskList.markTaskAsDone(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"JWweiyin":25}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"public class Ui {","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"    public static String getLine(Scanner in) {","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"        return line;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"    public static Scanner getScanner() {","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"        return in;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"     * Breaks up a line of input into words and stores the words in an array.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"     * @param line the line of input to be broken up","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"     * @return the array containing all the words in the line of input","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"    public static String[] getWords(String line) {","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"        String[] words \u003d line.split(\" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"        return words;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"JWweiyin":23}},{"path":"src/main/java/exceptions/DeadlineEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package exceptions;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"public class DeadlineEmptyException extends DukeException{","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JWweiyin":4}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package exceptions;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JWweiyin":4}},{"path":"src/main/java/exceptions/EmptyTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package exceptions;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"public class EmptyTodoException extends DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JWweiyin":4}},{"path":"src/main/java/exceptions/EventEmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package exceptions;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"public class EventEmptyException extends DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JWweiyin":4}},{"path":"src/main/java/exceptions/NoSlashDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package exceptions;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"public class NoSlashDeadlineException extends DukeException{","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JWweiyin":4}},{"path":"src/main/java/exceptions/NoSlashEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package exceptions;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"public class NoSlashEventException extends DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"JWweiyin":4}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"        String[] when \u003d by.trim().split(\" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"        this.date \u003d TimeHandler.getDate(when[0].trim());","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"        this.time \u003d TimeHandler.getTime(when[1].trim());","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"    public String toString(){","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + TimeHandler.formatDate(date) + \" \"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"                + TimeHandler.formatTime(time) + \u0027)\u0027;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"JWweiyin":22}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"        String[] when \u003d at.trim().split(\" \");","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"        this.date \u003d TimeHandler.getDate(when[0].trim());","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"        this.time \u003d TimeHandler.getTime(when[1].trim());","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + TimeHandler.formatDate(date)","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"                + \" \" + TimeHandler.formatTime(time) + \u0027)\u0027;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"JWweiyin":22}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"    private String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"    private boolean hasDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"        hasDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"    public static LocalDate getDate(Task task) {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"            return ((Event) task).date;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"            return ((Deadline)task).date;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"        } else return null;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"    public static LocalTime getTime(Task task) {","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"JWweiyin"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"JWweiyin"},"content":"            return ((Event) task).time;","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"JWweiyin"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"JWweiyin"},"content":"            return ((Deadline)task).time;","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"JWweiyin"},"content":"        } else return null;","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"JWweiyin"},"content":"     * Returns the task\u0027s description.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"JWweiyin"},"content":"     * @return the description of the task","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"JWweiyin"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"JWweiyin"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":40,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"JWweiyin"},"content":"     * Returns the completion status of the task.","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"JWweiyin"},"content":"     * @return true if the task\u0027s hasDone variable is true, false otherwise","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"JWweiyin"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"JWweiyin"},"content":"        return hasDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":47,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":48,"author":{"gitId":"JWweiyin"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"JWweiyin"},"content":"     * Sets the completion status of the task as done.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"JWweiyin"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"JWweiyin"},"content":"    public void setAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"JWweiyin"},"content":"        hasDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":53,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":54,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":55,"author":{"gitId":"JWweiyin"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"JWweiyin"},"content":"        String hasDone \u003d isDone()? \"[X] \": \"[ ] \";","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"JWweiyin"},"content":"        return hasDone + description;","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"JWweiyin":60}},{"path":"src/main/java/tasks/TimeHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package tasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"public class TimeHandler {","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"    public static LocalDate getDate(String date) {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"        String[] ymdString \u003d date.split(\"/\");","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"        Integer[] ymd \u003d {0, 0, 0};","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"        for (int i \u003d 0; i \u003c 3; i +\u003d 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"            ymd[i] \u003d Integer.parseInt(ymdString[i].trim());","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"JWweiyin"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"JWweiyin"},"content":"        return LocalDate.of(ymd[0], ymd[1], ymd[2]);","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"JWweiyin"},"content":"    public static String formatDate(LocalDate ld) {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"JWweiyin"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy E\");","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"JWweiyin"},"content":"        return ld.format(dtf);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"JWweiyin"},"content":"    public static LocalTime getTime(String time){","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"JWweiyin"},"content":"        String hourString \u003d time.substring(0,2);","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"JWweiyin"},"content":"        String minuteString \u003d time.substring(2);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"JWweiyin"},"content":"        int hour \u003d Integer.parseInt(hourString);","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"JWweiyin"},"content":"        int minute \u003d Integer.parseInt(minuteString);","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"JWweiyin"},"content":"        return LocalTime.of(hour, minute);","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"JWweiyin"},"content":"    public static String formatTime(LocalTime lt) {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"JWweiyin"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"KK:mm a\");","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"JWweiyin"},"content":"        return lt.format(dtf);","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"JWweiyin":34}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"package tasks;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"JWweiyin"},"content":"    public String toString(){","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"JWweiyin"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"JWweiyin"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"JWweiyin":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JWweiyin"},"content":"todo Wei Yin: Answer CS2113 Tutorial Questions","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"JWweiyin"},"content":"deadline weekly 2113 quiz /by Monday","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"JWweiyin"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"JWweiyin"},"content":"event CS2113 lecture at Friday 4 to 6 pm","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"JWweiyin"},"content":"event CS2113 lecture /at Friday 4 to 6 pm","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"JWweiyin"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"JWweiyin"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"JWweiyin"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"JWweiyin":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JWweiyin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JWweiyin":1,"-":20}}]
