[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"# DukeProgram project template","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"3. After that, locate the `src/main/java/DukeProgram.java` file, right-click it, and choose `Run DukeProgram.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LouisLouis19":2,"-":22}},{"path":"src/main/java/Duke/Exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package Duke.Exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"    public static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"    public static void emptyTodoException() {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"Your todo command does not have an argument!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"To input a valid todo command, type \\\"todo (argument)\\\"!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    public static void invalidDeadlineException() {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"Your deadline command is invalid!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"To input a valid deadline command, type \\\"deadline (description) /by (deadline)\\\"!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public static void invalidEventException() {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"Your event command is invalid!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"To input a event command, type \\\"event (description) /at (when)\\\"!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    public static void invalidDoneException() {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"Your done command is invalid!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"To input a done command, type \\\"done (task index)\\\"!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"LouisLouis19":37}},{"path":"src/main/java/Duke/RunFile/DukeProgram.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package Duke.RunFile;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"import Duke.TaskTypes.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"import Duke.TaskTypes.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"import Duke.Exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"import Duke.TaskTypes.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"import Duke.TaskTypes.Todo;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"public class DukeProgram {","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"    //List of Special User Commands","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    public static final String EXIT_STRING \u003d \"bye\";","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    public static final String DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    //Other constants","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    public static final int NUM_OF_TASKS \u003d 100;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    public static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"    public static final String EVENT_KEYWORD \u003d \" /at\";","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    public static final String DEADLINE_KEYWORD \u003d \" /by\";","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"    public static final String GOODBYE_MESSAGE \u003d \" Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    public static void printList(Task[] taskList) {","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"        if (taskList.length \u003d\u003d 0) {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"            System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"            System.out.println(\" No Tasks here yet. Go include some tasks!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"            System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"            System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"            return;","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" Here are the tasks in your list:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"LouisLouis19"},"content":"        for (int i \u003d 0; i \u003c taskList.length; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"LouisLouis19"},"content":"            System.out.println(\" \" + (i + 1) + \". \" + taskList[i].toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"LouisLouis19"},"content":"    public static void printDukeGreet() {","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"LouisLouis19"},"content":"        //Greeting the User","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-19"},{"lineNumber":57,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" What can I do for you?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":58,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":60,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":61,"author":{"gitId":"LouisLouis19"},"content":"    public static boolean isNumeric(String strNum) {","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"LouisLouis19"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2021-08-25"},{"lineNumber":63,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"LouisLouis19"},"content":"            int num \u003d Integer.parseInt(strNum);","lastModifiedDate":"2021-09-09"},{"lineNumber":67,"author":{"gitId":"LouisLouis19"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-25"},{"lineNumber":68,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-08-25"},{"lineNumber":69,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"LouisLouis19"},"content":"        return true;","lastModifiedDate":"2021-09-09"},{"lineNumber":71,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":72,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"LouisLouis19"},"content":"    public static boolean isValidDoneInstruction(String inWord, int index) {","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"LouisLouis19"},"content":"        if (!inWord.contains(\" \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"LouisLouis19"},"content":"        String[] commands \u003d inWord.split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"LouisLouis19"},"content":"        if (commands.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"LouisLouis19"},"content":"        if(isNumeric(commands[1])) {","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"LouisLouis19"},"content":"            int taskDoneIndex \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"LouisLouis19"},"content":"            return taskDoneIndex \u003e 0 \u0026\u0026 taskDoneIndex \u003c\u003d index;","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"LouisLouis19"},"content":"        return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"LouisLouis19"},"content":"    public static void printTaskDone(String inWord, int index, Task[] taskList) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"LouisLouis19"},"content":"        if (!isValidDoneInstruction(inWord, index)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"LouisLouis19"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"LouisLouis19"},"content":"        String[] commands \u003d inWord.split(\" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"LouisLouis19"},"content":"        int taskDoneIndex \u003d Integer.parseInt(commands[1]);","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"LouisLouis19"},"content":"        taskList[taskDoneIndex - 1].markAsDone();","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-25"},{"lineNumber":101,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"   \" + taskList[taskDoneIndex - 1].toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"LouisLouis19"},"content":"    public static void manageDoneInstruction(String inWord, int index, Task[] taskList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"LouisLouis19"},"content":"            printTaskDone(inWord, index, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"LouisLouis19"},"content":"        } catch (DukeException invalidDoneException){","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"LouisLouis19"},"content":"            DukeException.invalidDoneException();","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":113,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"LouisLouis19"},"content":"    public static boolean checkValidEvent(String inWord) {","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"LouisLouis19"},"content":"        if (!inWord.contains(\" \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"LouisLouis19"},"content":"        //split inWord by the first whitespace(s) into 2 separate strings","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"LouisLouis19"},"content":"        String[] commands \u003d inWord.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"LouisLouis19"},"content":"        if (commands.length !\u003d 2 || !inWord.contains(EVENT_KEYWORD)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":122,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":124,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":125,"author":{"gitId":"LouisLouis19"},"content":"        String[] description \u003d commands[1].split(EVENT_KEYWORD, 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"LouisLouis19"},"content":"        if (description.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"LouisLouis19"},"content":"        String descriptionDetails \u003d description[0].trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"LouisLouis19"},"content":"        String descriptionAt \u003d description[1].trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"LouisLouis19"},"content":"        return !descriptionDetails.isEmpty() \u0026\u0026 !descriptionAt.isEmpty();","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":135,"author":{"gitId":"LouisLouis19"},"content":"    public static void printEvent(String inWord, int index, Task[] taskList) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"LouisLouis19"},"content":"        //split inWord by the first whitespace(s) into 2 separate strings","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"LouisLouis19"},"content":"        String[] commands \u003d inWord.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":138,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"LouisLouis19"},"content":"        if(!checkValidEvent(inWord)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"LouisLouis19"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"LouisLouis19"},"content":"        String[] details \u003d commands[1].split(EVENT_KEYWORD, 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"LouisLouis19"},"content":"        String description \u003d details[0].trim();","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"LouisLouis19"},"content":"        String at \u003d details[1].trim();","lastModifiedDate":"2021-08-31"},{"lineNumber":146,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"LouisLouis19"},"content":"        Event newItem \u003d new Event(description, at);","lastModifiedDate":"2021-08-31"},{"lineNumber":148,"author":{"gitId":"LouisLouis19"},"content":"        taskList[index] \u003d newItem;","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":150,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":151,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"   \" + newItem);","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" Now you have \" + (index + 1) +\" tasks in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":156,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":157,"author":{"gitId":"LouisLouis19"},"content":"    public static void manageEvent(String inWord, int index, Task[] taskList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":158,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"LouisLouis19"},"content":"            printEvent(inWord, index, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":160,"author":{"gitId":"LouisLouis19"},"content":"        } catch (DukeException invalidEventException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":161,"author":{"gitId":"LouisLouis19"},"content":"            DukeException.invalidEventException();","lastModifiedDate":"2021-09-07"},{"lineNumber":162,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":165,"author":{"gitId":"LouisLouis19"},"content":"    public static boolean checkValidTodo(String inWord) {","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"LouisLouis19"},"content":"        if (!inWord.contains(\" \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":167,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":168,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":169,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":170,"author":{"gitId":"LouisLouis19"},"content":"        //split inWord by the first whitespace(s) into 2 separate strings","lastModifiedDate":"2021-09-07"},{"lineNumber":171,"author":{"gitId":"LouisLouis19"},"content":"        String[] commands \u003d inWord.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":172,"author":{"gitId":"LouisLouis19"},"content":"        String details \u003d commands[1];","lastModifiedDate":"2021-08-31"},{"lineNumber":173,"author":{"gitId":"LouisLouis19"},"content":"        boolean isNonEmptyDetails \u003d !details.isEmpty();","lastModifiedDate":"2021-08-31"},{"lineNumber":174,"author":{"gitId":"LouisLouis19"},"content":"        return commands.length \u003d\u003d 2 \u0026\u0026 isNonEmptyDetails;","lastModifiedDate":"2021-08-31"},{"lineNumber":175,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":177,"author":{"gitId":"LouisLouis19"},"content":"    public static void printTodo(String inWord, int index, Task[] taskList) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":178,"author":{"gitId":"LouisLouis19"},"content":"        //split inWord by the first whitespace(s) into 2 separate strings","lastModifiedDate":"2021-09-07"},{"lineNumber":179,"author":{"gitId":"LouisLouis19"},"content":"        String[] commands \u003d inWord.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":180,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":181,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":182,"author":{"gitId":"LouisLouis19"},"content":"        if(!checkValidTodo(inWord)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":183,"author":{"gitId":"LouisLouis19"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-07"},{"lineNumber":184,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":186,"author":{"gitId":"LouisLouis19"},"content":"        String description \u003d commands[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":187,"author":{"gitId":"LouisLouis19"},"content":"        Todo newItem \u003d new Todo(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":188,"author":{"gitId":"LouisLouis19"},"content":"        taskList[index] \u003d newItem;","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":190,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":191,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"   \" + newItem);","lastModifiedDate":"2021-08-31"},{"lineNumber":192,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" Now you have \" + (index + 1) +\" tasks in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":193,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":194,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":195,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":196,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":197,"author":{"gitId":"LouisLouis19"},"content":"    public static void manageTodo(String inWord, int index, Task[] taskList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":198,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":199,"author":{"gitId":"LouisLouis19"},"content":"            printTodo(inWord, index, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":200,"author":{"gitId":"LouisLouis19"},"content":"        } catch (DukeException emptyTodoException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":201,"author":{"gitId":"LouisLouis19"},"content":"            DukeException.emptyTodoException();","lastModifiedDate":"2021-09-07"},{"lineNumber":202,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":203,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":205,"author":{"gitId":"LouisLouis19"},"content":"    public static boolean checkValidDeadline(String inWord) {","lastModifiedDate":"2021-08-31"},{"lineNumber":206,"author":{"gitId":"LouisLouis19"},"content":"        if (!inWord.contains(\" \")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":207,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":208,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":209,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":210,"author":{"gitId":"LouisLouis19"},"content":"        //split inWord by the first whitespace(s) into 2 separate strings","lastModifiedDate":"2021-09-07"},{"lineNumber":211,"author":{"gitId":"LouisLouis19"},"content":"        String[] commands \u003d inWord.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":212,"author":{"gitId":"LouisLouis19"},"content":"        if (commands.length !\u003d 2 || !inWord.contains(DEADLINE_KEYWORD)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":213,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-08-31"},{"lineNumber":214,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":215,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":216,"author":{"gitId":"LouisLouis19"},"content":"        String[] description \u003d commands[1].split(DEADLINE_KEYWORD, 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":217,"author":{"gitId":"LouisLouis19"},"content":"        if (description.length !\u003d 2) {","lastModifiedDate":"2021-09-07"},{"lineNumber":218,"author":{"gitId":"LouisLouis19"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":219,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":220,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":221,"author":{"gitId":"LouisLouis19"},"content":"        String descriptionDetails \u003d description[0].trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":222,"author":{"gitId":"LouisLouis19"},"content":"        String descriptionBy \u003d description[1].trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":223,"author":{"gitId":"LouisLouis19"},"content":"        return !descriptionDetails.isEmpty() \u0026\u0026 !descriptionBy.isEmpty();","lastModifiedDate":"2021-09-07"},{"lineNumber":224,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":225,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":226,"author":{"gitId":"LouisLouis19"},"content":"    public static void printDeadline(String inWord, int index, Task[] taskList) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":227,"author":{"gitId":"LouisLouis19"},"content":"        //split inWord by the first whitespace(s) into 2 separate strings","lastModifiedDate":"2021-09-07"},{"lineNumber":228,"author":{"gitId":"LouisLouis19"},"content":"        String[] commands \u003d inWord.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":229,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":230,"author":{"gitId":"LouisLouis19"},"content":"        if(!checkValidDeadline(inWord)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":231,"author":{"gitId":"LouisLouis19"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-07"},{"lineNumber":232,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":233,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":234,"author":{"gitId":"LouisLouis19"},"content":"        String[] details \u003d commands[1].split(DEADLINE_KEYWORD, 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":235,"author":{"gitId":"LouisLouis19"},"content":"        String description \u003d details[0].trim();","lastModifiedDate":"2021-08-31"},{"lineNumber":236,"author":{"gitId":"LouisLouis19"},"content":"        String by \u003d details[1].trim();","lastModifiedDate":"2021-08-31"},{"lineNumber":237,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":238,"author":{"gitId":"LouisLouis19"},"content":"        Deadline newItem \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-31"},{"lineNumber":239,"author":{"gitId":"LouisLouis19"},"content":"        taskList[index] \u003d newItem;","lastModifiedDate":"2021-08-31"},{"lineNumber":240,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":241,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":242,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"   \" + newItem);","lastModifiedDate":"2021-08-31"},{"lineNumber":243,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\" Now you have \" + (index + 1) +\" tasks in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":244,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":245,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":246,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":247,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":248,"author":{"gitId":"LouisLouis19"},"content":"    public static void manageDeadline(String inWord, int index, Task[] taskList) {","lastModifiedDate":"2021-09-07"},{"lineNumber":249,"author":{"gitId":"LouisLouis19"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":250,"author":{"gitId":"LouisLouis19"},"content":"            printDeadline(inWord, index, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":251,"author":{"gitId":"LouisLouis19"},"content":"        } catch (DukeException invalidDeadlineException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":252,"author":{"gitId":"LouisLouis19"},"content":"            DukeException.invalidDeadlineException();","lastModifiedDate":"2021-09-07"},{"lineNumber":253,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":254,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":255,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":256,"author":{"gitId":"LouisLouis19"},"content":"    public static void generalDukeException() {","lastModifiedDate":"2021-09-07"},{"lineNumber":257,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":258,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(\"Please input a valid command!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":259,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-07"},{"lineNumber":260,"author":{"gitId":"LouisLouis19"},"content":"        System.out.print(System.lineSeparator());","lastModifiedDate":"2021-09-07"},{"lineNumber":261,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":262,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":263,"author":{"gitId":"LouisLouis19"},"content":"    public static void executeUserInstruction(String inWord, int index, Task[] taskList) {","lastModifiedDate":"2021-08-31"},{"lineNumber":264,"author":{"gitId":"LouisLouis19"},"content":"        //split inWord by the first whitespace(s) into 2 separate strings","lastModifiedDate":"2021-09-07"},{"lineNumber":265,"author":{"gitId":"LouisLouis19"},"content":"        String[] instruction \u003d inWord.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":266,"author":{"gitId":"LouisLouis19"},"content":"        String instructionType \u003d instruction[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":267,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":268,"author":{"gitId":"LouisLouis19"},"content":"        switch(instructionType) {","lastModifiedDate":"2021-08-31"},{"lineNumber":269,"author":{"gitId":"LouisLouis19"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2021-08-31"},{"lineNumber":270,"author":{"gitId":"LouisLouis19"},"content":"            printList(Arrays.copyOf(taskList, index));","lastModifiedDate":"2021-08-24"},{"lineNumber":271,"author":{"gitId":"LouisLouis19"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":272,"author":{"gitId":"LouisLouis19"},"content":"        case DONE_COMMAND:","lastModifiedDate":"2021-08-31"},{"lineNumber":273,"author":{"gitId":"LouisLouis19"},"content":"            manageDoneInstruction(inWord, index, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":274,"author":{"gitId":"LouisLouis19"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":275,"author":{"gitId":"LouisLouis19"},"content":"        case EVENT_COMMAND:","lastModifiedDate":"2021-08-31"},{"lineNumber":276,"author":{"gitId":"LouisLouis19"},"content":"            manageEvent(inWord, index, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":277,"author":{"gitId":"LouisLouis19"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":278,"author":{"gitId":"LouisLouis19"},"content":"        case TODO_COMMAND:","lastModifiedDate":"2021-08-31"},{"lineNumber":279,"author":{"gitId":"LouisLouis19"},"content":"            manageTodo(inWord, index, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":280,"author":{"gitId":"LouisLouis19"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":281,"author":{"gitId":"LouisLouis19"},"content":"        case DEADLINE_COMMAND:","lastModifiedDate":"2021-08-31"},{"lineNumber":282,"author":{"gitId":"LouisLouis19"},"content":"            manageDeadline(inWord, index, taskList);","lastModifiedDate":"2021-09-07"},{"lineNumber":283,"author":{"gitId":"LouisLouis19"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":284,"author":{"gitId":"LouisLouis19"},"content":"        default:","lastModifiedDate":"2021-08-31"},{"lineNumber":285,"author":{"gitId":"LouisLouis19"},"content":"            generalDukeException();","lastModifiedDate":"2021-09-07"},{"lineNumber":286,"author":{"gitId":"LouisLouis19"},"content":"            break;","lastModifiedDate":"2021-08-31"},{"lineNumber":287,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":288,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":289,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":290,"author":{"gitId":"LouisLouis19"},"content":"    //fix bug in update index","lastModifiedDate":"2021-09-07"},{"lineNumber":291,"author":{"gitId":"LouisLouis19"},"content":"    public static int updateIndex(int index, String inWord) {","lastModifiedDate":"2021-08-31"},{"lineNumber":292,"author":{"gitId":"LouisLouis19"},"content":"        //split inWord by the first whitespace(s) into 2 separate strings","lastModifiedDate":"2021-09-07"},{"lineNumber":293,"author":{"gitId":"LouisLouis19"},"content":"        String[] instruction \u003d inWord.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-08-31"},{"lineNumber":294,"author":{"gitId":"LouisLouis19"},"content":"        String instructionType \u003d instruction[0];","lastModifiedDate":"2021-08-31"},{"lineNumber":295,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":296,"author":{"gitId":"LouisLouis19"},"content":"        //update index only if instruction is valid","lastModifiedDate":"2021-09-07"},{"lineNumber":297,"author":{"gitId":"LouisLouis19"},"content":"        switch(instructionType) {","lastModifiedDate":"2021-09-07"},{"lineNumber":298,"author":{"gitId":"LouisLouis19"},"content":"        case TODO_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":299,"author":{"gitId":"LouisLouis19"},"content":"            if (checkValidTodo(inWord)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":300,"author":{"gitId":"LouisLouis19"},"content":"                return index + 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":301,"author":{"gitId":"LouisLouis19"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":302,"author":{"gitId":"LouisLouis19"},"content":"        case DEADLINE_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":303,"author":{"gitId":"LouisLouis19"},"content":"            if (checkValidDeadline(inWord)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":304,"author":{"gitId":"LouisLouis19"},"content":"                return index + 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":305,"author":{"gitId":"LouisLouis19"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":306,"author":{"gitId":"LouisLouis19"},"content":"        case EVENT_COMMAND:","lastModifiedDate":"2021-09-07"},{"lineNumber":307,"author":{"gitId":"LouisLouis19"},"content":"            if (checkValidEvent(inWord)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":308,"author":{"gitId":"LouisLouis19"},"content":"                return index + 1;","lastModifiedDate":"2021-09-07"},{"lineNumber":309,"author":{"gitId":"LouisLouis19"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":310,"author":{"gitId":"LouisLouis19"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":311,"author":{"gitId":"LouisLouis19"},"content":"            return index;","lastModifiedDate":"2021-08-31"},{"lineNumber":312,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":313,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":314,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":315,"author":{"gitId":"LouisLouis19"},"content":"    public static void printDukeExit() {","lastModifiedDate":"2021-08-31"},{"lineNumber":316,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":317,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(GOODBYE_MESSAGE);","lastModifiedDate":"2021-08-31"},{"lineNumber":318,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":319,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":320,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":321,"author":{"gitId":"LouisLouis19"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-31"},{"lineNumber":322,"author":{"gitId":"LouisLouis19"},"content":"        printDukeGreet();","lastModifiedDate":"2021-08-31"},{"lineNumber":323,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":324,"author":{"gitId":"LouisLouis19"},"content":"        String inWord;","lastModifiedDate":"2021-08-31"},{"lineNumber":325,"author":{"gitId":"LouisLouis19"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-31"},{"lineNumber":326,"author":{"gitId":"LouisLouis19"},"content":"        System.out.println();","lastModifiedDate":"2021-08-31"},{"lineNumber":327,"author":{"gitId":"LouisLouis19"},"content":"        inWord \u003d scan.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":328,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":329,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":330,"author":{"gitId":"LouisLouis19"},"content":"        int index \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":331,"author":{"gitId":"LouisLouis19"},"content":"        Task[] taskList \u003d new Task[NUM_OF_TASKS];","lastModifiedDate":"2021-08-31"},{"lineNumber":332,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":333,"author":{"gitId":"LouisLouis19"},"content":"        while (!inWord.equalsIgnoreCase(EXIT_STRING)) {","lastModifiedDate":"2021-08-31"},{"lineNumber":334,"author":{"gitId":"LouisLouis19"},"content":"            executeUserInstruction(inWord, index, taskList);","lastModifiedDate":"2021-08-31"},{"lineNumber":335,"author":{"gitId":"LouisLouis19"},"content":"            index \u003d updateIndex(index, inWord);","lastModifiedDate":"2021-08-31"},{"lineNumber":336,"author":{"gitId":"LouisLouis19"},"content":"            inWord \u003d scan.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":337,"author":{"gitId":"LouisLouis19"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":338,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":339,"author":{"gitId":"LouisLouis19"},"content":"        //Exits when user types \"bye\"","lastModifiedDate":"2021-08-24"},{"lineNumber":340,"author":{"gitId":"LouisLouis19"},"content":"        printDukeExit();","lastModifiedDate":"2021-08-25"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"LouisLouis19":334,"-":8}},{"path":"src/main/java/Duke/TaskTypes/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package Duke.TaskTypes;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"    //Add Getter and Setter","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"        return by;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"    public void setBy(String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"        return \"[D] \" + super.toString() +\" (by: \" + by + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"LouisLouis19":24}},{"path":"src/main/java/Duke/TaskTypes/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package Duke.TaskTypes;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"    protected String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"        return at;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"    public void setAt(String newAt) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"        this.at \u003d newAt;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"        return \"[E] \" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"LouisLouis19":23}},{"path":"src/main/java/Duke/TaskTypes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package Duke.TaskTypes;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"    //Add Getter and Setter","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"LouisLouis19"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"LouisLouis19"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"LouisLouis19"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"LouisLouis19"},"content":"        return isDone;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"LouisLouis19"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"LouisLouis19"},"content":"        // mark done task with X","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"LouisLouis19"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"LouisLouis19"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"LouisLouis19"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"LouisLouis19"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"LouisLouis19"},"content":"        return \"[\" +getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"LouisLouis19":38}},{"path":"src/main/java/Duke/TaskTypes/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"package Duke.TaskTypes;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"LouisLouis19":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LouisLouis19"},"content":"deadline watch lecture /by today","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"LouisLouis19"},"content":"event movie /at 7","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"LouisLouis19"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"LouisLouis19"},"content":"done 1","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"LouisLouis19"},"content":"done 3","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"LouisLouis19"},"content":"event","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"LouisLouis19"},"content":"event soccer / at 4 Sep","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"LouisLouis19"},"content":"deadline eat dinner / by tonight","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"LouisLouis19"},"content":"todo buy bread","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"list","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"LouisLouis19"},"content":"done 3","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"LouisLouis19"},"content":"list","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"LouisLouis19"},"content":"bye","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"LouisLouis19":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"LouisLouis19"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke\\RunFile\\*.java ..\\src\\main\\java\\Duke\\TaskTypes\\*.java ..\\src\\main\\java\\Duke\\Exception\\*.java","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"LouisLouis19"},"content":"java -classpath ..\\bin Duke.RunFile.DukeProgram \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LouisLouis19":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"LouisLouis19"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke/RunFile/*.java","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"LouisLouis19":1,"-":37}}]
