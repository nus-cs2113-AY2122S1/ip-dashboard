[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"public class Command {","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"    public static final String COMMAND_HELP \u003d \"help\";","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"    public static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"    public static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"    public static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"    public static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"tttyyzzz":11}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"    private String dueDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"    public static final char TASK_TYPE_DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"        super(description, TASK_TYPE_DEADLINE);","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    public Deadline(String description, boolean isDone, String dueDate) {","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"        super(description, TASK_TYPE_DEADLINE, isDone);","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"        String statusIcon \u003d getStatusIcon();","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"        return \"[\" + taskType + \"][\" + getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"                + description + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        return dueDate;","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"tttyyzzz":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"import java.awt.desktop.SystemEventListener;","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    public static final String filePath \u003d \"duke.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"        String input;","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"        Greet.printWelcomeMessage();","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"        // load data into arraylist","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"        //require file","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"        f.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"        // and scanner input","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"            Scanner in \u003d new Scanner(f);","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"            Storage.loadData(f, in);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"            in.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(\"file not found\");","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        boolean isConversation;// true by default","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        do {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            String[] words \u003d input.split(\" \");","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"                FilterInput.checkCommand(words, input);","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-12"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(\"Please key in an integer\");","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"            } catch (NullPointerException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(ErrorMessage.EXCEPTION_MESSAGE_INPUT_NOT_INT);","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(\"Invalid Number.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(\"Number keyed in is invalid\");","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"                FileWriter fileWrite \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"                Storage.storeData(fileWrite);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"                fileWrite.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(\"file not found, tasks cannot be saved. Exiting\");","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"            isConversation \u003d !words[0].equals(Command.COMMAND_BYE);","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"        } while (isConversation);","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"tttyyzzz":58,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"    private String message;","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"        return message;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"tttyyzzz":12}},{"path":"src/main/java/ErrorMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"public class ErrorMessage {","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EXCEPTION_MISSING_DESCRIPTION_TODO \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"            \"     ☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EXCEPTION_MISSING_DESCRIPTION_EVENT \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"            \"     ☹ OOPS!!! The description of an event cannot be empty.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EXCEPTION_MISSING_DESCRIPTION_DEADLINE \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"            \"     ☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EXCEPTION_MESSAGE_UNKNOWN_COMMAND \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"            \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EXCEPTION_MESSAGE_MISSING_PARAMETERS_AFTER_KEYWORD \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"            \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what is the timeframe of this task :-(\";","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EXCEPTION_MESSAGE_MISSING_PARAMETERS_AFTER_COMMAND \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"            \"     OOPS! The command requires a parameter e.g. done 2\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"                    \" The number \\\u00272\\\u0027 will be the parameter for the command done\";","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    public static final String EXCEPTION_MESSAGE_INPUT_NOT_INT \u003d","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"            \"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"                    \"     Please input a string so that I can understand.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"tttyyzzz":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"    private String eventDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"    public static final char TASK_TYPE_EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"    public Event(String description, String eventDate) {","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"        super(description, TASK_TYPE_EVENT);","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    public Event(String description, boolean isDone, String eventDate) {","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"        super(description, TASK_TYPE_EVENT, isDone);","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"        return \"[\" + taskType + \"][\" + getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"                + description + \" (at: \" + eventDate + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"        return eventDate;","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"tttyyzzz":24}},{"path":"src/main/java/FilterInput.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"public class FilterInput {","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"    private static final int DESCRIPTION_PARAMETERS \u003d 2;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"    private static final int FIRST_ARRAY_PARAMETER \u003d 0;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"    private static final int SECOND_ARRAY_PARAMETER \u003d 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"     * Returns lateral location of the specified position.","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"     * @param words String input by user.","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    public static void checkCommand(String[] words, String input) throws","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"            DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"        String[] descriptionInput \u003d descriptionInput(words, input);","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"        switch (words[FIRST_ARRAY_PARAMETER]) {","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"        case Command.COMMAND_BYE:","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"            Greet.printGoodbyeMessage();","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"        case Command.COMMAND_LIST:","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"            Greet.printList();","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"        case Command.COMMAND_DONE:","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"            int taskNumber;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"            checkDescription(words[FIRST_ARRAY_PARAMETER], descriptionInput);","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"            taskNumber \u003d Integer.parseInt(words[SECOND_ARRAY_PARAMETER]);","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"            //might need to catch errors in the future","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"            Greet.checkDoneTask(taskNumber);","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        case Command.COMMAND_DELETE:","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"            checkDescription(words[FIRST_ARRAY_PARAMETER], descriptionInput);","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"            taskNumber \u003d Integer.parseInt(words[SECOND_ARRAY_PARAMETER]);","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"            Greet.deleteTask(taskNumber);","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"        case Command.COMMAND_TODO:","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"            checkDescription(words[FIRST_ARRAY_PARAMETER], descriptionInput);","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            Todo todo \u003d new Todo(descriptionInput[FIRST_ARRAY_PARAMETER]);","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"            Greet.addTask(todo);","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        case Command.COMMAND_DEADLINE:","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"            checkDescription(words[FIRST_ARRAY_PARAMETER], descriptionInput);","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            checkTimeframe(descriptionInput);","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"            Deadline deadline \u003d new Deadline(descriptionInput[FIRST_ARRAY_PARAMETER],","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"                    descriptionInput[SECOND_ARRAY_PARAMETER]);","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"            Greet.addTask(deadline);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        case Command.COMMAND_EVENT:","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"            checkDescription(words[FIRST_ARRAY_PARAMETER], descriptionInput);","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"            checkTimeframe(descriptionInput);","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"            Event event \u003d new Event(descriptionInput[FIRST_ARRAY_PARAMETER],","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"                    descriptionInput[SECOND_ARRAY_PARAMETER]);","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"            Greet.addTask(event);","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-02"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"        default:","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"            throw new DukeException(ErrorMessage.EXCEPTION_MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"    private static void checkDescription(String command, String[] descriptionInput) throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        if (descriptionInput[FIRST_ARRAY_PARAMETER].equals(\"\") ||","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"                descriptionInput[FIRST_ARRAY_PARAMETER].equals(\" \")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"            switch (command) {","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"            case Command.COMMAND_TODO:","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"                throw new DukeException(ErrorMessage.EXCEPTION_MISSING_DESCRIPTION_TODO);","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"            case Command.COMMAND_DEADLINE:","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"                throw new DukeException(ErrorMessage.EXCEPTION_MISSING_DESCRIPTION_DEADLINE);","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"            case Command.COMMAND_EVENT:","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"                throw new DukeException(ErrorMessage.EXCEPTION_MISSING_DESCRIPTION_EVENT);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"            default:","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"                throw new DukeException(ErrorMessage.EXCEPTION_MESSAGE_MISSING_PARAMETERS_AFTER_COMMAND);","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"    private static void checkTimeframe(String[] descriptionInput) throws DukeException {","lastModifiedDate":"2021-09-12"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"        if (descriptionInput[SECOND_ARRAY_PARAMETER].equals(\"\") ||","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"                descriptionInput[SECOND_ARRAY_PARAMETER].equals(\" \")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"            throw new DukeException(ErrorMessage.EXCEPTION_MESSAGE_MISSING_PARAMETERS_AFTER_KEYWORD);","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"    private static String[] descriptionInput(String[] words, String input) {","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"        String[] output \u003d new String[DESCRIPTION_PARAMETERS];","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"        output[0] \u003d \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"        output[1] \u003d \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"            return output;","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"        String[] newWord \u003d input.split(\" \", 2);","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"tttyyzzz"},"content":"        if (words[0].equals(\"deadline\") \u0026\u0026 newWord[1].contains(\"/by\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"            // need to try new outliers","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"            output \u003d newWord[1].split(\" /by \", 2);","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"        } else if (words[0].equals(\"event\") \u0026\u0026 newWord[1].contains(\" /at \")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"            output \u003d newWord[1].split(\" /at \", 2);","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"            output[0] \u003d newWord[1];","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"        return output;","lastModifiedDate":"2021-09-02"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"    private static boolean isDescription(int counter, String[] words) {","lastModifiedDate":"2021-09-02"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"        return counter \u003c words.length;","lastModifiedDate":"2021-09-02"},{"lineNumber":103,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":104,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":105,"author":{"gitId":"tttyyzzz"},"content":"    private static boolean isDate(int counter, String[] words) {","lastModifiedDate":"2021-09-02"},{"lineNumber":106,"author":{"gitId":"tttyyzzz"},"content":"        return counter \u003c words.length;","lastModifiedDate":"2021-09-02"},{"lineNumber":107,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":108,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":109,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"tttyyzzz":109}},{"path":"src/main/java/Greet.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"public class Greet {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"    private static final int indexFix \u003d 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"    protected static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"    public static void printLineOnConsole() {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(GreetMessage.DASH_LINE);","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"     * Add new Task in list","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"     * @param newTask Task object created based on command.","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    //might move to main/duke class","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    public static void addTask(Task newTask) {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"        list.add(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"        printAddNewTask(newTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"     * Add new Task in list","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"     * @param newTask Task object created based on command.","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    //might move to main/duke class","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"    public static void reloadTask(Task newTask) {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"        list.add(newTask);","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"     * Calls Task.markAsDone().","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"     * @param taskNumber Task number that is tagged to the task on console.","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"    public static void checkDoneTask(int taskNumber) {","lastModifiedDate":"2021-09-02"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"        int taskIndex \u003d taskNumber - indexFix;","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"        list.get(taskIndex).markAsDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"     * Prints welcome message","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"        printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(GreetMessage.WELCOME_MESSAGE);","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"        printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"     * Prints goodbye message upon exit","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"    public static void printGoodbyeMessage() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"        printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(GreetMessage.BYE_MESSAGE);","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"     * Print all the tasks in the list array","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"    public static void printList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"        printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"        if (list.size() !\u003d 0) {","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(GreetMessage.LIST_HEADER);","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"                int numbering \u003d i + indexFix;","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"                System.out.println(\"     \" + numbering + \". \" + list.get(i));","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"            System.out.println(GreetMessage.LIST_NO_TASK);","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"        printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"    public static void printAddNewTask(Task newTask) {","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"        printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(\"     \" + newTask);","lastModifiedDate":"2021-09-02"},{"lineNumber":82,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(GreetMessage.TASK_MESSAGE_START +","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"tttyyzzz"},"content":"                list.size() + GreetMessage.TASK_MESSAGE_END);","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"tttyyzzz"},"content":"        printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":85,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":87,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":88,"author":{"gitId":"tttyyzzz"},"content":"    public static void deleteTask(int taskNumber) {","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"tttyyzzz"},"content":"        int taskIndex \u003d taskNumber - indexFix;","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"tttyyzzz"},"content":"        Task task \u003d list.remove(taskIndex);","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(GreetMessage.DELETE_MESSAGE);","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(\"     \" + task);","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(GreetMessage.TASK_MESSAGE_START + list.size()","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"tttyyzzz"},"content":"                + GreetMessage.TASK_MESSAGE_END);","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":97,"author":{"gitId":"tttyyzzz"},"content":"    public static ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"tttyyzzz"},"content":"        return list;","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"tttyyzzz":102}},{"path":"src/main/java/GreetMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"public class GreetMessage {","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"    public static final String DASH_LINE \u003d \"    ____________________________________________________________\";","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"    public static final String WELCOME_MESSAGE \u003d \"     Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"            \"     What can I do for you?\";","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"    public static final String BYE_MESSAGE \u003d \"     Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"    public static final String LIST_HEADER \u003d \"     Here are the tasks in your list:\";","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"    public static final String LIST_NO_TASK \u003d \"     You have no tasks in the list at the moment.\\n\" +","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"            \"     Please add a new task to begin.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"    public static final String TASK_MESSAGE_START \u003d \"     Now you have \";","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    public static final String TASK_MESSAGE_END \u003d \" tasks in the list.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"    public static final String DELETE_MESSAGE \u003d \"     Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    public static final String TASK_CHECK_DONE \u003d \"     Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"tttyyzzz":14}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"import static java.lang.System.lineSeparator;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"public class Storage {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    public static final int TRUE_VALUE \u003d 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"    public static final int FALSE_VALUE \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    public static final int RESULT_TASK_TYPE \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    public static final int RESULT_IS_DONE \u003d 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"    public static final int RESULT_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"    public static final int RESULT_TIME \u003d 3;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"    public static void loadData(File f, Scanner readFile) {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"        while (readFile.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"            String information \u003d readFile.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"            parseInformation(information);","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"    private static void parseInformation(String information) {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"        String[] result \u003d information.split(\" \\\\| \");","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"        checkTaskType(result);","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    private static void checkTaskType(String[] result) {","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"        Task newTask;","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"        switch (result[RESULT_TASK_TYPE]) {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"        case \"T\":","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"            newTask \u003d new Todo(result[RESULT_DESCRIPTION],","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"                    strToBoolean(result[RESULT_IS_DONE]));","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"            Greet.reloadTask(newTask);","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        case \"D\":","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"            newTask \u003d new Deadline(result[RESULT_DESCRIPTION],","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"                    strToBoolean(result[RESULT_IS_DONE]), result[RESULT_TIME]);","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"            Greet.reloadTask(newTask);","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"        case \"E\":","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"            newTask \u003d new Event(result[RESULT_DESCRIPTION],","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"                    strToBoolean(result[RESULT_IS_DONE]), result[RESULT_TIME]);","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"            Greet.reloadTask(newTask);","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"    private static boolean strToBoolean(String s) {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"        return !s.equals(\"0\");","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"    public static void storeData(FileWriter fileWrite) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"        ArrayList\u003cTask\u003e list \u003d Greet.getList();","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"            fileWrite.write(parseTask(task) + lineSeparator());","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"        fileWrite.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"    private static String parseTask(Task task) {","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"tttyyzzz"},"content":"        String newString;","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"tttyyzzz"},"content":"        newString \u003d task.getTaskType() + \" | \" + booleanInt(task.isDone) +","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"tttyyzzz"},"content":"                \" | \" + task.getDescription();","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"tttyyzzz"},"content":"        if (task instanceof Event) {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"tttyyzzz"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"tttyyzzz"},"content":"            newString \u003d newString + \" | \" + event.getDate();","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"tttyyzzz"},"content":"        } else if (task instanceof Deadline) {","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"tttyyzzz"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"tttyyzzz"},"content":"            newString \u003d newString + \" | \" + deadline.getDate();","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"tttyyzzz"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"tttyyzzz"},"content":"        return newString;","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"tttyyzzz"},"content":"    private static int booleanInt(boolean isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"tttyyzzz"},"content":"        return isDone ? TRUE_VALUE : FALSE_VALUE;","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"tttyyzzz":81}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"    protected char taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"     * Constructor of Task object.","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"     * @param description Task name of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"     * @param taskType    T:todo D:deadline E:event","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    public Task(String description, char taskType) {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"     * Constructor of Task object.","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"     * @param description Task name of Task.","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"tttyyzzz"},"content":"     * @param taskType    T:todo D:deadline E:event","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"tttyyzzz"},"content":"     * @param isDone      Status of Task","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"tttyyzzz"},"content":"    public Task(String description, char taskType, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"tttyyzzz"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"tttyyzzz"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"tttyyzzz"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"tttyyzzz"},"content":"     * Returns status of Task.","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"tttyyzzz"},"content":"     * @return \"X\" if isDone is true, else return  \" \".","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"tttyyzzz"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"tttyyzzz"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"tttyyzzz"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"tttyyzzz"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"tttyyzzz"},"content":"        Greet.printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(GreetMessage.TASK_CHECK_DONE);","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"tttyyzzz"},"content":"        System.out.println(\"     \" + \"[\" + this.taskType + \"][X] \" + this.description);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"tttyyzzz"},"content":"        Greet.printLineOnConsole();","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"tttyyzzz"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"tttyyzzz"},"content":"     * Returns description of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"tttyyzzz"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"tttyyzzz"},"content":"     * @return Description of task.","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"tttyyzzz"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"tttyyzzz"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"tttyyzzz"},"content":"        return description;","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":57,"author":{"gitId":"tttyyzzz"},"content":"    public char getTaskType() {","lastModifiedDate":"2021-09-02"},{"lineNumber":58,"author":{"gitId":"tttyyzzz"},"content":"        return taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"tttyyzzz"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"tttyyzzz"},"content":"        return isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"tttyyzzz":64}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"    public static final char TASK_TYPE_TODO \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"        super(description, TASK_TYPE_TODO);","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"        super(description, TASK_TYPE_TODO, isDone);","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"        return \"[\" + taskType + \"][\" + getStatusIcon() + \"] \"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"                + description;","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"tttyyzzz":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tttyyzzz"},"content":"hi","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"tttyyzzz"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"tttyyzzz"},"content":"deadline deadline /by deadline","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"tttyyzzz"},"content":"todo todo","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"tttyyzzz"},"content":"todo","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"tttyyzzz"},"content":"event","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"tttyyzzz"},"content":"deadline","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"tttyyzzz"},"content":"event event /at event","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"tttyyzzz"},"content":"todo todo2","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"done 2","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"done 3","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"tttyyzzz"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"delete 4","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"tttyyzzz"},"content":"delete 1","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"tttyyzzz"},"content":"delete 1","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"tttyyzzz"},"content":"delete 1","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"tttyyzzz"},"content":"list","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"tttyyzzz"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"tttyyzzz":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"tttyyzzz"},"content":"REM javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\\"*.java\"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"tttyyzzz"},"content":"REM C:\\Java0\\jdk11.0.12_7\\bin\\java.exe \"-javaagent:C:\\Program Files\\JetBrains\\IntelliJ IDEA Community Edition 2021.2\\lib\\idea_rt.jar\u003d1091:C:\\Program Files\\JetBrains\\IntelliJ IDEA Community Edition 2021.2\\bin\" -Dfile.encoding\u003dUTF-8 -classpath \"C:\\Users\\tohyi\\Desktop\\CG1111\\cs2113T\\ip project\\out\\production\\ip project\" Duke","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"tttyyzzz"},"content":"REM javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java ..\\src\\main\\java\\handleException\\*.java ..\\src\\main\\java\\handleTask\\*.java ..\\src\\main\\java\\handleInput\\*.java","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"tttyyzzz"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"tttyyzzz"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"tttyyzzz"},"content":"    echo - BUILD FAILURE -","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt  \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"tttyyzzz":6,"-":19}}]
