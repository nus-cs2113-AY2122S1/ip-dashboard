[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"T||false||buy Java book","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"D||true||return car ||2021-11-20","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"peng-217":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"Duke is a personal assistant chat-bot that can help its user to record different type of tasks.  ","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"## Contents","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"1. To Start","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"2. Features","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"3. Command List","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"## To Start","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"1. Check your Java version. This app requires Java version 11 to be installed on your PC.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"2. After installing Java version 11, download the Duke.jar file from [here](https://github.com/peng-217/PENG_FEI_CS2113_individual_DUKE_project/releases/tag/A-Release)","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"3. After downloading, please open the command prompt on your PC.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"4. Once you have opened the command prompt, run Duke.jar by typing in \"java -jar Duke.jar\".","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"peng-217"},"content":"   (Note:If you failed to run Duke.jar, please check you are at the correct direction which Duke.jar is saved)","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"5. If you have run Duke successfully, you should see the logo of Duke like this: [logo](images/logo.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"1. Duke supports adding three types of task: todo, deadline and event.","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"2. User can delete any task they want in the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"3. User can mark any task in the task list as done.","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"4. If user\u0027s input is not valid, Duke will display error message to remind user.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"peng-217"},"content":"## Command List","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"peng-217"},"content":" ","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"peng-217"},"content":"### 1. Add a todo task to task list","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"peng-217"},"content":"* Syntax: todo \u003ctask_description/command\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"peng-217"},"content":"* e.g. todo buy Java book","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"peng-217"},"content":"* Sample output: [todo](images/todo.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"peng-217"},"content":"### 2. Add a deadline task to task list","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"peng-217"},"content":"* Syntax: deadline \u003ctask_description/command\u003e /by YYYY-MM-DD","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"peng-217"},"content":"* e.g. deadline return car /by 2021-11-20","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"peng-217"},"content":"* Sample output: [deadline](images/deadline.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"peng-217"},"content":"### 3. Add an event task to task list","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"peng-217"},"content":"* Syntax: event \u003ctask_description/command\u003e /at YYYY-MM-DD","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"peng-217"},"content":"* e.g. event meet friend /at 2021-12-31","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"peng-217"},"content":"* Sample output: [event](images/event.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":50,"author":{"gitId":"peng-217"},"content":"### 4. List all the tasks in the task list","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"peng-217"},"content":"* Syntax: list","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"peng-217"},"content":"* e.g. list","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"peng-217"},"content":"* Sample output:[list](images/list.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"peng-217"},"content":"### 5. Mark task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"peng-217"},"content":"* Syntax: done \u003ctask_index\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"peng-217"},"content":"* e.g. done 2","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"peng-217"},"content":"* Sample output: [mark_as_done](images/mark_as_done.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"peng-217"},"content":"### 6. Delete task in task list","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"peng-217"},"content":"* Syntax: delete \u003ctask_index\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"peng-217"},"content":"* e.g. delete 3","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"peng-217"},"content":"* Sample output: [delete](images/delete.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"peng-217"},"content":"### 7. Find task with keyword in the task list","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"peng-217"},"content":"* Syntax: find \u003csearching_keyword\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"peng-217"},"content":"* e.g. find car","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"peng-217"},"content":"* Sample output: [find](images/find.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"peng-217"},"content":"### 8. Quit Duke app","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"peng-217"},"content":"* Syntax: bye","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"peng-217"},"content":"* e.g. bye","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"peng-217"},"content":"* Sample output: [bye](images/bye.png)","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"peng-217":59,"-":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"import duke.Parser.Parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"     * Key components of Duke program","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"    private static Parser parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"peng-217"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"     * Initialize the components of Duke","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"    public static void initializeProgram() {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"peng-217"},"content":"        tasks \u003d new TaskList(ui);","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"peng-217"},"content":"        parser \u003d new Parser(ui);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"peng-217"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"peng-217"},"content":"        storage.openTaskFromFile(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"peng-217"},"content":"        initializeProgram();","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"peng-217"},"content":"        ui.printDukeLogo();","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"peng-217"},"content":"        ui.printGreet();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"peng-217"},"content":"        String userInput;","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"peng-217"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"peng-217"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"peng-217"},"content":"        while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"peng-217"},"content":"            parser.processCommand(userInput,tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"peng-217"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"peng-217"},"content":"        ui.printBye();","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"peng-217":49,"-":4}},{"path":"src/main/java/duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"package duke.Parser;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"public class Parser {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"    public static final String SEPARATOR \u003d \"-----------------------------------\";","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"     * Constructor for Parser with ui","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"     * @param ui The ui used to set Parser.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"    public Parser(Ui ui) {","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"peng-217"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"     * Process the command retrieved from user input.","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"     * @param userInput The full user input.","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"peng-217"},"content":"    public void processCommand(String userInput, TaskList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"        //while (!userInput.equals(\"bye\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"            if (userInput.equals(\"echo\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"                //tasks.echo(userInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"peng-217"},"content":"            } else if (userInput.length() \u003e\u003d 3 \u0026\u0026 userInput.substring(0, 3).equals(\"add\")) {  // Add the task into the list","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"peng-217"},"content":"                //addTask(userInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"peng-217"},"content":"                //tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"peng-217"},"content":"            } else if (userInput.equals(\"list\")) {      /* Show the list to user which contains indicators to indicate that whether this task is done or have a deadline or is an event with given time */","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"peng-217"},"content":"                ui.printTasks(tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"peng-217"},"content":"            }else if (userInput.contains(\"find\")){","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"peng-217"},"content":"                findTask(userInput.substring(5),tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"peng-217"},"content":"            } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"done\")) {   // Mark the task that needs to be done as done in list","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"peng-217"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"peng-217"},"content":"                    tasks.markAsDone(Integer.parseInt(userInput.substring(5)) - 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"peng-217"},"content":"                } catch (DukeException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"peng-217"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"peng-217"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"peng-217"},"content":"            } else if (userInput.length() \u003e\u003d 4 \u0026\u0026 userInput.substring(0, 4).equals(\"todo\")) { // Create a Todo object and add it into the task list","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"peng-217"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"peng-217"},"content":"                    processTodo(userInput,tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"peng-217"},"content":"                } catch(DukeException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"peng-217"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"peng-217"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"peng-217"},"content":"            } else if (userInput.length() \u003e\u003d 8 \u0026\u0026 userInput.substring(0, 8).equals(\"deadline\")) {  // Create a deadline object and add it into the task list","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"peng-217"},"content":"                try{","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"peng-217"},"content":"                    processDeadline(userInput,tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"peng-217"},"content":"                } catch(DukeException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"peng-217"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"peng-217"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"peng-217"},"content":"            } else if (userInput.length() \u003e\u003d 5 \u0026\u0026 userInput.substring(0, 5).equals(\"event\")) {  // Create an event object and add it into the task list","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"peng-217"},"content":"                try{","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"peng-217"},"content":"                    processEvent(userInput,tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"peng-217"},"content":"                } catch (DukeException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"peng-217"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"peng-217"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"peng-217"},"content":"            }else if (userInput.length() \u003e\u003d 6 \u0026\u0026 userInput.substring(0,6).equals(\"delete\")){","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"peng-217"},"content":"                int taskIndex \u003d Integer.parseInt(String.valueOf(userInput.charAt(7)));","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"peng-217"},"content":"                tasks.deleteTask(taskIndex - 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"peng-217"},"content":"            }  else {","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"peng-217"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"peng-217"},"content":"                    notValidCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"peng-217"},"content":"                } catch (DukeException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"peng-217"},"content":"                    ui.printErrorMessage(e.getMessage());","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"peng-217"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"peng-217"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"peng-217"},"content":"       }","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"peng-217"},"content":"    public void notValidCommand()throws DukeException{","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"peng-217"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"peng-217"},"content":"     * Process the deadline command to create a new deadline task in task list","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"peng-217"},"content":"     * @param userInput The full user input.","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"peng-217"},"content":"     * @throws DukeException If user input does not contain \"/by\" which means the command is invalid","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"peng-217"},"content":"    public void processDeadline(String userInput,TaskList tasks) throws DukeException{","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"peng-217"},"content":"        if(!userInput.contains(\"/by\") || userInput.length()\u003c\u003d 8){","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"peng-217"},"content":"            throw new DukeException(\"☹ OOPS!!! The description or the date of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"peng-217"},"content":"            int slashIndexDeadline \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"peng-217"},"content":"            int slashByIndex \u003d userInput.indexOf(\"/by\");","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"peng-217"},"content":"            tasks.createDeadline(userInput.substring(9,slashIndexDeadline),userInput.substring(slashByIndex + 4));","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"peng-217"},"content":"     * Process the event command to create a new event task in the task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"peng-217"},"content":"     * @param userInput The full user input.","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"peng-217"},"content":"     * @throws DukeException If user input does not contain \"/by\" which means the command is invalid","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"peng-217"},"content":"    public void processEvent(String userInput,TaskList tasks) throws DukeException{","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"peng-217"},"content":"        if(!userInput.contains(\"/at\") || userInput.length()\u003c\u003d 5){","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"peng-217"},"content":"            throw new DukeException(\"☹ OOPS!!! The description or the date of an event cannot be empty.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"peng-217"},"content":"        int slashIndexEvent \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"peng-217"},"content":"        int slashAtIndex \u003d userInput.indexOf(\"/at\");","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"peng-217"},"content":"        tasks.createEvent(userInput.substring(6,slashIndexEvent),userInput.substring(slashAtIndex+4));","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"peng-217"},"content":"     * Process the todo command to create a new todo task in the task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"peng-217"},"content":"     * @param userInput The full user input","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"peng-217"},"content":"     * @param tasks The task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"peng-217"},"content":"     * @throws DukeException If user input only contains \"todo\" or even shorter which are invalid conditions","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"peng-217"},"content":"    public void processTodo(String userInput, TaskList tasks) throws DukeException{","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"peng-217"},"content":"        if(userInput.length()\u003c\u003d 4){","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"peng-217"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"peng-217"},"content":"        tasks.createTodo(userInput.substring(5));","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"peng-217"},"content":"     * Find the task containing user\u0027s keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"peng-217"},"content":"     * @param keyword The keyword that user type in.","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"peng-217"},"content":"    public void findTask(String keyword,TaskList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"peng-217"},"content":"        if(tasks.searchTask(keyword,tasks).isEmpty()){","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"peng-217"},"content":"            System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"peng-217"},"content":"            System.out.println(\"Sorry, it seems that you don\u0027t have task contains this keyword in your task list.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"peng-217"},"content":"            System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"peng-217"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"peng-217"},"content":"            ui.printSelectedTasks(tasks.searchTask(keyword,tasks),keyword);","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"peng-217"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"peng-217":161}},{"path":"src/main/java/duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"package duke.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"import duke.task.*;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"peng-217"},"content":"public class Storage {","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"     * Default constructor.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"    public Storage(){","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"     * Save the task list as .txt file.","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"    public static void saveFile(TaskList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"peng-217"},"content":"        File saveDirection \u003d new File(\"data\");","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"peng-217"},"content":"        saveDirection.mkdir();","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"peng-217"},"content":"        File saveFile \u003d new File(saveDirection,\"duke.txt\");","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"peng-217"},"content":"        try{","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"peng-217"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"peng-217"},"content":"            FileWriter fileWriter \u003d new FileWriter(saveFile);","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"peng-217"},"content":"            for(int i \u003d 0; i \u003c tasks.getSize();i++){","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"peng-217"},"content":"                char taskType \u003d tasks.getIndexTask(i).toString().charAt(1);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"peng-217"},"content":"                fileWriter.write(taskType + \"||\" + tasks.getIndexTask(i).isDone() + \"||\" + tasks.getIndexTask(i).getTaskCommand());","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"peng-217"},"content":"                if (taskType \u003d\u003d \u0027D\u0027){","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"peng-217"},"content":"                    fileWriter.write(\"||\" + ((Deadline) tasks.getIndexTask(i)).getBy());","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"peng-217"},"content":"                } else if (taskType \u003d\u003d \u0027E\u0027){","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"peng-217"},"content":"                    fileWriter.write(\"||\" + ((Event) tasks.getIndexTask(i)).getEventTime());","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"peng-217"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"peng-217"},"content":"                fileWriter.write(\"\\n\");","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"peng-217"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"peng-217"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"peng-217"},"content":"        } catch (IOException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"peng-217"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"peng-217"},"content":"     * Open the task list that user saved last time.","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"peng-217"},"content":"    public static void openTaskFromFile(TaskList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"peng-217"},"content":"        File saveDirection \u003d new File(\"data\");","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"peng-217"},"content":"        saveDirection.mkdir();","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"peng-217"},"content":"        File saveFile \u003d new File(saveDirection,\"duke.txt\");","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"peng-217"},"content":"        if(saveFile.exists()){","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"peng-217"},"content":"            try{","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"peng-217"},"content":"                Scanner scanFile \u003d new Scanner(saveFile);","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"peng-217"},"content":"                while(scanFile.hasNext()){","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"peng-217"},"content":"                    String line \u003d scanFile.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"peng-217"},"content":"                    Task saveTask \u003d createSavedTask(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"peng-217"},"content":"                    tasks.openTask(saveTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"peng-217"},"content":"                    //(Duke.listLength)++;","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"peng-217"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"peng-217"},"content":"            } catch (FileNotFoundException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"peng-217"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"peng-217"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"peng-217"},"content":"    public static Task createSavedTask(String line){","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"peng-217"},"content":"        String[] lineDivision \u003d line.split(\"\\\\|\\\\|\");","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"peng-217"},"content":"        Task saveTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"peng-217"},"content":"        if(lineDivision[0].equals(\"D\")){","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"peng-217"},"content":"            LocalDate byTime \u003d LocalDate.parse(lineDivision[3]);","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"peng-217"},"content":"            saveTask \u003d new Deadline(lineDivision[2],byTime,Boolean.parseBoolean(lineDivision[1]));","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"peng-217"},"content":"        } else if (lineDivision[0].equals(\"E\")){","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"peng-217"},"content":"            saveTask \u003d new Event(lineDivision[2],lineDivision[3],Boolean.parseBoolean(lineDivision[1]));","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"peng-217"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"peng-217"},"content":"            saveTask \u003d new Todo(lineDivision[2],Boolean.parseBoolean(lineDivision[1]));","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"peng-217"},"content":"        return saveTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"peng-217"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"peng-217":100}},{"path":"src/main/java/duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"package duke.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"public class Ui {","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"    private Scanner scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"    public static final String SEPARATOR \u003d \"-----------------------------------\";","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"    public Ui(InputStream input){","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"        this.scanner \u003d new Scanner(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"    public Ui() {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"        this(System.in);","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"     * Prints the DUKE logo.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"peng-217"},"content":"   public void printDukeLogo(){","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"peng-217"},"content":"     * Prints DUKE greeting message.","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"peng-217"},"content":"   public void printGreet(){","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Hello! What can I do for you?\");","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"peng-217"},"content":"     * Prints bye message.","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"peng-217"},"content":"   public void printBye(){","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"peng-217"},"content":"     * Prints error message related to the exception.","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"peng-217"},"content":"     * @param errorMessage Error message related to the exception.","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"peng-217"},"content":"   public void printErrorMessage(String errorMessage){","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"peng-217"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"peng-217"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"peng-217"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"peng-217"},"content":"   public static void  printAddNormalTask(String command){","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"added:\" + \" \" + command);","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"peng-217"},"content":"       //listLength++;","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"peng-217"},"content":"     * Prints message to tell user that the new event task has been added to task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"peng-217"},"content":"     * @param event The new event task that has been added to the task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of task.","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"peng-217"},"content":"   public static void printAddEventMessage(Task event, ArrayList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"peng-217"},"content":"       System.out.println(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"peng-217"},"content":"     * Prints message to tell user that the new deadline task has been added to task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"peng-217"},"content":"     * @param deadline The new deadline task that has been added to the task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of task.","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"peng-217"},"content":"   public static void printAddDeadlineMessage(Task deadline, ArrayList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"peng-217"},"content":"       System.out.println(deadline);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list\");","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"peng-217"},"content":"     * Prints message to tell user that the new todo task has been added to task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"peng-217"},"content":"     * @param todo The new todo that has been added to the task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of task.","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"peng-217"},"content":"   public static void printTodoMessage(Task todo, ArrayList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"peng-217"},"content":"       System.out.println(todo);","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Now you have\" + \" \"+ tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"peng-217"},"content":"     * Prints message to tell user that the task has been deleted from task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"peng-217"},"content":"     * @param deletedTask Task that has been deleted.","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of task.","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"peng-217"},"content":"   public static void printDeleteMessage(Task deletedTask, ArrayList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"peng-217"},"content":"       System.out.println(deletedTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"peng-217"},"content":"     * Prints message to tell user that the task has been marked as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"peng-217"},"content":"     * @param done Task that needs to be marked as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"peng-217"},"content":"   public static void printMarkAsDoneMessage(Task done){","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"peng-217"},"content":"       System.out.println(\"Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"peng-217"},"content":"       System.out.println(done);","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"peng-217"},"content":"       System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"peng-217"},"content":"     * Prints all the task in the task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of task.","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"peng-217"},"content":"   public static void printTasks(TaskList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"peng-217"},"content":"       if(tasks.getSize() \u003d\u003d 0){","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"peng-217"},"content":"           System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"peng-217"},"content":"           System.out.println(\"Hmm...It seems that you have no task now.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"peng-217"},"content":"           System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"peng-217"},"content":"       }","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"peng-217"},"content":"       else{","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"peng-217"},"content":"           System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"peng-217"},"content":"           System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"peng-217"},"content":"           for(int i \u003d 0; i\u003c tasks.getSize();i++){","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"peng-217"},"content":"               System.out.println((i+1) + \".\" + \" \" + tasks.getIndexTask(i));","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"peng-217"},"content":"           }","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"peng-217"},"content":"           System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"peng-217"},"content":"       }","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"peng-217"},"content":"     * Prints the tasks that contain searching keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"peng-217"},"content":"     * @param result The list of tasks that contain search keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"peng-217"},"content":"     * @param keyword The search keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"peng-217"},"content":"   public static void printSelectedTasks(ArrayList\u003cTask\u003e result,String keyword){","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"peng-217"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"peng-217"},"content":"        System.out.println(\"Hey! I found these tasks contains keyword\" + \" \" + \"\\\"\" + keyword + \"\\\"\" + \":\");","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"peng-217"},"content":"        for(int i \u003d 0; i \u003c result.size();i++){","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"peng-217"},"content":"            System.out.println((i+1) + \".\" + \" \" + result.get(i));","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"peng-217"},"content":"        System.out.println(SEPARATOR);","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"peng-217"},"content":"   }","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"peng-217"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"peng-217":171}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"//This class is an exception class to handle errors","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"     * Exceptions\u0027 error messages","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"     * @param errorMessage The error message that thrown by exceptions","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"    public DukeException(String errorMessage){","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"peng-217":12}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"    private LocalDate by;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"     * Constructor with task description and the time of deadline.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"     * @param description The description of task.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"     * @param by The time of deadline.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"    public Deadline(String description, LocalDate by){","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"     * Constructor with task description and time of deadline and whether deadline has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"     * @param taskDescription The description of task.","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"     * @param by The time of deadline.","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"     * @param isDone The boolean value of whether deadline has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"peng-217"},"content":"    public Deadline(String taskDescription,LocalDate by, boolean isDone){","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"        super (taskDescription,isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"peng-217"},"content":"     * Returns the deadline time.","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"peng-217"},"content":"     * @return The time of deadline in string.","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"peng-217"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"peng-217"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"peng-217"},"content":"     * Returns the String of deadline.","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"peng-217"},"content":"     * @return Deadline in string.","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"peng-217"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"peng-217"},"content":"    public String toString(){","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"peng-217"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"peng-217"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"peng-217":47}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"    private String eventTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"     * Constructor with task description and event time.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"     * @param eventTime Event time.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"    public Event(String description,String eventTime) {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"     * Constructor with task description and event time and whether event has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"peng-217"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"     * @param eventTime Event time.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"     * @param isDone Whether event has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"    public Event(String description,String eventTime,boolean isDone){","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"        super(description,isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"        this.eventTime \u003d eventTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"     * Returns event time.","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"     * @return Event time.","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"    public String getEventTime() {","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"peng-217"},"content":"        return eventTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"peng-217"},"content":"     * Returns the event in string.","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"peng-217"},"content":"     * @return Event in string.","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"peng-217"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"peng-217"},"content":"    public String toString(){","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"peng-217"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + eventTime + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":43,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":44,"author":{"gitId":"peng-217"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"peng-217":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"    private String command;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"    private String deadline;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"    private boolean needToDo;","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"     * Constructor with task command.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"     * @param command Task command.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"    public Task(String command) {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"     * Constructor with task command and whether task has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"     * @param command Task command","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"     * @param isDone Whether task has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"    public Task(String command, boolean isDone){","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"peng-217"},"content":"        this(command);","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"peng-217"},"content":"        if(isDone){","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"            taskDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"peng-217"},"content":"     * Returns task command.","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"peng-217"},"content":"     * @return Task command.","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"peng-217"},"content":"    public String getTaskCommand() {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"peng-217"},"content":"        return command;","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"peng-217"},"content":"     * Check whether task command contains search keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"peng-217"},"content":"     * @param keyword Keyword that user typed in to search.","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"peng-217"},"content":"     * @return whether the task command contains given keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"peng-217"},"content":"    public boolean containKeyword(String keyword){","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"peng-217"},"content":"        return command.contains(keyword);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"peng-217"},"content":"     * Returns the status icon according to whether task has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"peng-217"},"content":"     * @return The status icon.","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"peng-217"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"peng-217"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"peng-217"},"content":"     * Returns whether task has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"peng-217"},"content":"     * @return Whether task has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"peng-217"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"peng-217"},"content":"        return isDone;","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":63,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"peng-217"},"content":"     * Mark the task as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"peng-217"},"content":"    public void taskDone(){","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"peng-217"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":69,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":70,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":71,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"peng-217"},"content":"     * Returns the task in string.","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"peng-217"},"content":"     * @return Task in string.","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"peng-217"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":76,"author":{"gitId":"peng-217"},"content":"    public String toString(){","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"peng-217"},"content":"        return \"[\" + getStatusIcon() + \"] \" + command;","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"peng-217"},"content":"}","lastModifiedDate":"2021-09-02"},{"lineNumber":80,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":81,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"peng-217":81}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"public class TaskList {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"peng-217"},"content":"     * Constructor with Ui.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"     * @param ui Ui to set Tasklist.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"    public TaskList(Ui ui){","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"     * Return the task in the task list according to the given index.","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"     * @param index Index of task that want to get.","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"     * @return The task with given index.","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"peng-217"},"content":"    public Task getIndexTask(int index){","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"peng-217"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"peng-217"},"content":"     * Returns the size of task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"peng-217"},"content":"     * @return Size of task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"peng-217"},"content":"    public int getSize(){","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"peng-217"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"peng-217"},"content":"     * Open the task from saved file.","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"peng-217"},"content":"     * @param task The task stored in file.","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"peng-217"},"content":"    public void openTask(Task task){","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"peng-217"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"peng-217"},"content":"     * Create a new todo task in task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"peng-217"},"content":"     * @param command Command of todo task.","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"peng-217"},"content":"    public void createTodo(String command){","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"peng-217"},"content":"        Todo todo \u003d new Todo(command);","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"peng-217"},"content":"        tasks.add(todo);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"peng-217"},"content":"        Ui.printTodoMessage(todo,tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"peng-217"},"content":"        Storage.saveFile(this);","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"peng-217"},"content":"     * Create a new deadline task in task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"peng-217"},"content":"     * @param command Command of deadline task.","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"peng-217"},"content":"     * @param by Deadline time.","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"peng-217"},"content":"    public void createDeadline(String command,String by) {","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"peng-217"},"content":"        LocalDate byTime \u003d LocalDate.parse(by);","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"peng-217"},"content":"        Deadline deadline \u003d new Deadline(command,byTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"peng-217"},"content":"        tasks.add(deadline);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"peng-217"},"content":"        Ui.printAddDeadlineMessage(deadline,tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"peng-217"},"content":"        Storage.saveFile(this);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"peng-217"},"content":"     * Create a new event task in task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"peng-217"},"content":"     * @param command Command of event task.","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"peng-217"},"content":"     * @param at Event Time.","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"peng-217"},"content":"    public void createEvent(String command, String at){","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"peng-217"},"content":"        Event event \u003d new Event(command,at);","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"peng-217"},"content":"        tasks.add(event);","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"peng-217"},"content":"        Ui.printAddEventMessage(event,tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"peng-217"},"content":"    public void createNormalTask(String command){","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"peng-217"},"content":"     * Delete the task with given index in task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"peng-217"},"content":"     * @param index The index of task that need to be deleted.","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"peng-217"},"content":"    public void deleteTask(int index){","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"peng-217"},"content":"        Task deleteTask \u003d tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"peng-217"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"peng-217"},"content":"        Storage.saveFile(this);","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"peng-217"},"content":"        Ui.printDeleteMessage(deleteTask,tasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"peng-217"},"content":"     * Mark the task with given index as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"peng-217"},"content":"     * @param index The index of task that need to mark as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"peng-217"},"content":"     * @throws DukeException If the size of task list is zero.","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"peng-217"},"content":"    public void markAsDone(int index) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"peng-217"},"content":"        if(tasks.size() \u003d\u003d 0){","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"peng-217"},"content":"            throw new DukeException(\"Hmm... It seems that you have no task to mark in your empty list.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"peng-217"},"content":"        } else{","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"peng-217"},"content":"            Task done \u003d tasks.get(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"peng-217"},"content":"            done.taskDone();","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"peng-217"},"content":"            Ui.printMarkAsDoneMessage(done);","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"peng-217"},"content":"     * Return a list of task with the tasks containing given keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"peng-217"},"content":"     * @param keyword Keyword typed in by user.","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"peng-217"},"content":"     * @param tasks The list of task.","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"peng-217"},"content":"     * @return A list of task with the tasks containing given keyword.","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"peng-217"},"content":"    public static ArrayList\u003cTask\u003e searchTask(String keyword,TaskList tasks){","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"peng-217"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"peng-217"},"content":"        for(int i \u003d 0;i\u003c tasks.getSize();i++){","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"peng-217"},"content":"            if(tasks.getIndexTask(i).containKeyword(keyword)){","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"peng-217"},"content":"                result.add(tasks.getIndexTask(i));","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"peng-217"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"peng-217"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"peng-217"},"content":"        return result;","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"peng-217"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"peng-217":137}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"     * Constructor with task description.","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"peng-217"},"content":"     * Constructor with task description and whether todo task has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"peng-217"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"peng-217"},"content":"     * @param isDone Whether todo task has been done.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"peng-217"},"content":"    public Todo(String description,boolean isDone){","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"peng-217"},"content":"        super(description,isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"peng-217"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"peng-217"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"peng-217"},"content":"     * Returns a todo task in string.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"peng-217"},"content":"     * @return A todo task in string.","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"peng-217"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"peng-217"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"peng-217"},"content":"    public String toString(){","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"peng-217"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"peng-217"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"peng-217"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"peng-217":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"peng-217"},"content":"todo borrow book","lastModifiedDate":"2021-09-02"},{"lineNumber":2,"author":{"gitId":"peng-217"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":3,"author":{"gitId":"peng-217"},"content":"deadline return book /by Friday","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"peng-217"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"peng-217"},"content":"event read book /at Thursday 3-6pm","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"peng-217"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"peng-217"},"content":"done 1","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"peng-217"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"peng-217"},"content":"done 2","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"list","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"peng-217"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"peng-217":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"peng-217"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"peng-217":1,"-":20}}]
