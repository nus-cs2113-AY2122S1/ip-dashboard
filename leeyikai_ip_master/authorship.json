[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"This is Duke user guide. It implements a simple to do list which has some simple functions. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"## Setting up Duke","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"1. You can download the latest release containing the `ip.jar` file.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"2. Ensure that you have Java 11 installed.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"3. Execute the ip.jar by running the following command: `java -jar ip.jar`","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"4. If you see the following welcome screen, you have succesfully ran Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":" Hello! I\u0027m Duke","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":" What can I do for you?","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"## Features","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"### Adding a todo: `todo`","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"Adds a todo containing a task description to the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"Format: ```todo DESCRIPTION```","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"* `DESCRIPTION` is a string that cannot be whitespace or empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"`todo task 1`","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"[T][] task 1","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"You have 1 tasks in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"1 tasks are undone.","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"### Adding a deadline: `deadline`","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"Adds a deadline containing a description and date to the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"Format: ```deadline DESCRIPTION /by DATE```","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"* `DESCRIPTION` is a string that cannot be whitespace or empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"* `DATE` is a string that cannot be whitespace of empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"`deadline task 2 /by Sunday 4pm`","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"[D][] task 2 (by: Sunday 4pm)","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"You have 2 tasks in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"leeyikai"},"content":"2 tasks are undone.","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"leeyikai"},"content":"### Adding an event: `event`","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"leeyikai"},"content":"Adds a event containing a task description and a date to the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"leeyikai"},"content":"Format: ```event DESCRIPTION /at DATE```","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"leeyikai"},"content":"* `DESCRIPTION` is a string that cannot be whitespace or empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"leeyikai"},"content":"* * `DATE` is a string that cannot be whitespace of empty.","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"`event task 3 /at Sunday 4pm`","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"leeyikai"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"leeyikai"},"content":"[E][] task 3 (at: Sunday 4pm)","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"leeyikai"},"content":"You have 3 tasks in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"leeyikai"},"content":"3 tasks are undone.","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"leeyikai"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"leeyikai"},"content":"Lists all tasks that are current available. A display message will be shown if there are no tasks available.","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"leeyikai"},"content":"Format: `list`","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"leeyikai"},"content":"`list`","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"leeyikai"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"leeyikai"},"content":"1. [T][] task 1","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"leeyikai"},"content":"2. [D][] task 2 (by: Sunday 4pm)","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"leeyikai"},"content":"3. [E][] task 3 (at: Sunday 4pm)","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"leeyikai"},"content":"You have 3 tasks in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"leeyikai"},"content":"3 tasks are undone.","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"leeyikai"},"content":"input:","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"leeyikai"},"content":"`list`","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"leeyikai"},"content":"`You have no tasks at the moment!`","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"leeyikai"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"leeyikai"},"content":"Deletes a task of with index number `INDEX` from the task list. A display message will be shown if index does not exist.","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"leeyikai"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"leeyikai"},"content":"delete 3","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"leeyikai"},"content":"Output: ","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"leeyikai"},"content":"This task index does not exist","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"leeyikai"},"content":"delete 2","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"leeyikai"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"leeyikai"},"content":"[E][] task 3 (at: Sunday 4pm)","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"leeyikai"},"content":"You have 2 tasks in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"leeyikai"},"content":"2 tasks are undone.","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"leeyikai"},"content":"### Finishing a task: `done`","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"leeyikai"},"content":"Mark a task as done. A display message will be shown if task index is not found.","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"leeyikai"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"leeyikai"},"content":"`done 5`","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"leeyikai"},"content":"This task index does not exist","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"leeyikai"},"content":"`done 1`","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"leeyikai"},"content":"Got it. I\u0027ve marked this task as complete:","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"leeyikai"},"content":"[T][X] task 1","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"leeyikai"},"content":"You have 2 tasks in the list.","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"leeyikai"},"content":"1 tasks are undone.","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"leeyikai"},"content":"### Finding a task: `find`","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"leeyikai"},"content":"Finds a task containing `WORD`. A display message will be shown if no such tasks exist.","lastModifiedDate":"2021-09-23"},{"lineNumber":180,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"leeyikai"},"content":"Format: `find WORD`","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"leeyikai"},"content":"Input: ","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"leeyikai"},"content":"`find 1`","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"leeyikai"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"leeyikai"},"content":"1. [T][X] task 1","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"leeyikai"},"content":"`find 3`","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"leeyikai"},"content":"There are no tasks containing such words!","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":206,"author":{"gitId":"leeyikai"},"content":"### Saving all tasks: `save`","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"leeyikai"},"content":"Saves all tasks into a .txt file with a specified file path in Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"leeyikai"},"content":"Format: `save`","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"leeyikai"},"content":"`save`","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"leeyikai"},"content":"Tasks saved successfully","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":220,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":221,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":222,"author":{"gitId":"leeyikai"},"content":"### Exiting the program: `bye`","lastModifiedDate":"2021-09-23"},{"lineNumber":223,"author":{"gitId":"leeyikai"},"content":"Exits the program.","lastModifiedDate":"2021-09-23"},{"lineNumber":224,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":225,"author":{"gitId":"leeyikai"},"content":"Format: `bye`","lastModifiedDate":"2021-09-23"},{"lineNumber":226,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":227,"author":{"gitId":"leeyikai"},"content":"Input:","lastModifiedDate":"2021-09-23"},{"lineNumber":228,"author":{"gitId":"leeyikai"},"content":"`bye`","lastModifiedDate":"2021-09-23"},{"lineNumber":229,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":230,"author":{"gitId":"leeyikai"},"content":"Output:","lastModifiedDate":"2021-09-23"},{"lineNumber":231,"author":{"gitId":"leeyikai"},"content":"```","lastModifiedDate":"2021-09-23"},{"lineNumber":232,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":233,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":234,"author":{"gitId":"leeyikai"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-23"},{"lineNumber":235,"author":{"gitId":"leeyikai"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":11,"leeyikai":225}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"import todo.*;","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":" * The Duke class implements an application that runs the Duke program","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":" * which takes in simple commands to add, remove and save a set of tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"    protected static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"    protected static ArrayList\u003cString\u003e commands \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"    protected static String filePath;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"     * Starts running the whole program by showing the welcome screen,","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"     * adding commands available and reading any file inputs.","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"    protected static void run() {","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"        Ui.showWelcomeScreen();","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"        addCommands();","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"        Storage.readFile();","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"        Parser.readInput();","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"     * Constructs an instance of the Duke class","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"     * @param filePath path to save to","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"     * Adds all valid commands for the program.","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"    protected static void addCommands() {","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"        String[] commandsToAdd \u003d new String[]{\"done\", \"todo\", \"event\",","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"                    \"deadline\", \"delete\", \"list\", \"save\", \"bye\", \"find\"};","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"        for (String s : commandsToAdd) {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"            commands.add(s);","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"    public static void printMessage(String text) {","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"        System.out.println(text);","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"        printDivider();","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"    protected static void printDivider() {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"        System.out.println(\"____________________________________________________________\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"-":4,"leeyikai":57}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"import exceptions.*;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"import todo.Deadline;","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"import todo.Event;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"import todo.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"import todo.ToDo;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"public class Parser extends Duke {","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"    public Parser(String filePath) {","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"        super(filePath);","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"     * Reads user input and executes method to check validity of command.","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"     * Error messages are displayed if commands are invalid or format of command is incorrect.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"    protected static void readInput() {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"        String line \u003d \"\";","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"        while (!line.contains(\"bye\") || in.hasNextLine()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"            assert line !\u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"            printDivider();","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"            String[] words \u003d line.split(\" \", 2);","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"            try{","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"                checkValidCommand(words);","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"            } catch (InvalidCommandError e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"                printMessage(\"Invalid command. Try again!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"            } catch (MissingFieldError e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"                printMessage(\"You are missing a field!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"     * Checks if command is a valid command in the program","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"     * @param fullCommand input which user has entered","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"     * @throws InvalidCommandError command does not exist in the program","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"     * @throws MissingFieldError full command is not of the correct format","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"    protected static void checkValidCommand(String[] fullCommand) throws InvalidCommandError, MissingFieldError {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"        String command \u003d fullCommand[0];","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"        if(!commands.contains(command)){","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"            throw new InvalidCommandError();","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"        executeCommand(fullCommand, command);","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"     * Method executes command and checks if command format is correct.","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"     * If command format is incorrect, this method will throw a MissingFieldError.","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"     * @param fullCommand input which user has entered","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"     * @param command string containing command which we want to execute","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"     * @throws MissingFieldError format of command is incorrect","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"    protected static void executeCommand(String[] fullCommand, String command) throws MissingFieldError, IndexOutOfBoundsException {","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"        switch (command) {","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"            case \"done\": {","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"                try{","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"leeyikai"},"content":"                    int currentIndex \u003d checkTaskIndex(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"leeyikai"},"content":"                    setTaskDone(currentIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"leeyikai"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"leeyikai"},"content":"                    printMessage(\"This task index does not exist\");","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"leeyikai"},"content":"                } catch (MissingFieldError e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"leeyikai"},"content":"                    printMessage(\"Missing fields!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"leeyikai"},"content":"            case \"list\":","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"                TaskList.listAllTask();","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"                Ui.showByeScreen();","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"leeyikai"},"content":"            case \"save\":","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"leeyikai"},"content":"                try {","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"leeyikai"},"content":"                    Storage.saveTasks(filePath);","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"leeyikai"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"leeyikai"},"content":"                    Duke.printMessage(\"Something went wrong!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"leeyikai"},"content":"            case \"delete\": {","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"leeyikai"},"content":"                int currentIndex \u003d checkTaskIndex(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"leeyikai"},"content":"                TaskList.removeTask(currentIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"leeyikai"},"content":"            case \"find\":","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"leeyikai"},"content":"                String wordToFind \u003d extractWordToFind(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"leeyikai"},"content":"                findTask(wordToFind);","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"leeyikai"},"content":"            default:  //is a valid task","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"leeyikai"},"content":"                checkValidInput(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"leeyikai"},"content":"     * Implements the find feature. Searches for word to see if it is in the tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"leeyikai"},"content":"     * If it is, it prints the task along with its index.","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"leeyikai"},"content":"     * If it is not, it prints a message to notify the user.","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"leeyikai"},"content":"     * @param wordToFind string containing the word that we want to search for","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"leeyikai"},"content":"    private static void findTask(String wordToFind) {","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"leeyikai"},"content":"        boolean taskExists \u003d false;","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"leeyikai"},"content":"        String currentTask;","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"leeyikai"},"content":"        for(int i \u003d 0; i \u003c Duke.tasks.size(); i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"leeyikai"},"content":"            currentTask \u003d Duke.tasks.get(i).toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"leeyikai"},"content":"            if(currentTask.contains(wordToFind)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"leeyikai"},"content":"                if(!taskExists) {","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"leeyikai"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"leeyikai"},"content":"                    taskExists \u003d true;","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"leeyikai"},"content":"                System.out.println((i + 1) + \". \" + currentTask);","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"leeyikai"},"content":"                if(i + 1 \u003d\u003d Duke.tasks.size()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"leeyikai"},"content":"                    printDivider();","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"leeyikai"},"content":"                }","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"leeyikai"},"content":"        if(!taskExists) {","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"leeyikai"},"content":"            printMessage(\"There are no tasks containing such words!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"leeyikai"},"content":"     * Catches different errors when the full command is split into","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"leeyikai"},"content":"     * @param fullCommand input which user has entered","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"leeyikai"},"content":"    protected static void checkValidInput(String[] fullCommand) {","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"leeyikai"},"content":"        try{","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"leeyikai"},"content":"            splitInput(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"leeyikai"},"content":"        } catch (MissingDescriptionError e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":141,"author":{"gitId":"leeyikai"},"content":"            printMessage(\"Missing description!!!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":142,"author":{"gitId":"leeyikai"},"content":"        } catch (InvalidDescriptionError e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":143,"author":{"gitId":"leeyikai"},"content":"            printMessage(\"Description cannot be whitespace!!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":144,"author":{"gitId":"leeyikai"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":145,"author":{"gitId":"leeyikai"},"content":"            printMessage(\"Something went wrong! Please try again!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":146,"author":{"gitId":"leeyikai"},"content":"        } catch (EmptyDateError e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":147,"author":{"gitId":"leeyikai"},"content":"            printMessage(\"Date cannot be empty!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":148,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"leeyikai"},"content":"     * Splits full command into type of task, description of task and date of task (if applicable).","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"leeyikai"},"content":"     * @param fullCommand input which user has entered","lastModifiedDate":"2021-09-23"},{"lineNumber":155,"author":{"gitId":"leeyikai"},"content":"     * @throws MissingDescriptionError description for the task is missing","lastModifiedDate":"2021-09-23"},{"lineNumber":156,"author":{"gitId":"leeyikai"},"content":"     * @throws InvalidDescriptionError description for task is all whitespace","lastModifiedDate":"2021-09-23"},{"lineNumber":157,"author":{"gitId":"leeyikai"},"content":"     * @throws EmptyDateError  date","lastModifiedDate":"2021-09-23"},{"lineNumber":158,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"leeyikai"},"content":"    protected static void splitInput(String[] fullCommand)","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"leeyikai"},"content":"            throws MissingDescriptionError, InvalidDescriptionError, EmptyDateError {","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"leeyikai"},"content":"        String task;","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"leeyikai"},"content":"        String date \u003d null;","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"leeyikai"},"content":"        String type \u003d fullCommand[0];","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"leeyikai"},"content":"        checkDescription(fullCommand);","lastModifiedDate":"2021-09-23"},{"lineNumber":165,"author":{"gitId":"leeyikai"},"content":"        String[] taskDescription \u003d splitString(fullCommand[1], \"/\");","lastModifiedDate":"2021-09-23"},{"lineNumber":166,"author":{"gitId":"leeyikai"},"content":"        if(TaskList.checkEmptyDate(taskDescription) \u0026\u0026 !type.equals(\"todo\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":167,"author":{"gitId":"leeyikai"},"content":"            throw new EmptyDateError();","lastModifiedDate":"2021-09-23"},{"lineNumber":168,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":169,"author":{"gitId":"leeyikai"},"content":"        if(type.equals(\"todo\")){ //todo command","lastModifiedDate":"2021-09-23"},{"lineNumber":170,"author":{"gitId":"leeyikai"},"content":"            task \u003d fullCommand[1];","lastModifiedDate":"2021-09-23"},{"lineNumber":171,"author":{"gitId":"leeyikai"},"content":"        } else { //have action and date","lastModifiedDate":"2021-09-23"},{"lineNumber":172,"author":{"gitId":"leeyikai"},"content":"            task \u003d taskDescription[0].trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":173,"author":{"gitId":"leeyikai"},"content":"            date \u003d taskDescription[1].split(\" \", 2)[1];","lastModifiedDate":"2021-09-23"},{"lineNumber":174,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":175,"author":{"gitId":"leeyikai"},"content":"        executeTask(task, date, type);","lastModifiedDate":"2021-09-23"},{"lineNumber":176,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":177,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":178,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":179,"author":{"gitId":"leeyikai"},"content":"     * Method executes command to add task depending on the type of task.","lastModifiedDate":"2021-09-23"},{"lineNumber":180,"author":{"gitId":"leeyikai"},"content":"     * If the type of the task does not match available types, an error message will be shown","lastModifiedDate":"2021-09-23"},{"lineNumber":181,"author":{"gitId":"leeyikai"},"content":"     * @param task description of the task","lastModifiedDate":"2021-09-23"},{"lineNumber":182,"author":{"gitId":"leeyikai"},"content":"     * @param date date to complete the task by","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"leeyikai"},"content":"     * @param type type of task","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"leeyikai"},"content":"    protected static void executeTask(String task, String date,","lastModifiedDate":"2021-09-23"},{"lineNumber":186,"author":{"gitId":"leeyikai"},"content":"                                      String type) {","lastModifiedDate":"2021-09-23"},{"lineNumber":187,"author":{"gitId":"leeyikai"},"content":"        switch (type) {","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"leeyikai"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"leeyikai"},"content":"                addDeadline(task, date);","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"leeyikai"},"content":"            case \"event\":","lastModifiedDate":"2021-09-23"},{"lineNumber":192,"author":{"gitId":"leeyikai"},"content":"                addEvent(task, date);","lastModifiedDate":"2021-09-23"},{"lineNumber":193,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":194,"author":{"gitId":"leeyikai"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-23"},{"lineNumber":195,"author":{"gitId":"leeyikai"},"content":"                addToDo(task);","lastModifiedDate":"2021-09-23"},{"lineNumber":196,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":197,"author":{"gitId":"leeyikai"},"content":"            default:  //invalid command","lastModifiedDate":"2021-09-23"},{"lineNumber":198,"author":{"gitId":"leeyikai"},"content":"                Duke.printMessage(\"Invalid type, try again.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":199,"author":{"gitId":"leeyikai"},"content":"                break;","lastModifiedDate":"2021-09-23"},{"lineNumber":200,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":201,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":202,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":203,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":204,"author":{"gitId":"leeyikai"},"content":"     * Checks if the full command is of the appropiate format.","lastModifiedDate":"2021-09-23"},{"lineNumber":205,"author":{"gitId":"leeyikai"},"content":"     * Returns the index of the task which the command is to be carried out on","lastModifiedDate":"2021-09-23"},{"lineNumber":206,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":207,"author":{"gitId":"leeyikai"},"content":"     * @param fullCommand input which user has entered","lastModifiedDate":"2021-09-23"},{"lineNumber":208,"author":{"gitId":"leeyikai"},"content":"     * @return index of the task to which command is to carry out on","lastModifiedDate":"2021-09-23"},{"lineNumber":209,"author":{"gitId":"leeyikai"},"content":"     * @throws MissingFieldError format of command is incorrect","lastModifiedDate":"2021-09-23"},{"lineNumber":210,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":211,"author":{"gitId":"leeyikai"},"content":"    protected static int checkTaskIndex(String[] fullCommand) throws MissingFieldError, IndexOutOfBoundsException {","lastModifiedDate":"2021-09-23"},{"lineNumber":212,"author":{"gitId":"leeyikai"},"content":"        if(fullCommand.length \u003c 2) {","lastModifiedDate":"2021-09-23"},{"lineNumber":213,"author":{"gitId":"leeyikai"},"content":"            throw new MissingFieldError();","lastModifiedDate":"2021-09-23"},{"lineNumber":214,"author":{"gitId":"leeyikai"},"content":"        } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":215,"author":{"gitId":"leeyikai"},"content":"            return Integer.parseInt(fullCommand[1]);","lastModifiedDate":"2021-09-23"},{"lineNumber":216,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":217,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":218,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":219,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":220,"author":{"gitId":"leeyikai"},"content":"     * Checks if full command contains the description of the task.","lastModifiedDate":"2021-09-23"},{"lineNumber":221,"author":{"gitId":"leeyikai"},"content":"     * Throws an error message if full command does not contain the description of the task,","lastModifiedDate":"2021-09-23"},{"lineNumber":222,"author":{"gitId":"leeyikai"},"content":"     * or the description of the task is whitespace.","lastModifiedDate":"2021-09-23"},{"lineNumber":223,"author":{"gitId":"leeyikai"},"content":"     * @param fullCommand input which user has entered","lastModifiedDate":"2021-09-23"},{"lineNumber":224,"author":{"gitId":"leeyikai"},"content":"     * @throws MissingDescriptionError description is completely missing","lastModifiedDate":"2021-09-23"},{"lineNumber":225,"author":{"gitId":"leeyikai"},"content":"     * @throws InvalidDescriptionError description is whitespace","lastModifiedDate":"2021-09-23"},{"lineNumber":226,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":227,"author":{"gitId":"leeyikai"},"content":"    protected static void checkDescription(String[] fullCommand) throws MissingDescriptionError, InvalidDescriptionError {","lastModifiedDate":"2021-09-23"},{"lineNumber":228,"author":{"gitId":"leeyikai"},"content":"        if(fullCommand.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-23"},{"lineNumber":229,"author":{"gitId":"leeyikai"},"content":"            throw new MissingDescriptionError();","lastModifiedDate":"2021-09-23"},{"lineNumber":230,"author":{"gitId":"leeyikai"},"content":"        } else if(checkInvalidDescription(fullCommand[1])) {","lastModifiedDate":"2021-09-23"},{"lineNumber":231,"author":{"gitId":"leeyikai"},"content":"            throw new InvalidDescriptionError(); //check that description is not just whitespaces","lastModifiedDate":"2021-09-23"},{"lineNumber":232,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":233,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":234,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":235,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":236,"author":{"gitId":"leeyikai"},"content":"     * Returns the description of the task without any white spaces at the start and the end","lastModifiedDate":"2021-09-23"},{"lineNumber":237,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":238,"author":{"gitId":"leeyikai"},"content":"     * @param currentTask task which we want to extract the description from","lastModifiedDate":"2021-09-23"},{"lineNumber":239,"author":{"gitId":"leeyikai"},"content":"     * @return String containing the description of currentTask","lastModifiedDate":"2021-09-23"},{"lineNumber":240,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":241,"author":{"gitId":"leeyikai"},"content":"    protected static String extractTask(Task currentTask) {","lastModifiedDate":"2021-09-23"},{"lineNumber":242,"author":{"gitId":"leeyikai"},"content":"        String taskWithDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":243,"author":{"gitId":"leeyikai"},"content":"        String[] taskDescription;","lastModifiedDate":"2021-09-23"},{"lineNumber":244,"author":{"gitId":"leeyikai"},"content":"        taskWithDate \u003d currentTask.toString().split(\" \", 2)[1];","lastModifiedDate":"2021-09-23"},{"lineNumber":245,"author":{"gitId":"leeyikai"},"content":"        taskDescription \u003d taskWithDate.split(\"\\\\(\", 2);","lastModifiedDate":"2021-09-23"},{"lineNumber":246,"author":{"gitId":"leeyikai"},"content":"        return taskDescription[0].trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":247,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":248,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":249,"author":{"gitId":"leeyikai"},"content":"    protected static Boolean checkInvalidDescription(String word) {","lastModifiedDate":"2021-09-23"},{"lineNumber":250,"author":{"gitId":"leeyikai"},"content":"        return word.trim().length() \u003d\u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":251,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":252,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":253,"author":{"gitId":"leeyikai"},"content":"    protected static void completeSuccess(int index) {","lastModifiedDate":"2021-09-23"},{"lineNumber":254,"author":{"gitId":"leeyikai"},"content":"        printMessage(\"Got it. I\u0027ve marked this task as complete:\");","lastModifiedDate":"2021-09-23"},{"lineNumber":255,"author":{"gitId":"leeyikai"},"content":"        System.out.println(tasks.get(index - 1).toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":256,"author":{"gitId":"leeyikai"},"content":"        TaskList.getTasksLeft();","lastModifiedDate":"2021-09-23"},{"lineNumber":257,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":258,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":259,"author":{"gitId":"leeyikai"},"content":"    protected static String[] splitString(String word, String s) {","lastModifiedDate":"2021-09-23"},{"lineNumber":260,"author":{"gitId":"leeyikai"},"content":"        return word.split(s, 2);","lastModifiedDate":"2021-09-23"},{"lineNumber":261,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":262,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":263,"author":{"gitId":"leeyikai"},"content":"    protected static void addToDo(String task) {","lastModifiedDate":"2021-09-23"},{"lineNumber":264,"author":{"gitId":"leeyikai"},"content":"        Duke.tasks.add(new ToDo(task));","lastModifiedDate":"2021-09-23"},{"lineNumber":265,"author":{"gitId":"leeyikai"},"content":"        TaskList.addSuccessMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":266,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":267,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":268,"author":{"gitId":"leeyikai"},"content":"    protected static void addEvent(String task, String date) {","lastModifiedDate":"2021-09-23"},{"lineNumber":269,"author":{"gitId":"leeyikai"},"content":"        Duke.tasks.add(new Event(task, date));","lastModifiedDate":"2021-09-23"},{"lineNumber":270,"author":{"gitId":"leeyikai"},"content":"        TaskList.addSuccessMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":271,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":272,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":273,"author":{"gitId":"leeyikai"},"content":"    protected static void addDeadline(String task, String date) {","lastModifiedDate":"2021-09-23"},{"lineNumber":274,"author":{"gitId":"leeyikai"},"content":"        Duke.tasks.add(new Deadline(task, date));","lastModifiedDate":"2021-09-23"},{"lineNumber":275,"author":{"gitId":"leeyikai"},"content":"        TaskList.addSuccessMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":276,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":277,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":278,"author":{"gitId":"leeyikai"},"content":"    protected static void setTaskDone(int currentIndex) {","lastModifiedDate":"2021-09-23"},{"lineNumber":279,"author":{"gitId":"leeyikai"},"content":"        tasks.get(currentIndex - 1).setDone(true);","lastModifiedDate":"2021-09-23"},{"lineNumber":280,"author":{"gitId":"leeyikai"},"content":"        completeSuccess(currentIndex);","lastModifiedDate":"2021-09-23"},{"lineNumber":281,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":282,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":283,"author":{"gitId":"leeyikai"},"content":"    private static String extractWordToFind(String[] fullCommand) throws MissingFieldError {","lastModifiedDate":"2021-09-23"},{"lineNumber":284,"author":{"gitId":"leeyikai"},"content":"        if (fullCommand.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-23"},{"lineNumber":285,"author":{"gitId":"leeyikai"},"content":"            throw new MissingFieldError();","lastModifiedDate":"2021-09-23"},{"lineNumber":286,"author":{"gitId":"leeyikai"},"content":"        } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":287,"author":{"gitId":"leeyikai"},"content":"            return fullCommand[1];","lastModifiedDate":"2021-09-23"},{"lineNumber":288,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":289,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":290,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"leeyikai":290}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"import todo.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"import java.io.File;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":" * This class includes methods which helps to save and load files containing","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":" * tasks into the program.","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"public class Storage {","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"     * Formats the tasks currently in the task list and saves it into a .txt file.","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"     * @param filePath path where .txt file will be created at.","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"     * @throws IOException when IO operations fail.","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"    public static void saveTasks(String filePath) throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"        String stringToAdd \u003d \"\";","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"        String taskDescription, type;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"        Boolean isDone;","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"        for(int i \u003d 0; i \u003c Duke.tasks.size(); i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"            Task currentTask \u003d Duke.tasks.get(i);","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"            taskDescription \u003d Parser.extractTask(currentTask);","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"            type \u003d currentTask.getType();","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"            isDone \u003d currentTask.getStatus();","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"            stringToAdd \u003d getString(stringToAdd, taskDescription, type, isDone);","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"            if(type.equals(\"e\") || type.equals(\"d\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"                stringToAdd \u003d extractDate(stringToAdd, currentTask);","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"            stringToAdd +\u003d System.lineSeparator();","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"        fw.write(stringToAdd);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"        fw.close();","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"        Duke.printMessage(\"Tasks saved successfully\");","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"     * Returns a string containing the date which the deadline or event has to be done by.","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"     * @param stringToAdd string that data will be appended to","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"     * @param currentTask task which we want to extract the date from","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"     * @return string which will be appended into the .txt file","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"    private static String extractDate(String stringToAdd, Task currentTask) {","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"        String date;","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"        String[] splitString \u003d currentTask.toString().split(\":\", 2);","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"        String removedSpace \u003d splitString[1].trim();","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"        date \u003d removedSpace.replace(\")\", \"\");","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"        stringToAdd +\u003d \"|\" + date;","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"        return stringToAdd;","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"     * Appends string with formatted data that is to be added into .txt file.","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"     * @param stringToAdd string that will be written into the .txt file.","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"     * @param taskDescription description of the task to add","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"     * @param type type of task to add","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"     * @param isDone status of task to add","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"leeyikai"},"content":"     * @return appended string with new data","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"leeyikai"},"content":"    private static String getString(String stringToAdd, String taskDescription, String type, Boolean isDone) {","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"leeyikai"},"content":"        stringToAdd +\u003d  type + \"|\" + isDone + \"|\" + taskDescription;","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"leeyikai"},"content":"        return stringToAdd;","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"leeyikai"},"content":"     * If filePath exists, this method reads every line of filePath into the program.","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"leeyikai"},"content":"     * @param filePath file that we want to read into the program","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"leeyikai"},"content":"     * @throws FileNotFoundException if filePath cannot be found","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"leeyikai"},"content":"    static void readFileContents(String filePath) throws FileNotFoundException {","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"leeyikai"},"content":"            String[] splitInput \u003d s.nextLine().split(\"\\\\|\");","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"leeyikai"},"content":"            TaskList.addTask(splitInput);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"leeyikai"},"content":"     * Executes commands to read the contents of the saved.txt file, if any).","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"leeyikai"},"content":"     * Displays error message if no file is found.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"leeyikai"},"content":"    protected static void readFile() {","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"leeyikai"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"leeyikai"},"content":"            readFileContents(Duke.filePath);","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"leeyikai"},"content":"            Duke.printMessage(\"Saved tasks successfully loaded!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"leeyikai"},"content":"            TaskList.listAllTask();","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"leeyikai"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"leeyikai"},"content":"            Duke.printMessage(\"There is no preloaded file found! Please input your own tasks!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"leeyikai":100}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"import todo.Deadline;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"import todo.Event;","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"import todo.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"import todo.ToDo;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":" * The Tasklist class implements different methods which allows for certain functions","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":" * such as add, remove and list.","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"public class TaskList {","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"     * Removes task with index from list of current tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"     * If index is not present in the list, an error message will be displayed.","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"     * @param index index of task to remove","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"    protected static void removeTask(int index) {","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"            Duke.tasks.remove(index - 1);","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"            Task t \u003d Duke.tasks.get(index - 1);","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"            Duke.printMessage(\"Noted. I\u0027ve removed this task:\\n\" + t);","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"            getTasksLeft();","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"            Duke.printMessage(\"This task index does not exist\");","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"     * Prints all tasks that are currently stored in the list and number of tasks not done.","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"     * If there are no tasks, the user will be informed.","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"    protected static void listAllTask() {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"        if(Duke.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"            Duke.printMessage(\"You have no tasks at the moment!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"        } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"            Duke.printMessage(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"            for (int i \u003d 0; i \u003c Duke.tasks.size(); i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"                System.out.println((i + 1) + \". \" + Duke.tasks.get(i).toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"            getTasksLeft();","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"     * This function adds in tasks after it reads from a .txt file.","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"     * It takes in a string array, formats it, and calls the function","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"     * that adds the tasks in depending on the type of task.","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"     * @param splitInput string array containing the different parameters to input to a task","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"    static void addTask(String[] splitInput) {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"        String type \u003d splitInput[0];","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"        Boolean status \u003d Boolean.parseBoolean(splitInput[1]);","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"        String taskDescription \u003d splitInput[2];","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"        if(type.equals(\"t\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"            addTodo(taskDescription);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"        } else if(type.equals(\"d\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"            addDeadline(splitInput[3], taskDescription);","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"        } else if(type.equals(\"e\")) {","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"            addEvent(splitInput[3], taskDescription);","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"        if(status) {","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"            Duke.tasks.get(Duke.tasks.size() - 1).setDone(true);","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"leeyikai"},"content":"     * Gets number of undone tasks, prints the total number of tasks in the list","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"leeyikai"},"content":"     * and prints the number of undone tasks.","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"leeyikai"},"content":"    protected static void getTasksLeft() {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"leeyikai"},"content":"        int undoneTasks \u003d 0;","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"leeyikai"},"content":"        for(int i \u003d 0; i \u003c Duke.tasks.size(); i++) {","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"leeyikai"},"content":"            if(!Duke.tasks.get(i).getStatus()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"leeyikai"},"content":"                undoneTasks++;","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"leeyikai"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"leeyikai"},"content":"        System.out.println(\"You have \" + Duke.tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"leeyikai"},"content":"        Duke.printMessage(undoneTasks + \" tasks are undone.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"leeyikai"},"content":"     * Obtains the latest task added and feedbacks to user","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"leeyikai"},"content":"     * that the task has been successfully added","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"leeyikai"},"content":"    protected static void addSuccessMessage() {","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"leeyikai"},"content":"        String taskDescription \u003d Duke.tasks.get(Duke.tasks.size() - 1).toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"leeyikai"},"content":"        Duke.printMessage(\"Got it. I\u0027ve added this task:\\n\" + taskDescription);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"leeyikai"},"content":"        getTasksLeft();","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"leeyikai"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"leeyikai"},"content":"     * Checks if a date is present. Returns true","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"leeyikai"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"leeyikai"},"content":"     * @param input string array of task split by \" \"","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"leeyikai"},"content":"     * @return true if there is not date or date is whitespace","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"leeyikai"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"leeyikai"},"content":"    protected static Boolean checkEmptyDate(String[] input) {","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"leeyikai"},"content":"        if(input.length \u003d\u003d 1 || input[1].trim().length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"leeyikai"},"content":"            return true;","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"leeyikai"},"content":"        return false;","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"leeyikai"},"content":"    private static void addEvent(String inputDate, String taskDescription) {","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"leeyikai"},"content":"        Duke.tasks.add(new Event(taskDescription, inputDate));","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"leeyikai"},"content":"    private static void addDeadline(String inputDate, String taskDescription) {","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"leeyikai"},"content":"        Duke.tasks.add(new Deadline(taskDescription, inputDate));","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"leeyikai"},"content":"    private static void addTodo(String taskDescription) {","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"leeyikai"},"content":"        Duke.tasks.add(new ToDo(taskDescription));","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"leeyikai":118}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"public class Ui {","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"    protected static void showByeScreen() {","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"        Duke.printMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"    protected static void showWelcomeScreen() {","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"        Duke.printMessage(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"        Duke.printMessage(\" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\\n\");","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"leeyikai":15}},{"path":"src/main/java/exceptions/EmptyDateError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"public class EmptyDateError extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"leeyikai":4}},{"path":"src/main/java/exceptions/InvalidCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"public class InvalidCommandError extends Exception{","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"leeyikai":4}},{"path":"src/main/java/exceptions/InvalidDescriptionError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package exceptions;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"public class InvalidDescriptionError extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"leeyikai":4}},{"path":"src/main/java/exceptions/MissingDescriptionError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"public class MissingDescriptionError extends Exception {","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"leeyikai":4}},{"path":"src/main/java/exceptions/MissingFieldError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package exceptions;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"public class MissingFieldError extends Exception{","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"leeyikai":4}},{"path":"src/main/java/todo/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"        super.setType(\"d\");","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"    ","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"        return by;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"    ","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"leeyikai":21}},{"path":"src/main/java/todo/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"    protected String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"        super.setType(\"e\");","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"    ","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"        return at;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"leeyikai":21}},{"path":"src/main/java/todo/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package todo;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"public class Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"    private String taskDescription;","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"    protected Boolean isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"    private String type;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"    protected Task(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"        type \u003d \"\";","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"        setTaskDescription(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"    public void setDone(Boolean status) {","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"leeyikai"},"content":"    public Boolean getStatus() {","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"leeyikai"},"content":"        return isDone;","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"leeyikai"},"content":"    public void setType(String type) {","lastModifiedDate":"2021-09-12"},{"lineNumber":26,"author":{"gitId":"leeyikai"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":28,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":29,"author":{"gitId":"leeyikai"},"content":"    public String getType() {","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"leeyikai"},"content":"        return type;","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":32,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"leeyikai"},"content":"    private String getStatusIcon(Boolean status) {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"leeyikai"},"content":"        if (status \u003d\u003d true) {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"leeyikai"},"content":"            return \"X\";","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"leeyikai"},"content":"        return \"\";","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"leeyikai"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"leeyikai"},"content":"        return taskDescription;","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"leeyikai"},"content":"    public void setTaskDescription(String taskDescription) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"leeyikai"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"leeyikai"},"content":"    public void printLine() {","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"leeyikai"},"content":"        System.out.println(getTaskDescription());","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"leeyikai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"leeyikai"},"content":"        return \"[\" + getStatusIcon(isDone) + \"] \" + getTaskDescription();","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"leeyikai"},"content":"    public String addDate(String inputLine) {","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"leeyikai"},"content":"        String[] words \u003d inputLine.split(\"/\");","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"leeyikai"},"content":"        if (inputLine.contains(\"/\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"leeyikai"},"content":"            return words[1];","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"leeyikai"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"leeyikai"},"content":"        return \"\";","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"leeyikai":65}},{"path":"src/main/java/todo/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"package todo;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"        super.setType(\"t\");","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"leeyikai":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"leeyikai"},"content":"todo","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"leeyikai"},"content":"todo","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"leeyikai"},"content":"todo task 1","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"leeyikai"},"content":"deadline","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"leeyikai"},"content":"deadline","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"leeyikai"},"content":"deadline task 2","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"leeyikai"},"content":"deadline task 2","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"leeyikai"},"content":"deadline task 2 /by Sunday","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"leeyikai"},"content":"event","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"leeyikai"},"content":"event","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"leeyikai"},"content":"event task 3","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"leeyikai"},"content":"event task 3","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"leeyikai"},"content":"event task 3 /at Saturday","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"leeyikai"},"content":"list","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"leeyikai"},"content":"done 1","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"leeyikai"},"content":"done 2","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"leeyikai"},"content":"list","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"leeyikai"},"content":"save","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"leeyikai"},"content":"bye","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"leeyikai":19}}]
