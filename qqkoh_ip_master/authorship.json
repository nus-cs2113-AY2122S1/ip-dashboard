[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"   1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"   ","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"           ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"          | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"       Why are you here again. What do you want","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"       _______________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"4. Type the command and press Enter to execute it. Complete list of commands:","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"   1. `list`: Lists all tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"   2. `todo homework`: Adds a todo with a description `homework`.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"   3. `event lecture d/2020-12-31 t/15:00`: Adds an event `lecture` at `31 Dec 2020 3pm`.","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"   4. `deadline submit assignment d/2020-12-31 t/15:00`: Adds a deadline `submit assignment` at `31 Dec 2020 3pm`.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"   5. `done 2`: Marks the 2nd task shown in the current list as completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"   6. `delete 2`: Deletes the 2nd task shown in the current list.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"   7. `clear`: Deletes all tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"   8. `bye`: Exits the program.","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"   9. `help`: Displays user guide","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"   10. `find books`: Search for `books` within the current task list and displays all tasks with `books` to the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"### Notes about the command format:","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user. ","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"  - e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo homework`.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"- Items in square brackets are optional.","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"  - e.g. `event DESCRIPTION d/DATE [t/TIME]` can be used as `event lecture d/2020-12-31 t/15:00` or as `event lecture d/2020-12-31`.","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"qqkoh"},"content":"  - If `TIME` is not given for `event` or `deadline`, the default time is set to `00:00`;","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"qqkoh"},"content":"- Parameters must be in the order stated.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"qqkoh"},"content":"- Format of `DATE` is `yyyy-mm-dd`","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"qqkoh"},"content":"- Format of `TIME` is `hh:mm`","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"qqkoh"},"content":"### Summary of commands","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"qqkoh"},"content":"| **Command**            | **Format**                             | **Example**                                       |","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"qqkoh"},"content":"|------------------------|----------------------------------------|---------------------------------------------------|","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"qqkoh"},"content":"| Add todo               | `todo DESCRIPTION`                     | `todo homework`                                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"qqkoh"},"content":"| Add event              | `event DESCRIPTION d/DATE [t/TIME]`    | `event lecture d/2020-12-31 t/15:00`              |","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"qqkoh"},"content":"| Add deadline           | `deadline DESCRIPTION d/DATE [t/TIME]` | `deadline submit assignment d/2020-12-31 t/15:00` |","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"qqkoh"},"content":"| Clear                  | `clear`                                | `clear`                                           |","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"qqkoh"},"content":"| Delete                 | `delete INDEX`                         | `delete 2`                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"qqkoh"},"content":"| Exit                   | `bye`                                  | `bye`                                             |","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"qqkoh"},"content":"| Find                   | `find KEYWORD [MORE_KEYWORDS]`         | `find homework`                                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"qqkoh"},"content":"| Help                   | `help`                                 | `help`                                            |","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"qqkoh"},"content":"| List                   | `list`                                 | `list`                                            |","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"qqkoh"},"content":"| Mark task as done | `done INDEX`                           | `done 2`                                          |","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"qqkoh"},"content":"### References","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"qqkoh"},"content":"- contacts https://github.com/nus-cs2113-AY2122S1/contacts","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"qqkoh"},"content":"- personBook https://github.com/nus-cs2113-AY2122S1/personbook","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"qqkoh"},"content":"- taskStream https://github.com/nus-cs2113-AY2122S1/TaskStream","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"qqkoh"},"content":"- addressBook-level2 https://github.com/se-edu/addressbook-level2","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"qqkoh":47,"-":19}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"# Duke project template","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"## Setting up in Intellij","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"       ```","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"            ____        _        ","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"           |  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"           | | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"           | |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"           |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"        Why are you here again. What do you want","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"        _______________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"4. Type the command and press Enter to execute it. Complete list of commands:","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"    1. `list`: Lists all tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"    2. `todo homework`: Adds a todo with a description `homework`.","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"    3. `event lecture d/2020-12-31 t/15:00`: Adds an event `lecture` at `31 Dec 2020 3pm`.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"    4. `deadline submit assignment d/2020-12-31 t/15:00`: Adds a deadline `submit assignment` at `31 Dec 2020 3pm`.","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"    5. `done 2`: Marks the 2nd task shown in the current list as completed.","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"    6. `delete 2`: Deletes the 2nd task shown in the current list.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"    7. `clear`: Deletes all tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"    8. `bye`: Exits the program.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"    9. `help`: Displays user guide","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"    10. `find books`: Search for `books` within the current task list and displays all tasks with `books` to the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"### Notes about the command format:","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"- Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"    - e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo homework`.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"- Items in square brackets are optional.","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"    - e.g. `event DESCRIPTION d/DATE [t/TIME]` can be used as `event lecture d/2020-12-31 t/15:00` or as `event lecture d/2020-12-31`.","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"qqkoh"},"content":"    - If `TIME` is not given for `event` or `deadline`, the default time is set to `00:00`;","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"qqkoh"},"content":"- Parameters must be in the order stated.","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"qqkoh"},"content":"- Format of `DATE` is `yyyy-mm-dd`","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"qqkoh"},"content":"- Format of `TIME` is `hh:mm`","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"qqkoh"},"content":"### Summary of commands","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"qqkoh"},"content":"| **Command**       | **Format**                             | **Example**                                       |","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"qqkoh"},"content":"|-------------------|----------------------------------------|---------------------------------------------------|","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"qqkoh"},"content":"| Add todo          | `todo DESCRIPTION`                     | `todo homework`                                   |","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"qqkoh"},"content":"| Add event         | `event DESCRIPTION d/DATE [t/TIME]`    | `event lecture d/2020-12-31 t/15:00`              |","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"qqkoh"},"content":"| Add deadline      | `deadline DESCRIPTION d/DATE [t/TIME]` | `deadline submit assignment d/2020-12-31 t/15:00` |","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"qqkoh"},"content":"| Clear             | `clear`                                | `clear`                                           |","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"qqkoh"},"content":"| Delete            | `delete INDEX`                         | `delete 2`                                        |","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"qqkoh"},"content":"| Exit              | `bye`                                  | `bye`                                             |","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"qqkoh"},"content":"| Find              | `find KEYWORD [MORE_KEYWORDS]`         | `find homework`                                   |","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"qqkoh"},"content":"| Help              | `help`                                 | `help`                                            |","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"qqkoh"},"content":"| List              | `list`                                 | `list`                                            |","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"qqkoh"},"content":"| Mark task as done | `done INDEX`                           | `done 2`                                          |","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":63,"author":{"gitId":"qqkoh"},"content":"### References","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"qqkoh"},"content":"- contacts \u003chttps://github.com/nus-cs2113-AY2122S1/contacts\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"qqkoh"},"content":"- personBook \u003chttps://github.com/nus-cs2113-AY2122S1/personbook\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"qqkoh"},"content":"- taskStream \u003chttps://github.com/nus-cs2113-AY2122S1/TaskStream\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"qqkoh"},"content":"- addressBook-level2 \u003chttps://github.com/se-edu/addressbook-level2\u003e","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"qqkoh":58,"-":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"import commands.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"import commands.CommandResult;","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import commands.ExitCommand;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"import commands.ListCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import common.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":" * Initialises the application and starts the interaction with the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"    private TaskManager tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"            this.tasks \u003d new TaskManager(storage.load());","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"            tasks \u003d new TaskManager();","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"     * Displays welcome message and saved task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"    private void executeWelcome() {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"        ui.showResultToUser(executeCommand(new ListCommand()));","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"     * Runs the program until termination.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"    public void run() {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"qqkoh"},"content":"        Command c;","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"qqkoh"},"content":"        executeWelcome();","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"qqkoh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"qqkoh"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"qqkoh"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"qqkoh"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"qqkoh"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"qqkoh"},"content":"                c \u003d new Parser().parseCommand(fullCommand);","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"qqkoh"},"content":"                CommandResult result \u003d executeCommand(c);","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"qqkoh"},"content":"                tasks.setTaskList(result.getRelevantTasks());","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"qqkoh"},"content":"                storage.save(tasks.getTaskList());","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"qqkoh"},"content":"                ui.showResultToUser(result);","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"qqkoh"},"content":"                isExit \u003d ExitCommand.isExit(c);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"qqkoh"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"qqkoh"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"qqkoh"},"content":"            } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"qqkoh"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"qqkoh"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"qqkoh"},"content":"        exit();","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"qqkoh"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"qqkoh"},"content":"     * @param command user command.","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"qqkoh"},"content":"     * @return result of the command.","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"qqkoh"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"qqkoh"},"content":"            command.setData(tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"qqkoh"},"content":"            return command.execute();","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"qqkoh"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"qqkoh"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"qqkoh"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"qqkoh"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"qqkoh"},"content":"    private void exit() {","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"qqkoh"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"qqkoh":83,"-":4}},{"path":"src/main/java/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":" * Adds a deadline to the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"deadline: Adds a deadline to the task list.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"            + \"\\tParameters: DESCRIPTION d/DATE [t/TIME]\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"            + \"\\tTIME parameter is optional. If TIME is not given, default time will be set to 12:00AM\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: deadline homework d/2020-12-31 t/09:00\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New deadline added: %1$s\";","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    private final Deadline toAdd;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"     * Constructor using raw values.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"     * @param description description of deadline","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"     * @param isDone whether deadline is completed","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"     * @param dateTime date and time when deadline is due","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"    public AddDeadlineCommand(String description, boolean isDone, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"        this.toAdd \u003d new Deadline(description, isDone, dateTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"        taskManager.addTask(toAdd);","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":33}},{"path":"src/main/java/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import task.Event;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":" * Adds an event to the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"event: Adds an event to the task list. \\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"            + \"\\tParameters: DESCRIPTION d/DATE [t/TIME]\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"            + \"\\tTIME parameter is optional. If TIME is not given, default time will be set to 12:00AM\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: event Lecture d/2020-12-31 t/09:00\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"    private final Event toAdd;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"     * Constructor using raw values.","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"     * @param description description of event","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"     * @param isDone whether event is completed","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"     * @param dateTime date and time when event takes place","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"    public AddEventCommand(String description, boolean isDone, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"        this.toAdd \u003d new Event(description, isDone, dateTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"        taskManager.addTask(toAdd);","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":34}},{"path":"src/main/java/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import task.Todo;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":" * Adds a todo to the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"todo: Adds a todo to the task list. \\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"            + \"\\tParameters: DESCRIPTION\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: todo wipe the table\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New todo added: %1$s\";","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"    private final Todo toAdd;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"     * Constructor using raw values.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"     * @param description description of todo","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"     * @param isDone whether todo is completed","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"    public AddTodoCommand(String description, boolean isDone) {","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"        this.toAdd \u003d new Todo(description, isDone);","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"        taskManager.addTask(toAdd);","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":30}},{"path":"src/main/java/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":" * Clears the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"clear: Clears the entire task list. \\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: clear\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"History cleared.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"        taskManager.clearHistory();","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":18}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"import task.TaskManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":" * Represents an executable command.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    protected TaskManager taskManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"    private int targetIndex \u003d -1;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"     * Supplies the data the command will operate on.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"     * @param taskManager contains the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"    public void setData(TaskManager taskManager) {","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"    protected Command() {","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"     * Constructor that sets the target index.","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"     * Used for MarkAsDoneCommand and DeleteCommand","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"     * @param targetIndex target index of the task that we want to perform an operation on","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"    public Command(int targetIndex) {","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"        this.setTargetIndex(targetIndex);","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"    public int getTargetIndex() {","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"        return targetIndex;","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"    public void setTargetIndex(int targetIndex) {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"     * Extracts the target task.","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"qqkoh"},"content":"     * @return the target task.","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"qqkoh"},"content":"     * @throws IndexOutOfBoundsException if the target index is out of bounds of the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"qqkoh"},"content":"    protected Task getTargetTask() throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"qqkoh"},"content":"        return taskManager.getTaskList().get(targetIndex);","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"qqkoh"},"content":"     * Executes the command and returns the result","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"qqkoh"},"content":"    public abstract CommandResult execute();","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":54}},{"path":"src/main/java/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"public class CommandResult {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"     * The feedback message to be shown to the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"     * Contains a description of the execution result.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    private final ArrayList\u003cTask\u003e relevantTasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"     * Used for commands that do not have a list of tasks in the result.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"     * @param feedbackToUser description of execution result","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"    public CommandResult (String feedbackToUser) {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"        relevantTasks \u003d null;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"     * Used for commands that have a list of tasks in the result, such as ListCommand and FindCommand.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"     * @param feedbackToUser description of execution result.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"     * @param relevantTasks list of relevant tasks required for the result.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"    public CommandResult(String feedbackToUser, ArrayList\u003cTask\u003e relevantTasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"        this.relevantTasks \u003d relevantTasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"    public ArrayList\u003cTask\u003e getRelevantTasks() {","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"        return relevantTasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":42}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import static common.Messages.MESSAGE_TASK_NOT_FOUND;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":" * Deletes a task in the task list using the task index.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"delete: Deletes the task corresponding to the task index.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"            + \"\\tParameters: TASK_INDEX\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: delete 1\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Deleted task: %1$s\";","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"     * Constructor that sets the target index of the task we want to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"     * @param taskIndex the index of the task we want to delete.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"        super(taskIndex);","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"            final Task toDelete \u003d getTargetTask();","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"            taskManager.deleteTask(toDelete);","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toDelete.toString()));","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"            return new CommandResult(String.format(MESSAGE_TASK_NOT_FOUND, taskManager.getTaskList().size()));","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":36}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":" * Exits the program.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"bye: Exits the program.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: bye\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    private static final String MESSAGE_EXIT_SUCCESS \u003d \"finally. bye.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"        return new CommandResult(MESSAGE_EXIT_SUCCESS);","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"     * Determines if the command is an ExitCommand.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"     * @param command type of command","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"     * @return true if the command is an ExitCommand","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"    public static boolean isExit(Command command) {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"        return command instanceof ExitCommand;","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":25}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":" * Finds all relevant tasks that contain a particular substring in the task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"find: Finds a task by searching for a keyword. \\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"            + \"\\tParameters: KEYWORD\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: find books\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are the matching tasks: \";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_NO_MATCHING_TASKS \u003d \"There are no tasks that match your keyword.\";","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"    private final String filterString;","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"     * Constructor that sets the filter string.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"     * @param filterString the substring that the user wants to find within the task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"    public FindCommand(String filterString) {","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"        this.filterString \u003d filterString;","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d taskManager.getTaskList();","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"        ArrayList\u003cTask\u003e filteredTaskList \u003d filterTasksByString(allTasks, filterString);","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"        String feedbackToUser \u003d MESSAGE_SUCCESS;","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"        if (filteredTaskList.isEmpty()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"            feedbackToUser \u003d MESSAGE_NO_MATCHING_TASKS;","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"        return new CommandResult(feedbackToUser, filteredTaskList);","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"    private static ArrayList\u003cTask\u003e filterTasksByString(ArrayList\u003cTask\u003e taskList, String filterString) {","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"        return (ArrayList\u003cTask\u003e) taskList.stream()","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"qqkoh"},"content":"                .filter((t) -\u003e t.getDescription().contains(filterString))","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"qqkoh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":46}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import static ui.Ui.USER_GUIDE;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":" * Shows help instructions.","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"help: Shows program usage instructions.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: help\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"        return new CommandResult(USER_GUIDE);","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":19}},{"path":"src/main/java/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":" * Represents an incorrect command.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"    public final String feedbackToUser;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    public IncorrectCommand(String feedbackToUser) {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":19}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":" * Lists all the tasks in the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"list: Displays all tasks in the task list in a sorted order.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"            + \"\\tEvents and Deadlines are sorted in ascending order by date.\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"            + \"\\tTodos are at the bottom of the list.\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: list\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_LIST_ALL_TASKS \u003d \"Look at that ever-expanding to-do list.\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"            +\"You really should stop procrastinating.\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_EMPTY_TASK_LIST \u003d \"There are no tasks in your to-do list. Bet that\u0027ll change soon.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"        ArrayList\u003cTask\u003e allTasks \u003d taskManager.getSortedList();","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"        String feedbackToUser \u003d MESSAGE_LIST_ALL_TASKS;","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"        if (allTasks.isEmpty()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"            feedbackToUser \u003d MESSAGE_EMPTY_TASK_LIST;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"        return new CommandResult(feedbackToUser, allTasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":31}},{"path":"src/main/java/commands/MarkAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import static common.Messages.MESSAGE_TASK_NOT_FOUND;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":" * Marks a task as completed, given a task index.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"public class MarkAsDoneCommand extends Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_USAGE \u003d \"done: Marks the task corresponding to the task number as complete.\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"            + \"\\tParameters: TASK_INDEX\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"            + \"\\tExample: done 2\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Completed: %1$s\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"            \"Wow. You finally completed a task after lazying around all day.\";","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    public MarkAsDoneCommand(int targetIndex) {","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"        super(targetIndex);","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"            Task toMarkDone \u003d getTargetTask();","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"            int targetIndex \u003d getTargetIndex();","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"            taskManager.markTaskAsDone(targetIndex);","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, toMarkDone.toString()));","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"            return new CommandResult(String.format(MESSAGE_TASK_NOT_FOUND, taskManager.getTaskList().size()));","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":33}},{"path":"src/main/java/common/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package common;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":" * Exception class","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"        super(message);","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"qqkoh":10}},{"path":"src/main/java/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package common;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":" * Messages to be displayed to user.","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"public class Messages {","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"Invalid command format.\\n\";","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_TASK_NOT_FOUND \u003d \"Error. The task index should be between 1 and %1$d. \";","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_LOADING_ERROR \u003d \"Error in loading file.\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"    public static final String MESSAGE_GET_HELP \u003d \"Type \\\"help\\\" for the user guide. \\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":12}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import commands.AddDeadlineCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"import commands.AddEventCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import commands.AddTodoCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"import commands.ClearCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"import commands.ExitCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"import commands.FindCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"import commands.HelpCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"import commands.ListCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"import commands.MarkAsDoneCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"import commands.Command;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"import commands.IncorrectCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"import common.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"import static common.Messages.MESSAGE_GET_HELP;","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"import static common.Messages.MESSAGE_INVALID_COMMAND;","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"import static ui.Ui.DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":" * Takes in raw data and parses it into parameters of commands","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"public class Parser {","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"    public static final String DATE_KEYWORD \u003d \"d/\";","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"    public static final String TIME_KEYWORD \u003d \"t/\";","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"     * Parses commands","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"     * @param userInputString input string from user","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"     * @return Command type of command to be executed","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"     * @throws DukeException if unable to parse command","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"    public Command parseCommand(String userInputString) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"qqkoh"},"content":"        final String[] commandTypeAndParams \u003d splitCommandWordsAndArgs(userInputString, \"\\\\s+\");","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"qqkoh"},"content":"        final String commandType \u003d commandTypeAndParams[0].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"qqkoh"},"content":"        final String commandArgs \u003d commandTypeAndParams[1].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"qqkoh"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"qqkoh"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"qqkoh"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"qqkoh"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"qqkoh"},"content":"            return new FindCommand(commandArgs);","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"qqkoh"},"content":"        case MarkAsDoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"qqkoh"},"content":"            return prepareMarkAsDone(commandArgs);","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"qqkoh"},"content":"        case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"qqkoh"},"content":"            return prepareAddTodo(commandArgs);","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"qqkoh"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"qqkoh"},"content":"            return prepareAddEvent(commandArgs);","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"qqkoh"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"qqkoh"},"content":"            return prepareAddDeadline(commandArgs);","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"qqkoh"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"qqkoh"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"qqkoh"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"qqkoh"},"content":"            return prepareDeleteTask(commandArgs);","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"qqkoh"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"qqkoh"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"qqkoh"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"qqkoh"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"qqkoh"},"content":"        default:","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"qqkoh"},"content":"            return new IncorrectCommand(MESSAGE_INVALID_COMMAND + MESSAGE_GET_HELP);","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"qqkoh"},"content":"    private static String[] splitCommandWordsAndArgs(String input, String keyword) {","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"qqkoh"},"content":"        final String[] split \u003d input.trim().split(keyword, 2);","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"qqkoh"},"content":"        if (split.length \u003d\u003d 2) {","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"qqkoh"},"content":"            return split;","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"qqkoh"},"content":"        return new String[]{split[0], \"\"};","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"qqkoh"},"content":"    private static String[] getTaskDateArgs(String commandArgs) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"qqkoh"},"content":"        String[] descriptionAndDatetime \u003d splitCommandWordsAndArgs(commandArgs, DATE_KEYWORD);","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"qqkoh"},"content":"        String description \u003d descriptionAndDatetime[0].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"qqkoh"},"content":"        String[] dateAndTime \u003d splitCommandWordsAndArgs(descriptionAndDatetime[1].trim(), TIME_KEYWORD);","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"qqkoh"},"content":"        String date \u003d dateAndTime[0].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"qqkoh"},"content":"        String time \u003d dateAndTime[1].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"qqkoh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Task description is empty. \");","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"qqkoh"},"content":"        if (date.isEmpty()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Unable to get task date arguments. \");","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"qqkoh"},"content":"        return new String[]{description, date, time};","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"qqkoh"},"content":"    private static Command prepareAddTodo(String description) {","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"qqkoh"},"content":"        if (description.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"qqkoh"},"content":"            return new IncorrectCommand(MESSAGE_INVALID_COMMAND + AddTodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"qqkoh"},"content":"        return new AddTodoCommand(description, false);","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"qqkoh"},"content":"    private static Command prepareAddEvent(String commandArgs) {","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"qqkoh"},"content":"            String[] eventArgs \u003d getTaskDateArgs(commandArgs);","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"qqkoh"},"content":"            String description \u003d eventArgs[0].trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"qqkoh"},"content":"            LocalDate date \u003d parseArgsAsDate(eventArgs[1].trim());","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"qqkoh"},"content":"            LocalTime time \u003d parseArgsAsTime(eventArgs[2].trim());","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"qqkoh"},"content":"            LocalDateTime dateTime \u003d date.atTime(time);","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"qqkoh"},"content":"            return new AddEventCommand(description, false, dateTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"qqkoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"qqkoh"},"content":"            return new IncorrectCommand(MESSAGE_INVALID_COMMAND + AddEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"qqkoh"},"content":"    private static Command prepareAddDeadline(String commandArgs) {","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"qqkoh"},"content":"            String[] deadlineArgs \u003d getTaskDateArgs(commandArgs);","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"qqkoh"},"content":"            String description \u003d deadlineArgs[0].trim();","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"qqkoh"},"content":"            LocalDate date \u003d parseArgsAsDate(deadlineArgs[1].trim());","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"qqkoh"},"content":"            LocalTime time \u003d parseArgsAsTime(deadlineArgs[2].trim());","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"qqkoh"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"qqkoh"},"content":"            return new AddDeadlineCommand(description, false, dateTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"qqkoh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"qqkoh"},"content":"            return new IncorrectCommand(MESSAGE_INVALID_COMMAND + AddDeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"qqkoh"},"content":"    private static LocalDate parseArgsAsDate(String date) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"qqkoh"},"content":"        if (date.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Empty date.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"qqkoh"},"content":"            return LocalDate.parse(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"qqkoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error parsing date. \");","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"qqkoh"},"content":"    private static LocalTime parseArgsAsTime(String time) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"qqkoh"},"content":"        if (time.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"qqkoh"},"content":"            return LocalTime.MIN;","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"qqkoh"},"content":"            return LocalTime.parse(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"qqkoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error parsing time. \");","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"qqkoh"},"content":"    private static int parseArgsAsDisplayedIndex(String displayIndex) throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"qqkoh"},"content":"        if (displayIndex.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Task index not found. \");","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"qqkoh"},"content":"            return Integer.parseInt(displayIndex.trim());","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"qqkoh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Invalid task index.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"qqkoh"},"content":"    private static Command prepareDeleteTask(String displayIndex) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"qqkoh"},"content":"        int taskIndex \u003d parseArgsAsDisplayedIndex(displayIndex) - DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"qqkoh"},"content":"        return new DeleteCommand(taskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"qqkoh"},"content":"    private static Command prepareMarkAsDone(String displayIndex) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"qqkoh"},"content":"        int taskIndex \u003d parseArgsAsDisplayedIndex(displayIndex) - DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"qqkoh"},"content":"        return new MarkAsDoneCommand(taskIndex);","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":172}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import common.DukeException;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import task.Event;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"import task.Todo;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"import java.io.File;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":" * Class that allows for loading and saving of files.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"public class Storage {","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"    public static final String ERROR_MESSAGE_UNKNOWN_TASK \u003d \"Unknown task encountered. Skipping.\";","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"    public static final char DEADLINE_SYMBOL \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"    public static final char EVENT_SYMBOL \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"    public static final char TODO_SYMBOL \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"    private static File dataFile;","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"    public File getDataFile() {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"        return dataFile;","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"        dataFile \u003d new File(filePath);","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"     * Loads the saved task list from the file if it exists.","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"     * Else, create new file.","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"qqkoh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"qqkoh"},"content":"     * @return saved task list","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"qqkoh"},"content":"     * @throws DukeException if file is not found or there is an error writing to the file.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"qqkoh"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"qqkoh"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"qqkoh"},"content":"            createFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"qqkoh"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"qqkoh"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(dataFile));","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"qqkoh"},"content":"            String line \u003d reader.readLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"qqkoh"},"content":"            while (line !\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"qqkoh"},"content":"                Task t \u003d convertFileStringToTask(line);","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"qqkoh"},"content":"                taskList.add(t);","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"qqkoh"},"content":"                line \u003d reader.readLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"qqkoh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"qqkoh"},"content":"            reader.close();","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"qqkoh"},"content":"        } catch (FileNotFoundException f) {","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"qqkoh"},"content":"            createFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"File not found. Creating new file. \");","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"qqkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error writing to file: \" + getDataFile().toPath());","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"qqkoh"},"content":"        return taskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"qqkoh"},"content":"     * Saves the task list after every modification to the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"qqkoh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"qqkoh"},"content":"     * @param taskList the task list","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"qqkoh"},"content":"     * @throws DukeException if there is error saving to file.","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"qqkoh"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"qqkoh"},"content":"        if (!dataFile.exists()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"qqkoh"},"content":"            createFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"qqkoh"},"content":"            FileWriter fw \u003d new FileWriter(dataFile, false);","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"qqkoh"},"content":"            BufferedWriter bw \u003d new BufferedWriter(fw);","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"qqkoh"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"qqkoh"},"content":"                bw.write(task.toFileString());","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"qqkoh"},"content":"                bw.newLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"qqkoh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"qqkoh"},"content":"            bw.close();","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"qqkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error saving to file. \");","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"qqkoh"},"content":"    private static void createFile() throws DukeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"qqkoh"},"content":"        if (dataFile.exists()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"qqkoh"},"content":"            System.out.println(\"File exists. \");","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"qqkoh"},"content":"            return;","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"qqkoh"},"content":"            if (!dataFile.getParentFile().exists()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"qqkoh"},"content":"                dataFile.getParentFile().mkdirs();","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"qqkoh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"qqkoh"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"qqkoh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Could not create file. \");","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"qqkoh"},"content":"    private static char getTaskType(String arg) throws DukeException{","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"qqkoh"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Empty task type\");","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"qqkoh"},"content":"        return arg.charAt(0);","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"qqkoh"},"content":"    private static boolean isCompletedTask(String arg) throws NumberFormatException, DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"qqkoh"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Empty task status.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"qqkoh"},"content":"        int isCompleted \u003d Integer.parseInt(arg);","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"qqkoh"},"content":"        if (isCompleted !\u003d 0 \u0026\u0026 isCompleted !\u003d 1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Unknown task status.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"qqkoh"},"content":"        return isCompleted \u003d\u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"qqkoh"},"content":"    private static String getTaskDescription(String arg) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"qqkoh"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Empty task description.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"qqkoh"},"content":"        return arg;","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"qqkoh"},"content":"    private static LocalDateTime getDateTime(String arg) throws DukeException, DateTimeParseException {","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"qqkoh"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(\"Error. Empty date time\");","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"qqkoh"},"content":"        return LocalDateTime.parse(arg);","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"qqkoh"},"content":"    private static Task convertFileStringToTask(String line) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"qqkoh"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"qqkoh"},"content":"            String[] args \u003d line.trim().split(\"\\\\|\");","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"qqkoh"},"content":"            char taskType \u003d getTaskType(args[0].trim());","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"qqkoh"},"content":"            boolean isDone \u003d isCompletedTask(args[1].trim());","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"qqkoh"},"content":"            String description \u003d getTaskDescription(args[2].trim());","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"qqkoh"},"content":"            LocalDateTime dateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"qqkoh"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"qqkoh"},"content":"            case TODO_SYMBOL:","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"qqkoh"},"content":"                return new Todo(description, isDone);","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"qqkoh"},"content":"            case DEADLINE_SYMBOL:","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"qqkoh"},"content":"                dateTime \u003d getDateTime(args[3].trim());","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"qqkoh"},"content":"                return new Deadline(description, isDone, dateTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"qqkoh"},"content":"            case EVENT_SYMBOL:","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"qqkoh"},"content":"                dateTime \u003d getDateTime(args[3].trim());","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"qqkoh"},"content":"                return new Event(description, isDone, dateTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"qqkoh"},"content":"            default:","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"qqkoh"},"content":"                throw new DukeException(ERROR_MESSAGE_UNKNOWN_TASK);","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"qqkoh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"qqkoh"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException | DateTimeParseException | DukeException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"qqkoh"},"content":"            throw new DukeException(ERROR_MESSAGE_UNKNOWN_TASK);","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"qqkoh":168}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":" * Represents a deadline. Includes whether it is completed, description, date and time.","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"public class Deadline extends TaskWithDate {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    public Deadline(String description, boolean isDone, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"        super(description, isDone, dateTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"     * Converts deadline into a string for display.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"     * @return display string","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"        return \"[D]\" + super.toString();","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"     * Converts deadline into a string for saving in a file.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"     * @return file string","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"        return \"D\" + super.toFileString();","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qqkoh":32}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":" * Represents an event. Includes whether it is completed, description, date and time.","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"public class Event extends TaskWithDate {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    public Event(String description, boolean isDone, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"        super(description, isDone, dateTime);","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"     * Converts an event into a string for displaying to the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"     * @return display string","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"        return \"[E]\" + super.toString();","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"     * Converts an event into a string for saving into a file.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"     * @return file string","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"        return \"E\" + super.toFileString();","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qqkoh":32}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":" * Represents a task.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"        return description;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"        int isCompleted \u003d isDone ? 1 : 0;","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"        return \"|\" + isCompleted + \"|\" + description;","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"qqkoh":38}},{"path":"src/main/java/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":" * Represents the class that performs operations on the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"public class TaskManager {","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    public void setTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"        if (taskList !\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"            this.taskList \u003d taskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"        return taskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"    public TaskManager() {","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"     * Loads the saved task list onto the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"     * @param savedTaskList the saved task list","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"    public TaskManager(ArrayList\u003cTask\u003e savedTaskList) {","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"        taskList.addAll(savedTaskList);","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"     * Gets the sorted task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"     * Events and deadlines are sorted by date.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"     * Todos are appended to the list after that.","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"    public ArrayList\u003cTask\u003e getSortedList() {","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"        sortTaskList();","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"        return getTaskList();","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"qqkoh"},"content":"    private void sortTaskList() {","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"qqkoh"},"content":"        ArrayList\u003cTaskWithDate\u003e taskWithDateList \u003d filterTasksWithDateFromTaskList();","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"qqkoh"},"content":"        sortByDate(taskWithDateList);","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"qqkoh"},"content":"        ArrayList\u003cTask\u003e sortedTaskList \u003d new ArrayList\u003c\u003e(taskWithDateList);","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"qqkoh"},"content":"        for (Task t:taskList) {","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"qqkoh"},"content":"            if (t instanceof Todo) {","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"qqkoh"},"content":"                sortedTaskList.add(t);","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"qqkoh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"qqkoh"},"content":"        taskList \u003d new ArrayList\u003c\u003e(sortedTaskList);","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"qqkoh"},"content":"    private void sortByDate(ArrayList\u003cTaskWithDate\u003e taskWithDateList) {","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"qqkoh"},"content":"        int n \u003d taskWithDateList.size();","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"qqkoh"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"qqkoh"},"content":"            for (int j \u003d 0; j \u003c n - 1; j++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"qqkoh"},"content":"                if (taskWithDateList.get(j).isAfter(taskWithDateList.get(j + 1))) {","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"qqkoh"},"content":"                    Collections.swap(taskWithDateList, j, j + 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"qqkoh"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"qqkoh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"qqkoh"},"content":"    private ArrayList\u003cTaskWithDate\u003e filterTasksWithDateFromTaskList() {","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"qqkoh"},"content":"        ArrayList\u003cTaskWithDate\u003e taskWithDateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"qqkoh"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"qqkoh"},"content":"            if (t instanceof TaskWithDate) {","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"qqkoh"},"content":"                taskWithDateList.add((TaskWithDate) t);","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"qqkoh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"qqkoh"},"content":"        return taskWithDateList;","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"qqkoh"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"qqkoh"},"content":"     * @param t task to be added","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"qqkoh"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"qqkoh"},"content":"        taskList.add(t);","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"qqkoh"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"qqkoh"},"content":"     * @param t task to be deleted.","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"qqkoh"},"content":"    public void deleteTask(Task t) {","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"qqkoh"},"content":"        taskList.remove(t);","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"qqkoh"},"content":"     * Marks a task from the task list as completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"qqkoh"},"content":"     * @param index of the task to be deleted.","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"qqkoh"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"qqkoh"},"content":"        taskList.get(index).markAsDone();","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"qqkoh"},"content":"     * Clears the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"qqkoh"},"content":"    public void clearHistory() {","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"qqkoh"},"content":"        taskList.clear();","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":107}},{"path":"src/main/java/task/TaskWithDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import static ui.Ui.DATE_TIME_FORMATTER;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":" * Represents the abstract class for tasks that have a date parameter.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"public abstract class TaskWithDate extends Task{","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"    protected LocalDateTime dateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"        return dateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"    public TaskWithDate(String description, boolean isDone, LocalDateTime dateTime) {","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"        return getStatusIcon() + \" \" + super.toString() + \" (\" + DATE_TIME_FORMATTER.format(dateTime) + \")\";","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"     * Checks if one taskWithDate is after the other based on the date.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"     * @param taskWithDate to compare","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"     * @return task with a later date","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"    public boolean isAfter(TaskWithDate taskWithDate) {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"        return this.dateTime.isAfter(taskWithDate.getDateTime());","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"        return super.toFileString() + \"|\" + dateTime;","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":40}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":" * Todo task. Includes whether it is completed and a description.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"     * Converts todo into a string for displaying to user.","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"     * @return todo display string.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"        return \"[T]\" + getStatusIcon() + \" \" + super.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"     * Converts a todo into a string for saving in a file.","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"     * @return todo file string.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"    @Override","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"    public String toFileString() {","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":"        return \"T\" + super.toFileString();","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"qqkoh":29}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"package ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"import commands.AddDeadlineCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"import commands.AddEventCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"import commands.AddTodoCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"import commands.ClearCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"import commands.ExitCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"import commands.FindCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"import commands.HelpCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"import commands.ListCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"import commands.MarkAsDoneCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"import commands.CommandResult;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"qqkoh"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"qqkoh"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"qqkoh"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"qqkoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"qqkoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"qqkoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"qqkoh"},"content":"import static common.Messages.MESSAGE_LOADING_ERROR;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"qqkoh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"qqkoh"},"content":" * Class that takes care of User Interface","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"qqkoh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"qqkoh"},"content":"public class Ui {","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"qqkoh"},"content":"    private static final String LOGO \u003d \" \\n____        _\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"qqkoh"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"qqkoh"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"qqkoh"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"qqkoh"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"qqkoh"},"content":"    private static final String GREETING \u003d \"Why are you here again. What do you want\";","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"qqkoh"},"content":"    private static final String INDENT \u003d \"\\t\";","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"qqkoh"},"content":"    private static final String NEW_LINE \u003d \"\\n\\t\";","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"qqkoh"},"content":"    private static final String DIVIDER \u003d \"_______________________________\";","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"qqkoh"},"content":"    public static final DateTimeFormatter DATE_TIME_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy \u0027at\u0027 hh:mm a\");","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"qqkoh"},"content":"    public static final int DISPLAYED_INDEX_OFFSET \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"qqkoh"},"content":"     * User guide for all the commands.","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"qqkoh"},"content":"    public static final String USER_GUIDE \u003d \"----------------USER GUIDE----------------\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"qqkoh"},"content":"            + \"\\nAll parameters are compulsory, unless otherwise stated. \"","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"qqkoh"},"content":"            +\"Else, command entered is invalid.\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + AddTodoCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + AddEventCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + AddDeadlineCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + ClearCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + DeleteCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + ExitCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + FindCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + HelpCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + ListCommand.MESSAGE_USAGE","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"qqkoh"},"content":"            + \"\\n\" + MarkAsDoneCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"qqkoh"},"content":"    private final Scanner in;","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"qqkoh"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"qqkoh"},"content":"     * Constructor for Ui","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"qqkoh"},"content":"     * @param in input from user","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"qqkoh"},"content":"     * @param out output to be displayed to user","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"qqkoh"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"qqkoh"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"qqkoh"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"qqkoh"},"content":"    public Ui() {","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"qqkoh"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"qqkoh"},"content":"     * Reads in raw user input.","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"qqkoh"},"content":"     * @return user input string","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"qqkoh"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"qqkoh"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"qqkoh"},"content":"        while (input.trim().isEmpty()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"qqkoh"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"qqkoh"},"content":"        return input;","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"qqkoh"},"content":"     * Shows relevant tasks in an indexed list as well as a message.","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"qqkoh"},"content":"     * @param result command result","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"qqkoh"},"content":"    public void showResultToUser(CommandResult result) {","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"qqkoh"},"content":"        final ArrayList\u003cTask\u003e relevantTasks \u003d result.getRelevantTasks();","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"qqkoh"},"content":"        if (relevantTasks !\u003d null) {","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"qqkoh"},"content":"            showToUser(getIndexedListViewOfTasks(relevantTasks));","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"qqkoh"},"content":"        showToUser(result.feedbackToUser);","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"qqkoh"},"content":"    private String[] getIndexedListViewOfTasks(ArrayList\u003cTask\u003e relevantTasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"qqkoh"},"content":"        final ArrayList\u003cString\u003e taskStringsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"qqkoh"},"content":"        int displayIndex \u003d DISPLAYED_INDEX_OFFSET;","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"qqkoh"},"content":"        for (Task task : relevantTasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"qqkoh"},"content":"            taskStringsList.add(displayIndex + \". \" + task.toString() + \"\\n\");","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"qqkoh"},"content":"            displayIndex++;","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"qqkoh"},"content":"        return taskStringsList.toArray(new String[0]);","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"qqkoh"},"content":"    private void showToUser(String... message) {","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"qqkoh"},"content":"        for (String m : message) {","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"qqkoh"},"content":"            out.println(INDENT + m.replace(\"\\n\", NEW_LINE));","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"qqkoh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"qqkoh"},"content":"     * Shows welcome page.","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"qqkoh"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"qqkoh"},"content":"        showToUser(LOGO,GREETING,DIVIDER);","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"qqkoh"},"content":"     * Shows a line.","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"qqkoh"},"content":"    public void showLine() {","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"qqkoh"},"content":"        out.println(DIVIDER);","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"qqkoh"},"content":"     * Shows a loading error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"qqkoh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"qqkoh"},"content":"        showError(MESSAGE_LOADING_ERROR);","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"qqkoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"qqkoh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"qqkoh"},"content":"     * Shows error message.","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"qqkoh"},"content":"     * @param message error message","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"qqkoh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"qqkoh"},"content":"    public void showError(String message) {","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"qqkoh"},"content":"        showToUser(message);","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"qqkoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"qqkoh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"qqkoh":148}},{"path":"text-ui-test/data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"E|0|TV|9pm","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"T|0|tomato","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"T|0|potato","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"T|0|wash the dishes","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"D|0|homework|29 March","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"E|0|TV|9pm","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"T|0|tomato","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"T|0|potato","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"qqkoh":8}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"qqkoh"},"content":"add","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"qqkoh"},"content":"todo wash the dishes","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"qqkoh"},"content":"deadline homework /by 29 March","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"qqkoh"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"qqkoh"},"content":"done 1","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"qqkoh"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"qqkoh"},"content":"event TV /at 9pm","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"qqkoh"},"content":"todo tomato","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"qqkoh"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"qqkoh"},"content":"delete 1","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"qqkoh"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"qqkoh"},"content":"todo potato","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"qqkoh"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"qqkoh"},"content":"bye","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"qqkoh":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"qqkoh"},"content":"REM for Windows","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"qqkoh":1,"-":21}}]
