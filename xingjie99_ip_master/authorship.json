[{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"xingjie99":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"Duke is a Personal Assistant Chatbot that helps a person to keep track of various things using a Command Line Interface(CLI). If you can type fast, Duke is able to track and manage your tasks faster compared to a hypoethetical Graphical User Interface (GUI) version of the app. ","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"## Quick Start ","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"1. Description of the Quick start.","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"2. test","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"3. test","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"4. test","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"5. test","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"6. test","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"## Features","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"**`Command Format`**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"* ` blahblahblah`","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"* ` blahblahblah`","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"* ` blahblahblah`","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"* ` blahblahblah`","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"Shows a list of all tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"Format: `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"### Adding a Todo task: `todo`","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"Adds a task of class Todo into the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"Format: `todo \u003cTASK_DESCRIPTION\u003e`","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"### Adding an Event task: `event`","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"Adds a task of class Event into the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"Format: `event \u003cTASK_DESCRIPTION\u003e/\u003cDATE_AND_TIME\u003e`","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"### Adding a Deadline task: `deadline`","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"Adds a task of class Deadline into the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"Format: `deadline \u003cTASK_DESCRIPTION\u003e/\u003cDATE_AND_TIME\u003e`","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"### Mark as done: `done`","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"Marks a specific task from the list as completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"Format: `done \u003cTASK_NUMER\u003e`","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"### Deleting task: `delete`","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"Deletes a specific task from the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"Format: `delete \u003cTASK_NUMBER\u003e`","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"### Finding Tasks: `find`","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"Finds all tasks in the list containing a keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"Format: `find \u003cKEYWORD\u003e`","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"### Exiting program: `bye`","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"Exits from Duke ChatBot.","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"Format: `list`","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"xingjie99":46,"-":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":" * Represents Duke program.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"public class Duke {","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"     * Duke class constructor.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"     * Loads in tasks data from external file.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"     * @param filePath File path of external file","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"     * Executes main body of Duke program.","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    public void run() {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        Ui.greetUser();","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"        String line;","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"        ArrayList\u003cString\u003e stringList \u003d TaskList.getStringList();","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"        ArrayList\u003cString\u003e dueDateList \u003d TaskList.getDueDateList();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"            Parser.parse(line, tasks, stringList, dueDateList);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"        Ui.byeUser();","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"        new Duke(\"data/data.txt\").run();","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingjie99":61}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingjie99":5}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"import static duke.Storage.writeData;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"import static duke.TaskList.printTaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"import static duke.TaskList.printCompletedTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"import static duke.TaskList.getToDoTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"import static duke.TaskList.getDeadlineTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"import static duke.TaskList.getEventTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"import static duke.TaskList.printTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"import static duke.TaskList.deleteTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":" * Class that deals with making sense of the user command.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"public class Parser {","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"     * Make sense of the user command and store them into different lists.","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"     * @param line        User command input.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"     * @param taskList    List containing tasks with the due date and time.","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     * @param stringList  List containing details of tasks only","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     * @param dueDateList List containing due date and time only.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    public static void parse(String line, TaskList taskList, ArrayList\u003cString\u003e stringList,","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"                             ArrayList\u003cString\u003e dueDateList) {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"            if (line.startsWith(\"done\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"                    printCompletedTask(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"                    writeData(taskList, stringList, dueDateList);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"Sorry, please enter a correct task number\");","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"                    Ui.printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"            } else if (line.equals(\"list\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"                printTaskList();","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"            } else if (line.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"                    Todo todoTask \u003d getToDoTask(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"                    printTask(todoTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"                    writeData(taskList, stringList, dueDateList);","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"                } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"Please format your input as \u0027todo \u003ctask\u003e\u0027\");","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"                    Ui.printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"            } else if (line.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"                    Deadline deadlineTask \u003d getDeadlineTask(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"                    printTask(deadlineTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"                    writeData(taskList, stringList, dueDateList);","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"                } catch (StringIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"☹ OOPS!!! The format of deadline is wrong\");","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"Please format your input as \u0027deadline \u003ctask\u003e/\u003cdue date in dd-MM-yyyy \" +","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"                            \"and time in HH:mm\u003e\u0027\");","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"                    Ui.printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"            } else if (line.startsWith(\"event\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"                    Event eventTask \u003d getEventTask(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"                    printTask(eventTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"                    writeData(taskList, stringList, dueDateList);","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"                } catch (StringIndexOutOfBoundsException | DateTimeParseException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"☹ OOPS!!! The format of event is wrong\");","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"Please format your input as \u0027event \u003ctask\u003e/\u003cevent date in dd-MM-yyyy \" +","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"                            \"and time in HH:mm\u003e\u0027\");","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"                    Ui.printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"            } else if (line.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"                    deleteTask(line);","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"                    if (taskList.getListCount() !\u003d 0) {","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"                        writeData(taskList, stringList, dueDateList);","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"                    }","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"☹ OOPS!!! The task number is not valid\");","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"Please check again and format your input as \u0027delete \u003ctask number\u003e\u0027\");","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"                    Ui.printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"            } else if (line.startsWith(\"find\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"xingjie99"},"content":"                try {","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"                    taskList.printMatchingTask(line.substring(5));","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"                    System.out.println(\"Please check again and format your input as \u0027find \u003ckeyword\u003e\u0027\");","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"                    Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"            } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"xingjie99"},"content":"                throw new DukeException();","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"xingjie99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"xingjie99"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"xingjie99"},"content":"            Ui.printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingjie99":110}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"import java.io.File;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":" * Class that deals with loading and saving tasks in an external file.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"public class Storage {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    protected static String filePath;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"     * Storage class constructor.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     * @param filePath File path of external file.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        Storage.filePath \u003d filePath;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"     * Creates a new file in the file path if the file does not exist.","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"    public void createFile() {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"            if (!f.exists()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"                f.createNewFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"            System.out.println(\" I/O ERROR \");","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"     * Loads in data from an external file, makes sense of them, store them in a task list","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"     * and return the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"     * @return task list the data are stored in.","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"     * @throws DukeException If file is not found.","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"        createFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"            FileInputStream fileInputStream \u003d new FileInputStream(filePath);","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"            Scanner s \u003d new Scanner(fileInputStream);","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"                if (line.startsWith(\"T\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"                    String taskDisplay \u003d line.substring(8);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToStringList(taskDisplay);","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"                    Todo todoTask \u003d new Todo(taskDisplay, \u0027T\u0027);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToTaskList(todoTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToDueDateList(null);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToFormattedDueDateList(null);","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"                    if (line.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"                        taskList.markAsCompleted(taskList.getListCount() - 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"                    }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"                } else if (line.startsWith(\"D\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"                    int deadlineIndex \u003d line.indexOf(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"                    String taskDisplay \u003d line.substring(8, deadlineIndex);","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToStringList(taskDisplay);","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(line.substring(deadlineIndex + 1), formatter);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"                    String formattedDateTime \u003d formatDateTime.format(DateTimeFormatter","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"                            .ofLocalizedDateTime(FormatStyle.MEDIUM));","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"                    String doBy \u003d \"(\" + formattedDateTime + \")\";","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"                    Deadline deadlineTask \u003d new Deadline(taskDisplay, \u0027D\u0027, doBy);","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToTaskList(deadlineTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToDueDateList(line.substring(deadlineIndex + 1));","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToFormattedDueDateList(formattedDateTime);","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"                    if (line.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"                        taskList.markAsCompleted(taskList.getListCount() - 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"                    }","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"                } else if (line.startsWith(\"E\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"xingjie99"},"content":"                    int eventIndex \u003d line.indexOf(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"                    String taskDisplay \u003d line.substring(8, eventIndex);","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToStringList(taskDisplay);","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"                    LocalDateTime formatDateTime \u003d LocalDateTime.parse(line.substring(eventIndex + 1), formatter);","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"                    String formattedDateTime \u003d formatDateTime.format(DateTimeFormatter","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"                            .ofLocalizedDateTime(FormatStyle.MEDIUM));","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"xingjie99"},"content":"                    String doBy \u003d \"(\" + formattedDateTime + \")\";","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"xingjie99"},"content":"                    Event eventTask \u003d new Event(taskDisplay, \u0027E\u0027, doBy);","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToTaskList(eventTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToDueDateList(line.substring(eventIndex + 1));","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"xingjie99"},"content":"                    taskList.addToFormattedDueDateList(formattedDateTime);","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"xingjie99"},"content":"                    if (line.charAt(4) \u003d\u003d \u00271\u0027) {","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"xingjie99"},"content":"                        taskList.markAsCompleted(taskList.getListCount() - 1);","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"xingjie99"},"content":"                    }","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"xingjie99"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"xingjie99"},"content":"            System.out.println(\" FILE NOT FOUND \");","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"xingjie99"},"content":"        return taskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"xingjie99"},"content":"     * Loads data into a new external file of the specific file path.","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"xingjie99"},"content":"     * @param filePath  File path of external file.","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"xingjie99"},"content":"     * @param textToAdd Data to load into the file","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"xingjie99"},"content":"     * @throws IOException If file is not found.","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"xingjie99"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"xingjie99"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"xingjie99"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"xingjie99"},"content":"        fw.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"xingjie99"},"content":"     * Adds data into an existing external file of the specific file path","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"xingjie99"},"content":"     * @param filePath     File path of external file.","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"xingjie99"},"content":"     * @param textToAppend Data to add into the file.","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"xingjie99"},"content":"     * @throws IOException If file is not found.","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"xingjie99"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"xingjie99"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"xingjie99"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"xingjie99"},"content":"        fw.close();","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"xingjie99"},"content":"     * Formats and loads data into an external file.","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"xingjie99"},"content":"     * @param taskList    List containing tasks with the due date and time.","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"xingjie99"},"content":"     * @param stringList  List containing details of tasks only","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"xingjie99"},"content":"     * @param dueDateList List containing due date and time only.","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"xingjie99"},"content":"    public static void writeData(TaskList taskList, ArrayList\u003cString\u003e stringList, ArrayList\u003cString\u003e dueDateList) {","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"xingjie99"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"xingjie99"},"content":"            if (taskList.getTask(0).getTaskType() \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"xingjie99"},"content":"                String firstData \u003d taskList.getTask(0).getTaskType() + \" | \"","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"xingjie99"},"content":"                        + taskList.getTask(0).getWrittenIcon() + \" | \" + stringList.get(0);","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"xingjie99"},"content":"                writeToFile(filePath, firstData + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"xingjie99"},"content":"            } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"xingjie99"},"content":"                String firstData \u003d taskList.getTask(0).getTaskType() + \" | \"","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"xingjie99"},"content":"                        + taskList.getTask(0).getWrittenIcon() + \" | \" + stringList.get(0)","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"xingjie99"},"content":"                        + \"/\" + dueDateList.get(0);","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"xingjie99"},"content":"                writeToFile(filePath, firstData + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"xingjie99"},"content":"            for (int i \u003d 1; i \u003c taskList.getListCount(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"xingjie99"},"content":"                if (taskList.getTask(i).getTaskType() \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"xingjie99"},"content":"                    String data \u003d \"T | \" + taskList.getTask(i).getWrittenIcon() + \" | \" + stringList.get(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"xingjie99"},"content":"                    appendToFile(filePath, data + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"xingjie99"},"content":"                } else if (taskList.getTask(i).getTaskType() \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"xingjie99"},"content":"                    String data \u003d \"D | \" + taskList.getTask(i).getWrittenIcon() + \" | \"","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"xingjie99"},"content":"                            + stringList.get(i) + \"/\" + dueDateList.get(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"xingjie99"},"content":"                    appendToFile(filePath, data + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"xingjie99"},"content":"                } else if (taskList.getTask(i).getTaskType() \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"xingjie99"},"content":"                    String data \u003d \"E | \" + taskList.getTask(i).getWrittenIcon() + \" | \"","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"xingjie99"},"content":"                            + stringList.get(i) + \"/\" + dueDateList.get(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"xingjie99"},"content":"                    appendToFile(filePath, data + System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"xingjie99"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"xingjie99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"xingjie99"},"content":"            System.out.println(\" I/O ERROR \");","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingjie99":183}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":" * Class that contains the task list and operations to modify the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"public class TaskList {","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"    protected static ArrayList\u003cString\u003e stringList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    protected static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    protected static ArrayList\u003cString\u003e formattedDueDateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    protected static ArrayList\u003cString\u003e dueDateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"dd-MM-yyyy HH:mm\";","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"     * Returns number of tasks in the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"     * @return Number of tasks in the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    public int getListCount() {","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"     * Adds a task to the taskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"     * @param task Task to be added to the taskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    public void addToTaskList(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"     * Adds the task description in the form of a string to the stringList.","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"     * @param string Task description to be added to the stringList.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"    public void addToStringList(String string) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"        stringList.add(string);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"     * Adds the due date and time in the formatted format to the formattedDueDateList.","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"     * @param formattedDueDate Formatted due date and time to be added to the formattedDueDateList.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"    public void addToFormattedDueDateList(String formattedDueDate) {","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"        formattedDueDateList.add(formattedDueDate);","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"     * Adds the due date and time in the unformatted format to the dueDateList.","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"     * @param dueDate Unformatted due date and time to be added to the dueDateList.","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"    public void addToDueDateList(String dueDate) {","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"        dueDateList.add(dueDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"     * Returns the task of the specific index.","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"     * @param taskIndex Index of the task in taskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"     * @return task of the specific index.","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"    public Task getTask(int taskIndex) {","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"        return taskList.get(taskIndex);","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"     * Returns the list containing all of the task descriptions.","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"     * @return stringList, the list containing all of the task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"xingjie99"},"content":"    public static ArrayList\u003cString\u003e getStringList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"xingjie99"},"content":"        return stringList;","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"xingjie99"},"content":"     * Returns the list containing all of the unformatted due date and time.","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"xingjie99"},"content":"     * @return dueDateList, the list containing all of the unformatted due date and time.","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"xingjie99"},"content":"    public static ArrayList\u003cString\u003e getDueDateList() {","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"xingjie99"},"content":"        return dueDateList;","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"xingjie99"},"content":"     * Mark the task of a specific index as completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"xingjie99"},"content":"     * @param taskIndex Specific index of the task to be marked as completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"xingjie99"},"content":"    public void markAsCompleted(int taskIndex) {","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"xingjie99"},"content":"        taskList.get(taskIndex).markAsDone();","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"xingjie99"},"content":"     * Makes sense of the user command input, store the information accordingly in the different lists","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"xingjie99"},"content":"     * and returns a Todo task.","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"xingjie99"},"content":"     * @param line User command input.","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"xingjie99"},"content":"     * @return A task with the class Todo.","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"xingjie99"},"content":"    public static Todo getToDoTask(String line) {","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"xingjie99"},"content":"        char taskType \u003d line.toUpperCase().charAt(0);","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"xingjie99"},"content":"        String taskDisplay \u003d line.substring(5);","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"xingjie99"},"content":"        stringList.add(taskList.size(), taskDisplay);","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"xingjie99"},"content":"        dueDateList.add(taskList.size(), null);","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"xingjie99"},"content":"        formattedDueDateList.add(taskList.size(), null);","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"xingjie99"},"content":"        Todo todoTask \u003d new Todo(taskDisplay, taskType);","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"xingjie99"},"content":"        taskList.add(taskList.size(), todoTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"xingjie99"},"content":"        return todoTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"xingjie99"},"content":"     * Makes sense of the user command input, store the information accordingly in the different lists","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"xingjie99"},"content":"     * and returns a Deadline task.","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"xingjie99"},"content":"     * @param line User command input.","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"xingjie99"},"content":"     * @return A task with the class Deadline.","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"xingjie99"},"content":"    public static Deadline getDeadlineTask(String line) {","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"xingjie99"},"content":"        int startingIndex \u003d line.indexOf(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"xingjie99"},"content":"        String taskDisplay \u003d line.substring(9, startingIndex);","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"xingjie99"},"content":"        char taskType \u003d line.toUpperCase().charAt(0);","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"xingjie99"},"content":"        stringList.add(taskList.size(), taskDisplay);","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"xingjie99"},"content":"        dueDateList.add(taskList.size(), line.substring(startingIndex + 1));","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"xingjie99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"xingjie99"},"content":"        LocalDateTime formatDateTime \u003d LocalDateTime.parse(line.substring(startingIndex + 1), formatter);","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"xingjie99"},"content":"        String formattedDateTime \u003d formatDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM));","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"xingjie99"},"content":"        formattedDueDateList.add(taskList.size(), formattedDateTime);","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"xingjie99"},"content":"        String doBy \u003d \"(\" + formattedDateTime + \")\";","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"xingjie99"},"content":"        Deadline deadlineTask \u003d new Deadline(taskDisplay, taskType, doBy);","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"xingjie99"},"content":"        taskList.add(taskList.size(), deadlineTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"xingjie99"},"content":"        return deadlineTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"xingjie99"},"content":"     * Makes sense of the user command input, store the information accordingly in the different lists","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"xingjie99"},"content":"     * and returns a Event task.","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"xingjie99"},"content":"     * @param line User command input.","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"xingjie99"},"content":"     * @return A task with the class Event.","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"xingjie99"},"content":"    public static Event getEventTask(String line) {","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"xingjie99"},"content":"        int startingIndex \u003d line.indexOf(\"/\");","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"xingjie99"},"content":"        String taskDisplay \u003d line.substring(6, startingIndex);","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"xingjie99"},"content":"        char taskType \u003d line.toUpperCase().charAt(0);","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"xingjie99"},"content":"        stringList.add(taskList.size(), taskDisplay);","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"xingjie99"},"content":"        dueDateList.add(taskList.size(), line.substring(startingIndex + 1));","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"xingjie99"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"xingjie99"},"content":"        LocalDateTime formatDateTime \u003d LocalDateTime.parse(line.substring(startingIndex + 1), formatter);","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"xingjie99"},"content":"        String formattedDateTime \u003d formatDateTime.format(DateTimeFormatter.ofLocalizedDateTime(FormatStyle.MEDIUM));","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"xingjie99"},"content":"        formattedDueDateList.add(taskList.size(), formattedDateTime);","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"xingjie99"},"content":"        String doBy \u003d \"(\" + formattedDateTime + \")\";","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"xingjie99"},"content":"        Event eventTask \u003d new Event(taskDisplay, taskType, doBy);","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"xingjie99"},"content":"        taskList.add(taskList.size(), eventTask);","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"xingjie99"},"content":"        return eventTask;","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"xingjie99"},"content":"     * Prints out the added task and total number of tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"xingjie99"},"content":"     * @param task Specific task to be added.","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"xingjie99"},"content":"    public static void printTask(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"xingjie99"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"xingjie99"},"content":"        System.out.println(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"xingjie99"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"xingjie99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"xingjie99"},"content":"     * Prints out all of the task in taskList in order.","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"xingjie99"},"content":"    public static void printTaskList() {","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"xingjie99"},"content":"        int taskCount \u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"xingjie99"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"xingjie99"},"content":"            System.out.println(taskCount + \".\" + task);","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"xingjie99"},"content":"            taskCount++;","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"xingjie99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":195,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"xingjie99"},"content":"     * Makes sense of the user command input and prints out the task after the user completes it.","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"xingjie99"},"content":"     * @param line User command input.","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"xingjie99"},"content":"    public static void printCompletedTask(String line) {","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"xingjie99"},"content":"        String taskNumber \u003d line.substring(5);","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"xingjie99"},"content":"        int taskListElement \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"xingjie99"},"content":"        taskList.get(taskListElement).markAsDone();","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"xingjie99"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"xingjie99"},"content":"        System.out.println(\"[X] \" + taskList.get(taskListElement).getDescription());","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"xingjie99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":211,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"xingjie99"},"content":"     * Prints out the tasks that matches with the keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"xingjie99"},"content":"     * @param keyword Specific keyword to search for in the taskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"xingjie99"},"content":"    public void printMatchingTask(String keyword) {","lastModifiedDate":"2021-09-28"},{"lineNumber":217,"author":{"gitId":"xingjie99"},"content":"        int matchingTaskCount \u003d 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":218,"author":{"gitId":"xingjie99"},"content":"        for (int i \u003d 0; i \u003c getListCount(); i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":219,"author":{"gitId":"xingjie99"},"content":"            if (stringList.get(i).contains(keyword)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":220,"author":{"gitId":"xingjie99"},"content":"                matchingTaskCount++;","lastModifiedDate":"2021-09-28"},{"lineNumber":221,"author":{"gitId":"xingjie99"},"content":"                System.out.println(matchingTaskCount + \".\" + taskList.get(i));","lastModifiedDate":"2021-09-28"},{"lineNumber":222,"author":{"gitId":"xingjie99"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":223,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":224,"author":{"gitId":"xingjie99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":225,"author":{"gitId":"xingjie99"},"content":"        if (matchingTaskCount \u003d\u003d 0) {","lastModifiedDate":"2021-09-28"},{"lineNumber":226,"author":{"gitId":"xingjie99"},"content":"            System.out.println(\"No matching task found.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":227,"author":{"gitId":"xingjie99"},"content":"            Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":228,"author":{"gitId":"xingjie99"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":229,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":230,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"xingjie99"},"content":"     * Makes sense of the user command input and deletes the task according to the user input.","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":234,"author":{"gitId":"xingjie99"},"content":"     * @param line User command input.","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"xingjie99"},"content":"    public static void deleteTask(String line) {","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"xingjie99"},"content":"        int taskIndex \u003d Integer.parseInt(line.substring(7)) - 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"xingjie99"},"content":"        Task task \u003d taskList.get(taskIndex);","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"xingjie99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"xingjie99"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"xingjie99"},"content":"        dueDateList.remove(taskIndex);","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"xingjie99"},"content":"        formattedDueDateList.remove(taskIndex);","lastModifiedDate":"2021-09-29"},{"lineNumber":243,"author":{"gitId":"xingjie99"},"content":"        stringList.remove(taskIndex);","lastModifiedDate":"2021-09-29"},{"lineNumber":244,"author":{"gitId":"xingjie99"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":245,"author":{"gitId":"xingjie99"},"content":"        System.out.println(task);","lastModifiedDate":"2021-09-29"},{"lineNumber":246,"author":{"gitId":"xingjie99"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":247,"author":{"gitId":"xingjie99"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingjie99":249}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"public class Ui {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"    private static final String LINE \u003d \"-------------------------------------------------------------------\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"    private static final String GREET_USER \u003d \"Hello! I\u0027m Duke \\nWhat can I do for you?\";","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"    private static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"     * Prints out welcome message to greet user.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"    public static void greetUser() {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"        System.out.println(GREET_USER + \"\\n \\n\" + LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"     * Prints out good bye message to user.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"    public static void byeUser() {","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"        System.out.println(EXIT_MESSAGE + \"\\n\" + LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"     * Prints out a divider line.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    public static void printLine() {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     * Prints out a error message for file loading.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"        System.out.println(\"No file found! Creating a new file\");","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingjie99":36}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"    protected String by;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"     * Deadline class constructor.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"     * @param taskType    Task type \u0027D\u0027.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"     * @param by          Due date and time for task.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"    public Deadline(String description, char taskType, String by) {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"        super(description, taskType);","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"     * Displays the task in a formatted way.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"     * @return Formatted task display.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"        return \" [\" + getTaskType() + \"][\" + getStatusIcon() + \"] \" + super.toString() + by;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"     * Formats the task to the file format","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     * @return Formatted task display to file format.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        return getTaskType() + \" | \" + isDoneString + \" | \" + super.toFileFormat() + \" /\"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"                + by.replace(\"(\", \"\".replace(\")\", \"\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingjie99":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"    protected String by;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"     * Event class constructor.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"     * @param taskType    Task type \u0027E\u0027.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"     * @param by          Due date and time for task.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"    public Event(String description, char taskType, String by) {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"        super(description, taskType);","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"     * Displays the task in a formatted way.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"     * @return Formatted task display.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"        return \" [\" + getTaskType() + \"][\" + getStatusIcon() + \"] \" + super.toString() + by;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"     * Formats the task to the file format","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     * @return Formatted task display to file format.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        return getTaskType() + \" | \" + isDoneString + \" | \" + super.toFileFormat() + \" /\"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"                + by.replace(\"(\", \"\".replace(\")\", \"\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingjie99":40}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"    protected String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"    protected char taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"     * Task class constructor.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"     * @param taskType    Task type.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"    public Task(String description, char taskType) {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"     * Marks completed tasks with X.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"     * @return \u0027X\u0027 for completed and \u0027 \u0027 for not completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"     * Marks completed tasks with 1.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"     * To be written to external file.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"     * @return \u00271\u0027 for completed and \u00270\u0027 for not completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"    public String getWrittenIcon() {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"xingjie99"},"content":"        return (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"xingjie99"},"content":"     * Returns task type of a task.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"xingjie99"},"content":"     * @return A task type char.","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"xingjie99"},"content":"    public char getTaskType() {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"xingjie99"},"content":"        return taskType;","lastModifiedDate":"2021-09-02"},{"lineNumber":46,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"xingjie99"},"content":"     * Returns task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"xingjie99"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"xingjie99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"xingjie99"},"content":"        return description;","lastModifiedDate":"2021-08-26"},{"lineNumber":55,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"xingjie99"},"content":"     * Sets a task as completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"xingjie99"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":61,"author":{"gitId":"xingjie99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":64,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"xingjie99"},"content":"     * Returns task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"xingjie99"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"xingjie99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":71,"author":{"gitId":"xingjie99"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"xingjie99"},"content":"     * Returns task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"xingjie99"},"content":"     * To override in subclasses to format task description to external file.","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"xingjie99"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"xingjie99"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"xingjie99"},"content":"        return description;","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"xingjie99":83}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xingjie99"},"content":"package duke.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"xingjie99"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"xingjie99"},"content":"     * Toto class constructor.","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"xingjie99"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"xingjie99"},"content":"     * @param taskType    Task type \u0027T\u0027.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"xingjie99"},"content":"    public Todo(String description, char taskType) {","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"xingjie99"},"content":"        super(description, taskType);","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"xingjie99"},"content":"     * Displays the task in a formatted way.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"xingjie99"},"content":"     * @return Formatted task display.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"xingjie99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xingjie99"},"content":"        return \" [\" + getTaskType() + \"][\" + getStatusIcon() + \"] \" + super.toString();","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xingjie99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xingjie99"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"xingjie99"},"content":"     * Formats the task to the file format","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"xingjie99"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"xingjie99"},"content":"     * @return Formatted task display to file format.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"xingjie99"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"xingjie99"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"xingjie99"},"content":"    public String toFileFormat() {","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"xingjie99"},"content":"        String isDoneString \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"xingjie99"},"content":"        return getTaskType() + \" | \" + isDoneString + \" | \" + super.toFileFormat();","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"xingjie99"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"xingjie99"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"xingjie99":35}}]
