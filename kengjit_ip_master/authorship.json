[{"path":"CONTRIBUTORS.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Contributors","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"Display | Name | Github Profile | Homepage","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---|:---:|:---:|:---:","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/22460123?s\u003d100) | Jeffry Lum | [Github](https://github.com/j-lum/) | [Homepage](https://se.kasugano.moe)","lastModifiedDate":"2019-08-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![](https://avatars0.githubusercontent.com/u/1673303?s\u003d100) | Damith C. Rajapakse | [Github](https://github.com/damithc/) | [Homepage](https://www.comp.nus.edu.sg/~damithch/)","lastModifiedDate":"2019-08-06"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"# I would like to join this task. How can I help the project","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"For more information, please refer to our [contributor\u0027s guide](https://oss-generic.github.io/process/).","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kengjit":1,"-":8}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"# Kitty User Guide","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"## Overview","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"Kitty is a **desktop application for managing your tasks, optimized for use via a Command Line Interface (CLI).** ","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"If you are facing any difficulties with managing your busy schedule, look no further, **Kitty is your one-stop solution","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"to sort your life out.**","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"* Quick Start","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"* Features","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"  * Adding a Todo task: `todo`","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"  * Adding a Deadline task: `deadline`","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"  * Adding an Event task: `event`","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"  * Listing out all tasks: `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"  * Finding tasks matching specific keyword: `find`","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"  * Marking a task as done: `done`","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"  * Deleting a task: `delete`","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"  * Exiting the programme: `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"* Command Summary","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"## Quick Start","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"2. Download the latest `Kitty.jar`.","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"3. Copy the file to the folder you want to use as the home folder for Kitty.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"4. Open your preferred CLI and navigate to the directory where `Kitty.jar` is in.","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"5. Type `java -jar Kitty.jar` to start the app. You should see the app run in a similar fashion as below.","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"   ![Startup Image](https://github.com/kengjit/ip/blob/master/data/intro.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"6. Type a command in the command line and press Enter to execute it. (e.g. Typing `list` and pressing Enter will show all tasks at hand.)","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"`list` : Lists all tasks at hand.","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"`todo Complete Assignment`: Adds a Todo task *Complete Assignment*.","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"`deadline Submit Assignment /by 31/12/2021` : Adds a Deadline *Submit Assignment* with deadline 31 December 2021.","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"`done 2` : Mark 2nd task as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"`bye` : Exits the app.","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"Refer to the Features below for details of each command.","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"## Features","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"|Words in UPPER_CASE are the parameters to be supplied by the user. (e.g. in `todo TASK_DESCRIPTION`, `TASK_DESCRIPTION` is a parameter which can be used as `todo Task`.)| ","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"|---------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"### Adding a Todo task: `todo`","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"Adds a Todo task to total tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"Example: `todo Send cousin off at airport`","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"### Adding a Deadline task: `deadline`","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"Adds a Deadline task to total tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"kengjit"},"content":"Format: `deadline TASK_DESCRIPTION /by DEADLINE_DATE`","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"kengjit"},"content":"Example: `deadline buy gift for Mother\u0027s Day /by 8/5/2022","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"kengjit"},"content":"`","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"kengjit"},"content":"### Adding an Event task: `event`","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"kengjit"},"content":"Adds an Event task to total tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"kengjit"},"content":"Format: `event TASK_DESCRIPTION /at EVENT_DATE`","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"kengjit"},"content":"Example: `event Christmas Celebration /at 25/12/2021`","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"kengjit"},"content":"### Listing out all tasks: `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"kengjit"},"content":"Displays all tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"kengjit"},"content":"Format: `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"kengjit"},"content":"Example:","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"kengjit"},"content":"![List Image](https://github.com/kengjit/ip/blob/master/data/list.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"kengjit"},"content":"### Finding tasks matching specific keyword: `find`","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"kengjit"},"content":"Lists out all tasks that matches the keyword provided.","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"kengjit"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"kengjit"},"content":"* The search is case-sensitive. (e.g. book will **NOT** match Book)","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"kengjit"},"content":"Example: `find submit`","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"kengjit"},"content":"![Find Image](https://github.com/kengjit/ip/blob/master/data/find.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"kengjit"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"kengjit"},"content":"Mark specified task as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"kengjit"},"content":"Format: `done TASK_NUMBER`","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"kengjit"},"content":"* The task number refers to the index number shown in the list of tasks. ","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"kengjit"},"content":"The task number must be a positive integer 1, 2, 3, …","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"kengjit"},"content":"Example: `done 2`","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"kengjit"},"content":"![Done Image](https://github.com/kengjit/ip/blob/master/data/done.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"kengjit"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"kengjit"},"content":"Deletes a task from total tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"kengjit"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"kengjit"},"content":"* The task number refers to the index number shown in the list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"kengjit"},"content":"  The task number must be a positive integer 1, 2, 3, …","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"kengjit"},"content":"Example: `delete 1`","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"kengjit"},"content":"![Delete Image](https://github.com/kengjit/ip/blob/master/data/delete.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"kengjit"},"content":"### Exiting the programme: `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"kengjit"},"content":"Exits the programme.","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"kengjit"},"content":"Format: `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"kengjit"},"content":"## Command Summary","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"|Action|Format, Examples|","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"kengjit"},"content":"|---|---|","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"kengjit"},"content":"|Add Todo|`todo TASK_DESCRIPTION`| ","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"kengjit"},"content":"|Add Deadline|`deadline TASK_DESCRIPTION /by DEADLINE_DATE`|   ","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"kengjit"},"content":"|Add Event|`event TASK_DESCRIPTION /at EVENT_DATE`| ","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"kengjit"},"content":"|List|`list`|","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"kengjit"},"content":"|Find keyword|`find KEYWORD`|","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"kengjit"},"content":"|Mark as done|`done TASK_NUMBER`|","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"kengjit"},"content":"|Delete task|`delete TASK_NUMBER`|","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"kengjit"},"content":"|Exit|`bye`|","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"kengjit":130}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"# Kitty User Guide","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"## Overview","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"Kitty is a **desktop application for managing your tasks, optimized for use via a Command Line Interface (CLI).**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"If you are facing any difficulties with managing your busy schedule, look no further, **Kitty is your one-stop solution","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"to sort your life out.**","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"* Quick Start","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"* Features","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"    * Adding a Todo task: `todo`","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"    * Adding a Deadline task: `deadline`","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"    * Adding an Event task: `event`","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    * Listing out all tasks: `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    * Finding tasks matching specific keyword: `find`","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    * Marking a task as done: `done`","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"    * Deleting a task: `delete`","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    * Exiting the programme: `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"* Command Summary","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"## Quick Start","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"2. Download the latest `Kitty.jar`.","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"3. Copy the file to the folder you want to use as the home folder for Kitty.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"4. Open your preferred CLI and navigate to the directory where `Kitty.jar` is in.","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"5. Type `java -jar Kitty.jar` to start the app. You should see the app run in a similar fashion as below.","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"   ![Startup Image](https://github.com/kengjit/ip/blob/master/data/intro.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"6. Type a command in the command line and press Enter to execute it. (e.g. Typing `list` and pressing Enter will show all tasks at hand.)","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"Some example commands you can try:","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"`list` : Lists all tasks at hand.","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"`todo Complete Assignment`: Adds a Todo task *Complete Assignment*.","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"`deadline Submit Assignment /by 31/12/2021` : Adds a Deadline *Submit Assignment* with deadline 31 December 2021.","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"`done 2` : Mark 2nd task as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"`bye` : Exits the app.","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"Refer to the Features below for details of each command.","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"**Words in UPPER_CASE are the parameters to be supplied by the user. (e.g. in `todo TASK_DESCRIPTION`, `TASK_DESCRIPTION` is a parameter which can be used as `todo Task`.)**","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"### Adding a Todo task: `todo`","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"Adds a Todo task to total tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"Example: `todo Send cousin off at airport`","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"kengjit"},"content":"### Adding a Deadline task: `deadline`","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"Adds a Deadline task to total tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"kengjit"},"content":"Format: `deadline TASK_DESCRIPTION /by DEADLINE_DATE`","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"Example: `deadline buy gift for Mother\u0027s Day /by 8/5/2022`","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"kengjit"},"content":"### Adding an Event task: `event`","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"kengjit"},"content":"Adds an Event task to total tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"kengjit"},"content":"Format: `event TASK_DESCRIPTION /at EVENT_DATE`","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"kengjit"},"content":"Example: `event Christmas Celebration /at 25/12/2021`","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"kengjit"},"content":"### Listing out all tasks: `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"kengjit"},"content":"Displays all tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"kengjit"},"content":"Format: `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"kengjit"},"content":"Example:","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"kengjit"},"content":"![List Image](https://github.com/kengjit/ip/blob/master/data/list.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"kengjit"},"content":"### Finding tasks matching specific keyword: `find`","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"kengjit"},"content":"Lists out all tasks that matches the keyword provided.","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"kengjit"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"kengjit"},"content":"* The search is case-sensitive. (e.g. book will **NOT** match Book)","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":86,"author":{"gitId":"kengjit"},"content":"Example: `find submit`","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"kengjit"},"content":"![Find Image](https://github.com/kengjit/ip/blob/master/data/find.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"kengjit"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"kengjit"},"content":"Mark specified task as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":93,"author":{"gitId":"kengjit"},"content":"Format: `done TASK_NUMBER`","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"kengjit"},"content":"* The task number refers to the index number shown in the list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"kengjit"},"content":"  The task number must be a positive integer 1, 2, 3, …","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"kengjit"},"content":"Example: `done 2`","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"kengjit"},"content":"![Done Image](https://github.com/kengjit/ip/blob/master/data/done.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"kengjit"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"kengjit"},"content":"Deletes a task from total tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"kengjit"},"content":"Format: `delete TASK_NUMBER`","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"kengjit"},"content":"* The task number refers to the index number shown in the list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"kengjit"},"content":"  The task number must be a positive integer 1, 2, 3, …","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":108,"author":{"gitId":"kengjit"},"content":"Example: `delete 1`","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"kengjit"},"content":"![Delete Image](https://github.com/kengjit/ip/blob/master/data/delete.PNG?raw\u003dtrue)","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":112,"author":{"gitId":"kengjit"},"content":"### Exiting the programme: `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"kengjit"},"content":"Exits the programme.","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"kengjit"},"content":"Format: `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"## Command Summary","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"|Action|Format, Examples|","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"|---|---|","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"kengjit"},"content":"|Add Todo|`todo TASK_DESCRIPTION`| ","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"kengjit"},"content":"|Add Deadline|`deadline TASK_DESCRIPTION /by DEADLINE_DATE`|   ","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"kengjit"},"content":"|Add Event|`event TASK_DESCRIPTION /at EVENT_DATE`| ","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"kengjit"},"content":"|List|`list`|","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"kengjit"},"content":"|Find keyword|`find KEYWORD`|","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"kengjit"},"content":"|Mark as done|`done TASK_NUMBER`|","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"kengjit"},"content":"|Delete task|`delete TASK_NUMBER`|","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"kengjit"},"content":"|Exit|`bye`|","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"kengjit":107,"-":22}},{"path":"src/main/java/kitty/Kitty.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import kitty.io.IO;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import kitty.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import kitty.userinterface.Ui;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"import kitty.userinterface.UiHandler;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":" * Represents the main class in which the initialisation and running process resides.","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"public class Kitty {","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    public static final String DATA_PATH \u003d \"data/data.txt\";","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    public Kitty(String filePath) {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"        // Initialise Data","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"            new IO(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"        } catch (KittyException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"            Ui.printErrorMessage();","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"            Ui.exit();","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"     * Greets the user with Initialisation message followed by running the application.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"    private void runApp() {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"        Ui.greet();","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"        UiHandler.beginUi();","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"        new Kitty(DATA_PATH).runApp();","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kengjit":38}},{"path":"src/main/java/kitty/KittyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"public class KittyException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"    public KittyException(String exception) {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"        super(exception);","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"        System.out.println(\"Error: \" + exception);","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kengjit":8}},{"path":"src/main/java/kitty/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":" * The class \u003ccode\u003eParser\u003c/code\u003e takes in raw data of String type and extracts relevant information.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"public class Parser {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    public static final String EMPTY_TODO_ERROR \u003d \"Description of Todo cannot be empty!\";","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    public static final String EMPTY_DEADLINE_ERROR \u003d \"Description of Deadline cannot be empty!\";","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    public static final String EMPTY_EVENT_ERROR \u003d \"Description of Event cannot be empty!\";","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    // Todo","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"     * Returns whether the input given by user follows the proper format for adding a Task of type Todo.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"     * @return True if input given follows proper formatting. False otherwise.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"    public static boolean isTodoInputValid(String line) {","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"        String taskName \u003d line.substring(line.indexOf(\" \") + 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"        if (taskName.equals(\"todo\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"            return false;","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"            // Checks if taskName is empty","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"            return !taskName.isBlank();","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"     * Returns the Task Description of Todo task from user input.","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"     * @return Todo Task Description","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If the Task Description is empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"    public static String getTodoTaskName(String line) throws KittyException {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"        if (!isTodoInputValid(line)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(EMPTY_TODO_ERROR);","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"            return line.substring(line.indexOf(\" \") + 1);","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"    // Deadline","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"     * Returns whether the input given by user follows the proper format for adding a Task of type Deadline.","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"     * @return True if input given follows proper formatting. False otherwise.","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"    public static boolean isDeadlineInputValid(String line) {","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"        String taskName \u003d line.substring(line.indexOf(\" \") + 1, line.indexOf(\"/by\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"        // Checks if taskName is empty","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"        return !taskName.isBlank();","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"     * Returns the Task Description of Deadline task from user input.","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"kengjit"},"content":"     * @return Deadline Task Description","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If the Task Description is empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"kengjit"},"content":"    public static String getDeadlineTaskName(String line) throws KittyException {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"kengjit"},"content":"        if (!isDeadlineInputValid(line)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(EMPTY_DEADLINE_ERROR);","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"kengjit"},"content":"            return line.substring(line.indexOf(\" \") + 1, line.indexOf(\"/by\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"kengjit"},"content":"     * Returns the Deadline Date of Deadline task in String type from user input.","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"kengjit"},"content":"     * @return Deadline Date in String","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"kengjit"},"content":"    public static String getDeadlineDateString(String line) {","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"kengjit"},"content":"        return line.substring(line.indexOf(\"/by \") + 4);","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"kengjit"},"content":"     * Returns whether the user input contains a deadline","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"kengjit"},"content":"     * @return True if line contains a deadline. False otherwise.","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"kengjit"},"content":"    public static boolean hasDeadline(String line) {","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"kengjit"},"content":"        return line.contains(\" /by \");","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"kengjit"},"content":"    // Event","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"kengjit"},"content":"     * Returns whether the input given by user follows the proper format for adding a Task of type Deadline.","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"kengjit"},"content":"     * @return True if input given follows proper formatting. False otherwise.","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"kengjit"},"content":"    public static boolean isEventInputValid(String line) {","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"kengjit"},"content":"        String taskName \u003d line.substring(line.indexOf(\" \") + 1, line.indexOf(\"/at\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"kengjit"},"content":"        // Checks if taskName is empty","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"kengjit"},"content":"        return !taskName.isBlank();","lastModifiedDate":"2021-09-16"},{"lineNumber":100,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"kengjit"},"content":"     * Returns the Task Description of Event task from user input.","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"kengjit"},"content":"     * @return Event Task Description","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If the Task Description is empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"kengjit"},"content":"    public static String getEventTaskName(String line) throws KittyException {","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"kengjit"},"content":"        if (!isEventInputValid(line)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(EMPTY_EVENT_ERROR);","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"kengjit"},"content":"            return line.substring(line.indexOf(\" \") + 1, line.indexOf(\"/at\"));","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"     * Returns the Event Date of Deadline task in String type from user input.","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"kengjit"},"content":"     * @return Event Date in String","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"    public static String getEventDateString(String line) {","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"kengjit"},"content":"        return line.substring(line.indexOf(\"/at \") + 4);","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"kengjit"},"content":"     * Returns whether the user input contains an event date.","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"kengjit"},"content":"     * @return True if line contains an event date. False otherwise.","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"kengjit"},"content":"    public static boolean hasEventDate(String line) {","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"kengjit"},"content":"        return line.contains(\" /at \");","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"kengjit"},"content":"    // Find","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"kengjit"},"content":"     * Returns the keyword to find from user input.","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"kengjit"},"content":"     * @return Returns the keyword to find from the user input as a String.","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If keyword is empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"kengjit"},"content":"    public static String getKeyword(String line) throws KittyException {","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"kengjit"},"content":"        String keyword \u003d line.substring(line.indexOf(\" \") + 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"kengjit"},"content":"        if (keyword.equals(\"find\") || keyword.isBlank()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Keyword cannot be empty!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"kengjit"},"content":"            return keyword;","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"kengjit"},"content":"    // Date","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"kengjit"},"content":"     * Returns the date of type String to a date of type LocalDate.","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"kengjit"},"content":"     * @param dateString date in type String.","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"kengjit"},"content":"     * @return Returns date in type LocalDate.","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If dateString is of the wrong format.","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"kengjit"},"content":"    public static LocalDate getTaskDate(String dateString) throws KittyException {","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"kengjit"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy\");","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"kengjit"},"content":"            return LocalDate.parse(dateString, formatter);","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"kengjit"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Date formatting is incorrect! (Use format: DD/MM/YYYY)\");","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kengjit":165}},{"path":"src/main/java/kitty/io/IO.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty.io;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import kitty.Kitty;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import kitty.KittyException;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import kitty.task.Deadline;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"import kitty.task.Event;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import kitty.task.Task;","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"import kitty.task.Todo;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"import java.io.File;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":" * The class \u003ccode\u003eIO\u003c/code\u003e includes methods that involves any reading/writing to external files.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"public class IO {","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"    public static final String DATA_PATH \u003d \"data/data.txt\";","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"    public IO(String filePath) throws KittyException{","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"        initData(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"     * Reads from local data file and initialises data into tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"     * @param filePath filePath is the path to the data file with respect to Content root.","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If the file is not found in filePath or the data provided is of the wrong format.","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"    public static void initData(String filePath) throws KittyException {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"            File dataDir \u003d new File(\"data\");","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"            File dataFile \u003d new File(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"            // Create new data set if it does not exist","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"            if (!dataDir.exists()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"                dataDir.mkdir();","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"                FileWriter fw \u003d new FileWriter(dataFile.getAbsoluteFile());","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"            } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"                Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"                while (s.hasNext()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"                    String rawData \u003d s.nextLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"                    String type \u003d IOParser.getDataType(rawData);","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"                    String status \u003d IOParser.getDataStatus(rawData);","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"                    String task \u003d IOParser.getDataTask(rawData);","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"                    // Add Tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"                    switch (type) {","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"                    case \"T\":","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"                        addTodoFromRawData(status, task);","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"                        break;","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"                    case \"D\":","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"                        addDeadlineFromRawData(status, task);","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"                        break;","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"                    case \"E\":","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"kengjit"},"content":"                        addEventFromRawData(status, task);","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"                        break;","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"                    default:","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"kengjit"},"content":"                        throw new KittyException(\"Invalid Raw Data!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"kengjit"},"content":"                    }","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"kengjit"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Could not find existing data file!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"kengjit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Unable to create new data set!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":69,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"kengjit"},"content":"     * Adds a task of Event type from raw data provided in data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"kengjit"},"content":"     * @param status status is the status of the completion of said task.","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"kengjit"},"content":"     * @param task task is the String provided by the data file, containing the task Description and task Date.","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"kengjit"},"content":"    private static void addEventFromRawData(String status, String task) {","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"kengjit"},"content":"        String eventName \u003d IOParser.getTaskName(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"kengjit"},"content":"        LocalDate eventDate \u003d IOParser.getTaskDate(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"kengjit"},"content":"        Kitty.tasks.add(new Event(eventName, eventDate));","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"kengjit"},"content":"        if (IOParser.isTaskDone(status)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"kengjit"},"content":"            Kitty.tasks.get(Kitty.tasks.size() - 1).setDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"kengjit"},"content":"     * Adds a task of Deadline type from raw data provided in data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"kengjit"},"content":"     * @param status status is the status of the completion of said task.","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"kengjit"},"content":"     * @param task task is the String provided by the data file, containing the task Description and task Date.","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"kengjit"},"content":"    private static void addDeadlineFromRawData(String status, String task) {","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"kengjit"},"content":"        String deadlineName \u003d IOParser.getTaskName(task);","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"kengjit"},"content":"        LocalDate deadlineDate \u003d IOParser.getTaskDate(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"kengjit"},"content":"        Kitty.tasks.add(new Deadline(deadlineName, deadlineDate));","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"kengjit"},"content":"        if (IOParser.isTaskDone(status)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"kengjit"},"content":"            Kitty.tasks.get(Kitty.tasks.size() - 1).setDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":98,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":99,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"kengjit"},"content":"     * Adds a task of Todo type from raw data provided in data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"kengjit"},"content":"     * @param status status is the status of the completion of said task.","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"kengjit"},"content":"     * @param task task is the String provided by the data file, containing the task Description.","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"kengjit"},"content":"    private static void addTodoFromRawData(String status, String task) {","lastModifiedDate":"2021-09-16"},{"lineNumber":105,"author":{"gitId":"kengjit"},"content":"        Kitty.tasks.add(new Todo(task));","lastModifiedDate":"2021-09-16"},{"lineNumber":106,"author":{"gitId":"kengjit"},"content":"        if (IOParser.isTaskDone(status)) {","lastModifiedDate":"2021-09-16"},{"lineNumber":107,"author":{"gitId":"kengjit"},"content":"            Kitty.tasks.get(Kitty.tasks.size() - 1).setDone();","lastModifiedDate":"2021-09-16"},{"lineNumber":108,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":109,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":111,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"kengjit"},"content":"     * Writes a new line to data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"kengjit"},"content":"     * @param text text is the String in which we wish to write into data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If text is of the wrong format.","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"kengjit"},"content":"    public static void appendNewLine(String text) throws KittyException{","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"            FileWriter fw \u003d new FileWriter(DATA_PATH, true);","lastModifiedDate":"2021-09-12"},{"lineNumber":119,"author":{"gitId":"kengjit"},"content":"            fw.write(text);","lastModifiedDate":"2021-09-12"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2021-09-12"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"            fw.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":122,"author":{"gitId":"kengjit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":123,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Invalid Input to Raw Data!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":124,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":125,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":126,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":127,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"kengjit"},"content":"     * Clears the data file of all data.","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If file is not found/","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"kengjit"},"content":"    public static void clearFile() throws KittyException{","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":133,"author":{"gitId":"kengjit"},"content":"            FileWriter fw \u003d new FileWriter(DATA_PATH);","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"kengjit"},"content":"            fw.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":135,"author":{"gitId":"kengjit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"File not found!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"kengjit"},"content":"     * Writes all tasks at hand onto data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If the file is not found or an invalid formatting.","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"kengjit"},"content":"    public static void updateData() throws KittyException{","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"kengjit"},"content":"        clearFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"kengjit"},"content":"        for (Task task: Kitty.tasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"kengjit"},"content":"            if (task instanceof Todo) {","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"kengjit"},"content":"                if (task.isDone()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":149,"author":{"gitId":"kengjit"},"content":"                    appendNewLine(\"T|1|\" + task.getTaskName());","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"kengjit"},"content":"                } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"kengjit"},"content":"                    appendNewLine(\"T|0|\" + task.getTaskName());","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"kengjit"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"kengjit"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"kengjit"},"content":"                if (task.isDone()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"kengjit"},"content":"                    appendNewLine(\"D|1|\" + task.getTaskName() + \"|\" + ((Deadline) task).getDeadline());","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"kengjit"},"content":"                } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"kengjit"},"content":"                    appendNewLine(\"D|0|\" + task.getTaskName() + \"|\" + ((Deadline) task).getDeadline());","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"kengjit"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"kengjit"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2021-09-12"},{"lineNumber":160,"author":{"gitId":"kengjit"},"content":"                if (task.isDone()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":161,"author":{"gitId":"kengjit"},"content":"                    appendNewLine(\"E|1|\" + task.getTaskName() + \"|\" + ((Event) task).getEventDate());","lastModifiedDate":"2021-09-12"},{"lineNumber":162,"author":{"gitId":"kengjit"},"content":"                } else {","lastModifiedDate":"2021-09-12"},{"lineNumber":163,"author":{"gitId":"kengjit"},"content":"                    appendNewLine(\"E|0|\" + task.getTaskName() + \"|\" + ((Event) task).getEventDate());","lastModifiedDate":"2021-09-12"},{"lineNumber":164,"author":{"gitId":"kengjit"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":165,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":166,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":167,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":168,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"kengjit":168}},{"path":"src/main/java/kitty/io/IOParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty.io;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":" * The class \u003ccode\u003eIOParser\u003c/code\u003e takes in raw data of String type and extracts relevant information from the data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"public class IOParser {","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"     * Returns the task type, between Todo, Deadline and Event from the data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"     * @param rawData rawData is the String containing the task details from teh data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"     * @return Returns the task type from rawData.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"    public static String getDataType(String rawData) {","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"        return rawData.substring(0, rawData.indexOf(\"|\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"     * Returns whether the task has been marked as completed or not in String type.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"     * @param rawData rawData is the String containing the task details from teh data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"     * @return Returns the task status from rawData in String type.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"    public static String getDataStatus(String rawData) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"        return rawData.substring(rawData.indexOf(\"|\") + 1, rawData.indexOf(\"|\") + 2);","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"     * Returns the task description and task date (if applicable) from the data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"     * @param rawData rawData is the String containing the task details from teh data file.","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"     * @return Returns the task details from rawData.","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"    public static String getDataTask(String rawData) {","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"        return rawData.substring(rawData.indexOf(\"|\") + 3);","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"     * Returns whether the task has been marked as completed or not as a boolean value.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"     * @param status status is the String containing the status of the task.","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"     * @return Returns true if the task has been marked as completed. False otherwise.","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"    public static boolean isTaskDone(String status) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"        return status.equals(\"1\");","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"     * Returns the task description from the String task.","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"     * @param task task is the task details, including the task description and task date (if applicable).","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"     * @return Returns the task description as a String type.","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"    public static String getTaskName(String task) {","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"        return task.substring(0, task.indexOf(\"|\"));","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"     * Returns the task date from the String task.","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"kengjit"},"content":"     * @param task task is the task details, including the task description and task date (if applicable).","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"     * @return Returns the task date as a String type.","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"kengjit"},"content":"    public static LocalDate getTaskDate(String task) {","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"kengjit"},"content":"        String dateAsString \u003d task.substring(task.indexOf(\"|\") + 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"        return LocalDate.parse(dateAsString);","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"kengjit":64}},{"path":"src/main/java/kitty/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import kitty.Kitty;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import kitty.KittyException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import kitty.Parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":" * The class \u003ccode\u003eDeadline\u003c/code\u003e includes methods that involves tasks of type Deadline.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    public Deadline(String taskName, LocalDate deadline) {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"        super(taskName);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"        return deadline;","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"     * Adds a task of type Deadline to list of tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If line is of the wrong format for adding a task of Deadline type.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"    public static void addDeadlineTask(String line) throws KittyException {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"        if (!Parser.hasDeadline(line)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Deadline formatting is incorrect!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"            // Get Deadline Name","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"            String taskName \u003d Parser.getDeadlineTaskName(line);","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"            // Get Deadline Date as String","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"            String deadlineString \u003d Parser.getDeadlineDateString(line);","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"            // Get Deadline Date as LocalDate","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"            LocalDate deadlineDate \u003d Parser.getTaskDate(deadlineString);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"            // Add Deadline Task","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"            Kitty.tasks.add(new Deadline(taskName, deadlineDate));","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"        return \"[D]\" + super.toString() + \" [by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"]\";","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kengjit":52}},{"path":"src/main/java/kitty/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import kitty.Kitty;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import kitty.KittyException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import kitty.Parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":" * The class \u003ccode\u003eEvent\u003c/code\u003e includes methods that involves tasks of type Event.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    protected LocalDate eventDate;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    public Event(String taskName, LocalDate eventDate) {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"        super(taskName);","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"    public LocalDate getEventDate() {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"        return eventDate;","lastModifiedDate":"2021-09-12"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"     * Adds a task of type Event to list of tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If line is of the wrong format for adding a task of Event type.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"    public static void addEventTask(String line) throws KittyException {","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"        if(!Parser.hasEventDate(line)) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Event formatting is incorrect!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"            // Get Event Name","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"            String taskName \u003d Parser.getEventTaskName(line);","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"            // Get Event Date as String","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"            String eventDateString \u003d Parser.getEventDateString(line);","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"            // Get Event Date as LocalDate","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"            LocalDate eventDate \u003d Parser.getTaskDate(eventDateString);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"            // Add Event Task","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"            Kitty.tasks.add(new Event(taskName, eventDate));","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"        return \"[E]\" + super.toString() + \" [at: \" + eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \"]\";","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kengjit":52}},{"path":"src/main/java/kitty/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":" * The class \u003ccode\u003eTask\u003c/code\u003e includes methods that involves any form of tasks.","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"    private String taskName;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"        this.taskName \u003d name;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    //Getters","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"        return taskName;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"    //Setters","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"        if (isDone) {","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"            return \"[X] \" + this.taskName;","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"            return \"[ ] \" + this.taskName;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"kengjit":36}},{"path":"src/main/java/kitty/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import kitty.Kitty;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import kitty.KittyException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import kitty.Parser;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":" * The class \u003ccode\u003eTodo\u003c/code\u003e includes methods that involves tasks of type Todo.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    public Todo(String taskName) {","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"        super(taskName);","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"     * Adds a task of type Todo to list of tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"     * @param line line is the String that the user inputs.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If line is of the wrong format for adding a task of Todo type.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"    public static void addTodoTask(String line) throws KittyException {","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"        String taskName \u003d Parser.getTodoTaskName(line);","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"        Kitty.tasks.add(new Todo(taskName));","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kengjit":30}},{"path":"src/main/java/kitty/userinterface/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty.userinterface;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import kitty.Kitty;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import kitty.KittyException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":" * The class \u003ccode\u003eUi\u003c/code\u003e includes methods that involves User Interface.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"public class Ui {","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"    public static String userInput;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"    public static String command;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"    public static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"    // Constants","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":"    public static final String CAT_1 \u003d \" |\\\\__/,|   (`\\\\\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":"                                        \" |_ _  |.--.) )\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"                                        \" ( T   )     /\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"                                        \"(((^_(((/(((_/\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"    public static final String CAT_2 \u003d \"  /\\\\_/\\\\  (\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"                                        \" ( ^.^ ) _)\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"                                        \"   \\\\\\\"/  (\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"                                        \" ( | | )\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"                                        \"(__d b__)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"    public static final String CAT_3 \u003d \"                       /)\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"                                        \"              /\\\\___/\\\\ ((\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"                                        \"              \\\\`@_@\u0027/  ))\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"                                        \"              {_:Y:.}_//\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"                                        \"    ----------{_}^-\u0027{_}----------\";","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"    public static final String CAT_4 \u003d \"──────▄▀▄─────▄▀▄\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"                                        \"─────▄█░░▀▀▀▀▀░░█▄\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"                                        \"─▄▄──█░░░░░░░░░░░█──▄▄\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"                                        \"█▄▄█─█░░▀░░┬░░▀░░█─█▄▄█\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"    public static final String CAT_5 \u003d \"  ^~^  ,\\n\" +","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"                                        \" (\u0027Y\u0027) )\\n\" +","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"                                        \" /   \\\\/ \\n\" +","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"                                        \"(\\\\|||/)\";","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"    public static final String CAT_LOGO \u003d \"___$$$_____________$$$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"                                            \"__$___$___________$___$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"                                            \"_$_____$_________$_____$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"                                            \"_$_$$___$$$$$$$$$___$$_$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"                                            \"_$_$$$___$______$__$$$_$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"                                            \"_$_$__$__$______$_$__$_$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"                                            \"_$_$__$$$________$$__$_$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"                                            \"_$_$$$_____________$$$_$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"                                            \"_$_$_________________$_$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"                                            \"__$___________________$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"                                            \"__$___________________$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"                                            \"_$_____________________$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"                                            \"_$____$$_________$$____$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"                                            \"$____$_$$_______$_$$____$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"                                            \"$____$o_$_______$o_$____$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"                                            \"$_____$$___$$$___$$_____$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"                                            \"_$_______$__$__$_______$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"                                            \"__$_______$$_$$_______$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"                                            \"___$_________________$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"kengjit"},"content":"                                            \"____$$_____________$$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"                                            \"______$$$$$$$$$$$$$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"                                            \"________$_______$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"kengjit"},"content":"                                            \"_______$_________$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"kengjit"},"content":"                                            \"___$$$_$_________$_$$$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"                                            \"__$___$$___$$$___$$___$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"kengjit"},"content":"                                            \"__$____$___$_$___$____$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"kengjit"},"content":"                                            \"__$____$$$$$_$$$$$____$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"kengjit"},"content":"                                            \"__$____$___$_$___$____$\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"kengjit"},"content":"                                            \"___$$$$$$$$___$$$$$$$$\\n\";","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"kengjit"},"content":"    public static final String CAT_EXIT \u003d \"      |\\\\      _,,,---,,_\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"kengjit"},"content":"                                        \"ZZZzz /,`.-\u0027`\u0027    -.  ;-;;,_\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"kengjit"},"content":"                                        \"     |,4-  ) )-,_. ,\\\\ (  `\u0027-\u0027\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"kengjit"},"content":"                                        \"    \u0027---\u0027\u0027(_/--\u0027  `-\u0027\\\\_)\";","lastModifiedDate":"2021-09-07"},{"lineNumber":71,"author":{"gitId":"kengjit"},"content":"    public static final String CAT_ERROR \u003d \"    /\\\\_/\\\\           ___\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"kengjit"},"content":"                                            \"   \u003d o_o \u003d_______    \\\\ \\\\\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"kengjit"},"content":"                                            \"    __^      __(  \\\\.__) )\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"kengjit"},"content":"                                            \"(@)\u003c_____\u003e__(_____)____/\";","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"kengjit"},"content":"    public static final String BAR_LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"kengjit"},"content":"    public static final String INTRO_MESSAGE \u003d CAT_LOGO + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":77,"author":{"gitId":"kengjit"},"content":"                                                + BAR_LINE + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":78,"author":{"gitId":"kengjit"},"content":"                                                + BAR_LINE + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":79,"author":{"gitId":"kengjit"},"content":"                                                + \"Hey there! I\u0027m Kitty!\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":80,"author":{"gitId":"kengjit"},"content":"                                                + \"What can I do for you?\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":81,"author":{"gitId":"kengjit"},"content":"                                                + BAR_LINE + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":82,"author":{"gitId":"kengjit"},"content":"                                                + BAR_LINE;","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"kengjit"},"content":"    public static final String HELP_MESSAGE \u003d \"Here are some things that I can do:\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":84,"author":{"gitId":"kengjit"},"content":"                                            + BAR_LINE + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":85,"author":{"gitId":"kengjit"},"content":"                                            + \"Todo: todo **INSERT TASK HERE**\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":86,"author":{"gitId":"kengjit"},"content":"                                            + \"Deadline: deadline **INSERT TASK HERE** /by DD/MM/YYYY\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"kengjit"},"content":"                                            + \"Event: event **INSERT TASK HERE** /at DD/MM/YYYY\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"kengjit"},"content":"                                            + \"Find: find **INSERT KEYWORD HERE**\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"kengjit"},"content":"                                            + \"List out tasks: list\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"kengjit"},"content":"                                            + \"Mark as done: done **INSERT TASK NUMBER HERE**\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"kengjit"},"content":"                                            + \"Delete task: delete **INSERT TASK NUMBER HERE**\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"kengjit"},"content":"                                            + \"Exit application: bye\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"kengjit"},"content":"                                            + BAR_LINE + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":94,"author":{"gitId":"kengjit"},"content":"                                            + CAT_4;","lastModifiedDate":"2021-09-09"},{"lineNumber":95,"author":{"gitId":"kengjit"},"content":"    public static final String EXIT_MESSAGE \u003d \"\\n\" + \"Nap time!! Yawn...\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":96,"author":{"gitId":"kengjit"},"content":"                                            + CAT_EXIT + \"\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":97,"author":{"gitId":"kengjit"},"content":"                                            + BAR_LINE + \"\\n\";","lastModifiedDate":"2021-09-09"},{"lineNumber":98,"author":{"gitId":"kengjit"},"content":"    public static final String ERROR_MESSAGE \u003d \"\\nOops something went wrong! Please try again!\\n\"","lastModifiedDate":"2021-09-09"},{"lineNumber":99,"author":{"gitId":"kengjit"},"content":"                                            + CAT_ERROR;","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"kengjit"},"content":"    // Methods","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"kengjit"},"content":"     * Prints out the Introductory and guide message.","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"kengjit"},"content":"    public static void greet() {","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"kengjit"},"content":"        System.out.println(INTRO_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":108,"author":{"gitId":"kengjit"},"content":"        System.out.println(HELP_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":109,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"kengjit"},"content":"     * Receives user input for further processing.","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If user inputs invalid command.","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"kengjit"},"content":"    public static void getUserInput() throws KittyException {","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"            System.out.println(BAR_LINE);","lastModifiedDate":"2021-09-09"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"            System.out.print(\"You: \");","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"kengjit"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"            command \u003d userInput.split(\" \")[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Invalid Input!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"kengjit"},"content":"     * Prints to user the task recently added.","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"kengjit"},"content":"    public static void printAddedTask() {","lastModifiedDate":"2021-09-09"},{"lineNumber":130,"author":{"gitId":"kengjit"},"content":"        System.out.println();","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"kengjit"},"content":"        System.out.println(\"Added: \" + Kitty.tasks.get(Kitty.tasks.size() - 1));","lastModifiedDate":"2021-09-12"},{"lineNumber":132,"author":{"gitId":"kengjit"},"content":"        System.out.println();","lastModifiedDate":"2021-09-09"},{"lineNumber":133,"author":{"gitId":"kengjit"},"content":"        System.out.println(Ui.CAT_2);","lastModifiedDate":"2021-09-09"},{"lineNumber":134,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":135,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"kengjit"},"content":"     * Force exits the application","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"kengjit"},"content":"    public static void exit() {","lastModifiedDate":"2021-09-09"},{"lineNumber":140,"author":{"gitId":"kengjit"},"content":"        System.out.println(EXIT_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":141,"author":{"gitId":"kengjit"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-09"},{"lineNumber":142,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"kengjit"},"content":"     * Tells the user that an error was encountered.","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"kengjit"},"content":"    public static void printErrorMessage() {","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"kengjit"},"content":"        System.out.println(ERROR_MESSAGE);","lastModifiedDate":"2021-09-09"},{"lineNumber":149,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kengjit":150}},{"path":"src/main/java/kitty/userinterface/UiHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"package kitty.userinterface;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kengjit"},"content":"import kitty.Kitty;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"kengjit"},"content":"import kitty.KittyException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"kengjit"},"content":"import kitty.Parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"kengjit"},"content":"import kitty.io.IO;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"kengjit"},"content":"import kitty.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"kengjit"},"content":"import kitty.task.Todo;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"kengjit"},"content":"import kitty.task.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"kengjit"},"content":"import kitty.task.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"kengjit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"kengjit"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"kengjit"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"kengjit"},"content":" * The class \u003ccode\u003eUiHandler\u003c/code\u003e includes methods that handle incoming User Inputs from class \u003ccode\u003eUi\u003c/code\u003e.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"kengjit"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"public class UiHandler {","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"kengjit"},"content":"     * Manages all incoming input and delegates to respective methods.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"kengjit"},"content":"     * Full list of available commands:","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"kengjit"},"content":"     * bye: Exits Kitty.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"kengjit"},"content":"     * list: Prints out all tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"kengjit"},"content":"     * done: Marks respective task as done.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"kengjit"},"content":"     * todo: Adds a task of Todo type.","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"kengjit"},"content":"     * deadline: Adds a task of Deadline type.","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"kengjit"},"content":"     * event: Adds a task of Event type.","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"kengjit"},"content":"     * delete: Deletes respective task from tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"kengjit"},"content":"     * find: Searches and displays all tasks which correspond to keyword given.","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"kengjit"},"content":"    public static void beginUi() {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"kengjit"},"content":"        while (true) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"kengjit"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"kengjit"},"content":"                IO.updateData();","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"kengjit"},"content":"                Ui.getUserInput();","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"kengjit"},"content":"                switch (Ui.command) {","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"kengjit"},"content":"                case \"bye\":","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"kengjit"},"content":"                    Ui.exit();","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"kengjit"},"content":"                    break;","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"kengjit"},"content":"                case \"list\":","lastModifiedDate":"2021-09-07"},{"lineNumber":41,"author":{"gitId":"kengjit"},"content":"                    printList(Kitty.tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"kengjit"},"content":"                    break;","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"kengjit"},"content":"                case \"done\":","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"kengjit"},"content":"                    markTaskAsDone();","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"kengjit"},"content":"                    break;","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"kengjit"},"content":"                case \"todo\":","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"kengjit"},"content":"                    addToList(\"T\");","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"kengjit"},"content":"                    break;","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"kengjit"},"content":"                case \"deadline\":","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"kengjit"},"content":"                    addToList(\"D\");","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"kengjit"},"content":"                    break;","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"kengjit"},"content":"                case \"event\":","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"kengjit"},"content":"                    addToList(\"E\");","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"kengjit"},"content":"                    break;","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"kengjit"},"content":"                case \"delete\":","lastModifiedDate":"2021-09-12"},{"lineNumber":56,"author":{"gitId":"kengjit"},"content":"                    removeFromList();","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"kengjit"},"content":"                    break;","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"kengjit"},"content":"                case \"find\":","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"kengjit"},"content":"                    findFromList();","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"kengjit"},"content":"                    break;","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"kengjit"},"content":"                default:","lastModifiedDate":"2021-09-07"},{"lineNumber":62,"author":{"gitId":"kengjit"},"content":"                    throw new KittyException(\"No such command found\");","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"kengjit"},"content":"                }","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"kengjit"},"content":"            } catch (KittyException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"kengjit"},"content":"                Ui.printErrorMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":67,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":68,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"kengjit"},"content":"     * Displays to user all the currents tasks in ArrayList \u003ccode\u003etasks\u003c/code\u003e.","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"kengjit"},"content":"     * @param tasks ArrayList containing all tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If there are no tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"kengjit"},"content":"    public static void printList(ArrayList\u003cTask\u003e tasks) throws KittyException{","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"kengjit"},"content":"        // Throw exception if user list with no tasks","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"kengjit"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Sorry you currently have no tasks!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"kengjit"},"content":"            // Prints list","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"kengjit"},"content":"            int i \u003d 1;","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"kengjit"},"content":"            System.out.println();","lastModifiedDate":"2021-09-07"},{"lineNumber":83,"author":{"gitId":"kengjit"},"content":"            System.out.println(\"Here are the tasks you have!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"kengjit"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"kengjit"},"content":"                System.out.print(i + \". \");","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"kengjit"},"content":"                System.out.println(task);","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"kengjit"},"content":"                i++;","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"kengjit"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"kengjit"},"content":"            System.out.println();","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"kengjit"},"content":"            System.out.println(Ui.CAT_1);","lastModifiedDate":"2021-09-09"},{"lineNumber":92,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"kengjit"},"content":"     * Marks corresponding task as done from list of tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If task number from input is invalid, i.e. \"first\"","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"kengjit"},"content":"    public static void markTaskAsDone() throws KittyException{","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":101,"author":{"gitId":"kengjit"},"content":"            int taskNum \u003d Integer.parseInt(Ui.userInput.split(\" \")[1]);","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"kengjit"},"content":"            Kitty.tasks.get(taskNum - 1).setDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"kengjit"},"content":"            System.out.println();","lastModifiedDate":"2021-09-07"},{"lineNumber":104,"author":{"gitId":"kengjit"},"content":"            System.out.println(\"Good Job!! One more thing off your list!!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"kengjit"},"content":"            System.out.println(Kitty.tasks.get(taskNum - 1));","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"kengjit"},"content":"            System.out.println(Ui.CAT_3);","lastModifiedDate":"2021-09-09"},{"lineNumber":107,"author":{"gitId":"kengjit"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Selected an invalid task number!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"kengjit"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Inputted a non-Integer Task Number!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"kengjit"},"content":"     * Adds the task into the list of tasks at hand based on the command type given.","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"kengjit"},"content":"     * @param type Represents the command type, between Todo, Deadline and Event.","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If the input formatting does not match the respective command type.","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"kengjit"},"content":"    public static void addToList(String type) throws KittyException{","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"kengjit"},"content":"        switch (type) {","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"kengjit"},"content":"        case \"T\":","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"kengjit"},"content":"            Todo.addTodoTask(Ui.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"kengjit"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"kengjit"},"content":"        case \"D\":","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"kengjit"},"content":"            Deadline.addDeadlineTask(Ui.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"kengjit"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"kengjit"},"content":"        case \"E\":","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"kengjit"},"content":"            Event.addEventTask(Ui.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"kengjit"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"kengjit"},"content":"        Ui.printAddedTask();","lastModifiedDate":"2021-09-09"},{"lineNumber":132,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":134,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"kengjit"},"content":"     * Removes the corresponding task from the list of tasks at hand.","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If the task number provided is invalid. i.e. \"last\".","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"kengjit"},"content":"    public static void removeFromList() throws KittyException{","lastModifiedDate":"2021-09-12"},{"lineNumber":139,"author":{"gitId":"kengjit"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":140,"author":{"gitId":"kengjit"},"content":"            int taskNum \u003d Integer.parseInt(Ui.userInput.split(\" \")[1]);","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"kengjit"},"content":"            System.out.println();","lastModifiedDate":"2021-09-12"},{"lineNumber":142,"author":{"gitId":"kengjit"},"content":"            System.out.println(\"I have deleted \u0027\" + Kitty.tasks.get(taskNum - 1) + \"\u0027 from your list!!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":143,"author":{"gitId":"kengjit"},"content":"            System.out.println(Ui.CAT_3);","lastModifiedDate":"2021-09-12"},{"lineNumber":144,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":145,"author":{"gitId":"kengjit"},"content":"            Kitty.tasks.remove(taskNum - 1);","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"kengjit"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":147,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Selected an invalid task number!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"kengjit"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":149,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"Inputted a non-Integer Task Number!\");","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":152,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"kengjit"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"kengjit"},"content":"     * Finds and displays the tasks corresponding to the keyword provided.","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"kengjit"},"content":"     * @throws KittyException If none of the tasks at hand matched the keyword provided.","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"kengjit"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"kengjit"},"content":"    public static void findFromList() throws KittyException {","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"kengjit"},"content":"        String keyword \u003d Parser.getKeyword(Ui.userInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"kengjit"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d (ArrayList\u003cTask\u003e) Kitty.tasks.stream()","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"kengjit"},"content":"                .filter((t) -\u003e (t.getTaskName().contains(keyword)))","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"kengjit"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"kengjit"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"kengjit"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"kengjit"},"content":"            throw new KittyException(\"There are no tasks that matched the keyword \\\"\" + keyword + \"\\\"\");","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"kengjit"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"kengjit"},"content":"            System.out.println();","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"kengjit"},"content":"            System.out.println(\"Here are the tasks I found that matched the keyword \\\"\" + keyword + \"\\\"\");","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"kengjit"},"content":"            filteredTasks.forEach(System.out::println);","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"kengjit"},"content":"            System.out.println();","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"kengjit"},"content":"            System.out.println(Ui.CAT_5);","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"kengjit"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"kengjit"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":173,"author":{"gitId":"kengjit"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"kengjit":173}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kengjit"},"content":"todo TEST 1 2 3","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"kengjit":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kengjit"},"content":"java -classpath ..\\bin Kitty \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kengjit":1,"-":20}}]
