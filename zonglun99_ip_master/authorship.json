[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"# User Guide","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"___","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"## Duke","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"Duke is a simple task management software which utilises the Command Line Interface **(CLI)**, to store and find tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"Through consistent effort, the management of tasks will be more efficient.","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"___","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"## Getting Started","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"Ensure that Java 11 and latest edition of IP.jar is installed.","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"1. Copy the jar file into a new folder for usage as your home folder for Duke.","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"2. Open the command prompt interface, navigate to the folder containing the jar file and run `java -jar IP.jar`","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"3. Upon launching the jar file, the output can be seen as:","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":" ______    __                     __","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"/  ____|  |  |                   |__|","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"|  |      |  |_____    _______    __","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"|  |      |   __   \\  /  __   |  |  |","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"|  |____  |  |  |  |  | |__|  |  |  |","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"\\______|  |__|  |__|  \\____/\\_|  |__|","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"Hey there! I am Chai!","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"What are you doing today?","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"Input command:","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"4. Input commands into the command line interface after the prompt, `Input command: `. Some list of available commands include: ","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"   * `deadline submit assignment /by 2021-10-01`","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"   * `done 1`","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"   * `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"5. Refer to feature list below for full details of available commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"___","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"## Command Summary","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"Feature | Command Format","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"---|---","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"Add  | `todo \u003ctask name\u003e` or `deadline \u003ctask name\u003e \u003c/by\u003e \u003cdate: yyyy-mm-dd\u003e` or `event \u003ctask name\u003e \u003c/at\u003e \u003cdate: yyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"Done| `done \u003ctask number\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"Delete| `delete \u003ctask number\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"Find| `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"Date| `date \u003cdate: yyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"List| `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"Help| `help`","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"Bye| `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"___","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"## Feature List","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"### Adding a task","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"There are a total of 3 different task type, *Todo*, *Deadline* and *Event*.","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"zonglun99"},"content":"1. *Todo* task type is the most basic task.  To add a *Todo* task, you can enter the command in the following format: `todo \u003ctask name\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"zonglun99"},"content":"2. *Deadline* task type has an additional attribute date. *To add a *Deadline* task, you can enter the command in the following format: `deadline \u003ctask name\u003e \u003c/by\u003e \u003cdate: yyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"zonglun99"},"content":"3. *Event* task type has an additional attribute date. *To add a *Event* task, you can enter the command in the following format: `event \u003ctask name\u003e \u003c/at\u003e \u003cdate: yyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"zonglun99"},"content":"Sample output after adding task:","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"zonglun99"},"content":"Input command: deadline submit assignment /by 2021-10-01","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"zonglun99"},"content":"Alright! Added to the list:","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"zonglun99"},"content":"  [D][ ] submit assignment (by: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"zonglun99"},"content":"You currently have 3 task recorded in your list.","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"zonglun99"},"content":"Task added will automatically be saved to a storage text file named dukeTask.txt.","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"zonglun99"},"content":"### Marking task as completed","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"zonglun99"},"content":"To mark a task as completed, you will need to know the task number associated with the specific task.","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"zonglun99"},"content":"The format to mark task as done is : `done \u003ctask number\u003e`. A tick will appear if task is done when list is printed out.","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"zonglun99"},"content":"Sample output after marking a task:","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"zonglun99"},"content":"Input command: done 1","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"zonglun99"},"content":"Well done! Task marked:","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"zonglun99"},"content":"  [T][*] exercise","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"zonglun99"},"content":"### Deleting a task","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"zonglun99"},"content":"To delete a task from task list, you will need to know the task number associated with the specific task.","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"zonglun99"},"content":"The format to delete a task is : `delete \u003ctask number\u003e`. The task will be removed from the list. ","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"zonglun99"},"content":"Sample output after deleting a task:","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"zonglun99"},"content":"Input command: delete 2","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"zonglun99"},"content":"Roger! Task removed from list:","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"zonglun99"},"content":"  [E][ ] attend lecture (at: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"zonglun99"},"content":"You currently have 3 left in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"zonglun99"},"content":"### Finding tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"zonglun99"},"content":"To find a task from task list, you will have to input specific keywords associated with the task name. ","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"zonglun99"},"content":"The format to find a task is : `find \u003ckeyword\u003e`. Tasks containing keywords will be printed.","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"zonglun99"},"content":"Sample output after finding task:","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"zonglun99"},"content":"Input command: find assignment","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"zonglun99"},"content":"Listing task found:","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"zonglun99"},"content":"1.[D][ ] submit assignment (by: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"zonglun99"},"content":"### Finding tasks associated to a date","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"zonglun99"},"content":"To find tasks happening on a given date, you will have to input a date in the format YYYY-MM-DD.","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"zonglun99"},"content":"The format to find task associated with this date is : `date \u003cdate: yyyy-mm-dd\u003e`. Tasks associated to this date will be printed.","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"zonglun99"},"content":"Sample output after finding task associated to date:","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"zonglun99"},"content":"Input command: date 2021-10-01","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"zonglun99"},"content":"Listing task associated to this date:","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"zonglun99"},"content":"1.[D][ ] submit assignment (by: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"zonglun99"},"content":"2.[E][ ] attend lecture (at: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"zonglun99"},"content":"### Listing out all tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"zonglun99"},"content":"List out all the task stored in the task list. The format to list task : `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"zonglun99"},"content":"Sample output for listing task:","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"zonglun99"},"content":"Input command: list","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"zonglun99"},"content":"Tasks list so far:","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"zonglun99"},"content":"1.[T][ ] exercise","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"zonglun99"},"content":"2.[T][ ] running","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"zonglun99"},"content":"3.[D][ ] submit assignment (by: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"zonglun99"},"content":"4.[E][ ] attend lecture (at: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"zonglun99"},"content":"### Listing out useful commands","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"zonglun99"},"content":"List out useful commands to use. The format to list commands : `help`","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"zonglun99"},"content":"Sample output of listing commands:","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"zonglun99"},"content":"Input command: help","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"zonglun99"},"content":"List of commands available:","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"zonglun99"},"content":"todo \u003ctype your task here\u003e [eg. todo swimming]","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"zonglun99"},"content":"-\u003e Adds a todo task to the task list.","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"zonglun99"},"content":"deadline \u003ctype your deadline here\u003e \u003cSPACE\u003e \u003c/by\u003e \u003cSPACE\u003e \u003ctype a date with format yyyy-mm-dd\u003e [eg. deadline assignment /by 2021-10-01]","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"zonglun99"},"content":"-\u003e Adds a deadline task to the task list.","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"zonglun99"},"content":"event \u003ctype your event here\u003e \u003cSPACE\u003e \u003c/at\u003e \u003cSPACE\u003e \u003ctype a date with format yyyy-mm-dd\u003e [eg. lecture /at 2021-10-01]","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"zonglun99"},"content":"-\u003e Adds an event task to the task list.","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"zonglun99"},"content":"### Exiting the program","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"zonglun99"},"content":"Exit from the program. The format to exit: `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"zonglun99"},"content":"Sample output of exiting:","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"zonglun99"},"content":"Input command: bye","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"zonglun99"},"content":"GoodBye! Please finish up your task!","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"zonglun99"},"content":"___","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"zonglun99"},"content":"## Things To Note","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"zonglun99"},"content":"1. Input commands are not case-sensitive.","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"zonglun99"},"content":"2. All tasks and task status are directly stored in the directory data then dukeTask.txt file.","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"zonglun99"},"content":"3. When prompt for input of task number, it should be strictly an integer value.","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"zonglun99":168}},{"path":"data/dukeTask.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"T|1|run","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"zonglun99":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"___","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"## Duke","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"Duke is a simple task management software which utilises the Command Line Interface **(CLI)**, to store and find tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"Through consistent effort, the management of tasks will be more efficient.","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"## Getting Started","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"Ensure that Java 11 and latest edition of IP.jar is installed.","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"1. Copy the jar file into a new folder for usage as your home folder for Duke.","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"2. Open the command prompt interface, navigate to the folder containing the jar file and run `java -jar IP.jar`","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"3. Upon launching the jar file, the output can be seen as:","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":" ______    __                     __","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"/  ____|  |  |                   |__|","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"|  |      |  |_____    _______    __","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"|  |      |   __   \\  /  __   |  |  |","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"|  |____  |  |  |  |  | |__|  |  |  |","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"\\______|  |__|  |__|  \\____/\\_|  |__|","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"Hey there! I am Chai!","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"What are you doing today?","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"Input command:","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"4. Input commands into the command line interface after the prompt, `Input command: `. Some list of available commands include:","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"    * `deadline submit assignment /by 2021-10-01`","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"    * `done 1`","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"    * `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"5. Refer to feature list below for full details of available commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"## Feature List","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"### Adding a task","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"There are a total of 3 different task type, *Todo*, *Deadline* and *Event*.","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"1. *Todo* task type is the most basic task.  To add a *Todo* task, you can enter the command in the following format: `todo \u003ctask name\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"2. *Deadline* task type has an additional attribute date. *To add a *Deadline* task, you can enter the command in the following format: `deadline \u003ctask name\u003e \u003c/by\u003e \u003cdate: yyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"3. *Event* task type has an additional attribute date. *To add a *Event* task, you can enter the command in the following format: `event \u003ctask name\u003e \u003c/at\u003e \u003cdate: yyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"Sample output after adding task:","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"Input command: deadline submit assignment /by 2021-10-01","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"Alright! Added to the list:","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"  [D][ ] submit assignment (by: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"zonglun99"},"content":"You currently have 3 task recorded in your list.","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"zonglun99"},"content":"Task added will automatically be saved to a storage text file named dukeTask.txt.","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"zonglun99"},"content":"### Marking task as completed","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"zonglun99"},"content":"To mark a task as completed, you will need to know the task number associated with the specific task.","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"zonglun99"},"content":"The format to mark task as done is : `done \u003ctask number\u003e`. An asterisk will appear if task is done when list is printed out.","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"zonglun99"},"content":"Sample output after marking a task:","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"zonglun99"},"content":"Input command: done 1","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"zonglun99"},"content":"Well done! Task marked:","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"zonglun99"},"content":"  [T][*] exercise","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"zonglun99"},"content":"### Deleting a task","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"zonglun99"},"content":"To delete a task from task list, you will need to know the task number associated with the specific task.","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"zonglun99"},"content":"The format to delete a task is : `delete \u003ctask number\u003e`. The task will be removed from the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"zonglun99"},"content":"Sample output after deleting a task:","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"zonglun99"},"content":"Input command: delete 2","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"zonglun99"},"content":"Roger! Task removed from list:","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"zonglun99"},"content":"  [E][ ] attend lecture (at: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"zonglun99"},"content":"You currently have 3 left in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"zonglun99"},"content":"### Finding tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"zonglun99"},"content":"To find a task from task list, you will have to input specific keywords associated with the task name.","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"zonglun99"},"content":"The format to find a task is : `find \u003ckeyword\u003e`. Tasks containing keywords will be printed.","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"zonglun99"},"content":"Sample output after finding task:","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"zonglun99"},"content":"Input command: find assignment","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"zonglun99"},"content":"Listing task found:","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"zonglun99"},"content":"1.[D][ ] submit assignment (by: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"zonglun99"},"content":"### Finding tasks associated to a date","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"zonglun99"},"content":"To find tasks happening on a given date, you will have to input a date in the format YYYY-MM-DD.","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"zonglun99"},"content":"The format to find task associated with this date is : `date \u003cdate: yyyy-mm-dd\u003e`. Tasks associated to this date will be printed.","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"zonglun99"},"content":"Sample output after finding task associated to date:","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"zonglun99"},"content":"Input command: date 2021-10-01","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"zonglun99"},"content":"Listing task associated to this date:","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"zonglun99"},"content":"1.[D][ ] submit assignment (by: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"zonglun99"},"content":"2.[E][ ] attend lecture (at: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":110,"author":{"gitId":"zonglun99"},"content":"### Listing out all tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"zonglun99"},"content":"List out all the task stored in the task list. The format to list task : `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"zonglun99"},"content":"Sample output for listing task:","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"zonglun99"},"content":"Input command: list","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"zonglun99"},"content":"Tasks list so far:","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"zonglun99"},"content":"1.[T][ ] exercise","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"zonglun99"},"content":"2.[T][ ] running","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"zonglun99"},"content":"3.[D][ ] submit assignment (by: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"zonglun99"},"content":"4.[E][ ] attend lecture (at: 01 Oct 2021)","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"zonglun99"},"content":"### Listing out useful commands","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"zonglun99"},"content":"List out useful commands to use. The format to list commands : `help`","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"zonglun99"},"content":"Sample output of listing commands:","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"zonglun99"},"content":"Input command: help","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"zonglun99"},"content":"List of commands available:","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"zonglun99"},"content":"todo \u003ctype your task here\u003e [eg. todo swimming]","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"zonglun99"},"content":"-\u003e Adds a todo task to the task list.","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"zonglun99"},"content":"deadline \u003ctype your deadline here\u003e \u003cSPACE\u003e \u003c/by\u003e \u003cSPACE\u003e \u003ctype a date with format yyyy-mm-dd\u003e [eg. deadline assignment /by 2021-10-01]","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"zonglun99"},"content":"-\u003e Adds a deadline task to the task list.","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"zonglun99"},"content":"event \u003ctype your event here\u003e \u003cSPACE\u003e \u003c/at\u003e \u003cSPACE\u003e \u003ctype a date with format yyyy-mm-dd\u003e [eg. lecture /at 2021-10-01]","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"zonglun99"},"content":"-\u003e Adds an event task to the task list.","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"zonglun99"},"content":"### Exiting the program","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"zonglun99"},"content":"Exit from the program. The format to exit: `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"zonglun99"},"content":"Sample output of exiting:","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"zonglun99"},"content":"Input command: bye","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"zonglun99"},"content":"GoodBye! Please finish up your task!","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"zonglun99"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"zonglun99"},"content":"````","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"zonglun99"},"content":"## Things To Note","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"zonglun99"},"content":"1. Input commands are not case-sensitive.","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"zonglun99"},"content":"2. All tasks and task status are directly stored in the directory data then dukeTask.txt file.","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"zonglun99"},"content":"3. When prompt for input of task number, it should be strictly an integer value.","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"-":18,"zonglun99":140}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"import duke.text.Text;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"public class Duke extends Text {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"     * A constructor to set up ui, taskList and storage.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"     * @param filePath pathway of storage file.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"            taskList \u003d new TaskList(storage.openFile());","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"            Ui.printWithLine(e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"     * Executes the duke program and setting up the parser.","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"     * Takes in user input until exit command is input from user.","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"    public void run() {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"        Parser parseCommands \u003d new Parser(taskList, ui, storage);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"        ui.printIntroduction();","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"        String userInput \u003d ui.getUserCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"        Command userCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"        while (true) {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"            try {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"                userCommand \u003d parseCommands.parseCommand(userInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"                userCommand.execute();","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"                storage.saveFile(taskList);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"                Ui.printWithLine(e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"zonglun99"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":52,"author":{"gitId":"zonglun99"},"content":"            userInput \u003d ui.getUserCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":54,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"zonglun99"},"content":"    public static void main (String[] args) {","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"zonglun99"},"content":"        new Duke(FILE_PATH).run();","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":1,"zonglun99":58}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"    private final Task newTask;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"     * A constructor to add new task into taskList.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     * @param taskList user\u0027s task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"     * @param newTask task to be added into task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"    public AddCommand(TaskList taskList, Ui ui, Task newTask) {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"        super(taskList, ui);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"    public void execute() {","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"        Ui.printWithLine(ADDED_MESSAGE + NEW_LINE + SPACE + SPACE + newTask + NEW_LINE","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"                + CURRENT_MESSAGE + taskList.size() + TASK_RECORDED_MESSAGE + NEW_LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"import duke.text.Text;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"public abstract class Command extends Text {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    protected Ui ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     * A constructor for Command.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"     * @param taskList user\u0027s task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"    public Command(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"    public Command() {","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when Command class is executed.","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"        throw new DukeException(UNSPECIFIED_METHOD);","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":35}},{"path":"src/main/java/duke/command/CompleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"public class CompleteCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"     * A constructor to mark task in taskList as done.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     * @param taskList user\u0027s task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"     * @param taskIndex index of the task to mark as done.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"    public CompleteCommand(TaskList taskList, Ui ui, int taskIndex) {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"        super(taskList, ui);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"     * Executes command.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when index is out of range of 0 and last index on taskList.","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"        taskList.markTaskDone(taskIndex);","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"        Ui.printWithLine(TASK_MARKED + SPACE + SPACE + taskList.getTask(taskIndex) + NEW_LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":33}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"    private final int taskIndex;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"     * A constructor to delete a task from taskList.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     * @param taskList user\u0027s task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"     * @param taskIndex index of the task to be removed.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"    public DeleteCommand(TaskList taskList, Ui ui, int taskIndex) {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"        super(taskList, ui);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"     * Executes command.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when index is out of range of 0 and last index on taskList.","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"        Ui.printWithLine(TASK_DELETED + SPACE + SPACE + taskList.getTask(taskIndex) + NEW_LINE +","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"                CURRENT_MESSAGE + (taskList.size() - 1) + TASK_LEFT_MESSAGE + NEW_LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"        taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":35}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    public void execute() {","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"        Ui.printBye();","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":15}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.command;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"    private final String inputKeyword;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"     * A constructor to find tasks associated to an input keyword.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     * @param taskList user\u0027s task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"     * @param inputKeyword keyword from user.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"    public FindCommand(TaskList taskList, Ui ui, String inputKeyword) {","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"        super(taskList, ui);","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"        this.inputKeyword \u003d inputKeyword;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"     * Executes command.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when index is out of range of 0 and last index on taskList.","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"        String tasksToPrint \u003d TASK_FOUND;","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"            if (taskList.getTask(i).toString().contains(inputKeyword)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"                tasksToPrint \u003d tasksToPrint.concat(taskNumber + \".\" + taskList.getTask(i).toString() + NEW_LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"        if (tasksToPrint.equals(TASK_FOUND)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"            tasksToPrint \u003d TASK_NOT_FOUND;","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"        Ui.printWithLine(tasksToPrint);","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"zonglun99":42}},{"path":"src/main/java/duke/command/FindTaskOfDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.command;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"public class FindTaskOfDateCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"    private final String inputDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"     * A constructor to find tasks associated with a specific date.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     * @param taskList user\u0027s task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"     * @param inputDate specific input date from user.","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"    public FindTaskOfDateCommand(TaskList taskList, Ui ui, String inputDate) {","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"        super(taskList, ui);","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"        this.inputDate \u003d inputDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"     * Executes command.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when index is out of range of 0 and last index on taskList.","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"        String tasksWithSameDate \u003d TASK_ON_DATE;","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"            if (taskList.getTask(i).getDate().equals(inputDate)){","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"                tasksWithSameDate \u003d tasksWithSameDate.concat(taskNumber + \".\"+ taskList.getTask(i).toString() + NEW_LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"                taskNumber++;","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"        if (tasksWithSameDate.equals(TASK_ON_DATE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"            tasksWithSameDate \u003d TASK_NOT_ON_DATE;","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"        Ui.printWithLine(tasksWithSameDate);","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"zonglun99":43}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    public void execute() {","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"        Ui.printHelp();","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":14}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"     * A constructor to list out all tasks in taskList.","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"     * @param taskList user\u0027s task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"     * @param ui the user interface.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"    public ListCommand(TaskList taskList, Ui ui) {","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"        super(taskList, ui);","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"     * Executes the command.","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"    public void execute() {","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"        Ui.printWithLine(LIST_MESSAGE + taskList.getList());","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":25}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"     * A general exception in Duke.","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"     * @param message text to describe what kind of exception is thrown.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"        super(message);","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"zonglun99":13}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.parser;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"import duke.storage.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"import duke.task.Events;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"import duke.text.Text;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"public class Parser extends Text {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"    protected Ui ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"     * A constructor to parse user inputs to suitable commands.","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     * @param taskList user\u0027s task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"     * @param ui  the user interface.","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"     * @param storage A text file storage to store task into hard disk.","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    public Parser(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"     * Parse user inputs to run its respective command methods.","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"     * @param userInput inputs from user.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"     * @return Command object.","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when an unknown command is input by user.","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"    public Command parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"        String[] splitInput \u003d userInput.trim().split(SPACE, 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"        switch(splitInput[0].toLowerCase()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"        case TODO:","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"        case EVENT:","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"            return parseAddCommand(userInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"        case DONE:","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"            return parseDoneCommand(userInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"zonglun99"},"content":"        case DELETE:","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"zonglun99"},"content":"            return parseDeleteCommand(userInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"zonglun99"},"content":"        case FIND:","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"zonglun99"},"content":"            return parseFindCommand(userInput);","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"zonglun99"},"content":"        case DATE:","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"zonglun99"},"content":"            return parseDateCommand(userInput);","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"zonglun99"},"content":"        case LIST:","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"zonglun99"},"content":"            return new ListCommand(taskList, ui);","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"zonglun99"},"content":"        case HELP:","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"zonglun99"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"zonglun99"},"content":"        case BYE:","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"zonglun99"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"zonglun99"},"content":"        default:","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"zonglun99"},"content":"     * Parse user input to suitable parameters for adding a new task.","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"zonglun99"},"content":"     * @param userInput inputs from user.","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"zonglun99"},"content":"     * @return AddCommand object.","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when task type is unknown or task description is empty.","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"zonglun99"},"content":"    private Command parseAddCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"zonglun99"},"content":"        String[] splitInput \u003d userInput.trim().split(SPACE, 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"zonglun99"},"content":"        String[] taskNameAndDueDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"zonglun99"},"content":"        LocalDate formattedDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"zonglun99"},"content":"        if (splitInput.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(EMPTY_TASK_DESCRIPTION);","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"zonglun99"},"content":"        switch (splitInput[0].toLowerCase()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"zonglun99"},"content":"        case TODO:","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"zonglun99"},"content":"            return new AddCommand(taskList, ui, new ToDos(splitInput[1]));","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"zonglun99"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"zonglun99"},"content":"            taskNameAndDueDate \u003d splitInput[1].split(DEADLINE_DATE_SEPARATOR, 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"zonglun99"},"content":"            formattedDate \u003d LocalDate.parse(taskNameAndDueDate[1]);","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"zonglun99"},"content":"            return new AddCommand(taskList, ui, new Deadlines(taskNameAndDueDate[0], formattedDate));","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"zonglun99"},"content":"        case EVENT:","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"zonglun99"},"content":"            taskNameAndDueDate \u003d splitInput[1].split(EVENT_DATE_SEPARATOR, 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"zonglun99"},"content":"            formattedDate \u003d LocalDate.parse(taskNameAndDueDate[1]);","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"zonglun99"},"content":"            return new AddCommand(taskList, ui, new Events(taskNameAndDueDate[0], formattedDate));","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"zonglun99"},"content":"        default:","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"zonglun99"},"content":"     * Parse user input to suitable parameters for marking a task as done in taskList.","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"zonglun99"},"content":"     * @param userInput inputs from user.","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"zonglun99"},"content":"     * @return CompleteCommand object.","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when no task number is specified.","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"zonglun99"},"content":"    private Command parseDoneCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"zonglun99"},"content":"        String[] taskToMark \u003d userInput.split(SPACE, 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"zonglun99"},"content":"        if (taskToMark.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(NO_TASK_NUMBER);","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"zonglun99"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"zonglun99"},"content":"            return new CompleteCommand(taskList, ui, Integer.parseInt(taskToMark[1]) - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"zonglun99"},"content":"     * Parse user input to suitable parameters to delete a task in taskList.","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"zonglun99"},"content":"     * @param userInput inputs from user.","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"zonglun99"},"content":"     * @return DeleteCommand object.","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when no task number is specified.","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"zonglun99"},"content":"    private Command parseDeleteCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"zonglun99"},"content":"        String[] taskToDelete \u003d userInput.split(SPACE, 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"zonglun99"},"content":"        if (taskToDelete.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(NO_TASK_NUMBER);","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"zonglun99"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"zonglun99"},"content":"            return new DeleteCommand(taskList, ui, Integer.parseInt(taskToDelete[1]) - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"zonglun99"},"content":"     * Parse user input to suitable parameters to find tasks associated with a keyword.","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"zonglun99"},"content":"     * @param userInput inputs from user.","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"zonglun99"},"content":"     * @return FindCommand object.","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when no keyword is specified.","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"zonglun99"},"content":"    private Command parseFindCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"zonglun99"},"content":"        String[] taskKeyword \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"zonglun99"},"content":"        if (taskKeyword.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(NO_TASK_NUMBER);","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"zonglun99"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"zonglun99"},"content":"            return new FindCommand(taskList, ui, taskKeyword[1]);","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"zonglun99"},"content":"     * Parse user input to suitable parameters to find tasks associated with a date with format yyyy-mm-dd.","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"zonglun99"},"content":"     * @param userInput inputs from user.","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"zonglun99"},"content":"     * @return FindTaskOfDateCommand object.","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when no date is specified.","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"zonglun99"},"content":"    private Command parseDateCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"zonglun99"},"content":"        String[] taskToPrint \u003d userInput.trim().split(SPACE, 2);","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"zonglun99"},"content":"        if (taskToPrint.length \u003c\u003d 1) {","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(NO_DATE);","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"zonglun99"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"zonglun99"},"content":"            LocalDate formattedDate \u003d LocalDate.parse(taskToPrint[1]);","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"zonglun99"},"content":"            String dateToString \u003d formattedDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"zonglun99"},"content":"            return new FindTaskOfDateCommand(taskList, ui, dateToString);","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":163}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.storage;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.task.Events;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"import duke.text.Text;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"import java.io.File;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"public class Storage extends Text {","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"    private final String filePath;","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     * A constructor to save data into text file.","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"     * @param filePath pathway of file storage","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"     * Creates a file and directory for storage of task list if there is no existing file.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"     * @throws IOException exception thrown when unexpected error occurs when creating file/","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"    public void createFile() throws IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"        Files.createDirectories(Path.of(DIRECTORY)); //create directory data","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"        Files.createFile(Path.of(filePath)); //create text file to store data","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"     * Save all contents from task list by rewriting previous contents.","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"     * @param taskList user\u0027s task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"    public void saveFile(TaskList taskList) {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"zonglun99"},"content":"            String textToAdd \u003d \"\";","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"zonglun99"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"zonglun99"},"content":"                textToAdd \u003d textToAdd.concat(taskList.getTask(i).storageText() + \"\\n\"); //combine all task in task list","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"zonglun99"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":57,"author":{"gitId":"zonglun99"},"content":"            fw.write(textToAdd); //write all the task to file","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"zonglun99"},"content":"            fw.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"zonglun99"},"content":"        catch (IOException | DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"zonglun99"},"content":"            Ui.printWithLine(SAVING_ERROR);","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"zonglun99"},"content":"     * Open and read existing storage file with previously saved task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"zonglun99"},"content":"     * @return TaskList object.","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when error opening file.","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"zonglun99"},"content":"    public TaskList openFile() throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"zonglun99"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"zonglun99"},"content":"        LocalDate formattedDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"zonglun99"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"zonglun99"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"zonglun99"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"zonglun99"},"content":"            while(s.hasNext()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":78,"author":{"gitId":"zonglun99"},"content":"                String task \u003d s.nextLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"zonglun99"},"content":"                String[] splitTaskString \u003d task.split(\"\\\\|\");","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"zonglun99"},"content":"                switch (splitTaskString[0]) {","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"zonglun99"},"content":"                case TODO_T:","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"zonglun99"},"content":"                    taskList.addTask(new ToDos(splitTaskString[2]));","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"zonglun99"},"content":"                    break;","lastModifiedDate":"2021-09-12"},{"lineNumber":84,"author":{"gitId":"zonglun99"},"content":"                case DEADLINE_D:","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"zonglun99"},"content":"                    formattedDate \u003d LocalDate.parse(splitTaskString[3], DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"zonglun99"},"content":"                    taskList.addTask(new Deadlines(splitTaskString[2], formattedDate));","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"zonglun99"},"content":"                    break;","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"zonglun99"},"content":"                case EVENT_E:","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"zonglun99"},"content":"                    formattedDate \u003d LocalDate.parse(splitTaskString[3], DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"zonglun99"},"content":"                    taskList.addTask(new Events(splitTaskString[2], formattedDate));","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"zonglun99"},"content":"                    break;","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"zonglun99"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"zonglun99"},"content":"                if (splitTaskString[1].equals(\"1\")) {","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"zonglun99"},"content":"                    taskList.getTask(taskList.size() - 1).markDone();","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"zonglun99"},"content":"                }","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"zonglun99"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"zonglun99"},"content":"        catch (FileNotFoundException e) { //if no existing file, then create new file","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"zonglun99"},"content":"            try {","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"zonglun99"},"content":"                createFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"zonglun99"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"zonglun99"},"content":"            catch (IOException ioe) {","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"zonglun99"},"content":"                throw new DukeException(FILE_ERROR);","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"zonglun99"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":106,"author":{"gitId":"zonglun99"},"content":"        return taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"zonglun99":108}},{"path":"src/main/java/duke/storage/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.storage;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import duke.text.Text;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"public class TaskList extends Text {","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     * A constructor to create a new task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"        taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"     * A constructor to open and read from existing task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"     * @param openFile task list previously stored in text file.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"    public TaskList(TaskList openFile) {","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"        taskList \u003d (ArrayList\u003cTask\u003e) openFile.taskList.clone();","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"     * Returns the size of the task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"     * @return int value of size of task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"    public int size() {","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"     * A getter to obtain a task from task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"     * @param index the index of a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"     * @return Task object.","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when index given is out of range of 0 and last index of task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"    public Task getTask(int index) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"        if (index \u003c 0 || index \u003e size() - 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(INPUT_VALID_TASK);","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"            return taskList.get(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"zonglun99"},"content":"     * Adds a new task into the task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"zonglun99"},"content":"     * @param task task to be added.","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"zonglun99"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"zonglun99"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"zonglun99"},"content":"     * Deletes a specific task from task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"zonglun99"},"content":"     * @param index the index of a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":65,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when index given is out of range of 0 and last index of task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"zonglun99"},"content":"    public void deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"zonglun99"},"content":"        if (index \u003c 0 || index \u003e size() - 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(INPUT_VALID_TASK);","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"zonglun99"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"zonglun99"},"content":"            taskList.remove(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"zonglun99"},"content":"     * Marks a specific task from task list is done.","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"zonglun99"},"content":"     * @param index the index of a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"zonglun99"},"content":"     * @throws DukeException exception thrown when index given is out of range of 0 and last index of task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"zonglun99"},"content":"    public void markTaskDone(int index) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"zonglun99"},"content":"        if (index \u003c 0 || index \u003e size() - 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"zonglun99"},"content":"            throw new DukeException(INPUT_VALID_TASK);","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"zonglun99"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"zonglun99"},"content":"            taskList.get(index).markDone();","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"zonglun99"},"content":"     * Returns the list of all tasks currently in the task list.","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"zonglun99"},"content":"     * @return String of all tasks.","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"zonglun99"},"content":"    public String getList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"zonglun99"},"content":"        int taskNumber \u003d 1;","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"zonglun99"},"content":"        String listOfTask \u003d \"\";","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"zonglun99"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"zonglun99"},"content":"            listOfTask \u003d listOfTask.concat(taskNumber + \".\" + task.toString() + NEW_LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"zonglun99"},"content":"            taskNumber++;","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"zonglun99"},"content":"        return listOfTask;","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":103}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"    private final LocalDate deadlineDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"     * A constructor to create a task of type deadline","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"     * @param taskName name of the task.","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"     * @param deadlineDate deadline date of the task.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"    public Deadlines(String taskName, LocalDate deadlineDate) {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"     * Formats and return the formatted date of task as string.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"     * @return String of formatted date.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"        return deadlineDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"     * Returns a String format of task to be printed.","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"     * @return String of type, isDone, task name and date.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDate() + \")\";","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"     * Returns a String format of task to be stored in storage text file.","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"     * @return String of type, isDone, task name and date.","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"    public String storageText () {","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"        return DEADLINE_D + super.storageText() + \"|\" + getDate();","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"zonglun99":50}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"    private final LocalDate eventDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"     * A constructor to create a task of type event.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     * @param eventDate date of occurrence.","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"    public Events(String taskName, LocalDate eventDate) {","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"     * Formats and return the formatted date of task as string.","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"     * @return String of formatted date.","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"        return eventDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"     * Returns a String format of task to be printed.","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"     * @return String of type, isDone, task name and date.","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + getDate() + \")\";","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"     * Returns a String format of task to be stored in storage text file.","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"     * @return String of type, isDone, task name and date.","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"    public String storageText () {","lastModifiedDate":"2021-09-12"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"        return EVENT_E + super.storageText() + \"|\" + getDate();","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"zonglun99":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.text.Text;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"public abstract class Task extends Text {","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"     * A constructor of a task.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"     * Check if a task is completed.","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     * @return boolean value of task completion status.","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"        return isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"    public void markDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"     * Returns a String format of task to be printed.","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"     * @return String of isDone and task name.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"    public String getDate() {","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"        return \"\";","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"        if (isDone()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"            return \"[*] \" + taskName;","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"        else {","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"            return \"[ ] \" + taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"zonglun99"},"content":"     * Returns a String format of task to be stored in storage text file.","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"zonglun99"},"content":"     * @return String of isDone and task name.","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"zonglun99"},"content":"    public String storageText() {","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"zonglun99"},"content":"        if (isDone()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"zonglun99"},"content":"            return \"|1|\" + taskName;","lastModifiedDate":"2021-09-12"},{"lineNumber":62,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"zonglun99"},"content":"        else {","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"zonglun99"},"content":"            return \"|0|\" + taskName;","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"zonglun99"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":66,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"zonglun99":67}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"     * A constructor to create task of type todo.","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"     * @param taskName name of task.","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    public ToDos(String taskName) {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"     * Returns a String format of task to be printed.","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"     * @return String of type, isDone and task name.","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"     * Returns a String format of task to be stored in storage text file.","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"     * @return String of type, isDone and task name.","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    @Override","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"    public String storageText () {","lastModifiedDate":"2021-09-12"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"        return TODO_T + super.storageText();","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"zonglun99":33}},{"path":"src/main/java/duke/text/Text.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.text;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"public class Text { // Class file to store all constant String used.","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"    public static final String LINE \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"    public static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"GoodBye! Please finish up your task!\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"    public static final String HELLO_MESSAGE \u003d \"Hey there! I am Chai!\\n\" + \"What are you doing today?\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"    public static final String UNKNOWN_COMMAND \u003d \"Error404!!! I don\u0027t understand what that is, please try again!\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    public static final String UNSPECIFIED_METHOD \u003d \"Method is unspecified.\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"    public static final String EMPTY_TASK_DESCRIPTION \u003d \"Error404!!! Task description should not be empty!\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"    public static final String LOGO \u003d \" ______    __                     __\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"            \"/  ____|  |  |                   |__|\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"            \"|  |      |  |_____    _______    __\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"            \"|  |      |   __   \\\\  /  __   |  |  |\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"            \"|  |____  |  |  |  |  | |__|  |  |  |\\n\" +","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"            \"\\\\______|  |__|  |__|  \\\\____/\\\\_|  |__|\\n\";","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"    public static final String LIST_MESSAGE \u003d \"Tasks list so far:\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"    public static final String NO_TASK_NUMBER \u003d \"Please input a task number!\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"    public static final String NO_DATE \u003d \"Please input a date in the format yyyy-mm-dd\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"    public static final String INPUT_VALID_TASK \u003d \"Task index not found! Please input a valid task number!\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"    public static final String TASK_MARKED \u003d \"Well done! Task marked:\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"    public static final String TASK_DELETED \u003d \"Roger! Task removed from list:\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"    public static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-09-05"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"    public static final String TODO_T \u003d \"T\";","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"    public static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"    public static final String DEADLINE_D \u003d \"D\";","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"    public static final String DEADLINE_DATE_SEPARATOR \u003d \" /by \";","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"    public static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"    public static final String EVENT_E \u003d \"E\";","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"    public static final String EVENT_DATE_SEPARATOR \u003d \" /at \";","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"    public static final String FIND \u003d \"find\";","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"    public static final String LIST \u003d \"list\";","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"    public static final String HELP \u003d \"help\";","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"    public static final String DONE \u003d \"done\";","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"    public static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"    public static final String DATE \u003d \"date\";","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"    public static final String BYE \u003d \"bye\";","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"    public static final String SPACE \u003d \" \";","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"    public static final String TASK_FOUND \u003d \"Listing task found:\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"    public static final String TASK_NOT_FOUND \u003d \"No such task in task list. Try another keyword!\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"    public static final String TASK_ON_DATE \u003d \"Listing task associated to this date:\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"    public static final String TASK_NOT_ON_DATE \u003d \"No task associated to this date. Try another date!\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"    public static final String ADDED_MESSAGE \u003d \"Alright! Added to the list:\";","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"    public static final String CURRENT_MESSAGE \u003d \"You currently have \";","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"    public static final String TASK_RECORDED_MESSAGE \u003d \" task recorded in your list.\";","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"    public static final String TASK_LEFT_MESSAGE \u003d \" left in the list.\";","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"    public static final String HELP_LIST \u003d \"List of commands available:\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"            + \"todo \u003ctype your task here\u003e [eg. todo swimming]\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"            + \"-\u003e Adds a todo task to the task list.\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":51,"author":{"gitId":"zonglun99"},"content":"            + \"deadline \u003ctype your deadline here\u003e \u003cSPACE\u003e \u003c/by\u003e \u003cSPACE\u003e \u003ctype a date with format yyyy-mm-dd\u003e [eg. deadline assignment /by 2021-10-01]\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"zonglun99"},"content":"            + \"-\u003e Adds a deadline task to the task list.\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":53,"author":{"gitId":"zonglun99"},"content":"            + \"event \u003ctype your event here\u003e \u003cSPACE\u003e \u003c/at\u003e \u003cSPACE\u003e \u003ctype a date with format yyyy-mm-dd\u003e [eg. lecture /at 2021-10-01]\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"zonglun99"},"content":"            + \"-\u003e Adds an event task to the task list.\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":55,"author":{"gitId":"zonglun99"},"content":"            + \"done \u003ctype task number\u003e [eg. done 1]\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"zonglun99"},"content":"            + \"-\u003e Marks task on the list as completed.\\n\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"zonglun99"},"content":"            + \"delete \u003ctype task number\u003e [eg. delete 2]\\n\"","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"zonglun99"},"content":"            + \"-\u003e Deletes the task found on the task list.\\n\\n\"","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"zonglun99"},"content":"            + \"find \u003ctype keyword\u003e [eg. find assignment]\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"zonglun99"},"content":"            + \"-\u003e Find the tasks in task list associated with the given keyword.\\n\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"zonglun99"},"content":"            + \"date \u003ctype a date with format yyyy-mm-dd\u003e [eg. 2021-10-01]\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":62,"author":{"gitId":"zonglun99"},"content":"            + \"-\u003e Find the tasks associated with the given date from user.\\n\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"zonglun99"},"content":"            + \"list [eg. list]\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":64,"author":{"gitId":"zonglun99"},"content":"            + \"-\u003e Lists out all tasks on the list.\\n\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"zonglun99"},"content":"            + \"bye [eg. bye]\\n\"","lastModifiedDate":"2021-09-05"},{"lineNumber":66,"author":{"gitId":"zonglun99"},"content":"            + \"-\u003e Exits program\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"zonglun99"},"content":"    public static final String DATE_FORMAT \u003d \"dd MMM yyyy\";","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"zonglun99"},"content":"    public static final String DIRECTORY \u003d \"data\";","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"zonglun99"},"content":"    public static final String FILE_PATH \u003d \"data/dukeTask.txt\";","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"zonglun99"},"content":"    public static final String SAVING_ERROR \u003d \"Saving error\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"zonglun99"},"content":"    public static final String FILE_ERROR \u003d \"Error loading file!\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"zonglun99"},"content":"    public static final String GET_COMMAND \u003d \"Input command: \";","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"zonglun99":73}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"package duke.ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"import duke.text.Text;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"public class Ui extends Text {","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"    private final Scanner in;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"     * A constructor to initialise ui.","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"    public Ui() {","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"        this.in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"     * A getter to read a user input.","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"     * @return String of user input.","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"    public String getUserCommand() {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"        System.out.print(GET_COMMAND);","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"     * A formatter to set the format for printing every statement.","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"     * A line divider before and after a message to print.","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"     * @param message a String to be printed.","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"    public static void printWithLine(String message) {","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"        System.out.print(LINE + message + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"     * Prints the introductory message when duke runs.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"zonglun99"},"content":"    public void printIntroduction() {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"zonglun99"},"content":"        printWithLine(LOGO);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"zonglun99"},"content":"        printWithLine(HELLO_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"zonglun99"},"content":"     * Prints the help list of commands when prompted.","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"zonglun99"},"content":"    public static void printHelp() {","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"zonglun99"},"content":"        printWithLine(HELP_LIST);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"zonglun99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"zonglun99"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"zonglun99"},"content":"     * Prints goodbye message when prompted before exiting the program.","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"zonglun99"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"zonglun99"},"content":"    public static void printBye() {","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"zonglun99"},"content":"        printWithLine(GOODBYE_MESSAGE);","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"zonglun99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"zonglun99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"zonglun99":58}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zonglun99"},"content":"help","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"zonglun99"},"content":"todo exercise","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"zonglun99"},"content":"deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"zonglun99"},"content":"todo shower","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"zonglun99"},"content":"todo running","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"zonglun99"},"content":"delete 2","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"zonglun99"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"zonglun99"},"content":"I want to sleep","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"zonglun99"},"content":"deadline submit assignment /by 2021-10-01","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"event attend lecture /at 2021-10-01","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"zonglun99"},"content":"date 2021-10-01","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"zonglun99"},"content":"find assignment","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"zonglun99"},"content":"deadline project /by 2021-09-29","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"zonglun99"},"content":"date","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"zonglun99"},"content":"delete 5","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"zonglun99"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"zonglun99"},"content":"todo eat dinner","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"todo","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"zonglun99"},"content":"done 1","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"zonglun99"},"content":"done 2","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"zonglun99"},"content":"find","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"zonglun99"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"zonglun99"},"content":"done 7","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"zonglun99"},"content":"done 5","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"zonglun99"},"content":"delete 5","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"zonglun99"},"content":"delete 4","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"zonglun99"},"content":"delete 3","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"zonglun99"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"zonglun99"},"content":"todo running","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"zonglun99"},"content":"delete 1","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"zonglun99"},"content":"event","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"zonglun99"},"content":"event meeting /at 2021-09-25","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"zonglun99"},"content":"delete 4","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"zonglun99"},"content":"delete 3","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"zonglun99"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"zonglun99"},"content":"delete 2","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"zonglun99"},"content":"delete 1","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"zonglun99"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"zonglun99":38}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"zonglun99"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\text\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\parser\\*.java ..\\src\\main\\java\\duke\\ui\\*.java ..\\src\\main\\java\\duke\\storage\\*.java","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"zonglun99"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"zonglun99":2}}]
