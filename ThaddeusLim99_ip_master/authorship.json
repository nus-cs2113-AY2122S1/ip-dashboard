[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.logic.Logic;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" * Duke class acts as entry point to programme.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"    public static final String FILEPATH \u003d \"duke.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"        //run logic of programme","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"        Logic logic \u003d new Logic(FILEPATH);","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"        logic.run();","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ThaddeusLim99":12,"-":4}},{"path":"src/main/java/duke/UI/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":" * Contains common messages to be printed out.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" * @return output mesage to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"public class Message {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns an ASCII art of PEPE the frog.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return PEPE.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String printDuke() {","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"        String poggers \u003d \"⠄⠰⠛⠋⢉⣡⣤⣄⡉⠓⢦⣀⠙⠉⠡⠔⠒⠛⠛⠛⠶⢶⣄⠘⢿⣷⣤⡈⠻⣧\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⢀⡔⠄⠄⠄⠙⣿⣿⣿⣷⣤⠉⠁⡀⠐⠒⢿⣿⣿⣿⣶⣄⡈⠳⢄⣹⣿⣿⣾⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⣼⠁⢠⡄⠄⠄⣿⣿⣿⣿⡟⠄⡐⠁⡀⠄⠈⣿⣿⣿⣿⣿⣷⣤⡈⠻⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⢻⡀⠈⠄⠄⣀⣿⣿⣿⡿⠃⠄⡇⠈⠛⠄⠄⣿⣿⣿⣿⣿⣿⠟⠋⣠⣶⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⢉⡓⠚⠛⠛⠋⣉⣩⣤⣤⣀⠑⠤⣤⣤⣾⣿⣿⣿⡿⠛⢁⣤⣾⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠈⠙⠛⠋⣭⣭⣶⣾⣿⣿⣿⣷⣦⢠⡍⠉⠉⢠⣤⣴⠚⢩⣴⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⢴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣭⣭⣭⣥⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⣴⣶⡶⠶⠶⠶⠶⠶⠶⠶⠶⣮⣭⣝⣛⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠙⣿⡄⠄⠄⢀⡤⠬⢭⣝⣒⢂⠭⣉⠻⠿⣷⣶⣦⣭⡛⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⠸⣿⡇⠄⠸⣎⣁⣾⠿⠉⢀⠇⣸⣿⣿⢆⡉⠹⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⠄⣿⡇⠄⢀⡶⠶⠶⠾⠿⠮⠭⠭⢭⣥⣿⣿⣷⢸⣿⢸⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⠄⣿⡇⠄⠈⣷⠄⠄⠄⣭⣙⣹⢙⣰⡎⣿⢏⣡⣾⢏⣾⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⢰⣿⡇⠄⠄⢿⠄⠄⠈⣿⠉⠉⣻⣿⡷⣰⣿⡿⣡⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⢸⣿⡇⠄⠄⠘⠿⠤⠤⠿⠿⠿⢤⣤⣤⡿⣃⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⠘⢿⣷⣤⣄⣀⣀⣀⣀⣀⣠⣴⣾⡿⢋⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"        return poggers;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns a line.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return a Line.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String printLine() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"        String line \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        return line;","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns the full welcome message.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return welcome message.","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String printWelcome() {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"        String welcomeMessage \u003d \"Poggers! I\u0027m Pepe\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"        return welcomeMessage;","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns exit message.","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return exit message.","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String printExit() {","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"        String exit \u003d \"Bye my little pogchamp! Hope to see you again soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"        return exit;","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":70}},{"path":"src/main/java/duke/UI/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" * UserInterface interacts with the user for input and output.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"public class UserInterface {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns input given from the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return input from the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"        return input;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     * Prints out message from programme to user.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return output to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    public void printMessage(String commandMessage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"        System.out.println(Message.printLine());","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"        System.out.println(commandMessage);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"        System.out.println(Message.printLine());","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" * Command takes in the parsed input from the user and splits it into three categories.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":" * They are the command type, description of the task and the date. Depending on the","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":" * type of command, description and date may be empty. Command then returns the","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":" * appropriate mesage to return to Logic class to output to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"commandInput\"  type of command.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"descriptionInput\" Y description of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"dateInput\" event date/deadline.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":" * @return output message to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    protected Boolean isBye \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String command;","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String date;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String returnString;","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"    public abstract String execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns the boolean isBye as a way to tell Logic class when is it appropriate to exit the while loop.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return boolean isBye.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"    */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    public boolean getExitStatus() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"        return isBye;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":35}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DeadLineCommandError;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.autoSaveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    private String description;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    private String date;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeadlineCommand(String descriptionArg, String dateArg) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"        description \u003d descriptionArg;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"        date \u003d dateArg;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.addTask(new Deadline(description, date));","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"            listIndex++;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Got it. I\u0027ve added this task:\\n\" + tasks.getTask(listIndex) + \"\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"                    + \"Now you have \" + String.valueOf(listIndex) + \" tasks in the list.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"            autoSaveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DeadLineCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":33}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DeleteListIndexError;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.saveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeleteCommand extends  Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"    private int index;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeleteCommand(int target) {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"        index \u003d target;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"            //valid index","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Noted. I\u0027ve removed this task:\\n\" + tasks.getTask(index) + \"\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"            listIndex--;","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString +\u003d \"Now you have \" + String.valueOf(listIndex) + \" tasks in the list.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"            saveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DeleteListIndexError();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":32}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DoneListIndexError;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.saveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    private int index;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    public DoneCommand(int target) {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"        index \u003d target;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"            //valid index","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.updateTask(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"                    + \"[X] \" + tasks.getTask(index).getDescription();","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"            saveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DoneListIndexError();","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":29}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.EventCommandError;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.autoSaveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    private String description;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    private String date;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    public EventCommand(String descriptionArg, String dateArg) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"        description \u003d descriptionArg;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"        date \u003d dateArg;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.addTask(new Event(description, date));","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"            listIndex++;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Got it. I\u0027ve added this task:\\n\" + tasks.getTask(listIndex) + \"\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"                    + \"Now you have \" + String.valueOf(listIndex) + \" tasks in the list.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"            autoSaveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new EventCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":33}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.UI.Message;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.saveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"        isBye \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"        returnString \u003d Message.printExit();","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"        saveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"        return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":17}},{"path":"src/main/java/duke/command/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"        returnString \u003d \"OH NO! I do not know what command is that!\";","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"        return  returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":12}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"        if (listIndex \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"No tasks added yet! :)\";","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"            //when there are tasks in list","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d tasks.listTaskList(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"        return  returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":19}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.ToDoCommandError;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.autoSaveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"public class ToDoCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    private String description;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    public ToDoCommand(String arg) {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"        description \u003d arg;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.addTask(new Todo(description));","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"            listIndex++;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Got it. I\u0027ve added this task:\\n\" + tasks.getTask(listIndex) + \"\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"                    + \"Now you have \" + String.valueOf(listIndex) + \" tasks in the list.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"            autoSaveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new ToDoCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":31}},{"path":"src/main/java/duke/database/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.database;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.logic.Logic;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":" * Database class gets the filepath from Logic class and handles the saving of data and uploading","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":" * of data to Logic class","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"filepath\" filepath of storage file, duke.txt.","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"public class Database{","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    private static String filePath;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    public Database(String filePath) {","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     * Loads task from duke.txt data file if it exists. If the file does","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     * not exist, the file is created.","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return \"tasksCopy\" previous state of tasks if the data file exists,","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"     * or an empty file if the data file does not exist.","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"    public static TaskList loadTasks() {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"        TaskList tasksCopy \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"        File storedFile;","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"            storedFile \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"            //if savedFile is not present and a new file is created","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"            if (storedFile.createNewFile()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"                return tasksCopy;","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"                Scanner readFile \u003d new Scanner(storedFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"                while (readFile.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"                    Logic.listIndex++;","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"                    String fileLine \u003d readFile.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"                    Scanner lineData \u003d new Scanner(fileLine);","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"                    lineData.useDelimiter(\"\\\\|\");","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"                    String commandType \u003d lineData.next().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"                    String isDone \u003d lineData.next().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"                    String taskDescription \u003d lineData.next().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"                    switch (commandType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"                    case \"T\":","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"                        Todo savedTodo \u003d new Todo(taskDescription);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"                        if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"                            savedTodo.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"                        }","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"                        tasksCopy.addTask(savedTodo);","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"                        break;","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"                    case \"D\":","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"                        String deadLineDate \u003d lineData.next().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"                        Deadline savedDeadLine \u003d new Deadline(taskDescription, deadLineDate);","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"                        if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"                            savedDeadLine.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"                        }","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"                        tasksCopy.addTask(savedDeadLine);","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"                        break;","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ThaddeusLim99"},"content":"                    case \"E\":","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ThaddeusLim99"},"content":"                        String eventDate \u003d lineData.next().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"ThaddeusLim99"},"content":"                        Event savedEvent \u003d new Event(taskDescription, eventDate);","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"ThaddeusLim99"},"content":"                        if (isDone.equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"ThaddeusLim99"},"content":"                            savedEvent.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"ThaddeusLim99"},"content":"                        }","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"ThaddeusLim99"},"content":"                        tasksCopy.addTask(savedEvent);","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"ThaddeusLim99"},"content":"                        break;","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"ThaddeusLim99"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"ThaddeusLim99"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Oops! An error cropped up while loading file!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasksCopy;","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"ThaddeusLim99"},"content":"     * Saves the entire taskList into data storage file.","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param \"taskList\" the current list of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void saveFile(TaskList taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"ThaddeusLim99"},"content":"            File database;","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"ThaddeusLim99"},"content":"            database \u003d new File(\"duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"ThaddeusLim99"},"content":"            database.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Oops! An error cropped up while saving\");","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"ThaddeusLim99"},"content":"        String savedData \u003d \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"ThaddeusLim99"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"ThaddeusLim99"},"content":"            Task currTask \u003d taskList.getTask(i);","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"ThaddeusLim99"},"content":"            savedData +\u003d currTask.toStringStore();","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"ThaddeusLim99"},"content":"            savedData +\u003d \"\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"ThaddeusLim99"},"content":"            FileWriter editor \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"ThaddeusLim99"},"content":"            editor.write(savedData);","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"ThaddeusLim99"},"content":"            editor.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Oops! An error occurred during saving.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"ThaddeusLim99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"ThaddeusLim99"},"content":"     * Updates the data storage file by appending the most","lastModifiedDate":"2021-09-15"},{"lineNumber":119,"author":{"gitId":"ThaddeusLim99"},"content":"     * recently added file to the end of the file.","lastModifiedDate":"2021-09-15"},{"lineNumber":120,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":121,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param \"taskList\" the current list of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":122,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void autoSaveFile(TaskList taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"ThaddeusLim99"},"content":"        Task currTask \u003d taskList.getTask(taskList.getSize());","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"ThaddeusLim99"},"content":"        String data \u003d currTask.toStringStore() + \"\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":127,"author":{"gitId":"ThaddeusLim99"},"content":"            FileWriter editor \u003d new FileWriter(\"duke.txt\", true);","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"ThaddeusLim99"},"content":"            editor.write(data);","lastModifiedDate":"2021-09-15"},{"lineNumber":129,"author":{"gitId":"ThaddeusLim99"},"content":"            editor.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Oops! An error occurred during autosave.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"ThaddeusLim99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ThaddeusLim99":135}},{"path":"src/main/java/duke/exception/DateError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DateError extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DateError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! There was an error in getting the date!\";","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DeadLineCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeadLineCommandError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeadLineCommandError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! The \\\"deadline\\\" command should be in this format: \\ndeadline \u003ctask name\u003e /by \u003cdate\u003e\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DeleteCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeleteCommandError extends DukeException{","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeleteCommandError() {","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! \\\"delete\\\" command is to be followed by only one integer!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DeleteListIndexError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeleteListIndexError extends DukeException{","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeleteListIndexError() {","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! Invalid list index! Has the task at that index been added yet?\";","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DoneCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DoneCommandError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DoneCommandError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! \\\"done\\\" command is to be followed by only one integer!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DoneListIndexError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DoneListIndexError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DoneListIndexError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! Invalid list index! Has the task at that index been added yet?\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public abstract class DukeException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String errorMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"        return this.errorMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":9}},{"path":"src/main/java/duke/exception/EventCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class EventCommandError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public EventCommandError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! The \\\"event\\\" command should be in this format: \\nevent \u003ctask name\u003e /by \u003cdate\u003e\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/InvalidCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class InvalidCommandError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public InvalidCommandError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! I do not know what command is that!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/ToDoCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class ToDoCommandError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public ToDoCommandError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! The \\\"todo\\\" command should be in this format: \\ntodo \u003ctask name\u003e\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/logic/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.logic;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.UI.Message;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.UI.UserInterface;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.database.Database;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":" * Logic class runs the main logic of the programme.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"public class Logic {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    public static int listIndex \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    private static UserInterface userInterface;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    private Database database;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    protected static String fileAddress;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"    //protected static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    public Logic(String filePath) {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"        fileAddress \u003d filePath;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"        userInterface \u003d new UserInterface();","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"        database \u003d new Database(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"        taskList \u003d database.loadTasks();","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     * Runs the main logic of the program.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     * Welcome message is printed to user and programme enters a while loop to repeatedly get input","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     * from the user and then correspondingly respond to them. Input is put through the Parser class","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"     * which then put through the Command class. The output of the Command class is given to the","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"     * UserInterface Class to print out the message to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"    public void run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"        userInterface.printMessage(Message.printWelcome());","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"                //get input","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"                String inputCommand \u003d userInterface.getInput();","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"                //parse input","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"                Command commandHandler \u003d new Parser().parseCommand(inputCommand);","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"                //get appropriate message","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"                String commandMessage \u003d commandHandler.execute(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"                //print out message","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"                userInterface.printMessage(commandMessage);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"                //see whether to exit the program","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"                isExit \u003d commandHandler.getExitStatus();","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"                userInterface.printMessage(e.getErrorMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":57}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.*;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.*;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" * Parser class gets the raw input from Logic class and then returns the specified arguments of interest","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":" * to the Logic class. These are the type of command, the description of the dask and the date.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"input\" raw input from user.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":" * @return appropriate information depending on the method called.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"public class Parser {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    public Command parseCommand(String userInput) throws DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"        String[] words \u003d userInput.trim().split(\" \", 2);  // split the input into command and arguments","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"        if (words.length \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"        final String commandWord \u003d words[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"        final String arguments \u003d userInput.replaceFirst(commandWord, \"\").trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"            return prepareToDoCommand(arguments);","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"            return prepareEventOrDeadlineCommand(commandWord, arguments);","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"done\":","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"            return prepareDeleteOrDoneCommand(commandWord, arguments);","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"list\":","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"    private Command prepareToDoCommand(String args) throws  DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new ToDoCommandError();","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"            return new ToDoCommand(args.trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new ToDoCommandError();","lastModifiedDate":"2021-09-07"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"    private Command prepareEventOrDeadlineCommand(String command, String args) throws DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"        String[] parts \u003d args.split(\"/\", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"         //Validate arg string format","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"        if (parts.length !\u003d 2 || parts[0].isEmpty() || parts[1].isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"            if(command.equals(\"event\")){","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"                throw  new EventCommandError();","lastModifiedDate":"2021-09-07"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"            throw  new DeadLineCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"        if (command.equals(\"event\") \u0026\u0026 isWrongEscapeWord(parts[1],\"at\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new EventCommandError();","lastModifiedDate":"2021-09-07"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"        if (command.equals(\"deadline\") \u0026\u0026 isWrongEscapeWord(parts[1],\"by\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DeadLineCommandError();","lastModifiedDate":"2021-09-07"},{"lineNumber":72,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"ThaddeusLim99"},"content":"            String date \u003d getDate(parts[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"ThaddeusLim99"},"content":"            if(command.equals(\"event\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"ThaddeusLim99"},"content":"                return new EventCommand(","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"ThaddeusLim99"},"content":"                        parts[0].trim(),","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"ThaddeusLim99"},"content":"                        date.trim()","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"ThaddeusLim99"},"content":"                );","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"ThaddeusLim99"},"content":"            return new DeadlineCommand(","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"ThaddeusLim99"},"content":"                    parts[0].trim(),","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"ThaddeusLim99"},"content":"                    parts[1].trim()","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"ThaddeusLim99"},"content":"            );","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"ThaddeusLim99"},"content":"            if (command.equals(\"event\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"ThaddeusLim99"},"content":"                throw  new EventCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"ThaddeusLim99"},"content":"            throw  new DeadLineCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"ThaddeusLim99"},"content":"    private Command prepareDeleteOrDoneCommand(String command, String args) throws  DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"ThaddeusLim99"},"content":"            final int targetIndex \u003d Integer.parseInt(args.split(\" \")[0]);","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"ThaddeusLim99"},"content":"            if (command.equals(\"delete\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"ThaddeusLim99"},"content":"                return new DeleteCommand(targetIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"ThaddeusLim99"},"content":"            return new DoneCommand(targetIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"ThaddeusLim99"},"content":"            if (command.equals(\"delete\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"ThaddeusLim99"},"content":"                throw  new DeleteCommandError();","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"ThaddeusLim99"},"content":"            throw  new DoneCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":107,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getDate(String input) throws DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"ThaddeusLim99"},"content":"        String date \u003d input;","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"ThaddeusLim99"},"content":"        int firstWhitespace \u003d getFirstWhiteSpace(date);","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"ThaddeusLim99"},"content":"        if (firstWhitespace \u003d\u003d -1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DateError();","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"ThaddeusLim99"},"content":"        date \u003d input.substring(firstWhitespace);","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"ThaddeusLim99"},"content":"        return date;","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"ThaddeusLim99"},"content":"    public int getFirstWhiteSpace(String input) {","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"ThaddeusLim99"},"content":"        for (int index \u003d 0; index \u003c input.length(); index++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"ThaddeusLim99"},"content":"            //sees if character at that index is a whitespace","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"ThaddeusLim99"},"content":"            if (Character.isWhitespace(input.charAt(index))) {","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"ThaddeusLim99"},"content":"                return index;","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"ThaddeusLim99"},"content":"        return -1;","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"ThaddeusLim99"},"content":"    public boolean isWrongEscapeWord(String inputString, String escapeWord) {","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"ThaddeusLim99"},"content":"        if (inputString.substring(0,2).equals(escapeWord)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"ThaddeusLim99"},"content":"            return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"ThaddeusLim99"},"content":"        return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":134,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":134}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":" * Deadline class to represent a task which has a deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":" * Parent class is Task class.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"description\" the name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"by\" deadline of task","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" * @return modified message when the toString() method is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     * Overrides the toString() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return returns a modified message","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     * Changes deadline task in list format","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     * to saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return string of deadline task in saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toStringStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"        String storeString \u003d \"D | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"1 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"        else {","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"0 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        storeString +\u003d description + \" | \" + by;","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"        return storeString;","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":47}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":" * Event class to represent a task which has an event.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":" * Parent class is Task class.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"description\" the name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"at\" event date","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" * @return modified message when the toString() method is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     * Overrides the toString() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return returns a modified message","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     * Changes event task in list format","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     * to saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return string of event task in saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toStringStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"        String storeString \u003d \"E | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"1 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"        else {","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"0 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        storeString +\u003d description + \" | \" + at;","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"        return storeString;","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":47}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":" * Task class to represent a task.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":" * Is a parent class to Todo, Event and Deadline classes.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"description\" the name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":" * @return modified message when the toString() method is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns a String whether a task is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the task is done, X is returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the task is not done, a whitespace is returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return status icon for task.","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns task\u0027 description.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return task\u0027 description.","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     * Sets a task as done by setting isDone as true.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"     * Overrides the toString() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return returns a modified message","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"     * Psuedo abstract method to change task in list format","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"     * to saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return string of task in saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toStringStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ThaddeusLim99":65}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"public class TaskList {","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"    public void addTask(Task inputTask) {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"        tasks.add(inputTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    public Task updateTask(int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"        tasks.get(taskIndex - 1).setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"        Task deletedTask \u003d tasks.remove(index - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"        return deletedTask;","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    public String listTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"        String listMessage \u003d \"Here is the list you requested!\";","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getSize(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"            listMessage +\u003d \"\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"            listMessage +\u003d String.valueOf(i) + \".\";","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"            listMessage +\u003d tasks.getTask(i);","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"        return listMessage;","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":40}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":" * Todo class to represent a task that needs to be done.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":" * Parent class is Task class.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"description\" the name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":" * @return modified message when the toString() method is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"     * Overrides the toString() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return returns a modified message","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     * Changes todo task in list format","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     * to saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return string of todo task in saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toStringStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"        String storeString \u003d \"T | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"1 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"        else {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"0 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"        storeString +\u003d description;","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"        return storeString;","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"todo eat dinner","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"deadline homework /by 1/9","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"event interview /at 1/9","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ThaddeusLim99":7}}]
