[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"# About","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"Duke is a CLI (Command Line Interface) task manager that assists in managing your tasks.","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"This user guide will teach you how to use Duke.","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"# Quick Start","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"1. Download the latest Jar file","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"2. Go to the folder on your computer that contains the Jar file","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"3. Run the command `java -jar -IP.jar`","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"# Features ","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"### Summary","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"Below is a list of the features Duke offers:","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"1. [Adding tasks](#adding-tasks)","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"2. [List tasks](#list-tasks)","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"3. [Marking tasks as done](#marking-tasks-as-done)","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"4. [Deleting tasks](#deleting-tasks)","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"5. [Finding tasks by name](#finding-tasks-by-name)","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"6. [Finding tasks by date](#finding-tasks-by-date)","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"7. [Saving tasks](#saving-tasks)","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"8. [Exiting Duke](#exiting-duke)","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"### Adding tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"There are 3 types of tasks you can add: todo,event,deadline.","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"* todo - tasks that you need to do; only requires task description","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"  * Format: `todo \u003ctask description\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"  * e.g `todo finish homework`","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"* event - tasks that you need to attend; need event description and date of event in ","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"format `/at yyyy-mm-dd`","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"  * Format: `event \u003cevent description\u003e /at \u003cyyyy-mm-dd/\u003e` ","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"  * e.g `event interview /at 2021-09-16`","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"* deadline - tasks that you need to finish at a certain date; need deadline ","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"description and date of deadline in format `/by yyyy-mm-dd`","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"  * Format: `deadline \u003cdeadline description\u003e /by \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"  * e.g `deadline job application /by 2021-10-01`","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"  ","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"![](assets/add.png)","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"### List Tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"You can list all the tasks you have stored.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"* e.g `list`","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"![](assets/list.png)","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"### Marking tasks as done","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"You can mark a task as done by providing the `done` command","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"and providing the index of the task you want to mark as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"* Format: `done \u003ctask index\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"* e.g `done 2`","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"![](assets/done.png)","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"### Deleting tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"You can choose to delete a task by providing the `delete` command","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"and providing the index of the task you want to delete.","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"* Format: `delete \u003ctask index\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"* e.g `delete 3`","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"![](assets/delete.png)","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"### Finding tasks by name","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"You can search the task you want by its name. This can be done","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"by providing the `find` command and providing the search keyword.","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"* Format: `find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"* e.g `find homework`","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"![](assets/find.png)","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"### Finding tasks by date","lastModifiedDate":"2021-09-21"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"You can search the task you want by its date. This can be done by ","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"providing the `date` command and providing the date you want to search","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"ThaddeusLim99"},"content":"by using the format `yyyy-mm-dd`.","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"ThaddeusLim99"},"content":"* Format: `date \u003cyyyy-mm-dd\u003e`","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"ThaddeusLim99"},"content":"* e.g `date 2019-09-16`","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"ThaddeusLim99"},"content":"![](assets/date.png)","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"ThaddeusLim99"},"content":"### Saving tasks","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"ThaddeusLim99"},"content":"Duke will save for you your tasks everytime a task is added, deleted ","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"ThaddeusLim99"},"content":"or mark as done. It will also save everytime you exit the program so","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"ThaddeusLim99"},"content":"that when you next enter, your saved tasks will still be there. The ","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"ThaddeusLim99"},"content":"tasks are stored in \u0027duke.txt\u0027, in the same folder as your JAR file.","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"ThaddeusLim99"},"content":"### Exiting Duke","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"ThaddeusLim99"},"content":"You can exit the program by providing the `bye` command.","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"ThaddeusLim99"},"content":"* e.g `bye`","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"ThaddeusLim99"},"content":"![](assets/exit.png)","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"ThaddeusLim99":74,"-":16}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.logic.Logic;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" * Duke class acts as entry point to programme.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"    public static final String FILEPATH \u003d \"duke.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"        //run logic of programme","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"        Logic logic \u003d new Logic(FILEPATH);","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"        logic.run();","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ThaddeusLim99":12,"-":4}},{"path":"src/main/java/duke/UI/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":" * Contains common messages to be printed out.","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" * @return output mesage to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"public class Message {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns an ASCII art of PEPE the frog.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return PEPE.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String printDuke() {","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"        String poggers \u003d \"⠄⠰⠛⠋⢉⣡⣤⣄⡉⠓⢦⣀⠙⠉⠡⠔⠒⠛⠛⠛⠶⢶⣄⠘⢿⣷⣤⡈⠻⣧\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⢀⡔⠄⠄⠄⠙⣿⣿⣿⣷⣤⠉⠁⡀⠐⠒⢿⣿⣿⣿⣶⣄⡈⠳⢄⣹⣿⣿⣾⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⣼⠁⢠⡄⠄⠄⣿⣿⣿⣿⡟⠄⡐⠁⡀⠄⠈⣿⣿⣿⣿⣿⣷⣤⡈⠻⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⢻⡀⠈⠄⠄⣀⣿⣿⣿⡿⠃⠄⡇⠈⠛⠄⠄⣿⣿⣿⣿⣿⣿⠟⠋⣠⣶⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⢉⡓⠚⠛⠛⠋⣉⣩⣤⣤⣀⠑⠤⣤⣤⣾⣿⣿⣿⡿⠛⢁⣤⣾⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠈⠙⠛⠋⣭⣭⣶⣾⣿⣿⣿⣷⣦⢠⡍⠉⠉⢠⣤⣴⠚⢩⣴⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⢴⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⣦⣭⣭⣭⣥⣴⣶⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⣴⣶⡶⠶⠶⠶⠶⠶⠶⠶⠶⣮⣭⣝⣛⠿⠿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠙⣿⡄⠄⠄⢀⡤⠬⢭⣝⣒⢂⠭⣉⠻⠿⣷⣶⣦⣭⡛⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⠸⣿⡇⠄⠸⣎⣁⣾⠿⠉⢀⠇⣸⣿⣿⢆⡉⠹⣿⣿⢸⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⠄⣿⡇⠄⢀⡶⠶⠶⠾⠿⠮⠭⠭⢭⣥⣿⣿⣷⢸⣿⢸⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⠄⣿⡇⠄⠈⣷⠄⠄⠄⣭⣙⣹⢙⣰⡎⣿⢏⣡⣾⢏⣾⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⢰⣿⡇⠄⠄⢿⠄⠄⠈⣿⠉⠉⣻⣿⡷⣰⣿⡿⣡⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⢸⣿⡇⠄⠄⠘⠿⠤⠤⠿⠿⠿⢤⣤⣤⡿⣃⣸⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"                \"⠄⠄⠘⢿⣷⣤⣄⣀⣀⣀⣀⣀⣠⣴⣾⡿⢋⣼⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⡿⠋\\n\";","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"        return poggers;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns a line.","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return a Line.","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String printLine() {","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"        String line \u003d \"__________________________________________________________________________________\";","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        return line;","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns the full welcome message.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return welcome message.","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String printWelcome() {","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"        String welcomeMessage \u003d \"Poggers! I\u0027m Pepe\\n\"","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"                + \"What can I do for you?\";","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"        return welcomeMessage;","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns exit message.","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return exit message.","lastModifiedDate":"2021-08-31"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String printExit() {","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"        String exit \u003d \"Bye my little pogchamp! Hope to see you again soon!\";","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"        return exit;","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":70}},{"path":"src/main/java/duke/UI/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.UI;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" * UserInterface interacts with the user for input and output.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"public class UserInterface {","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns input given from the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return input from the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getInput() {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"        return input;","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     * Prints out message from programme to user.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the position is unset, NaN is returned.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return output to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    public void printMessage(String commandMessage) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"        System.out.println(Message.printLine());","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"        System.out.println(commandMessage);","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"        System.out.println(Message.printLine());","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" * Abstract command class.","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    protected Boolean isBye \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String command;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String date;","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String returnString;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes the command","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"    public abstract String execute(TaskList tasks) throws DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns the boolean isBye as a way to tell Logic class when is it appropriate to exit the while loop.","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return boolean isBye.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"    */","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    public boolean getExitStatus() {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"        return isBye;","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":35}},{"path":"src/main/java/duke/command/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DateError;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"public class DateCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    private LocalDate key;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param dateKey search criteria","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    public DateCommand(LocalDate dateKey) {","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"        key \u003d dateKey;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes DateCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws DateError","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"            ArrayList\u003cTask\u003e tasksDateFound \u003d tasks.findByDate(key);","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d TaskList.listQueryTaskList(tasksDateFound);","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DateError();","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"ThaddeusLim99":41}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DeadlineCommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.autoSaveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    private String description;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param descriptionArg task description","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param dateArg date of deadline","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeadlineCommand(String descriptionArg, LocalDate dateArg) {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"        description \u003d descriptionArg;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"        date \u003d dateArg;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes DeadlineCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws DeadlineCommandError","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.addTask(new Deadline(description, date));","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"            listIndex++;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Got it. I\u0027ve added this task:\\n\" + tasks.getTask(listIndex) + \"\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"                    + \"Now you have \" + String.valueOf(listIndex) + \" tasks in the list.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"            autoSaveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DeadlineCommandError();","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":48}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DeleteListIndexError;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.saveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeleteCommand extends  Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"    private int index;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param target index of TaskList to be deleted","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeleteCommand(int target) {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"        index \u003d target;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes DeleteCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws DeleteListIndexError","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"            //valid index","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Noted. I\u0027ve removed this task:\\n\" + tasks.getTask(index) + \"\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.deleteTask(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"            listIndex--;","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString +\u003d \"Now you have \" + String.valueOf(listIndex) + \" tasks in the list.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"            saveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DeleteListIndexError();","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":44}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DeleteListIndexError;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DoneListIndexError;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.saveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"    private int index;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param target index of TaskList to be deleted","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    public DoneCommand(int target) {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"        index \u003d target;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes DoneCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws DoneListIndexError","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"            //valid index","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.updateTask(index);","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"                    + \"[X] \" + tasks.getTask(index).getDescription();","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"            saveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DoneListIndexError();","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":42}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DoneListIndexError;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.EventCommandError;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.autoSaveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    private String description;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    private LocalDate date;","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param descriptionArg description of task","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param dateArg date of task","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    public EventCommand(String descriptionArg, LocalDate dateArg) {","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"        description \u003d descriptionArg;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"        date \u003d dateArg;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes EventCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws EventCommandError","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.addTask(new Event(description, date));","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"            listIndex++;","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Got it. I\u0027ve added this task:\\n\" + tasks.getTask(listIndex) + \"\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"                    + \"Now you have \" + String.valueOf(listIndex) + \" tasks in the list.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"            autoSaveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new EventCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":49}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.UI.Message;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DoneListIndexError;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.saveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes ExitCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"        isBye \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"        returnString \u003d Message.printExit();","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"        saveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"        return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":24}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.EventCommandError;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.FindCommandError;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"    private String keyword;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param searchTerm search criteria","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"    public FindCommand(String searchTerm) {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"        keyword \u003d searchTerm;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes FindCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws FindCommandError","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"            ArrayList\u003cTask\u003e filteredList \u003d tasks.findTask(keyword);","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d TaskList.listQueryTaskList(filteredList);","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new FindCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":40}},{"path":"src/main/java/duke/command/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.FindCommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"public class IncorrectCommand extends Command {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes IncorrectCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"        returnString \u003d \"OH NO! I do not know what command is that!\";","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"        return  returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":19}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.FindCommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes ListCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"        if (listIndex \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"No tasks added yet! :)\";","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"            //when there are tasks in list","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d tasks.listTaskList(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"        return  returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":26}},{"path":"src/main/java/duke/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.command;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.FindCommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.ToDoCommandError;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.database.Database.autoSaveFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"import static duke.logic.Logic.listIndex;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"public class ToDoCommand extends Command{","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    private String description;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param arg description of task","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"    public ToDoCommand(String arg) {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"        description \u003d arg;","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     * Executes ToDoCommand","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasks TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return appropriate message to be sent to user","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws ToDoCommandError","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    public String execute(TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"            tasks.addTask(new Todo(description));","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"            listIndex++;","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"            returnString \u003d \"Got it. I\u0027ve added this task:\\n\" + tasks.getTask(listIndex) + \"\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"                    + \"Now you have \" + String.valueOf(listIndex) + \" tasks in the list.\";","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"            autoSaveFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"            return returnString;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new ToDoCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":44}},{"path":"src/main/java/duke/database/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.database;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.logic.Logic;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Event;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.Todo;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":" * Database class gets the filepath from Logic class and handles the saving of data and uploading","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":" * of data to Logic class","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"filepath\" filepath of storage file, duke.txt.","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"public class Database{","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"    private static String filePath;","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param filePath file path of storage file","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"    public Database(String filePath) {","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"     * Loads task from duke.txt data file if it exists. If the file does","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"     * not exist, the file is created.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return tasksCopy previous state of tasks if the data file exists,","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"     * or an empty TaskList if the data file does not exist.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"    public static TaskList loadTasks() {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"        TaskList tasksCopy \u003d new TaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        File storedFile;","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"            storedFile \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"            //if savedFile is not present and a new file is created","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"            if (storedFile.createNewFile()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"                return tasksCopy;","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"                Scanner readFile \u003d new Scanner(storedFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"                while (readFile.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"                    Logic.listIndex++;","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"                    String fileLine \u003d readFile.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"                    Scanner lineData \u003d new Scanner(fileLine);","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"                    lineData.useDelimiter(\"\\\\|\");","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"                    String commandType \u003d lineData.next().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"                    String doneStatus \u003d lineData.next().trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"                    String taskDescription \u003d lineData.next().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"                    switch (commandType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"                    case \"T\":","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"                        loadTodoTask(taskDescription, doneStatus, tasksCopy);","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"                        break;","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"                    case \"D\":","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"                        loadDeadlineTask(lineData, taskDescription, doneStatus, tasksCopy);","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"                        break;","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"                    case \"E\":","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"                        loadEventTask(lineData, taskDescription, doneStatus, tasksCopy);","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"                        break;","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"ThaddeusLim99"},"content":"                    }","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"ThaddeusLim99"},"content":"                }","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Oops! An error cropped up while loading file!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasksCopy;","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"ThaddeusLim99"},"content":"     * loads a Todo task from file into program list.","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param taskDescription the description of the task in the file","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param doneStatus a string, either 1 or 0, denoting whether the task is done(1 means done)","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasksCopy TaskList to store restored tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void loadTodoTask(String taskDescription, String doneStatus, TaskList tasksCopy) {","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"ThaddeusLim99"},"content":"        Todo savedTodo \u003d new Todo(taskDescription);","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"ThaddeusLim99"},"content":"        if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"ThaddeusLim99"},"content":"            savedTodo.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"ThaddeusLim99"},"content":"        tasksCopy.addTask(savedTodo);","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"ThaddeusLim99"},"content":"     * loads a Deadline task from file into program list.","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param  lineData a Scanner","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param taskDescription the description of the task in the file","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param doneStatus a string, either 1 or 0, denoting whether the task is done(1 means done)","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasksCopy TaskList to store restored tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void loadDeadlineTask(Scanner lineData, String taskDescription, String doneStatus, TaskList tasksCopy) {","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"ThaddeusLim99"},"content":"        String deadLineDate \u003d lineData.next().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"ThaddeusLim99"},"content":"        LocalDate deadLineDateFormatted \u003d LocalDate.parse(deadLineDate);","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"ThaddeusLim99"},"content":"        Deadline savedDeadLine \u003d new Deadline(taskDescription, deadLineDateFormatted);","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"ThaddeusLim99"},"content":"        if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"ThaddeusLim99"},"content":"            savedDeadLine.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"ThaddeusLim99"},"content":"        tasksCopy.addTask(savedDeadLine);","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"ThaddeusLim99"},"content":"     * loads an Event task from file into program list.","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param  lineData a Scanner","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param taskDescription the description of the task in the file","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param doneStatus a string, either 1 or 0, denoting whether the task is done(1 means done)","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param tasksCopy TaskList to store restored tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void loadEventTask(Scanner lineData, String taskDescription, String doneStatus, TaskList tasksCopy) {","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"ThaddeusLim99"},"content":"        String eventDate \u003d lineData.next().trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"ThaddeusLim99"},"content":"        LocalDate eventDateFormatted \u003d LocalDate.parse(eventDate);","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"ThaddeusLim99"},"content":"        Event savedEvent \u003d new Event(taskDescription, eventDateFormatted);","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"ThaddeusLim99"},"content":"        if (doneStatus.equals(\"1\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"ThaddeusLim99"},"content":"            savedEvent.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":128,"author":{"gitId":"ThaddeusLim99"},"content":"        tasksCopy.addTask(savedEvent);","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":130,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":131,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":132,"author":{"gitId":"ThaddeusLim99"},"content":"     * Saves the entire taskList into data storage file.","lastModifiedDate":"2021-09-15"},{"lineNumber":133,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":134,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param \"taskList\" the current list of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":136,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void saveFile(TaskList taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":138,"author":{"gitId":"ThaddeusLim99"},"content":"            File database;","lastModifiedDate":"2021-09-15"},{"lineNumber":139,"author":{"gitId":"ThaddeusLim99"},"content":"            database \u003d new File(\"duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":140,"author":{"gitId":"ThaddeusLim99"},"content":"            database.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":141,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Oops! An error cropped up while saving\");","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"ThaddeusLim99"},"content":"        String savedData \u003d \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"ThaddeusLim99"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"ThaddeusLim99"},"content":"            Task currTask \u003d taskList.getTask(i);","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"ThaddeusLim99"},"content":"            savedData +\u003d currTask.toStringStore();","lastModifiedDate":"2021-09-15"},{"lineNumber":148,"author":{"gitId":"ThaddeusLim99"},"content":"            savedData +\u003d \"\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":149,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"ThaddeusLim99"},"content":"            FileWriter editor \u003d new FileWriter(\"duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"ThaddeusLim99"},"content":"            editor.write(savedData);","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"ThaddeusLim99"},"content":"            editor.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Oops! An error occurred during saving.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"ThaddeusLim99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"ThaddeusLim99"},"content":"     * Updates the data storage file by appending the most","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"ThaddeusLim99"},"content":"     * recently added file to the end of the file.","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":164,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param taskList the current list of tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":165,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"ThaddeusLim99"},"content":"    public static void autoSaveFile(TaskList taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"ThaddeusLim99"},"content":"        Task currTask \u003d taskList.getTask(taskList.getSize());","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"ThaddeusLim99"},"content":"        String data \u003d currTask.toStringStore() + \"\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"ThaddeusLim99"},"content":"            FileWriter editor \u003d new FileWriter(\"duke.txt\", true);","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"ThaddeusLim99"},"content":"            editor.write(data);","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"ThaddeusLim99"},"content":"            editor.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"ThaddeusLim99"},"content":"            System.out.println(\"Oops! An error occurred during autosave.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"ThaddeusLim99"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"ThaddeusLim99":178}},{"path":"src/main/java/duke/exception/DateError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DateError extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DateError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! There was an error in getting the date! The format should be yyyy-mm-dd\";","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DeadlineCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeadlineCommandError extends DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeadlineCommandError() {","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! The \\\"deadline\\\" command should be in this format: \\ndeadline \u003ctask name\u003e /by \u003cyyyy-mm-dd\u003e\";","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DeleteCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeleteCommandError extends DukeException{","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeleteCommandError() {","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! \\\"delete\\\" command is to be followed by only one integer!\";","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DeleteListIndexError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DeleteListIndexError extends DukeException{","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DeleteListIndexError() {","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! Invalid list index! Has the task at that index been added yet?\";","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DoneCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DoneCommandError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DoneCommandError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! \\\"done\\\" command is to be followed by only one integer!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DoneListIndexError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class DoneListIndexError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public DoneListIndexError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! Invalid list index! Has the task at that index been added yet?\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public abstract class DukeException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String errorMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"        return this.errorMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":9}},{"path":"src/main/java/duke/exception/EmptyCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class EmptyCommandError extends DukeException{","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public EmptyCommandError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! You have to enter at least something!\";","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/EventCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class EventCommandError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public EventCommandError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! The \\\"event\\\" command should be in this format: \\nevent \u003ctask name\u003e /at \u003cyyyy-mm-dd\u003e\";","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/FindCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class FindCommandError extends DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public FindCommandError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! The \\\"find\\\" command should be in this format: \\nfind \u003csearch keyword\u003e\";","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/InvalidCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class InvalidCommandError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public InvalidCommandError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! I do not know what command is that!\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/exception/ToDoCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"public class ToDoCommandError extends DukeException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"    public ToDoCommandError() {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"        this.errorMessage \u003d \"OH NO! The \\\"todo\\\" command should be in this format: \\ntodo \u003ctask name\u003e\";","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"ThaddeusLim99":7}},{"path":"src/main/java/duke/logic/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.logic;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.UI.Message;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.UI.UserInterface;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.database.Database;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":" * Logic class runs the main logic of the programme.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"public class Logic {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    public static int listIndex \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    private static UserInterface userInterface;","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    private Database database;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    protected static String fileAddress;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param filePath file path of storage file","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    public Logic(String filePath) {","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"        fileAddress \u003d filePath;","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"        userInterface \u003d new UserInterface();","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"        database \u003d new Database(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"        taskList \u003d database.loadTasks();","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"     * Runs the main logic of the program.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"     * Welcome message is printed to user and programme enters a while loop to repeatedly get input","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"     * from the user and then correspondingly respond to them. Input is put through the Parser class","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"     * which then put through the Command class. The output of the Command class is given to the","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"     * UserInterface Class to print out the message to the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"    public void run() {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"        userInterface.printMessage(Message.printWelcome());","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        while (!isExit) {","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"                //get input","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"                String inputCommand \u003d userInterface.getInput();","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"                //parse input","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"                Command commandHandler \u003d new Parser().parseCommand(inputCommand);","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"                //get appropriate message","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"                String commandMessage \u003d commandHandler.execute(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"                //print out message","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"                userInterface.printMessage(commandMessage);","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"                //see whether to exit the program","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"                isExit \u003d commandHandler.getExitStatus();","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"                userInterface.printMessage(e.getErrorMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":61}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.parser;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.DateCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.IncorrectCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.command.ToDoCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DateError;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DeadlineCommandError;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DeleteCommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.DoneCommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.EventCommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.FindCommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.ToDoCommandError;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"import duke.exception.EmptyCommandError;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":" * Parser class gets the raw input from Logic class and then returns the appropriate command to be","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":" * executed to Logic class.","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"input\" raw input from user.","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":" * @return appropriate command to be executed.","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"public class Parser {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns a Command depending on the user input.","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param userInput  user Input.","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return Command to be executed.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws DukeException  If userInput is in wrong format.","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"    public Command parseCommand(String userInput) throws DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"        String[] inputArgs \u003d userInput.trim().split(\" \", 2);  // split the input into command and arguments","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        if (inputArgs.length \u003d\u003d 0) {","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"        final String commandWord \u003d inputArgs[0];","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"        final String arguments \u003d userInput.replaceFirst(commandWord, \"\").trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"find\":","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"            return prepareToDoOrFindCommand(commandWord, arguments);","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"            return prepareEventOrDeadlineCommand(commandWord, arguments);","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"done\":","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"            return prepareDeleteOrDoneCommand(commandWord, arguments);","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"date\":","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"            return prepareDateCommand(arguments);","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"list\":","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"ThaddeusLim99"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"ThaddeusLim99"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"ThaddeusLim99"},"content":"            return new IncorrectCommand();","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":77,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns Date Command after formatting it.","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param args  date taken from user input.","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return Date Command.","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws DateError  If args does not follow yyyy-mm-dd format.","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"ThaddeusLim99"},"content":"    private Command prepareDateCommand(String args) throws DukeException{","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"ThaddeusLim99"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DateError();","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"ThaddeusLim99"},"content":"            LocalDate dateKey \u003d LocalDate.parse((args.trim()));","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"ThaddeusLim99"},"content":"            return new DateCommand(dateKey);","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DateError();","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns ToDo or Find Command after formatting is done.","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param command  command keyword to deterime if ToDo or Find command is called.","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param args description of task.","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return ToDo or Find Command.","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws ToDoCommandError,FindCommandError  If user input is in wrong format.","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"ThaddeusLim99"},"content":"    private Command prepareToDoOrFindCommand(String command, String args) throws  DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"ThaddeusLim99"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new EmptyCommandError();","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"ThaddeusLim99"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"ThaddeusLim99"},"content":"                return new ToDoCommand(args.trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"ThaddeusLim99"},"content":"            return new FindCommand(args.trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"ThaddeusLim99"},"content":"            if (command.equals(\"todo\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"ThaddeusLim99"},"content":"                throw new ToDoCommandError();","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new FindCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns Event or Deadline Command after formatting is done.","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param command  command keyword to deterime if Event or Deadline command is called.","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param args description of task and date.","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return Event or Deadline Command.","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws EventCommandError,DeadlineCommandError  If user input is in wrong format.","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"ThaddeusLim99"},"content":"    private Command prepareEventOrDeadlineCommand(String command, String args) throws DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"ThaddeusLim99"},"content":"        String[] parts \u003d args.split(\"/\", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"ThaddeusLim99"},"content":"         //Validate arg string format","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"ThaddeusLim99"},"content":"        if (parts.length !\u003d 2 || parts[0].isEmpty() || parts[1].isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"ThaddeusLim99"},"content":"            if(command.equals(\"event\")){","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"ThaddeusLim99"},"content":"                throw  new EventCommandError();","lastModifiedDate":"2021-09-07"},{"lineNumber":136,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"ThaddeusLim99"},"content":"            throw  new DeadlineCommandError();","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"ThaddeusLim99"},"content":"        //see if event command followed by /at and if deadline command followed by /by","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"ThaddeusLim99"},"content":"        if (command.equals(\"event\") \u0026\u0026 isWrongEscapeWord(parts[1],\"at\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new EventCommandError();","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"ThaddeusLim99"},"content":"        if (command.equals(\"deadline\") \u0026\u0026 isWrongEscapeWord(parts[1],\"by\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DeadlineCommandError();","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"ThaddeusLim99"},"content":"            String date \u003d getDate(parts[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"ThaddeusLim99"},"content":"            LocalDate correctDateFormat \u003d LocalDate.parse((date));","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"ThaddeusLim99"},"content":"            if(command.equals(\"event\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"ThaddeusLim99"},"content":"                return new EventCommand(","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"ThaddeusLim99"},"content":"                        parts[0].trim(),","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"ThaddeusLim99"},"content":"                        correctDateFormat","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"ThaddeusLim99"},"content":"                );","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"ThaddeusLim99"},"content":"            return new DeadlineCommand(","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"ThaddeusLim99"},"content":"                    parts[0].trim(),","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"ThaddeusLim99"},"content":"                    correctDateFormat","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"ThaddeusLim99"},"content":"            );","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":160,"author":{"gitId":"ThaddeusLim99"},"content":"            if (command.equals(\"event\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"ThaddeusLim99"},"content":"                throw  new EventCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"ThaddeusLim99"},"content":"            throw  new DeadlineCommandError();","lastModifiedDate":"2021-09-20"},{"lineNumber":164,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":165,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":166,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns Delete or Done Command after formatting is done.","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param command  command keyword to deterime if Delete or Done command is called.","lastModifiedDate":"2021-09-20"},{"lineNumber":171,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param args index of list.","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return Delete or Done Command.","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws DeleteCommandError,DoneCommandError  If user input is in wrong format.","lastModifiedDate":"2021-09-20"},{"lineNumber":174,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":175,"author":{"gitId":"ThaddeusLim99"},"content":"    private Command prepareDeleteOrDoneCommand(String command, String args) throws  DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"ThaddeusLim99"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":177,"author":{"gitId":"ThaddeusLim99"},"content":"            final int targetIndex \u003d Integer.parseInt(args.split(\" \")[0]);","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"ThaddeusLim99"},"content":"            if (command.equals(\"delete\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"ThaddeusLim99"},"content":"                return new DeleteCommand(targetIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":181,"author":{"gitId":"ThaddeusLim99"},"content":"            return new DoneCommand(targetIndex);","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"ThaddeusLim99"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"ThaddeusLim99"},"content":"            if (command.equals(\"delete\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"ThaddeusLim99"},"content":"                throw  new DeleteCommandError();","lastModifiedDate":"2021-09-12"},{"lineNumber":185,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":186,"author":{"gitId":"ThaddeusLim99"},"content":"            throw  new DoneCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":188,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":189,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":190,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":191,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns a string of the date of a task.","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":193,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param input  input string.","lastModifiedDate":"2021-09-20"},{"lineNumber":194,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return String containing only the date of the task.","lastModifiedDate":"2021-09-20"},{"lineNumber":195,"author":{"gitId":"ThaddeusLim99"},"content":"     * @throws DateError  If user input is in wrong format.","lastModifiedDate":"2021-09-20"},{"lineNumber":196,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":197,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getDate(String input) throws DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"ThaddeusLim99"},"content":"        String date \u003d input;","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"ThaddeusLim99"},"content":"        int firstWhitespace \u003d getFirstWhiteSpace(date);","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"ThaddeusLim99"},"content":"        if (firstWhitespace \u003d\u003d -1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"ThaddeusLim99"},"content":"            throw new DateError();","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":203,"author":{"gitId":"ThaddeusLim99"},"content":"        date \u003d input.substring(firstWhitespace).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":204,"author":{"gitId":"ThaddeusLim99"},"content":"        return date;","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":206,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":208,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns the position of the first whitespace in a string.","lastModifiedDate":"2021-09-20"},{"lineNumber":209,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":210,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param input input String.","lastModifiedDate":"2021-09-20"},{"lineNumber":211,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return position of first whitespace in a string.","lastModifiedDate":"2021-09-20"},{"lineNumber":212,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":213,"author":{"gitId":"ThaddeusLim99"},"content":"    public int getFirstWhiteSpace(String input) {","lastModifiedDate":"2021-09-19"},{"lineNumber":214,"author":{"gitId":"ThaddeusLim99"},"content":"        for (int index \u003d 0; index \u003c input.length(); index++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"ThaddeusLim99"},"content":"            //sees if character at that index is a whitespace","lastModifiedDate":"2021-09-19"},{"lineNumber":216,"author":{"gitId":"ThaddeusLim99"},"content":"            if (Character.isWhitespace(input.charAt(index))) {","lastModifiedDate":"2021-09-19"},{"lineNumber":217,"author":{"gitId":"ThaddeusLim99"},"content":"                return index;","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":219,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":220,"author":{"gitId":"ThaddeusLim99"},"content":"        return -1;","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":222,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":224,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns true if the correct escape word is used.False otherwise","lastModifiedDate":"2021-09-20"},{"lineNumber":225,"author":{"gitId":"ThaddeusLim99"},"content":"     * Eg. \"event \u003ctask description\u003e /by \u003cdate\u003e\" will return true as","lastModifiedDate":"2021-09-20"},{"lineNumber":226,"author":{"gitId":"ThaddeusLim99"},"content":"     * the escape word is wrong and should be /at","lastModifiedDate":"2021-09-20"},{"lineNumber":227,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":228,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param inputString the input String.","lastModifiedDate":"2021-09-20"},{"lineNumber":229,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param escapeWord either \"by\" or \"at\" depending on the command.","lastModifiedDate":"2021-09-20"},{"lineNumber":230,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return true or false on whether the wrong escape word is used.","lastModifiedDate":"2021-09-20"},{"lineNumber":231,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":232,"author":{"gitId":"ThaddeusLim99"},"content":"    public boolean isWrongEscapeWord(String inputString, String escapeWord) {","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"ThaddeusLim99"},"content":"        if (inputString.substring(0,2).equals(escapeWord)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"ThaddeusLim99"},"content":"            return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":236,"author":{"gitId":"ThaddeusLim99"},"content":"        return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":237,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":238,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":238}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" * Deadline class to represent a task which has a deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":" * Parent class is Task class.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"description\" the name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"by\" deadline of task","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":" * @return modified message when the toString() method is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param description description of deadline","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param by date of deadline","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     * Overrides the toString() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return returns a modified message","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"        String byFormatter \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byFormatter + \")\";","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     * Changes deadline task in list format","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"     * to saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return string of deadline task in saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toStringStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"        String storeString \u003d \"D | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"1 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"        else {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"0 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"        storeString +\u003d description + \" | \" + by;","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"        return storeString;","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns the date of deadline","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return LocalDate type of date of deadline","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"        return by;","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":67}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" * Event class to represent a task which has an event.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":" * Parent class is Task class.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"description\" the name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"at\" event date","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":" * @return modified message when the toString() method is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param description description of event","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param at date of event","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"    public Event(String description, LocalDate at) {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     * Overrides the toString() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return returns a modified message","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"        String atFormatter \u003d at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + atFormatter + \")\";","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     * Changes event task in list format","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"     * to saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return string of event task in saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toStringStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"        String storeString \u003d \"E | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"1 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"        else {","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"0 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"        storeString +\u003d description + \" | \" + at;","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"        return storeString;","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns the date of event","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return LocalDate type of date of event","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"        return at;","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":67}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" * Task class to represent a task.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" * Is a parent class to Todo, Event and Deadline classes.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"description\" the name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":" * @return modified message when the toString() method is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"    protected String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param description description of task","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns a String whether a task is done or not.","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the task is done, X is returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     * If the task is not done, a whitespace is returned.","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return status icon for task.","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns task\u0027 description.","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return task\u0027 description.","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"        return description;","lastModifiedDate":"2021-08-21"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-25"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"     * Sets a task as done by setting isDone as true.","lastModifiedDate":"2021-08-25"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-25"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"     * Overrides the toString() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return returns a modified message","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"     * Psuedo abstract method to change task in list format","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"     * to saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return string of task in saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toStringStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"ThaddeusLim99"},"content":"     * Psuedo abstract method to get the date of task","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return LocalDate type of date of task","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"ThaddeusLim99"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"ThaddeusLim99"},"content":"        return null;","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"ThaddeusLim99":81}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"public class TaskList {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":"     * Adds task to TaskList.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param inputTask Task to be added.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    public void addTask(Task inputTask) {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"        tasks.add(inputTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"     * Gets Task from TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param index item on the list to be obtained from TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return Task obtained from TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasks.get(index - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"     * Marks a Task as done","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param taskIndex item on the list to be obtained from TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return Task that is marked as done","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"    public Task updateTask(int taskIndex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"        tasks.get(taskIndex - 1).setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasks.get(taskIndex - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"     * Deletes a task from TasKlist","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param index item on the list to be deleted","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return Task that is deleted","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"    public Task deleteTask(int index) {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"        Task deletedTask \u003d tasks.remove(index - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"        return deletedTask;","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"     * Lists the full TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param taskList which TaskList to be listed","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return listMessage a formatted list of the TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"    public String listTaskList(TaskList taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"        String listMessage \u003d \"Here is the full list!\";","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"            listMessage +\u003d \"\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"            listMessage +\u003d String.valueOf(i) + \".\";","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"            listMessage +\u003d taskList.getTask(i);","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"ThaddeusLim99"},"content":"        return listMessage;","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns an ArrayList of Task that fits the date criteria set by user","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param keyword date of Task to be found in ISO format","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return tasksDateList a filtered list containing tasks that fit date criteria","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"ThaddeusLim99"},"content":"    public ArrayList\u003cTask\u003e findByDate(LocalDate keyword) {","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"ThaddeusLim99"},"content":"        ArrayList\u003cTask\u003e tasksDateList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"ThaddeusLim99"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"ThaddeusLim99"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"ThaddeusLim99"},"content":"            if (currTask instanceof Todo) {","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"ThaddeusLim99"},"content":"                continue;","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"ThaddeusLim99"},"content":"            String taskDateInString \u003d currTask.getDate().toString();","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"ThaddeusLim99"},"content":"            if (taskDateInString.equals(keyword.toString())) {","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"ThaddeusLim99"},"content":"                tasksDateList.add(currTask);","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasksDateList;","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns a string of the filtered list that matches a certain search criteria","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"ThaddeusLim99"},"content":"     * provided by the user","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param taskList a filtered list","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return listQueryMessage the formmatted filtered list","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"ThaddeusLim99"},"content":"    public static String listQueryTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"ThaddeusLim99"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"ThaddeusLim99"},"content":"            return \"Hmm there does not seem to be any tasks that matches your search request\";","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"ThaddeusLim99"},"content":"        String listQueryMessage \u003d \"Here is what we found from the list:\";","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"ThaddeusLim99"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"ThaddeusLim99"},"content":"            listQueryMessage +\u003d \"\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"ThaddeusLim99"},"content":"            listQueryMessage +\u003d String.valueOf(i) + \".\";","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"ThaddeusLim99"},"content":"            listQueryMessage +\u003d taskList.get(i - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"ThaddeusLim99"},"content":"        return listQueryMessage;","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns size of TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return size of TaskList","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"ThaddeusLim99"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns an ArrayList of Task that fits the task description criteria set by user","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param key description criteria set by user","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return tasksFound a filtered list containing tasks that fit task description criteria","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"ThaddeusLim99"},"content":"    public ArrayList\u003cTask\u003e findTask(String key) {","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"ThaddeusLim99"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"ThaddeusLim99"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"ThaddeusLim99"},"content":"            Task currTask \u003d tasks.get(i);","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"ThaddeusLim99"},"content":"            String TaskDescription \u003d currTask.getDescription();","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"ThaddeusLim99"},"content":"            if (TaskDescription.contains(key)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"ThaddeusLim99"},"content":"                tasksFound.add(currTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"ThaddeusLim99"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"ThaddeusLim99"},"content":"        return tasksFound;","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"ThaddeusLim99":134}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"package duke.tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"/**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":" * Todo class to represent a task that needs to be done.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":" * Parent class is Task class.","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ThaddeusLim99"},"content":" *","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ThaddeusLim99"},"content":" * @param \"description\" the name of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ThaddeusLim99"},"content":" * @return modified message when the toString() method is called.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ThaddeusLim99"},"content":" */","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ThaddeusLim99"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ThaddeusLim99"},"content":"     * Constructor","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ThaddeusLim99"},"content":"     * @param description description of task","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ThaddeusLim99"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"ThaddeusLim99"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ThaddeusLim99"},"content":"     * Overrides the toString() method.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return returns a modified message","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ThaddeusLim99"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"ThaddeusLim99"},"content":"     * Changes todo task in list format","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"ThaddeusLim99"},"content":"     * to saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return string of todo task in saved file format","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"ThaddeusLim99"},"content":"    public String toStringStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"ThaddeusLim99"},"content":"        String storeString \u003d \"T | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"ThaddeusLim99"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"1 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"ThaddeusLim99"},"content":"        else {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"ThaddeusLim99"},"content":"            storeString +\u003d \"0 | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"ThaddeusLim99"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"ThaddeusLim99"},"content":"        storeString +\u003d description;","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"ThaddeusLim99"},"content":"        return storeString;","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"ThaddeusLim99"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"ThaddeusLim99"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"ThaddeusLim99"},"content":"     * Returns the date of task","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"ThaddeusLim99"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"ThaddeusLim99"},"content":"     * @return LocalDate type of date of task","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"ThaddeusLim99"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"ThaddeusLim99"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"ThaddeusLim99"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"ThaddeusLim99"},"content":"        return null;","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"ThaddeusLim99"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"ThaddeusLim99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ThaddeusLim99":61}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ThaddeusLim99"},"content":"todo eat dinner","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"ThaddeusLim99"},"content":"deadline homework /by 1/9","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"ThaddeusLim99"},"content":"event interview /at 1/9","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"ThaddeusLim99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"ThaddeusLim99"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"ThaddeusLim99"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"ThaddeusLim99"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"ThaddeusLim99":7}}]
