[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"Duke is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI).","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"If you can type fast, Duke can manage your tasks faster than traditional GUI apps.","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"  - [Manage 3 different types of tasks](#manage-3-different-types-of-tasks)","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"  - [Adding a Todo task: `todo`](#adding-a-todo-task-todo)","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"  - [Adding a Deadline task: `deadline`](#adding-a-deadline-task-deadline)","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"  - [Adding an Event task: `event`](#adding-an-event-task-event)","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"  - [Listing all tasks: `list`](#listing-all-tasks-list)","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"  - [Marking a task as done: `done`](#marking-a-task-as-done-done)","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"  - [Deleting a task done: `delete`](#deleting-a-task-delete)","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"  - [Searching for a task: `find`](#searching-for-a-task-find)","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"  - [Exit the program: `bye`](#exit-the-program-bye)","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"--------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"## Quick Start","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"2. Download the latest `iP.jar` from [here](https://github.com/jonathanmui4/ip/releases/)","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"3. Go to the folder you saved `iP.jar` and note the **absolute file path**.","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"4. If you are using **Windows**, open up a Command prompt terminal `cmd.exe` or `powershell.exe` and ","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"navigate to the folder where `iP.jar` is stored (using the file path).","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"5. For **Mac** and **Linux** users, do the same as step 4 with the terminal of your respective systems.","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"6. Execute `java -jar iP.jar`in the terminal and the application will start running. ","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"You should be able to see something like this:","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"Hello from","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":" ____        _        ","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"jonathanmui4"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"jonathanmui4"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"jonathanmui4"},"content":"Hello! I\u0027m Duke","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"jonathanmui4"},"content":"What can I do for you?","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"jonathanmui4"},"content":"--------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"jonathanmui4"},"content":"### Manage 3 different types of tasks","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"jonathanmui4"},"content":"Duke inherently allows users to manage **Todo** tasks (tasks in a typical todo list), **Deadline** tasks","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"jonathanmui4"},"content":"(tasks with a due date) and **Event** tasks (tasks with a venue).","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"jonathanmui4"},"content":"### Adding a Todo task: `todo`","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"jonathanmui4"},"content":"Adds a Todo task to Duke. A Todo task only contains a task description.  ","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"jonathanmui4"},"content":"Format: `todo {task description}`","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"jonathanmui4"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"jonathanmui4"},"content":"todo buy grapes","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"jonathanmui4"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"jonathanmui4"},"content":"[T][ ] buy grapes","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"jonathanmui4"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"jonathanmui4"},"content":"### Adding a Deadline task: `deadline`","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"jonathanmui4"},"content":"Adds a Deadline task to Duke. A Deadline task contains a task description and a due date.","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"jonathanmui4"},"content":"Format: `deadline {task description} /by {due date}`","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"jonathanmui4"},"content":"⚠️  `due date` needs to be in format `yyyy-MM-dd`.","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"jonathanmui4"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"jonathanmui4"},"content":"deadline finish user guide /by 2021-09-29","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"jonathanmui4"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"jonathanmui4"},"content":"[D][ ] finish user guide  (by: 29 Sep 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"jonathanmui4"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"jonathanmui4"},"content":"### Adding an Event task: `event`","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"jonathanmui4"},"content":"Adds an Event task to Duke. An Event task contains a task description and the event information.","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":98,"author":{"gitId":"jonathanmui4"},"content":"Format: `event {task description} /at {event information}`","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"jonathanmui4"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"jonathanmui4"},"content":"event Family Dinner /at Grandma\u0027s house 26 Sep 6pm","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"jonathanmui4"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"jonathanmui4"},"content":"[E][ ] Family Dinner  (at: Grandma\u0027s house 26 Sep 6pm)","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"jonathanmui4"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":111,"author":{"gitId":"jonathanmui4"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":113,"author":{"gitId":"jonathanmui4"},"content":"Shows a list of all tasks stored by Duke.","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"jonathanmui4"},"content":"Format: `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":117,"author":{"gitId":"jonathanmui4"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":119,"author":{"gitId":"jonathanmui4"},"content":"list","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"jonathanmui4"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"jonathanmui4"},"content":"1.[D][ ] return book  (by: 02 Sep 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"jonathanmui4"},"content":"2.[T][ ] buy grapes","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"jonathanmui4"},"content":"3.[D][ ] finish user guide  (by: 29 Sep 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"jonathanmui4"},"content":"4.[E][ ] Family Dinner  (at: Grandma\u0027s house 26 Sep 6pm)","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"jonathanmui4"},"content":"### Marking a task as done: `done`","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"jonathanmui4"},"content":"Marks a task as completed in Duke. Index given should be a **valid number** from the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"jonathanmui4"},"content":"Format: `done {task index}`","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":136,"author":{"gitId":"jonathanmui4"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"jonathanmui4"},"content":"done 1","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"jonathanmui4"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"jonathanmui4"},"content":"[D][X] return book  (by: 02 Sep 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":143,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":145,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"jonathanmui4"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"jonathanmui4"},"content":"Deletes a task from Duke. Index given should be a **valid number** from the task list.","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"jonathanmui4"},"content":"Format: `delete {task index}`","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"jonathanmui4"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":153,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"jonathanmui4"},"content":"delete 1","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"jonathanmui4"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"jonathanmui4"},"content":"[D][X] return book  (by: 02 Sep 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"jonathanmui4"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":162,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":163,"author":{"gitId":"jonathanmui4"},"content":"### Searching for a task: `find`","lastModifiedDate":"2021-09-25"},{"lineNumber":164,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"jonathanmui4"},"content":"Finds every task that contains the searched `keyword`.","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"jonathanmui4"},"content":"Format: `find {keyword}`","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"jonathanmui4"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":171,"author":{"gitId":"jonathanmui4"},"content":"find sep","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":173,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"jonathanmui4"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"jonathanmui4"},"content":"1.[D][ ] finish user guide  (by: 29 Sep 2021)","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"jonathanmui4"},"content":"2.[E][ ] Family Dinner  (at: Grandma\u0027s house 26 Sep 6pm)","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"jonathanmui4"},"content":"### Exit the program: `bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"jonathanmui4"},"content":"Terminates Duke.","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"jonathanmui4"},"content":"Format:`bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":185,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"jonathanmui4"},"content":"Example:","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"jonathanmui4"},"content":"bye","lastModifiedDate":"2021-09-25"},{"lineNumber":189,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"jonathanmui4"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"jonathanmui4"},"content":"─────────────────────────────────────────────────────────────","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"jonathanmui4"},"content":"```","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":194,"author":{"gitId":"jonathanmui4"},"content":"### Saving the data","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"jonathanmui4"},"content":"Task data in Duke are saved in the hard disk automatically after any command that changes the data. There is no need to ","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"jonathanmui4"},"content":"save manually.","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"jonathanmui4"},"content":"### Editing the data file","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"jonathanmui4"},"content":"AddressBook data are saved as a csv file `[JAR file location]/data/tasks.csv`. Advanced users are welcome to update data ","lastModifiedDate":"2021-09-25"},{"lineNumber":202,"author":{"gitId":"jonathanmui4"},"content":"directly by editing that data file.","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"jonathanmui4"},"content":"❗  **Caution**: If your changes to the data file is detected to be corrupted or does not conform to Duke\u0027s ","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"jonathanmui4"},"content":"saved file format (csv), Duke will not run.","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"jonathanmui4"},"content":"-----------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"jonathanmui4"},"content":"## FAQ","lastModifiedDate":"2021-09-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":211,"author":{"gitId":"jonathanmui4"},"content":"**Question:** How do I transfer my data to another Computer?","lastModifiedDate":"2021-09-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"jonathanmui4"},"content":"**Answer:** Install the app in the other computer and overwrite the empty data file it creates with the file that ","lastModifiedDate":"2021-09-25"},{"lineNumber":214,"author":{"gitId":"jonathanmui4"},"content":"contains the data of your previous Duke home folder.","lastModifiedDate":"2021-09-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":216,"author":{"gitId":"jonathanmui4"},"content":"-----------------------------------------------","lastModifiedDate":"2021-09-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":218,"author":{"gitId":"jonathanmui4"},"content":"## Command Summary","lastModifiedDate":"2021-09-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":220,"author":{"gitId":"jonathanmui4"},"content":"Action | Format | Example","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"jonathanmui4"},"content":"------ | ------ | -------","lastModifiedDate":"2021-09-25"},{"lineNumber":222,"author":{"gitId":"jonathanmui4"},"content":"Adding a Todo task | `todo {task description}` | `todo buy grapes`","lastModifiedDate":"2021-09-25"},{"lineNumber":223,"author":{"gitId":"jonathanmui4"},"content":"Adding a Deadline task | `deadline {task description} /by {due date}` | `deadline finish user guide /by 2021-09-29`","lastModifiedDate":"2021-09-25"},{"lineNumber":224,"author":{"gitId":"jonathanmui4"},"content":"Adding an Event task | `event {task description} /at {event information}` | `event Family Dinner /at Grandma\u0027s house 26 Sep 6pm`","lastModifiedDate":"2021-09-25"},{"lineNumber":225,"author":{"gitId":"jonathanmui4"},"content":"Listing all tasks | `list` | `list`","lastModifiedDate":"2021-09-25"},{"lineNumber":226,"author":{"gitId":"jonathanmui4"},"content":"Marking a task as done | `done {task index}` | `done 1`","lastModifiedDate":"2021-09-25"},{"lineNumber":227,"author":{"gitId":"jonathanmui4"},"content":"Deleting a task | `delete {task index} ` | `delete 1`","lastModifiedDate":"2021-09-25"},{"lineNumber":228,"author":{"gitId":"jonathanmui4"},"content":"Searching for a task | `find {keyword}` | `find sep`","lastModifiedDate":"2021-09-25"},{"lineNumber":229,"author":{"gitId":"jonathanmui4"},"content":"Exit the program | `bye` | `bye`","lastModifiedDate":"2021-09-25"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":231,"author":{"gitId":"jonathanmui4"},"content":"-----------------------------------------------","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"jonathanmui4":207,"-":24}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":" * \u003ch1\u003eDuke\u003c/h1\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":" * The Duke program implements an application that allows users to create a task list using the command line interface.","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":" * The task list created can store 3 different kinds of tasks: deadline, event and todos","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":" *","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":" * @author Jonathan Mui","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":" * @version 1.0","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":" * @since 2021-09-21","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor for Duke initialises the User Interface, Task list and Storage for the app whenever an instance of","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"     * Duke is created.","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"    public Duke() {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"        taskList \u003d new TaskList(ui);","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"            storage.loadData(taskList);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"     * Runs the program","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"    public void run() {","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"        ui.printHelloMessage();","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"jonathanmui4"},"content":"        processUserInput();","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"jonathanmui4"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"jonathanmui4"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"jonathanmui4"},"content":"     * Processes the User\u0027s Input through the Command Line Interface","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"jonathanmui4"},"content":"    private void processUserInput() {","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"jonathanmui4"},"content":"        boolean isProcessing \u003d true;","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"jonathanmui4"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"jonathanmui4"},"content":"        while (isProcessing) {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"jonathanmui4"},"content":"            String userInput \u003d input.nextLine().stripLeading();","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"jonathanmui4"},"content":"            try {","lastModifiedDate":"2021-09-05"},{"lineNumber":56,"author":{"gitId":"jonathanmui4"},"content":"                Command command \u003d Parser.processCommand(userInput);","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"jonathanmui4"},"content":"                command.executeCommand(taskList, storage);","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"jonathanmui4"},"content":"                isProcessing \u003d !Command.getIsExit();","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"jonathanmui4"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"jonathanmui4"},"content":"               ui.printErrorMessage(e);","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"jonathanmui4"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"jonathanmui4"},"content":"        ui.printByeMessage();","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"jonathanmui4":63,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":" * Exception class created for the Duke program. An error message will be recorded whenever the error message is thrown","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":" * in the program","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"        super(message);","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"jonathanmui4":11}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.command.AddTaskCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"import duke.command.DeleteTaskCommand;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Events;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":" * The Parser class parses the user input, extracts the command and creates the relevant command objects","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"public class Parser {","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"    //Commands stored as string constants","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"    private static final String DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"    private static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"     * Extracts command word from user input and processes the command.","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"     * @param userInput User\u0027s input","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"     * @return Command object based on the extracted command word.","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws exception to aid in identifying errors","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"    public static Command processCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"        if (userInput.equalsIgnoreCase(EXIT_COMMAND)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"jonathanmui4"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"jonathanmui4"},"content":"        } else if (userInput.equalsIgnoreCase(LIST_COMMAND)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"jonathanmui4"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"jonathanmui4"},"content":"        } else if ((userInput.toLowerCase()).contains(DONE_COMMAND)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"jonathanmui4"},"content":"            int taskIndex \u003d extractTaskIndex(userInput);","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"jonathanmui4"},"content":"            return new DoneCommand(taskIndex - 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"jonathanmui4"},"content":"        } else if ((userInput.toLowerCase()).contains(TODO_COMMAND)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"jonathanmui4"},"content":"            //4 is index after todo in input string","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"jonathanmui4"},"content":"            String toDoDescription \u003d userInput.substring(4);","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"jonathanmui4"},"content":"            if (toDoDescription.equals(\"\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"jonathanmui4"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"jonathanmui4"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"jonathanmui4"},"content":"            return new AddTaskCommand(new ToDos(toDoDescription));","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"jonathanmui4"},"content":"        } else if ((userInput.toLowerCase()).contains(EVENT_COMMAND)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"jonathanmui4"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"jonathanmui4"},"content":"                int endOfDescriptionIndex \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"jonathanmui4"},"content":"                //5 is index after \"event\" in input string","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"jonathanmui4"},"content":"                String eventDescription \u003d userInput.substring(5, endOfDescriptionIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"jonathanmui4"},"content":"                //3 is no of chars after \"at\"","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"jonathanmui4"},"content":"                String at \u003d userInput.substring(endOfDescriptionIndex + 3);","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"jonathanmui4"},"content":"                if (at.equals(\"\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"jonathanmui4"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please indicate when the event happens after /at\");","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"jonathanmui4"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"jonathanmui4"},"content":"                return new AddTaskCommand(new Events(eventDescription, at));","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"jonathanmui4"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"jonathanmui4"},"content":"                throw new DukeException(\"☹ OOPS!!! Please key in command in format: \\\"event taskDescription /at eventLocation\\\".\");","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"jonathanmui4"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"jonathanmui4"},"content":"        } else if ((userInput.toLowerCase()).contains(DEADLINE_COMMAND)) {","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"jonathanmui4"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"jonathanmui4"},"content":"                int endOfDescriptionIndex \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"jonathanmui4"},"content":"                //8 is index after \"deadline\" in input string","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"jonathanmui4"},"content":"                String deadlineDescription \u003d userInput.substring(8, endOfDescriptionIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"jonathanmui4"},"content":"                //3 is no of chars after \u0027by\u0027","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"jonathanmui4"},"content":"                String deadline \u003d userInput.substring(endOfDescriptionIndex + 4);","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"jonathanmui4"},"content":"                LocalDate deadlineDate \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"jonathanmui4"},"content":"                if (deadline.equals(\"\")) {","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"jonathanmui4"},"content":"                    throw new DukeException(\"☹ OOPS!!! Please indicate the deadline after /by\");","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"jonathanmui4"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"jonathanmui4"},"content":"                return new AddTaskCommand(new Deadline(deadlineDescription, deadlineDate));","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"jonathanmui4"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"jonathanmui4"},"content":"                throw new DukeException(\"☹ OOPS!!! Please key in command in format: \\\"deadline taskDescription /by deadline\\\".\");","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"jonathanmui4"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-24"},{"lineNumber":82,"author":{"gitId":"jonathanmui4"},"content":"                throw new DukeException(\"☹ OOPS!!! Please key in date in format: yyyy-mm-dd\");","lastModifiedDate":"2021-09-24"},{"lineNumber":83,"author":{"gitId":"jonathanmui4"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"jonathanmui4"},"content":"        } else if ((userInput.toLowerCase()).contains(DELETE_COMMAND)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"jonathanmui4"},"content":"            int taskIndex \u003d extractTaskIndex(userInput);","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"jonathanmui4"},"content":"            return new DeleteTaskCommand(taskIndex - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"jonathanmui4"},"content":"        } else if ((userInput.toLowerCase()).startsWith(FIND_COMMAND)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"jonathanmui4"},"content":"            try {","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"jonathanmui4"},"content":"                //5 is no of chars after \u0027find \u0027","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"jonathanmui4"},"content":"                String keyword \u003d userInput.substring(5);","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"jonathanmui4"},"content":"                return new FindCommand(keyword);","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"jonathanmui4"},"content":"            } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"jonathanmui4"},"content":"               throw new DukeException(\"☹ OOPS!!! Please key in command in format: \\\"find {keyword}\\\"\");","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"jonathanmui4"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"jonathanmui4"},"content":"        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"jonathanmui4"},"content":"     * Extracts index of task to delete or mark as done","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"jonathanmui4"},"content":"     * @param userInput User input read as a string","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"jonathanmui4"},"content":"     * @return taskIndex Returns index of task to delete or mark as done","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws exception to aid in identifying errors","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"jonathanmui4"},"content":"    private static int extractTaskIndex(String userInput) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"jonathanmui4"},"content":"        String[] extractedCommand \u003d userInput.split(\" \");","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"jonathanmui4"},"content":"        int taskIndex;","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"jonathanmui4"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"jonathanmui4"},"content":"            taskIndex \u003d Integer.parseInt(extractedCommand[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"jonathanmui4"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"jonathanmui4"},"content":"            throw new DukeException(\"☹ OOPS!!! Please provide a valid number!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"jonathanmui4"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"jonathanmui4"},"content":"            throw new DukeException(\"☹ OOPS!!! Please specify index of the task!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"jonathanmui4"},"content":"        return taskIndex;","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"jonathanmui4":117}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Events;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"import java.io.File;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":" * Storage class transfers the user\u0027s data from the task list to a csv file","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"public class Storage {","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"    private final String STORAGE_PATH \u003d \"data/tasks.csv\";","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"    private final File file \u003d new File(STORAGE_PATH);","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor of Storage class creates the data folder and tasks.csv file if it does not already exist.","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Exception is thrown when the tasks.csv file cannot be created","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"    public Storage() throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"            file.createNewFile();","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"            throw new DukeException(\"☹ OOPS!!! Data file can\u0027t be found.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"     * Loads data from csv file into the array list","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskList Manages the tasks after loading data","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws exception to aid in identifying errors","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"jonathanmui4"},"content":"    public void loadData(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"jonathanmui4"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"jonathanmui4"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"jonathanmui4"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"jonathanmui4"},"content":"                Task task \u003d readTask(scanner.nextLine());","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"jonathanmui4"},"content":"                taskList.addTasks(task,false);","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"jonathanmui4"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"jonathanmui4"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"jonathanmui4"},"content":"            throw new DukeException(\"☹ OOPS!!! Error loading data!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"jonathanmui4"},"content":"        } catch (DukeException readTaskException) {","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"jonathanmui4"},"content":"            throw readTaskException;","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"jonathanmui4"},"content":"     * Reads in data from csv file, breaks it down and stores them in task object","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"jonathanmui4"},"content":"     * @param data Data read in from csv file","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"jonathanmui4"},"content":"     * @return task Returns task created from data read from csv file","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"jonathanmui4"},"content":"    private Task readTask(String data) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"jonathanmui4"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"jonathanmui4"},"content":"        String[] taskBreakdown \u003d data.split(\",\");","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"jonathanmui4"},"content":"        if (taskBreakdown[2].contains(\"|\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"jonathanmui4"},"content":"            taskBreakdown[2] \u003d taskBreakdown[2].replace(\"|\", \",\");","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"jonathanmui4"},"content":"        switch (taskBreakdown[0]) {","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"jonathanmui4"},"content":"        case \"T\":","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"jonathanmui4"},"content":"            task \u003d new ToDos(taskBreakdown[2]);","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"jonathanmui4"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"jonathanmui4"},"content":"        case \"D\":","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"jonathanmui4"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(taskBreakdown[3]);","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"jonathanmui4"},"content":"            task \u003d new Deadline(taskBreakdown[2], deadlineDate);","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"jonathanmui4"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"jonathanmui4"},"content":"        case \"E\":","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"jonathanmui4"},"content":"            task \u003d new Events(taskBreakdown[2], taskBreakdown[3]);","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"jonathanmui4"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"jonathanmui4"},"content":"        default:","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"jonathanmui4"},"content":"            throw new DukeException(\"☹ OOPS!!! Error saving data!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"jonathanmui4"},"content":"        if (taskBreakdown[1].equals(\"[X]\") \u0026\u0026 task !\u003d null) {","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"jonathanmui4"},"content":"            task.markAsDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"jonathanmui4"},"content":"        return task;","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"jonathanmui4"},"content":"     * Saves Tasks from arraylist taskList into csv file","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskList Manages the tasks after loading data","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws exception to aid in identifying errors","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"jonathanmui4"},"content":"    public void saveData(TaskList taskList) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"jonathanmui4"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"jonathanmui4"},"content":"            FileWriter fileWriter \u003d new FileWriter(STORAGE_PATH);","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"jonathanmui4"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"jonathanmui4"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"jonathanmui4"},"content":"                    fileWriter.write(task.convertToCSV() + System.lineSeparator());","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"jonathanmui4"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"jonathanmui4"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"jonathanmui4"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"jonathanmui4"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"jonathanmui4"},"content":"            throw new DukeException(\"☹ OOPS!!! Error saving data!\");","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"jonathanmui4":104}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Events;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":" * TaskList class represents a real-life task list and handles all task operations including adding tasks into the list,","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":" * removing tasks from the list, finding tasks in the list, marking tasks as done and printing the whole list on the","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":" * console.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"public class TaskList {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"    public TaskList(Ui ui) {","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"        return tasks;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"     * Adds task to task list represented by tasks array.","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"     * @param task Task to add","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"    public void addTasks(Task task, boolean toPrint) {","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"        if (toPrint) {","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"            ui.printAddTaskMessage(task, tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"jonathanmui4"},"content":"     * Prints the tasks list","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"jonathanmui4"},"content":"    public void printTasks() {","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"jonathanmui4"},"content":"        ui.printTaskList(tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"jonathanmui4"},"content":"     * Mark a task given by its index as done","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"jonathanmui4"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskIndex Index of task in task list to mark as done","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws exception to aid in identifying errors","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"jonathanmui4"},"content":"    public void markTaskAsDone(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"jonathanmui4"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"jonathanmui4"},"content":"            throw new DukeException(\"☹ OOPS!!! Please select a task in the task list!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"jonathanmui4"},"content":"        tasks.get(taskIndex).markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"jonathanmui4"},"content":"        ui.printTaskDoneMessage(taskIndex, tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"jonathanmui4"},"content":"     * Deletes a task given by its index","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"jonathanmui4"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":64,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskIndex Index of task in task list to delete","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws exception to aid in identifying errors","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"jonathanmui4"},"content":"    public void deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"jonathanmui4"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"jonathanmui4"},"content":"            throw new DukeException(\"☹ OOPS!!! Please select a task in the task list!\");","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"jonathanmui4"},"content":"        ui.printDeleteTaskMessage(taskIndex, tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"jonathanmui4"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"jonathanmui4"},"content":"     * Finds a task given by a keyword","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"jonathanmui4"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"jonathanmui4"},"content":"     * @param keyword Keyword to search for within each task","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"jonathanmui4"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"jonathanmui4"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.stream()","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"jonathanmui4"},"content":"                .filter(task -\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"jonathanmui4"},"content":"                    if (task.getDescription().toLowerCase().contains(keyword)) {","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"jonathanmui4"},"content":"                        return true;","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"jonathanmui4"},"content":"                    }","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"jonathanmui4"},"content":"                    if (task instanceof Deadline) {","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"jonathanmui4"},"content":"                        return (((Deadline) task).getDeadline().toLowerCase().contains(keyword) ||","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"jonathanmui4"},"content":"                                task.getDescription().toLowerCase().contains(keyword));","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"jonathanmui4"},"content":"                    }","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"jonathanmui4"},"content":"                    if (task instanceof Events) {","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"jonathanmui4"},"content":"                        return (((Events) task).getEventLocation().toLowerCase().contains(keyword) ||","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"jonathanmui4"},"content":"                                task.getDescription().toLowerCase().contains(keyword));","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"jonathanmui4"},"content":"                    }","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"jonathanmui4"},"content":"                    return false;","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"jonathanmui4"},"content":"                })","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"jonathanmui4"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"jonathanmui4"},"content":"        ui.printFindTask(matchingTasks);","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"jonathanmui4":99}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":" * Ui class manages the printing of messages onto the Command Line Interface","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"public class Ui {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"    private static final String LINE \u003d \"─────────────────────────────────────────────────────────────\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"     * Prints the exit message onto the CLI","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"    public void printByeMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"        String byeGreeting \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE + byeGreeting + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"     * Prints the welcome message onto the CLI","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"    public void printHelloMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"        String helloGreeting \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE + helloGreeting + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":"     * Prints the error message whenever an exception is thrown","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"     * @param e Exception thrown","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"jonathanmui4"},"content":"    public void printErrorMessage(DukeException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"jonathanmui4"},"content":"     * Prints a message to the CLI whenever a task is added to the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"jonathanmui4"},"content":"     * @param task The task that was added to the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"jonathanmui4"},"content":"     * @param tasks ArrayList to store tasks into the task list at run time","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"jonathanmui4"},"content":"    public void printAddTaskMessage(Task task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(\"Now you have \" + (tasks.size()) + \" tasks in the list.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"jonathanmui4"},"content":"     * Prints a message to the CLI whenever a task is deleted from the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskIndex Index of task that was deleted","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"jonathanmui4"},"content":"     * @param tasks ArrayList to store tasks into the task list at run time","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"jonathanmui4"},"content":"    public void printDeleteTaskMessage(int taskIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(\"Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"jonathanmui4"},"content":"     * Prints a message to the CLI when a task is done from the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskIndex Index of task that was done","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"jonathanmui4"},"content":"     * @param tasks ArrayList to store tasks into the task list at run time","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"jonathanmui4"},"content":"    public void printTaskDoneMessage(int taskIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"jonathanmui4"},"content":"     * Prints the entire task list","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"jonathanmui4"},"content":"     * @param tasks ArrayList to store tasks into the task list at run time","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"jonathanmui4"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"jonathanmui4"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"jonathanmui4"},"content":"            System.out.println(\"Task list is empty. Add some tasks in!\");","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"jonathanmui4"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"jonathanmui4"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"jonathanmui4"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"jonathanmui4"},"content":"                System.out.println((i+1) + \".\" + tasks.get(i));","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"jonathanmui4"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"jonathanmui4"},"content":"     * Prints a message to the Command Line Interface when the given task is found","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"jonathanmui4"},"content":"     * @param matchingTasks List of tasks that match the given keyword","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"jonathanmui4"},"content":"    public void printFindTask(List\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"jonathanmui4"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"jonathanmui4"},"content":"            System.out.println(\"No matching tasks found!\");","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"jonathanmui4"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"jonathanmui4"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"jonathanmui4"},"content":"            for (int i \u003d 0; i \u003cmatchingTasks.size(); i++) {","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"jonathanmui4"},"content":"                System.out.println((i+1) + \".\" + matchingTasks.get(i));","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"jonathanmui4"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"jonathanmui4"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"jonathanmui4":117}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":" * Class that represents and defines the behaviour of the Add command","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"public class AddTaskCommand extends Command{","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"    protected Task task;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor initialises the Add task command object with the task to be added to the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"     * @param task Task to add into task list","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"     * Executes Add task command and adds given task into the Task list","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskList Task Manager that executes task based on the given command","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"     * @param storage Stores User data in a csv file","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws any error messages from addTasks or saveData functions","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"    public void executeCommand(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"        taskList.addTasks(task, true);","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"jonathanmui4":33}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":" * Abstract class that defines the behaviour of all command objects","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"    protected static boolean isExit \u003d false;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"     * Sets isExit status when the Exit command is executed","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"    public void hasExecutedExitCommand() {","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"        isExit \u003d true;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"     * Checks whether the command object is an exit command","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"     * @return Returns true if current command object is exit command, false otherwise","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"    public static boolean getIsExit() {","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"        return isExit;","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"     * Executes the given command","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskList Task Manager that executes task based on the given command","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws exception to aid in identifying errors","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"    public abstract void executeCommand(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"jonathanmui4":34}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.command;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":" * Class that represents and defines the behaviour of the Delete command","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"public class DeleteTaskCommand extends Command{","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"    protected int taskIndex;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor initialises the Delete task command with the index of the task to be deleted from the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskIndex Index of task to be removed from the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"    public DeleteTaskCommand(int taskIndex) { this.taskIndex \u003d taskIndex; }","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"     * Executes Delete task command and deletes the given task from the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskList Task Manager that executes task based on the given command","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"     * @param storage Stores User data in a csv file","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws any error messages from deleteTask or saveData functions","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"    public void executeCommand(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"        taskList.deleteTask(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"jonathanmui4":30}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":" * Class that defines and represents the behaviour of the Done command","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"    protected int taskIndex;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor initialises the Done command with the index of the task to be marked as done in the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskIndex","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"    public DoneCommand(int taskIndex) {","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"     * Executes Command and marks task as done in the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskList Task Manager that executes task based on the given command","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"     * @param storage Stores User data in a csv file","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"     * @throws DukeException Throws any error messages from markTaskAsDone or saveData functions","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"    public void executeCommand(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"        taskList.markTaskAsDone(taskIndex);","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"        storage.saveData(taskList);","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"jonathanmui4":32}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":" * Class that defines and represents the behaviour of the Exit command","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor sets isExit in Parent Command class to true","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"        hasExecutedExitCommand();","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"     * Does nothing in this case","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskList Task Manager that executes task based on the given command","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"     * @param storage Stores User data in a csv file","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"    public void executeCommand(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"jonathanmui4":26}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.command;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":" * Class that defines and represents the behaviour of the Find command","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"    protected String keyword;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor initialises Find command with the keyword to look out for in every task","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"     * @param keyword Keyword given by user to filter tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"     * Executes Command and finds every task with the given keyword","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskList Task Manager that executes task based on the given command","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"     * @param storage Stores User data in a csv file","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"    public void executeCommand(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"        taskList.findTask(keyword);","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"jonathanmui4":29}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":" * Class that represents and defines the behaviour of the List command","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"     * Executes the command and lists every task in the task list","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"     * @param taskList Task Manager that executes task based on the given command","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"     * @param storage Stores User data in a csv file","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"    public void executeCommand(TaskList taskList, Storage storage) {","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"        taskList.printTasks();","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"jonathanmui4":20}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":" * Class representing a Deadline task","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"    protected String deadline;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"    protected LocalDate deadlineDate;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor for a Deadline task initialises the Deadline task\u0027s description and deadline","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"     * @param deadlineDate Deadline of the task in LocalDate type","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"    public Deadline(String description, LocalDate deadlineDate) {","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"        this.deadlineDate \u003d deadlineDate;","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"        deadline \u003d deadlineDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"     * Gets the current Deadline task\u0027s description","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"     * @return Current task\u0027s deadline","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"        return deadline;","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"     * Converts the current Deadline task into a String","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"     * @return Deadline task in the form of a String","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"        if (description.contains(\"|\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"            description \u003d description.replace(\"|\", \",\");","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"jonathanmui4"},"content":"        return \"[D]\" + getStatusIcon() + description + \" (by: \" + deadline + \")\";","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"jonathanmui4"},"content":"     * Converts the current Deadline task object into a format that can be stored in a CSV file.","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"jonathanmui4"},"content":"     * @return Deadline task in the form of a comma separated value","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"jonathanmui4"},"content":"    public String convertToCSV() {","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"jonathanmui4"},"content":"        if (description.contains(\",\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"jonathanmui4"},"content":"            description \u003d description.replace(\",\", \"|\");","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"jonathanmui4"},"content":"        return (\"D,\" + getStatusIcon() + \",\" + description + \",\" + deadlineDate);","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jonathanmui4":55}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":" * Class representing an Event task","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"public class Events extends Task{","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"    protected String eventLocation;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor for an Event task initialises the Event task\u0027s description and location","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"     * @param description Description of the event","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"     * @param eventLocation Location of the event","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"    public Events(String description, String eventLocation) {","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"        this.eventLocation \u003d eventLocation;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"     * Gets the current Event task\u0027s description","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"     * @return Current event\u0027s location","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"    public String getEventLocation() {","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"        return eventLocation;","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"     * Converts the current Event task into a String","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"     * @return Event task in the form of a String","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"        if (description.contains(\"|\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"            description \u003d description.replace(\"|\", \",\");","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"        return \"[E]\" + getStatusIcon() + description + \" (at:\" + eventLocation + \")\";","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"jonathanmui4"},"content":"     * Converts the current Event task object into a format that can be stored in a CSV file.","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"jonathanmui4"},"content":"     * @return Event task in the form of a comma separated value","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"jonathanmui4"},"content":"    public String convertToCSV() {","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"jonathanmui4"},"content":"        if (description.contains(\",\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"jonathanmui4"},"content":"            description \u003d description.replace(\",\", \"|\");","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"jonathanmui4"},"content":"        return (\"E,\" + getStatusIcon() + \",\" + description + \",\" + eventLocation);","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jonathanmui4":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":" * Parent class for all Tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor for Task class initialises the current task\u0027s description and isDone status.","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"     * @param description Task Description","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"     * Gets the current task object\u0027s description","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"     * @return Returns the task\u0027s description","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"        return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"     * Mark the current task object as done","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"     * Gets the current task object\u0027s Status Icon.","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"     * @return Returns the task\u0027s status icon","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"jonathanmui4"},"content":"     * Converts the current task object into a format that can be stored in a CSV file. Method is overridden in","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"jonathanmui4"},"content":"     * children classes","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"jonathanmui4"},"content":"     * @return Current task object in CSV format","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"jonathanmui4"},"content":"    public String convertToCSV() { return \"\"; }","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"jonathanmui4":48}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":" * Class representing Todo task.","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"public class ToDos extends Task{","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"     * Constructor for Todo task initialises the description for the todo task","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"     * @param description Todo task description","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"     * Converts the current Todo task into a String","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"     * @return Todo task in the form of a String","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"        if (description.contains(\"|\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"            description \u003d description.replace(\"|\", \",\");","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"        return \"[T]\" + getStatusIcon() + description;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"     * Converts the current Todo task object into a format that can be stored in a CSV file.","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"     * @return Todo task in the form of a comma separated value","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"jonathanmui4"},"content":"    public String convertToCSV() {","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"jonathanmui4"},"content":"        if (description.contains(\",\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"jonathanmui4"},"content":"            description \u003d description.replace(\",\", \"|\");","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"jonathanmui4"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"jonathanmui4"},"content":"        return (\"T,\" + getStatusIcon() + \",\" + description);","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"jonathanmui4"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"jonathanmui4"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"jonathanmui4":39}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jonathanmui4"},"content":"random","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"jonathanmui4"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"jonathanmui4"},"content":"deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"jonathanmui4"},"content":"deadline return book /by","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"jonathanmui4"},"content":"event","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"jonathanmui4"},"content":"event Exco+ meeting /at","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"jonathanmui4"},"content":"todo buy food","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"jonathanmui4"},"content":"deadline return book /by 2 Sep","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"jonathanmui4"},"content":"deadline return book /by 2021-09-02","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"event Exco+ meeting /at OYP this sat 10-12pm","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"jonathanmui4"},"content":"deadline collect pack at oyp /by 2021-09-03","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"jonathanmui4"},"content":"todo read book","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"jonathanmui4"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"jonathanmui4"},"content":"done 1","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"jonathanmui4"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"find","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"jonathanmui4"},"content":"find waldo","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"find book","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"jonathanmui4"},"content":"find oyp","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"jonathanmui4"},"content":"done 5","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"jonathanmui4"},"content":"done a","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"jonathanmui4"},"content":"done","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"delete 5","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"jonathanmui4"},"content":"delete a","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"jonathanmui4"},"content":"delete","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"jonathanmui4"},"content":"delete 1","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"jonathanmui4"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"jonathanmui4"},"content":"delete 1","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"jonathanmui4"},"content":"delete 1","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"jonathanmui4"},"content":"delete 1","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"jonathanmui4"},"content":"list","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"jonathanmui4"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"jonathanmui4":32}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"jonathanmui4"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\task\\*.java ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"jonathanmui4"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonathanmui4":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"jonathanmui4"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/command/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"jonathanmui4"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"jonathanmui4":2,"-":36}}]
