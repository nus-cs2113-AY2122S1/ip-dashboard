[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"Lennox is a command-line based personal assistant chatbot that helps users keep track of their tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"It is easy to use with just a handful of commands and has functionalities to store todo, deadline, and event items.","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"Their respective completion status can be tracked and items can also be removed as and when the user deems fit.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"## Quick Start","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"1. Make sure you have **Java 11** installed running on your computer.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"2. Download the **lennox.jar** file [here](https://github.com/KVignesh122/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"3. Store the jar file to your preferred directory locally.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"4. To run file, open a Terminal at this directory and enter `java -jar lennox.jar`.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"5. Follow the on-screen instructions and select the appropriate mode for the chatbot.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"6. Enjoy your session with Lennox personal assistant!","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"### Modes","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"#########################################################","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"\tHello from \t\t\t\t\t","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"\t,--.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"\t|  |   ,---.,--,--,,--,--, ,---,--.  ,--","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"\t|  |  | .-. |      |      | .-. \\  `\u0027  /","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"\t|  \u0027--\\   --|  ||  |  ||  \u0027 \u0027-\u0027 /  /.  \\","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"\t`-----\u0027`----`--\u0027\u0027--`--\u0027\u0027--\u0027`---\u0027--\u0027  \u0027--","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"\t\t +\"\"\"\"\"+ \t +\"\"\"\"\"+ \t +\"\"\"\"\"+ ","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"\t\t[| o o |]\t[| o o |]\t[| o o |]","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"\t\t |  ^  | \t |  ^  | \t |  ^  | ","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"\t\t | \u0027-\u0027 | \t | \u0027-\u0027 | \t | \u0027-\u0027 | ","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"\t\t +-----+ \t +-----+ \t +-----+ ","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"#########################################################","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"\tHi there! I\u0027m Lennox - your personal chatbot","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"\tWhat can I do for you today?","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"\t* Enter 1 for Echo mode.","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":" \t* Enter 2 for Task mode.","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"The chatbot can be operated in 2 different modes:-","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"* _**ECHO mode**_ (Option \u00271\u0027 in startup menu): ","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"  * Type in your messages or task description for chatbot to display them back to you.","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"  * Acts as temporary post-it sticky notes for you to complete message/task actions soon.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"  * Post-it notes keyed in ECHO mode are not stored by program when exiting.","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"* _**TASK mode**_ (Option \u00272\u0027 in startup menu):","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"  * Register todo, event, and deadline tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"  * More powerful compared to ECHO mode. Allows you to mark tasks as done or remove them from database.","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"  * Tasks are stored locally when exiting and are loaded back into program when relaunching.","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"### *Note On Command Format*","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"\u003e Required user inputs are represented as phrases in UPPER_CASE throughout this user guide, such as:","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"\u003e * `DESCRIPTION` Description or name of task/note.","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"\u003e * `TIMING` Time or date at which an event is happening.","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"\u003e * `DEADLINE` Date and/or time by which a task is due.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"\u003e * `INDEX` Index number of task in TASK mode inventory when displayed with `list` command.","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"\u003e * `STRING` Phrase or word user would like to search for in tasks inventory with `find` command.","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"\u003e ","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"\u003e Appropriate on-screen error messages or instructions are also displayed by Lennox if user inputs wrongly","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"\u003e formatted command.","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"### Adding a sticky note","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"In ECHO mode, type in description of urgent items and they will be displayed back to you for quick reference.","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"For instance, you can take note of a phone number to call, or remind yourself to send out an email soon.","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"Format:","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"Listening\u003e DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"````","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"1. Example of usage:","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"Listening\u003e Go get coffee at 3pm","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"````","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"You have entered: Go get coffee at 3pm","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"KVignesh122"},"content":"2. Example of usage ","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"KVignesh122"},"content":"Listening\u003e Pass file to John when he is back","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome*","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"You have entered: Pass file to John when he is back","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"KVignesh122"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"KVignesh122"},"content":"_**Note: Post-it messages are lost when chatbot is quit.**_","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"KVignesh122"},"content":"### `switch` - Switching between modes","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"KVignesh122"},"content":"Key in `switch` keyword in either TASK or ECHO mode to switch chatbot to the other mode.","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"KVignesh122"},"content":"**1. Format in ECHO mode:**","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"KVignesh122"},"content":"Listening\u003e switch","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"KVignesh122"},"content":"Chatbot enters TASK mode and waits for your input.","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"KVignesh122"},"content":"        ____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"KVignesh122"},"content":"\tTASK MODE - Enter items to include in to-do list.","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e ","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"KVignesh122"},"content":"**2. Format in TASK mode:**","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e switch","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"KVignesh122"},"content":"Chatbot enters ECHO mode and waits for your input.","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"KVignesh122"},"content":"        ____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"\tECHO MODE - Commands entered will be echoed back.","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"KVignesh122"},"content":"Listening\u003e ","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"### `todo` - Adding a todo task","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"KVignesh122"},"content":"A todo task can be added to the chatbot\u0027s tasks inventory, and it does not need to contain a deadline or event time.","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"KVignesh122"},"content":"**Format:**","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e todo DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"KVignesh122"},"content":"**1. Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e todo Wash dishes","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":158,"author":{"gitId":"KVignesh122"},"content":"Lennox prints out confirmation message, and the number of tasks currently in inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"KVignesh122"},"content":"        ____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"KVignesh122"},"content":"\tGot it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"KVignesh122"},"content":"\t[T][ ] Wash dishes","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"KVignesh122"},"content":"\tNow there are 1 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":168,"author":{"gitId":"KVignesh122"},"content":"**2. Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e todo Iron clothes","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"KVignesh122"},"content":"        ____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"KVignesh122"},"content":"\tGot it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"KVignesh122"},"content":"\t[T][ ] Iron clothes","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"KVignesh122"},"content":"\tNow there are 2 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":183,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"KVignesh122"},"content":"### `event` - Adding an event task","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"KVignesh122"},"content":"An event task is that which has a specific timing or date to it. An event task can be added to the chatbot\u0027s inventory together with its time/date.","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"KVignesh122"},"content":"**Format:**","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e event DESCRIPTION /at TIMING","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"KVignesh122"},"content":"**1. Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e event sarah birthday party /at 4pm","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"KVignesh122"},"content":"Lennox prints out confirmation message and the number of tasks currently in inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"KVignesh122"},"content":"        ____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"KVignesh122"},"content":"\tGot it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"KVignesh122"},"content":"\t[E][ ] sarah birthday party (at: 4pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"KVignesh122"},"content":"\tNow there are 3 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"KVignesh122"},"content":"**2. Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e event attend colleague marriage /at Tuesday 6pm","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":219,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"KVignesh122"},"content":"        ____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"KVignesh122"},"content":"\tGot it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"KVignesh122"},"content":"\t[E][ ] attend colleague marriage (at: Tuesday 6pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":224,"author":{"gitId":"KVignesh122"},"content":"\tNow there are 4 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"KVignesh122"},"content":"### `deadline` - Adding a deadline task","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":230,"author":{"gitId":"KVignesh122"},"content":"A deadline task to be included in the chatbot\u0027s inventory should include a deadline for the task.","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"KVignesh122"},"content":"**Format:**","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":234,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e deadline DESCRIPTION /by DEADLINE","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"KVignesh122"},"content":"**1. Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e deadline Complete CS1010 assignment /by 16/9 2359","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":243,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":244,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":245,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":246,"author":{"gitId":"KVignesh122"},"content":"Lennox prints out confirmation message and the number of tasks currently in inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":247,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":249,"author":{"gitId":"KVignesh122"},"content":"        ____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":250,"author":{"gitId":"KVignesh122"},"content":"\tGot it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":251,"author":{"gitId":"KVignesh122"},"content":"\t[D][ ] Complete CS1010 assignment (by: 16/9 2359)","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"KVignesh122"},"content":"\tNow there are 5 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":253,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":254,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":256,"author":{"gitId":"KVignesh122"},"content":"**2. Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":257,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e deadline finish project report /by asap","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":262,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"KVignesh122"},"content":"        ____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"KVignesh122"},"content":"\tGot it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-29"},{"lineNumber":267,"author":{"gitId":"KVignesh122"},"content":"\t[D][ ] finish project report (by: asap)","lastModifiedDate":"2021-09-29"},{"lineNumber":268,"author":{"gitId":"KVignesh122"},"content":"\tNow there are 6 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":270,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":271,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"KVignesh122"},"content":"### `list` - Display all tasks stored in chatbot","lastModifiedDate":"2021-09-29"},{"lineNumber":273,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"KVignesh122"},"content":"Lennox displays all the tasks that you have created, in an easy-to-view format.","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"KVignesh122"},"content":"It contains the task type (eg, [T] - Todo, [D] - Deadline, [E] - Event) and their completion status marked by an [X].","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"KVignesh122"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e list","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":286,"author":{"gitId":"KVignesh122"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":287,"author":{"gitId":"KVignesh122"},"content":"\tCURRENT ADDED LIST","lastModifiedDate":"2021-09-29"},{"lineNumber":288,"author":{"gitId":"KVignesh122"},"content":"\t1. [T][ ] Wash dishes","lastModifiedDate":"2021-09-29"},{"lineNumber":289,"author":{"gitId":"KVignesh122"},"content":"\t2. [T][ ] Iron clothes","lastModifiedDate":"2021-09-29"},{"lineNumber":290,"author":{"gitId":"KVignesh122"},"content":"\t3. [E][ ] sarah birthday party (at: 4pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":291,"author":{"gitId":"KVignesh122"},"content":"\t4. [E][ ] attend colleague marriage (at: Tuesday 6pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"KVignesh122"},"content":"\t5. [D][ ] Complete CS1010 assignment (by: 16/9 2359)","lastModifiedDate":"2021-09-29"},{"lineNumber":293,"author":{"gitId":"KVignesh122"},"content":"\t6. [D][ ] finish project report (by: asap)","lastModifiedDate":"2021-09-29"},{"lineNumber":294,"author":{"gitId":"KVignesh122"},"content":"\t------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":295,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":297,"author":{"gitId":"KVignesh122"},"content":"### `done` - Marking a task as complete","lastModifiedDate":"2021-09-29"},{"lineNumber":298,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":299,"author":{"gitId":"KVignesh122"},"content":"Lennox provides you the ability to mark a specific task as complete or incomplete","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"KVignesh122"},"content":"with the index of the task in the inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"KVignesh122"},"content":"**Format:**","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e done INDEX","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"KVignesh122"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e done 1","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":313,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":314,"author":{"gitId":"KVignesh122"},"content":"*Expected output:*","lastModifiedDate":"2021-09-29"},{"lineNumber":315,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":316,"author":{"gitId":"KVignesh122"},"content":"Checks the first item in the inventory as complete, by indicating it with [X].","lastModifiedDate":"2021-09-29"},{"lineNumber":317,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":319,"author":{"gitId":"KVignesh122"},"content":"        ____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":320,"author":{"gitId":"KVignesh122"},"content":"\tThat\u0027s great! Wash dishes has been checked as completed!","lastModifiedDate":"2021-09-29"},{"lineNumber":321,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"KVignesh122"},"content":"In this example, the first task is `Wash dishes` so it has been marked as complete.","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":326,"author":{"gitId":"KVignesh122"},"content":"### `delete` or `remove` - Clearing a task from inventory","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":328,"author":{"gitId":"KVignesh122"},"content":"You can remove a task from the inventory as you deem fit with the index number of the task in inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":329,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":330,"author":{"gitId":"KVignesh122"},"content":"**Format:**","lastModifiedDate":"2021-09-29"},{"lineNumber":331,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":332,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":333,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e delete INDEX","lastModifiedDate":"2021-09-29"},{"lineNumber":334,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":335,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":336,"author":{"gitId":"KVignesh122"},"content":"**Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":338,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":339,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e delete 2","lastModifiedDate":"2021-09-29"},{"lineNumber":340,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":342,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":343,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":344,"author":{"gitId":"KVignesh122"},"content":"The 2nd task in list is removed and the remaining task\u0027s index numbers are updated accordingly.","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"KVignesh122"},"content":"Updated list is printed out too.","lastModifiedDate":"2021-09-29"},{"lineNumber":346,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"KVignesh122"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":349,"author":{"gitId":"KVignesh122"},"content":"\tIron clothes removed from list!","lastModifiedDate":"2021-09-29"},{"lineNumber":350,"author":{"gitId":"KVignesh122"},"content":"\tNow you have 5 tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"KVignesh122"},"content":"\t------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"KVignesh122"},"content":"\t------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"KVignesh122"},"content":"\tCURRENT ADDED LIST","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"KVignesh122"},"content":"\t1. [T][X] Wash dishes","lastModifiedDate":"2021-09-29"},{"lineNumber":356,"author":{"gitId":"KVignesh122"},"content":"\t2. [E][ ] sarah birthday party (at: 4pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":357,"author":{"gitId":"KVignesh122"},"content":"\t3. [E][ ] attend colleague marriage (at: Tuesday 6pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":358,"author":{"gitId":"KVignesh122"},"content":"\t4. [D][ ] Complete CS1010 assignment (by: 16/9 2359)","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"KVignesh122"},"content":"\t5. [D][ ] finish project report (by: asap)","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"KVignesh122"},"content":"\t------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":361,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":362,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"KVignesh122"},"content":"Originally, the second task in the inventory was `Iron clothes`. This task is removed and ","lastModifiedDate":"2021-09-29"},{"lineNumber":364,"author":{"gitId":"KVignesh122"},"content":"the remaining tasked are pushed up in the inventory. Tasks\u0027 index are re-numbered accordingly.","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"KVignesh122"},"content":"### `find` - Searching for tasks using a keyword","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"KVignesh122"},"content":"You can find specific tasks in the inventory by searching for them through `find` command.","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":370,"author":{"gitId":"KVignesh122"},"content":"**Format:**","lastModifiedDate":"2021-09-29"},{"lineNumber":371,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":372,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":373,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e find STRING","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":375,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"KVignesh122"},"content":"**1. Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e find wash dishes","lastModifiedDate":"2021-09-29"},{"lineNumber":380,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":382,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":384,"author":{"gitId":"KVignesh122"},"content":"Any task which contains the search STRING will be returned, regardless of character case.","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":386,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":387,"author":{"gitId":"KVignesh122"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":388,"author":{"gitId":"KVignesh122"},"content":"\tTasks found for keyword, WASH DISHES","lastModifiedDate":"2021-09-29"},{"lineNumber":389,"author":{"gitId":"KVignesh122"},"content":"\t1| [T][X] Wash dishes","lastModifiedDate":"2021-09-29"},{"lineNumber":390,"author":{"gitId":"KVignesh122"},"content":"\t------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":391,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":392,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":393,"author":{"gitId":"KVignesh122"},"content":"**2. Example of usage:**","lastModifiedDate":"2021-09-29"},{"lineNumber":394,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":395,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":396,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e find sarah","lastModifiedDate":"2021-09-29"},{"lineNumber":397,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":398,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":399,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":400,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":401,"author":{"gitId":"KVignesh122"},"content":"If there are more than one tasks containing the input `STRING`,","lastModifiedDate":"2021-09-29"},{"lineNumber":402,"author":{"gitId":"KVignesh122"},"content":"all of them will be displayed alongside the index at which the task appears in master inventory.","lastModifiedDate":"2021-09-29"},{"lineNumber":403,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":404,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":405,"author":{"gitId":"KVignesh122"},"content":"        ------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":406,"author":{"gitId":"KVignesh122"},"content":"\tTasks found for keyword, SARAH","lastModifiedDate":"2021-09-29"},{"lineNumber":407,"author":{"gitId":"KVignesh122"},"content":"\t2| [E][ ] sarah birthday party (at: 4pm)","lastModifiedDate":"2021-09-29"},{"lineNumber":408,"author":{"gitId":"KVignesh122"},"content":"\t6| [T][ ] Return book to Sarah","lastModifiedDate":"2021-09-29"},{"lineNumber":409,"author":{"gitId":"KVignesh122"},"content":"\t------------------------------------------------------------","lastModifiedDate":"2021-09-29"},{"lineNumber":410,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":411,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":412,"author":{"gitId":"KVignesh122"},"content":"### `bye` or `exit` - Exiting the chatbot","lastModifiedDate":"2021-09-29"},{"lineNumber":413,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":414,"author":{"gitId":"KVignesh122"},"content":"Chatbot can be exit from either ECHO mode or TASK mode. The confirmation response from chatbot will be the same.","lastModifiedDate":"2021-09-29"},{"lineNumber":415,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":416,"author":{"gitId":"KVignesh122"},"content":"**Example of usage in ECHO mode:**","lastModifiedDate":"2021-09-29"},{"lineNumber":417,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":418,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":419,"author":{"gitId":"KVignesh122"},"content":"Listening\u003e bye","lastModifiedDate":"2021-09-29"},{"lineNumber":420,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":421,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":422,"author":{"gitId":"KVignesh122"},"content":"**Example of usage in TASK mode:**","lastModifiedDate":"2021-09-29"},{"lineNumber":423,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":424,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":425,"author":{"gitId":"KVignesh122"},"content":"TellMe\u003e bye","lastModifiedDate":"2021-09-29"},{"lineNumber":426,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":427,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":428,"author":{"gitId":"KVignesh122"},"content":"*Expected outcome:*","lastModifiedDate":"2021-09-29"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":430,"author":{"gitId":"KVignesh122"},"content":"Lennox will confirm if you really want to exit.","lastModifiedDate":"2021-09-29"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":432,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":433,"author":{"gitId":"KVignesh122"},"content":"Do you really want to exit chatbot (type y or n)?","lastModifiedDate":"2021-09-29"},{"lineNumber":434,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":436,"author":{"gitId":"KVignesh122"},"content":"If you type in y(es), program ends. Else if n(o), you are returned back to where you left off in ECHO or TASK mode.","lastModifiedDate":"2021-09-29"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":438,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":439,"author":{"gitId":"KVignesh122"},"content":"        Do you really want to exit chatbot (type y or n)? y","lastModifiedDate":"2021-09-29"},{"lineNumber":440,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":441,"author":{"gitId":"KVignesh122"},"content":"\tBye. Hope to see you again soon!","lastModifiedDate":"2021-09-29"},{"lineNumber":442,"author":{"gitId":"KVignesh122"},"content":"\t____________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":444,"author":{"gitId":"KVignesh122"},"content":"\u003d\u003d\u003d\u003d\u003d PROGRAM ENDED \u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":445,"author":{"gitId":"KVignesh122"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":447,"author":{"gitId":"KVignesh122"},"content":"_**Note: Once quit, the tasks created during TASK mode session will be stored and retrieved back","lastModifiedDate":"2021-09-29"},{"lineNumber":448,"author":{"gitId":"KVignesh122"},"content":"by Lennox once it is relaunched. However, all messages keyed in during ECHO mode session will be lost","lastModifiedDate":"2021-09-29"},{"lineNumber":449,"author":{"gitId":"KVignesh122"},"content":"when quiting.**_","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"KVignesh122":425,"-":24}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /** A Task object is stored for adding to list */","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"    protected Task newTask \u003d null;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"     * Creates respective Task subclass object","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"     * depending on the starting keyword present in user input.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"     * @param userInput String command input by user or parsed from local file.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    public static Task createTask(String userInput) throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"        if (userInput.startsWith(\"event \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"            if (userInput.contains(\"/at \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"                return new Event(userInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"            } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"                throw new DukeException(\"\\t*** Remember to include event timing after \u0027/at \u0027 in description.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"        } else if (userInput.startsWith(\"deadline \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"            if (userInput.contains(\"/by \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"                return new Deadline(userInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"            } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"                throw new DukeException(\"\\t*** Remember to indicate deadline after \u0027/by \u0027 in description.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"        } else if (userInput.startsWith(\"todo \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"            if (!userInput.substring(\"todo\".length()).isBlank()){","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"                return new Todo(userInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"            } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"                throw new DukeException(\"\\t*** OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"            // If the starting substring does not conform to expected keywords, throw an error msg.","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"            throw new DukeException(\"\\t☹ INVALID COMMAND\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"                    \"\\tPlease begin commands with\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"                    \"\\t\u0027event\u0027, \u0027deadline\u0027, \u0027todo\u0027,\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"                    \"\\t\u0027done\u0027, \u0027find\u0027, \u0027remove\u0027, or \u0027delete\u0027, and\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"                    \"\\tinput description after a whitespace.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"     * Adds task to program list by calling record() mathod","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"     * from TaskList class.","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"     * @param tl TaskList object which stores all user-created tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"        if (newTask !\u003d null) {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"            tl.record(newTask);","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"    public AddCommand(String addCommandInput) {","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"            newTask \u003d createTask(addCommandInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"            e.printErrorMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":60}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"     * Executes a particular operation on the TaskList object.","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"     * Abstract method which will be overridden for different specific use","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"     * by child classes.","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"     * @param tl TaskList object in which task are stored in.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    public abstract void execute(TaskList tl);","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":10}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /** Due time/date of Deadline task as String. */","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"    protected String due;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"    /** Index of string at which slash in /by input string appears. */","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"    protected int keywordIdx \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"     * Extracts deadline info from user input String.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     * @param inp User input string.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     * @return Date/time task is due.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public String extractDeadline(String inp) {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"        // Deadline commands by user will contain \"/by \" substring.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"        this.keywordIdx \u003d inp.indexOf(\"/\");","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        return inp.substring(keywordIdx + 4);","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"     * Returns deadline date to be appended to task description.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"     * @return Deadline input by user, within parentheses.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    public String getDueString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"        return \"(by: \" + this.due + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"     * Constructor for Deadline subclass.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"     * @param deadlineDescription Name of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"    public Deadline(String deadlineDescription) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"        super(deadlineDescription, \"deadline\");","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"        this.due \u003d extractDeadline(deadlineDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"        super.description \u003d deadlineDescription.substring(9, this.keywordIdx) + getDueString();","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"KVignesh122":38}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /** Random large negative number assigned to taskIndex, but updated with actual task\u0027s index in TaskList ArrayList */","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"    protected int taskIndex \u003d -100;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"    protected final String ERROR_BOUNDARY \u003d \"!!\".repeat(30);","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"     * Deletes a task by calling deleteTask() method from TaskList class.","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"     * Else, prints error message if input index is wrong.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     * @param tl TaskList object storing all user-created tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"        if (taskIndex \u003e\u003d 0 \u0026 taskIndex \u003c tl.getLength()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"            tl.deleteTask(taskIndex);","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        } else if (taskIndex !\u003d -100) {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + ERROR_BOUNDARY);","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\tLIST IS CURRENTLY EMPTY OR INPUT INDEX IS OUT OF RANGE!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + ERROR_BOUNDARY + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"    public DeleteCommand(String deleteCommandInput) {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"            taskIndex \u003d Integer.parseInt(deleteCommandInput.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + ERROR_BOUNDARY);","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\tPLEASE INPUT INVENTORY NO. OF THE TASK, SEPARATED BY SPACE\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"                    \"\\tAFTER \u0027delete\u0027 OR \u0027remove\u0027 TO REMOVE TASK FROM LIST.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + ERROR_BOUNDARY + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":33}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /** Random large negative number assigned to taskIndex, but updated with actual task\u0027s index in TaskList ArrayList */","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"    protected int taskIndex \u003d -100;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"    final static String ERROR_BOUNDARY \u003d \"\u003e\u003e\".repeat(30);","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"     * Checks Task as completed by calling completeTask() method from","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"     * TaskList object.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"     * Else, prints out error message if input index is wrong.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     * @param tl TaskList object storing all user-created tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"        if (taskIndex \u003e\u003d 0 \u0026 taskIndex \u003c tl.getLength()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"            tl.completeTask(taskIndex);","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"        } else if (taskIndex !\u003d -100) {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + ERROR_BOUNDARY);","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\tLIST IS CURRENTLY EMPTY OR INPUT INDEX IS OUT OF RANGE!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + ERROR_BOUNDARY + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    public DoneCommand(String doneCommandInput) {","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"            taskIndex \u003d Integer.parseInt(doneCommandInput.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + ERROR_BOUNDARY);","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\tPLEASE INPUT INVENTORY NO. OF THE TASK, SEPARATED BY SPACE\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"                    \"\\tAFTER \u0027complete\u0027 OR \u0027done\u0027 TO MARK TASK AS DONE.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + ERROR_BOUNDARY + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    private TaskList taskslist;","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"     * Executes skeleton for the whole program.","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"    public void run() {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"        ui.printLogo();","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"        ui.greet();","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"        if (ui.getMode() \u003d\u003d ui.ECHO_MODE) {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"            ui.printModeEntered(ui.ECHO_MODE);","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"            ui.runEchoMode();","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"        } else if (ui.getMode() \u003d\u003d ui.TASK_MODE) {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"            ui.printModeEntered(ui.TASK_MODE);","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"            ui.runTaskMode(taskslist);","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"        // If mode is selected properly and user indeed wants to exit.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"        if (ui.getMode() !\u003d 0) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"            ui.exit();","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"            ui.printExitResponse(true);","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"        Storage storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"        taskslist \u003d storage.getUpdatedTasks();","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"        ui \u003d new Ui(storage);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-07"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"        // All tasks created or deleted during program runtime will be updated in lennox.txt local file.","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"        new Duke(\"lennox.txt\").run();","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KVignesh122":33,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    private String errorMessage;","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"    private final String ERROR_BOUNDARY \u003d \"\\t\" + \"*!\".repeat(30);","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"        this.errorMessage \u003d message;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     * Prints out errorMessage string.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public void printErrorMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(ERROR_BOUNDARY);","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(this.errorMessage);","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(ERROR_BOUNDARY + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"KVignesh122":18}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /** Time at which event will occur, stored as String. */","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"    protected String time;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"    /** Index at which slash of /at appears in input command string. */","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"    protected int keywordIdx \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"     * Extracts time/day of event.","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     * @param inp User input string.","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     * @return Time of event.","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public String extractTime(String inp) {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"        // Deadline commands by user will contain \"/at\" substring.","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"        this.keywordIdx \u003d inp.indexOf(\"/\");","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        return inp.substring(keywordIdx + 4);","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"     * Returns timing to be appended to task description.","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"     * @return Event timing input by user, within parentheses.","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    public String getTimeString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"        return \"(at: \" + this.time + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"     * Constructor for Event subclass.","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"     * @param eventDescription Name of event task.","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"    public Event(String eventDescription) {","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"        super(eventDescription, \"event\");","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"        this.time \u003d extractTime(eventDescription);","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"        super.description \u003d eventDescription.substring(6, this.keywordIdx) + getTimeString();","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"KVignesh122":38}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"     * Dummy function to protect coding logic.","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"     * @param foo TaskList object storing all user-created tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"    public void execute(TaskList foo) {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":10}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    protected static String keyword;","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"        tl.findTasks(keyword.toLowerCase());","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"    public FindCommand(String findCommandInput) {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"        keyword \u003d findCommandInput.substring(\"find \".length());","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":11}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"     * Calls printList() method from TaskList object to print","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"     * out tasks list.","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"     * @param tl TaskList object which stores all user-created tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"        tl.printList();","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public ListCommand() {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":15}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"public class Parser {","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"    /** User inputs parsed, formatted properly and stored to cmd in class methods. */","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"    protected static String cmd;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"     * Parses user input for mode selection.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     * @return int value 1 (ECHO MODE) or 2 (TASK MODE).","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     * @throws DukeException If input string is not \u00271\u0027 or \u00272\u0027.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public static int readModeSelection() throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"        Scanner inp \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"        System.out.print(\"Mode\u003e \");","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        cmd \u003d inp.nextLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"        if (cmd.equals(\"1\") | cmd.equals(\"2\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"            return Integer.parseInt(cmd);","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"        throw new DukeException(\"\\tERROR. PLEASE RUN AGAIN AND SELECT RIGHT MODE.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"     * Parses user input to echo.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"     * @return User input string if valid (not empty and not blank).","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"     * @throws DukeException If input string is empty or blank.","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"    public static String parseEchoCommand() throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"        Scanner inp \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"        System.out.print(\"Listening\u003e \");","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"        cmd \u003d inp.nextLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"        if (cmd.equals(\"\") | cmd.equals(\" \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"            throw new DukeException(\"\\tPlease enter a valid command!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"        return cmd;","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"     * Parses input command string to determine appropriate action in Task mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"     * @return Command object representing the different functions possible in Task mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"    public static Command parseTaskCommand() {","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"        Scanner inp \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"        System.out.print(\"TellMe\u003e \");","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"        cmd \u003d inp.nextLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"        if (cmd.startsWith(\"done \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"            return new DoneCommand(cmd);","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"        } else if (cmd.startsWith(\"delete \") | cmd.startsWith(\"remove \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"            return new DeleteCommand(cmd);","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"        } else if (cmd.startsWith(\"list\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"        } else if (cmd.equalsIgnoreCase(\"switch\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"            return new SwitchCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"        } else if (cmd.equalsIgnoreCase(\"bye\") | cmd.equalsIgnoreCase(\"exit\")){","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"        } else if (cmd.startsWith(\"find \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"            return new FindCommand(cmd);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"            return new AddCommand(cmd);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"     * Parses input string to confirm if user really wants to exit program.","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"     * @return Input string of user.","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"    public static String parseExitPref() {","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"        System.out.print(\"\\tDo you really want to exit chatbot (type y or n)? \");","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"        return input.nextLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"     * Parses lines in the local file where items in list are saved, and","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"     * constructs a user-style CLI command to be input into createTask()","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"     * method to create the task in current session.","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"     * @param lineFragments A line of the saved local file.","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"KVignesh122"},"content":"     * @return toReturn is the CLI command that a user will input to create Task.","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"KVignesh122"},"content":"    public static String createCommand(String[] lineFragments) {","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"KVignesh122"},"content":"        if (lineFragments.length \u003d\u003d 3) {","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"KVignesh122"},"content":"            cmd \u003d \"todo \" + lineFragments[2];","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"KVignesh122"},"content":"        } else if (lineFragments[0].equals(\"D\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"KVignesh122"},"content":"            cmd \u003d \"deadline \" + lineFragments[2] + \" /by \" + lineFragments[3];","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"KVignesh122"},"content":"        } else if (lineFragments[0].equals(\"E\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"            cmd \u003d \"event \" + lineFragments[2] + \" /at \" + lineFragments[3];","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"KVignesh122"},"content":"        return cmd;","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":95}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"import java.io.File;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"public class Storage {","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"    /** All Task items created will be saved to ip/lennox.txt local file. */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    private static String fileName;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"    /** Latest task list is stored. */","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    private TaskList updatedTasks;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"     * Populates list at the beginning of session with items from previous session.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"     * @throws FileNotFoundException If there was no file saved from previous session.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"    public void initializeList() throws FileNotFoundException {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"        File f \u003d new File(fileName);","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"        int lineNo \u003d 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"            String line \u003d s.nextLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"            String[] splitUp \u003d line.strip().split(\" \u003c \");","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"            String cmd \u003d Parser.createCommand(splitUp);","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"            Command add \u003d new AddCommand(cmd);","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"            add.execute(updatedTasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"            if (splitUp[1].equals(\"Done\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"                Command complete \u003d new DoneCommand(\"Done \" + (lineNo + 1));","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"                complete.execute(updatedTasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"            lineNo++;","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"     * Structures items in list to an appropriate string to be written","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"     * into locally stored file.","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"     * @param t A Task item in the current session\u0027s list.","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"     * @return toReturn contains a string to be written onto the local file.","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"    public static String createLineForFile(Task t) {","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"        String toReturn \u003d null;","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"        String doneStatus;","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"        if (t.getStatusIcon().equals(\"[X] \")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"            doneStatus\u003d \"Done\";","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"            doneStatus \u003d \"Incomplete\";","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"        if (t instanceof Todo) {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"            toReturn \u003d \"T \u003c \" + doneStatus + \" \u003c \" + t.description;","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"        } else if (t instanceof Deadline) {","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"            String[] parts \u003d t.description.split(\"[(]\");","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"            toReturn \u003d \"D \u003c \" + doneStatus + \" \u003c \" + parts[0] +","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"                    \" \u003c \" + ((Deadline) t).due;","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"        } else if (t instanceof Event) {","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"            String[] parts \u003d t.description.split(\"[(]\");","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"            toReturn \u003d \"E \u003c \" + doneStatus + \" \u003c \" + parts[0] +","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"                    \" \u003c \" + ((Event) t).time;","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"        return toReturn;","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"     * Writes Tasks in list to a file as readable string.","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"     * @throws IOException If error occurs while writing to file.","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"    public void saveToFile(TaskList tList) throws IOException {","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"        FileWriter fw \u003d new FileWriter(fileName, false);","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"        for (int i \u003d 0; i \u003c tList.getLength(); i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"            Task item \u003d tList.atIndex(i);","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"            String textToWrite \u003d createLineForFile(item) + System.lineSeparator();","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"            fw.write(textToWrite);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"        updatedTasks \u003d tList;","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"        fw.close();","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"KVignesh122"},"content":"     * Gets latest updated task list stored in this class.","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"KVignesh122"},"content":"     * @return updatedTasks Latest task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"KVignesh122"},"content":"    public TaskList getUpdatedTasks() {","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"KVignesh122"},"content":"        return updatedTasks;","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"KVignesh122"},"content":"        fileName \u003d filePath;","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"KVignesh122"},"content":"        // Create new TaskList object that will be used throughout program runtime.","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"        updatedTasks \u003d new TaskList();","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"        // Read in list from previous session if it exists","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"KVignesh122"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"KVignesh122"},"content":"            initializeList();","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"KVignesh122"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"KVignesh122"},"content":"            // Create new text file for saving if file not found","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"KVignesh122"},"content":"            File newFile \u003d new File(filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"KVignesh122"},"content":"            try {","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"KVignesh122"},"content":"                newFile.createNewFile();","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"KVignesh122"},"content":"            } catch (IOException ioException) {","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"KVignesh122"},"content":"                ioException.printStackTrace();","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":108}},{"path":"src/main/java/SwitchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class SwitchCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /** Determines if need to switch to ECHO Mode */","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"    protected int toEcho \u003d 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"     * Switches toEcho to 1 so as to switch to ECHO mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"     * @param tl TaskList object storing all user-created tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"    public void execute(TaskList tl) {","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"        toEcho \u003d 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    public SwitchCommand() {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /** name of task input by user. */","lastModifiedDate":"2021-08-23"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"    protected String description;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"    /** True means task complete, otherwise if false. */","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"    /** Type of task (eg. todo, Deadline, event) stored as string */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"    protected String type;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     * Constructs new object of Task class.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     * @param description Name of task.","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    public Task(String description, String taskType) {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"        this.type \u003d taskType;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"     * Sets status of task to done.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"     * Gets task type to return with:","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"     * T - Todo task","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"     * D - Deadline task","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"     * E - Event task","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"     * @return Task type represented by a String.","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"    public String getTypeIcon() {","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"        String typeIcon;","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"        switch(type) {","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"            typeIcon \u003d \"[T]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"            typeIcon \u003d \"[D]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"        case \"event\":","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"            typeIcon \u003d \"[E]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"            typeIcon \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"        return typeIcon;","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"     * Gets status of task to return with","lastModifiedDate":"2021-08-23"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"     * X if complete or blank if incomplete.","lastModifiedDate":"2021-08-23"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"     * @return Task status represented by a String.","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2021-08-23"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"KVignesh122":65}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"public class TaskList {","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"    /** Task objects created/deleted are updated to this variable. */","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"    private static ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"    private static final String HOR_LINE \u003d \"-\".repeat(60);","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"     * Prints out tasks found for keyword input by user.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"     * @param word Keyword to search for in tasks descriptions.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public static void findTasks(String word) {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\tTasks found for keyword, \" + word.toUpperCase());","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"        int originalOption \u003d 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"        boolean isFound \u003d false;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"        for (Task t: tasksList) {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"            String taskDescription \u003d t.description;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"            if (taskDescription.toLowerCase().contains(word)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"                System.out.println(\"\\t\" + originalOption + \"| \" +","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"                        t.getTypeIcon() + t.getStatusIcon() + t.description);","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"                isFound \u003d true;","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"            originalOption++;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"        if (!isFound) {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t0 RECORDS FOUND.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"     * Prints task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"    public static void printList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\tCURRENT ADDED LIST\");","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"        int optionNo \u003d 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"        for (Task t: tasksList) {","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + optionNo + \". \" + t.getTypeIcon() +","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"                    t.getStatusIcon() + t.description);","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"            optionNo++;","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"     * Marks a task in list as complete.","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"     * @param taskNo Index of task in tasksList to mark as complete.","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"    public static void completeTask(int taskNo) {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"        atIndex(taskNo).setDone();","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"     * Deletes a task from list.","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"     * @param taskNo Index of task in tasksList to delete a task.","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"    public static void deleteTask(int taskNo) {","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"        System.out.printf(\"\\t%s removed from list!\\n\", atIndex(taskNo).description);","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"        tasksList.remove(taskNo);","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"        System.out.printf(\"\\tNow you have %d tasks in the list.\\n\", getLength());","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"        printList();","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"     * Returns task object at a particular index in tasksList.","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"     * @param idx Index of particular task object.","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"     * @return Task object needed.","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"    public static Task atIndex(int idx) {","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"        return tasksList.get(idx);","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"KVignesh122"},"content":"     * Adds Task object to tasksList.","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"KVignesh122"},"content":"     * @param t Task object to be added.","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"KVignesh122"},"content":"    public static void record(Task t) {","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"KVignesh122"},"content":"        tasksList.add(t);","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"KVignesh122"},"content":"     * Returns length of current tasksList.","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"     * @return No. of Task objects in tasksList.","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"KVignesh122"},"content":"    public static int getLength() {","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"KVignesh122"},"content":"        return tasksList.toArray().length;","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"KVignesh122"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"KVignesh122"},"content":"        tasksList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":104}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"     * Constructs Todo subclass.","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"     * @param todoDescription Name of task.","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"    public Todo(String todoDescription) {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"        super(todoDescription, \"todo\");","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"        super.description \u003d todoDescription.substring(5);","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"KVignesh122":11}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"public class Ui {","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"    private static final String HOR_LINE \u003d \"_\".repeat(60);","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"    /** mode is 1 if in ECHO mode and 2 if in TASK mode. */","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"    protected static int mode \u003d 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"    /** Saves latest tasks list when switching to ECHO mode. */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"    protected static TaskList previousTL;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"    /** Storage object created at startup. */","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"    protected static Storage localStorage;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"    public final int ECHO_MODE \u003d 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"    public final int TASK_MODE \u003d 2;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"    private static final String TASK_WELCOME_MSG \u003d \"\\tTASK MODE - Enter items to include in to-do list.\\n\";","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"    private static final String ECHO_WELCOME_MSG \u003d \"\\tECHO MODE - Commands entered will be echoed back.\\n\";","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"KVignesh122"},"content":"     * Prints welcome message for mode entered.","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"KVignesh122"},"content":"     * @param modeSelected ECHO_MODE or TASK_MODE.","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"KVignesh122"},"content":"    public void printModeEntered(int modeSelected) {","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"KVignesh122"},"content":"        if (modeSelected \u003d\u003d ECHO_MODE) {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(ECHO_WELCOME_MSG);","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"KVignesh122"},"content":"        else if (modeSelected \u003d\u003d TASK_MODE) {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(TASK_WELCOME_MSG);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"KVignesh122"},"content":"     * Introduces chatbot and asks user for preferred mode and enters that mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"KVignesh122"},"content":"     * Mode 1 - Echo; 2 - Task; Otherwise - Returns Error Message and stops program.","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"KVignesh122"},"content":"    public void greet() {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\tHi there! I\u0027m Lennox - your personal chatbot\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"KVignesh122"},"content":"                \"\\tWhat can I do for you today?\");","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"KVignesh122"},"content":"        // Mode Selection","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t* Enter 1 for Echo mode.\\n \" +","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"KVignesh122"},"content":"                \"\\t* Enter 2 for Task mode.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"KVignesh122"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"KVignesh122"},"content":"            mode \u003d Parser.readModeSelection();","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"KVignesh122"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"KVignesh122"},"content":"            e.printErrorMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"KVignesh122"},"content":"     * Prints Lennox chatbot logo.","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"KVignesh122"},"content":"    public void printLogo() {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"KVignesh122"},"content":"        String logo \u003d \"\\t,--.\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"KVignesh122"},"content":"                \"\\t|  |   ,---.,--,--,,--,--, ,---,--.  ,--\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"KVignesh122"},"content":"                \"\\t|  |  | .-. |      |      | .-. \\\\  `\u0027  /\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"KVignesh122"},"content":"                \"\\t|  \u0027--\\\\   --|  ||  |  ||  \u0027 \u0027-\u0027 /  /.  \\\\\\n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"KVignesh122"},"content":"                \"\\t`-----\u0027`----`--\u0027\u0027--`--\u0027\u0027--\u0027`---\u0027--\u0027  \u0027--\";","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"#\".repeat(57));","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\tHello from \\t\\t\\t\\t\\t\");","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\\t +\\\"\\\"\\\"\\\"\\\"+ \" + \"\\t +\\\"\\\"\\\"\\\"\\\"+ \" + \"\\t +\\\"\\\"\\\"\\\"\\\"+ \");","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\\t[| o o |]\" + \"\\t[| o o |]\" + \"\\t[| o o |]\");","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\\t |  ^  | \" + \"\\t |  ^  | \" + \"\\t |  ^  | \");","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\\t | \u0027-\u0027 | \" + \"\\t | \u0027-\u0027 | \" + \"\\t | \u0027-\u0027 | \");","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\\t +-----+ \" + \"\\t +-----+ \" + \"\\t +-----+ \");","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"#\".repeat(57));","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"KVignesh122"},"content":"     * Prints out entered command by user in Echo mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"KVignesh122"},"content":"     * @param cmd Command entered by user.","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"KVignesh122"},"content":"    public static void echoCommand(String cmd) {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\tYou have entered: \" + cmd);","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"KVignesh122"},"content":"     * Function switches between Echo and Task modes.","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"KVignesh122"},"content":"     * @param newMode Code for new mode (1 - Echo; 2 - Task)","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"KVignesh122"},"content":"    public void switchMode(int newMode) {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"KVignesh122"},"content":"        mode \u003d newMode;","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"KVignesh122"},"content":"        if (newMode \u003d\u003d ECHO_MODE) {","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"KVignesh122"},"content":"            printModeEntered(ECHO_MODE);","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"KVignesh122"},"content":"            runEchoMode();","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"KVignesh122"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"KVignesh122"},"content":"            printModeEntered(TASK_MODE);","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"KVignesh122"},"content":"            runTaskMode(previousTL);","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"KVignesh122"},"content":"     * Executes ECHO mode, where commands of user are echoed back.","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"KVignesh122"},"content":"     * When \"switch\" is typed in by user, switches program to Task mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"KVignesh122"},"content":"    public void runEchoMode() {","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"KVignesh122"},"content":"        String echoString \u003d null;","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"KVignesh122"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"KVignesh122"},"content":"            echoString \u003d Parser.parseEchoCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"KVignesh122"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"KVignesh122"},"content":"            e.printErrorMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"KVignesh122"},"content":"        if (echoString.equalsIgnoreCase(\"switch\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"KVignesh122"},"content":"            mode \u003d TASK_MODE;","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"KVignesh122"},"content":"            switchMode(mode);","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"KVignesh122"},"content":"        } else if (!echoString.equalsIgnoreCase(\"bye\") \u0026 !echoString.equalsIgnoreCase(\"exit\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"KVignesh122"},"content":"            echoCommand(echoString);","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"KVignesh122"},"content":"            runEchoMode();","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"KVignesh122"},"content":"     * Prints acknowledgement message that item has been added to list","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"KVignesh122"},"content":"     * and also mentions the total no. of tasks in list currently.","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"KVignesh122"},"content":"     * @param currTask Task object that was just created after user input.","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"KVignesh122"},"content":"     * @param tasksList TaskList object in which task are stored in.","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"KVignesh122"},"content":"    public static void printAddedResponse(Task currTask, TaskList tasksList) {","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\tGot it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + currTask.getTypeIcon() + currTask.getStatusIcon() + currTask.description);","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\tNow there are \" + tasksList.getLength() + \" tasks in the list.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"KVignesh122"},"content":"     * Prints confirmation message that Task has been marked complete.","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"KVignesh122"},"content":"     * @param taskNo Index at which task appears in tasksList.","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"KVignesh122"},"content":"     * @param tasksList TaskList object in which task are stored in.","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"KVignesh122"},"content":"    public void printTaskCompleteResponse(int taskNo, TaskList tasksList) {","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"KVignesh122"},"content":"        System.out.printf(\"\\tThat\u0027s great! %s has been checked as completed!\\n\", tasksList.atIndex(taskNo).description);","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"KVignesh122"},"content":"        System.out.println(\"\\t\" + HOR_LINE + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"KVignesh122"},"content":"     * Executes Task mode. Parses user command to detemine appropriate","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"KVignesh122"},"content":"     * action.","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"KVignesh122"},"content":"     * @param tasks TaskList object in which task are stored in.","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"KVignesh122"},"content":"    public void runTaskMode(TaskList tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"KVignesh122"},"content":"        Command c \u003d Parser.parseTaskCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"KVignesh122"},"content":"        c.execute(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"KVignesh122"},"content":"        if (c instanceof AddCommand) {","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"KVignesh122"},"content":"            if (((AddCommand)c).newTask !\u003d null) {","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"KVignesh122"},"content":"                printAddedResponse(((AddCommand) c).newTask, tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"KVignesh122"},"content":"        } else if (c instanceof DoneCommand) {","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"KVignesh122"},"content":"            int idx \u003d ((DoneCommand) c).taskIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"KVignesh122"},"content":"            if (idx \u003e\u003d 0 \u0026 idx \u003c tasks.getLength()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"KVignesh122"},"content":"                printTaskCompleteResponse(((DoneCommand) c).taskIndex, tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"KVignesh122"},"content":"        } else if (c instanceof SwitchCommand) {","lastModifiedDate":"2021-09-28"},{"lineNumber":169,"author":{"gitId":"KVignesh122"},"content":"            // Update mode to ECHO mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":170,"author":{"gitId":"KVignesh122"},"content":"            mode \u003d ((SwitchCommand)c).toEcho;","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"KVignesh122"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"KVignesh122"},"content":"            // Save current task objects in list to local file.","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"KVignesh122"},"content":"            localStorage.saveToFile(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"KVignesh122"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"KVignesh122"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"KVignesh122"},"content":"        if (mode \u003d\u003d TASK_MODE \u0026 !(c instanceof ExitCommand)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"KVignesh122"},"content":"            // Continue to run TASK mode if not exiting.","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"KVignesh122"},"content":"            runTaskMode(localStorage.getUpdatedTasks());","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"KVignesh122"},"content":"        } else if (!(c instanceof ExitCommand)){","lastModifiedDate":"2021-09-28"},{"lineNumber":184,"author":{"gitId":"KVignesh122"},"content":"            // Store current TaskList object so as to load back when switched back to TASK mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"KVignesh122"},"content":"            previousTL \u003d tasks;","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"KVignesh122"},"content":"            // Switch to ECHO mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"KVignesh122"},"content":"            switchMode(mode);","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":192,"author":{"gitId":"KVignesh122"},"content":"     * Prints goodbye message if user confirms to exit.","lastModifiedDate":"2021-09-28"},{"lineNumber":193,"author":{"gitId":"KVignesh122"},"content":"     * Else, prints out message for user to continue with program.","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"KVignesh122"},"content":"     * @param isExit true if user confirms to exit, false otherwise.","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":197,"author":{"gitId":"KVignesh122"},"content":"    public void printExitResponse(boolean isExit) {","lastModifiedDate":"2021-09-28"},{"lineNumber":198,"author":{"gitId":"KVignesh122"},"content":"        if (isExit) {","lastModifiedDate":"2021-09-28"},{"lineNumber":199,"author":{"gitId":"KVignesh122"},"content":"            // The end.","lastModifiedDate":"2021-09-28"},{"lineNumber":200,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + HOR_LINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":201,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":202,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + HOR_LINE + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":203,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d PROGRAM ENDED \u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"KVignesh122"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":205,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\n\\tOk that\u0027s great! Continue keying in commands. :)\");","lastModifiedDate":"2021-09-28"},{"lineNumber":206,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\t\" + HOR_LINE + System.lineSeparator());","lastModifiedDate":"2021-09-28"},{"lineNumber":207,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":208,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":209,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":210,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":211,"author":{"gitId":"KVignesh122"},"content":"     * Clarifies if user wants to exit and exits program.","lastModifiedDate":"2021-09-28"},{"lineNumber":212,"author":{"gitId":"KVignesh122"},"content":"     * If no, gets user back to Task/Echo mode user was in.","lastModifiedDate":"2021-09-28"},{"lineNumber":213,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":214,"author":{"gitId":"KVignesh122"},"content":"    public void exit() {","lastModifiedDate":"2021-09-28"},{"lineNumber":215,"author":{"gitId":"KVignesh122"},"content":"        String preference \u003d Parser.parseExitPref();","lastModifiedDate":"2021-09-28"},{"lineNumber":216,"author":{"gitId":"KVignesh122"},"content":"        if (preference.equalsIgnoreCase(\"n\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":217,"author":{"gitId":"KVignesh122"},"content":"            printExitResponse(false);","lastModifiedDate":"2021-09-28"},{"lineNumber":218,"author":{"gitId":"KVignesh122"},"content":"            // Return back to previous mode since user is not exiting.","lastModifiedDate":"2021-09-28"},{"lineNumber":219,"author":{"gitId":"KVignesh122"},"content":"            if (mode \u003d\u003d ECHO_MODE) {","lastModifiedDate":"2021-09-28"},{"lineNumber":220,"author":{"gitId":"KVignesh122"},"content":"                runEchoMode();","lastModifiedDate":"2021-09-28"},{"lineNumber":221,"author":{"gitId":"KVignesh122"},"content":"            } else if (mode \u003d\u003d TASK_MODE) {","lastModifiedDate":"2021-09-28"},{"lineNumber":222,"author":{"gitId":"KVignesh122"},"content":"                runTaskMode(previousTL);","lastModifiedDate":"2021-09-28"},{"lineNumber":223,"author":{"gitId":"KVignesh122"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":224,"author":{"gitId":"KVignesh122"},"content":"            exit();","lastModifiedDate":"2021-09-28"},{"lineNumber":225,"author":{"gitId":"KVignesh122"},"content":"        } else if (!preference.equalsIgnoreCase(\"y\")){","lastModifiedDate":"2021-09-28"},{"lineNumber":226,"author":{"gitId":"KVignesh122"},"content":"            // Clarify and re-enter exit scope.","lastModifiedDate":"2021-09-28"},{"lineNumber":227,"author":{"gitId":"KVignesh122"},"content":"            System.out.println(\"\\tSorry, is it a y(es) or a n(o)?\");","lastModifiedDate":"2021-09-28"},{"lineNumber":228,"author":{"gitId":"KVignesh122"},"content":"            exit();","lastModifiedDate":"2021-09-28"},{"lineNumber":229,"author":{"gitId":"KVignesh122"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":230,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":231,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":232,"author":{"gitId":"KVignesh122"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":233,"author":{"gitId":"KVignesh122"},"content":"     * Returns mode in which program is currently operating.","lastModifiedDate":"2021-09-28"},{"lineNumber":234,"author":{"gitId":"KVignesh122"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":235,"author":{"gitId":"KVignesh122"},"content":"     * @return mode 1 for ECHO mode or 2 for TASK mode.","lastModifiedDate":"2021-09-28"},{"lineNumber":236,"author":{"gitId":"KVignesh122"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":237,"author":{"gitId":"KVignesh122"},"content":"    public int getMode() {","lastModifiedDate":"2021-09-28"},{"lineNumber":238,"author":{"gitId":"KVignesh122"},"content":"        return mode;","lastModifiedDate":"2021-09-28"},{"lineNumber":239,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":240,"author":{"gitId":"KVignesh122"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":241,"author":{"gitId":"KVignesh122"},"content":"    public Ui(Storage tasksStorage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":242,"author":{"gitId":"KVignesh122"},"content":"        localStorage \u003d tasksStorage;","lastModifiedDate":"2021-09-28"},{"lineNumber":243,"author":{"gitId":"KVignesh122"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":244,"author":{"gitId":"KVignesh122"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"KVignesh122":244}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KVignesh122"},"content":"1","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"KVignesh122"},"content":"hello world","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"KVignesh122"},"content":"all is well","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"KVignesh122"},"content":"change","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"KVignesh122"},"content":"todo go for run","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"KVignesh122"},"content":"todo swim","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"KVignesh122"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"KVignesh122"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"KVignesh122"},"content":"remove 2","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"KVignesh122"},"content":"deadline project /by 12 Sep","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"KVignesh122"},"content":"event meeting /at 6pm","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"KVignesh122"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"KVignesh122"},"content":"completed 2","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"KVignesh122"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"KVignesh122"},"content":"remove 1","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"KVignesh122"},"content":"bye","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"KVignesh122"},"content":"y","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"KVignesh122":17}}]
