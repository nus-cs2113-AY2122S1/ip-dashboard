[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"mohamedirfansh"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mohamedirfansh":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"# Quick Start","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"1. Ensure that you have Java 11 or above installed in your machine.","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"2. Download the latest Duke.jar from [here]().","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":"3. Copy the jar file to a directory you wish to use as the root folder for the app.","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":"4. Open your terminal in the directory and run the jar file using the following command:","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"mohamedirfansh"},"content":"java -jar Duke.jar","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"mohamedirfansh"},"content":"# Features ","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"mohamedirfansh"},"content":"## Add Tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"mohamedirfansh"},"content":"Add 3 types of tasks for Duke to keep track of.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":15,"author":{"gitId":"mohamedirfansh"},"content":"The 3 types of tasks are:","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"mohamedirfansh"},"content":"### 1. `todo` - Add a new todo","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"mohamedirfansh"},"content":"Command format:","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"mohamedirfansh"},"content":"todo \u003cdescription\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"mohamedirfansh"},"content":"Example:","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"mohamedirfansh"},"content":"todo read book","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"mohamedirfansh"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"mohamedirfansh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"mohamedirfansh"},"content":"Now you have 3 task(s) in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2021-07-17"},{"lineNumber":31,"author":{"gitId":"mohamedirfansh"},"content":"### 2. `deadline` - Add a new deadline task","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"mohamedirfansh"},"content":"Command format:","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"mohamedirfansh"},"content":"deadline \u003cdescription\u003e /by \u003cdatetime\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"mohamedirfansh"},"content":"Example:","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"mohamedirfansh"},"content":"deadline finish reading book /by Wednesday 2pm","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"mohamedirfansh"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"mohamedirfansh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"mohamedirfansh"},"content":"Now you have 4 task(s) in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":46,"author":{"gitId":"mohamedirfansh"},"content":"### 3. `event` - Add a new event task","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"mohamedirfansh"},"content":"Command format:","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"mohamedirfansh"},"content":"event \u003cdescription\u003e /at \u003cdatetime\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"mohamedirfansh"},"content":"Example:","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"mohamedirfansh"},"content":"event project meeting /at 22-Sep 2pm","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"mohamedirfansh"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"mohamedirfansh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"mohamedirfansh"},"content":"Now you have 5 task(s) in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"mohamedirfansh"},"content":"## List tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"mohamedirfansh"},"content":"View all your tasks and their statuses you have entered into Duke.","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":64,"author":{"gitId":"mohamedirfansh"},"content":"Example:","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"mohamedirfansh"},"content":"list","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"mohamedirfansh"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"mohamedirfansh"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"mohamedirfansh"},"content":"1.[T][X] read book","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"mohamedirfansh"},"content":"2.[D][ ] return book (by: June 6th)","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"mohamedirfansh"},"content":"3.[E][ ] project meeting (at: Aug 6th 2-4pm)","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"mohamedirfansh"},"content":"4.[T][X] join sports club","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"mohamedirfansh"},"content":"5.[T][ ] borrow book","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"mohamedirfansh"},"content":"## Delete tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"mohamedirfansh"},"content":"Delete tasks that you have already entered into Duke.","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":81,"author":{"gitId":"mohamedirfansh"},"content":"Command Format:","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"mohamedirfansh"},"content":"delete \u003ctask no.\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"mohamedirfansh"},"content":"Example:","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"mohamedirfansh"},"content":"delete 5","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"mohamedirfansh"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"mohamedirfansh"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"mohamedirfansh"},"content":"[X] borrow book","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"mohamedirfansh"},"content":"Now you have 4 task(s) in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"mohamedirfansh"},"content":"## Find tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"mohamedirfansh"},"content":"Search and find any tasks by typing a keyword","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"mohamedirfansh"},"content":"Command Format:","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"mohamedirfansh"},"content":"find \u003ckeyword\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"mohamedirfansh"},"content":"Example:","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"mohamedirfansh"},"content":"find book","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"mohamedirfansh"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"mohamedirfansh"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"mohamedirfansh"},"content":"1.[T][X] read book","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"mohamedirfansh"},"content":"2.[D][ ] return book (by: June 6th)","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"mohamedirfansh"},"content":"3.[T][ ] borrow book","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"mohamedirfansh"},"content":"## Mark Tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"mohamedirfansh"},"content":"Tick off your tasks in Duke","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":118,"author":{"gitId":"mohamedirfansh"},"content":"Command Format:","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"mohamedirfansh"},"content":"done \u003ctask no.\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"mohamedirfansh"},"content":"Example:","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":124,"author":{"gitId":"mohamedirfansh"},"content":"done 1","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":126,"author":{"gitId":"mohamedirfansh"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"mohamedirfansh"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"mohamedirfansh"},"content":"[X] read book","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"mohamedirfansh"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"mohamedirfansh"},"content":"## Save tasks locally","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"mohamedirfansh"},"content":"Save all the tasks you have entered into Duke locally ","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"mohamedirfansh"},"content":"in your local storage for you to see them again next ","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"mohamedirfansh"},"content":"time you run the application once more.","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"mohamedirfansh"},"content":"## Command Summary","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"mohamedirfansh"},"content":"Action | Command","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"mohamedirfansh"},"content":"-------|-----------------","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"mohamedirfansh"},"content":"**Add Todo** | `todo \u003cdescription\u003e` \u003cbr\u003e e.g. `todo read book`","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"mohamedirfansh"},"content":"**Add Deadline** | `deadline \u003cdescription\u003e /by \u003cdatetime\u003e` \u003cbr\u003e e.g. `deadline finish reading book /by Wednesday 2pm`","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"mohamedirfansh"},"content":"**Add Event** | `event \u003cdescription\u003e /at \u003cdatetime\u003e` \u003cbr\u003e e.g. `event project meeting /at 22-Sep 2pm`","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"mohamedirfansh"},"content":"**List** | `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"mohamedirfansh"},"content":"**Delete** | `delete \u003ctask no.\u003e` \u003cbr\u003e e.g. `delete 5`","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"mohamedirfansh"},"content":"**Find** | `find \u003ckeyword\u003e` \u003cbr\u003e e.g. `find book`","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"mohamedirfansh"},"content":"**Mark Done** | `done \u003ctask no.\u003e` \u003cbr\u003e e.g. `done 1`","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"mohamedirfansh"},"content":"**Exit** | `bye`","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"mohamedirfansh":133,"-":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"import duke.data.Storage;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"mohamedirfansh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"mohamedirfansh"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"mohamedirfansh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"mohamedirfansh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"mohamedirfansh"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"mohamedirfansh"},"content":" * Main entry class for the Duke project.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"mohamedirfansh"},"content":" * @author Mohamed Irfan","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"mohamedirfansh"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String ADD_TASK_MSG \u003d \"Got it. I\u0027ve added this task: \";","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String ERROR_MSG \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String TODO_ERROR \u003d \"The description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String DEADLINE_ERROR \u003d \"The description of a deadline cannot be empty and must have a \u0027/by\u0027.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String EVENT_ERROR \u003d \"The description of an event cannot be empty and must have a \u0027/at\u0027.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":23,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String SEARCH_ERROR \u003d \"Cannot find such a thing, please try again!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String DELETE_ERROR \u003d \"Cannot delete something that doesn\u0027t exists!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String DONE_ERROR \u003d \"Cannot mark a non-existing task as done!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"mohamedirfansh"},"content":"    private static final String FILE_PATH \u003d \"tasks.txt\";","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"mohamedirfansh"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"mohamedirfansh"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"mohamedirfansh"},"content":"        showHelloGreeting();","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"mohamedirfansh"},"content":"        fileManager();","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"mohamedirfansh"},"content":"        executeResponses();","lastModifiedDate":"2021-08-27"},{"lineNumber":34,"author":{"gitId":"mohamedirfansh"},"content":"        showByeGreeting();","lastModifiedDate":"2021-08-27"},{"lineNumber":35,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"mohamedirfansh"},"content":"     * Control method used to do file handling. It tries","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"mohamedirfansh"},"content":"     * to load the saved tasks file from the storage class.","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"mohamedirfansh"},"content":"    private static void fileManager() {","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"mohamedirfansh"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"mohamedirfansh"},"content":"            storage \u003d new Storage(FILE_PATH);","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"mohamedirfansh"},"content":"            tasks \u003d storage.loadTasksFromFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"mohamedirfansh"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"mohamedirfansh"},"content":"            System.out.println(\"Unable to load file.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"mohamedirfansh"},"content":"     * The method responsible for all the user response management.","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"mohamedirfansh"},"content":"     * It receives user input and calls the appropriate method to","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"mohamedirfansh"},"content":"     * execute based on the functionality of the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"mohamedirfansh"},"content":"    private static void executeResponses() {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"mohamedirfansh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"mohamedirfansh"},"content":"        String text;","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"mohamedirfansh"},"content":"        text \u003d in.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":59,"author":{"gitId":"mohamedirfansh"},"content":"        while (!text.equals(\"bye\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":60,"author":{"gitId":"mohamedirfansh"},"content":"            System.out.println(LINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"mohamedirfansh"},"content":"            String[] userInput \u003d text.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"mohamedirfansh"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":63,"author":{"gitId":"mohamedirfansh"},"content":"                switch (userInput[0]) {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"mohamedirfansh"},"content":"                case \"list\":","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"mohamedirfansh"},"content":"                    displayTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"mohamedirfansh"},"content":"                case \"done\":","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"mohamedirfansh"},"content":"                    markTask(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"mohamedirfansh"},"content":"                case \"delete\":","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"mohamedirfansh"},"content":"                    deleteTask(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"mohamedirfansh"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"mohamedirfansh"},"content":"                case \"todo\":","lastModifiedDate":"2021-08-27"},{"lineNumber":75,"author":{"gitId":"mohamedirfansh"},"content":"                    addTodo(text);","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"mohamedirfansh"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"mohamedirfansh"},"content":"                case \"deadline\":","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"mohamedirfansh"},"content":"                    addDeadline(text);","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"mohamedirfansh"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"mohamedirfansh"},"content":"                case \"event\":","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"mohamedirfansh"},"content":"                    addEvent(text);","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"mohamedirfansh"},"content":"                    System.out.println(\"Now you have \" + tasks.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"mohamedirfansh"},"content":"                case \"find\":","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"mohamedirfansh"},"content":"                    findTask(text);","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"mohamedirfansh"},"content":"                default:","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"mohamedirfansh"},"content":"                    showErrorMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"mohamedirfansh"},"content":"                }","lastModifiedDate":"2021-08-21"},{"lineNumber":93,"author":{"gitId":"mohamedirfansh"},"content":"            } catch (DukeException error) {","lastModifiedDate":"2021-09-07"},{"lineNumber":94,"author":{"gitId":"mohamedirfansh"},"content":"                System.out.println(error.getMessage());","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"mohamedirfansh"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"mohamedirfansh"},"content":"            System.out.println(LINE);","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"mohamedirfansh"},"content":"            text \u003d in.nextLine();","lastModifiedDate":"2021-08-21"},{"lineNumber":98,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":99,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"mohamedirfansh"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"mohamedirfansh"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"mohamedirfansh"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"mohamedirfansh"},"content":"            System.out.println(\"Unable to save file.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":107,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"mohamedirfansh"},"content":"     * A helper method used to display all the tasks in the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"mohamedirfansh"},"content":"    private static void displayTasks() {","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"mohamedirfansh"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"mohamedirfansh"},"content":"            System.out.println(\"You do not have any tasks! Go and add some now!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"mohamedirfansh"},"content":"            return;","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"mohamedirfansh"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"mohamedirfansh"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i).toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"mohamedirfansh"},"content":"     * A helper method used to mark tasks as done.","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"mohamedirfansh"},"content":"     * @param userInput The task number to mark.","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"mohamedirfansh"},"content":"     * @throws DukeException If there are no numbers given to mark or the number is invalid.","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"mohamedirfansh"},"content":"    private static void markTask(String[] userInput) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"mohamedirfansh"},"content":"        if (userInput.length \u003c 2) {","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(DONE_ERROR);","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"mohamedirfansh"},"content":"        int taskNum \u003d Integer.parseInt(userInput[userInput.length - 1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"mohamedirfansh"},"content":"        if (taskNum \u003e tasks.size() || taskNum \u003c\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(DONE_ERROR);","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"mohamedirfansh"},"content":"        Task taskToSetDone \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"mohamedirfansh"},"content":"        taskToSetDone.setDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(taskToSetDone.getStatusIcon() + taskToSetDone.getDescription());","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"mohamedirfansh"},"content":"     * A helper method used to delete tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"mohamedirfansh"},"content":"     * @param userInput The task number to delete.","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"mohamedirfansh"},"content":"     * @throws DukeException If there are no numbers given to delete or the number is invalid.","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"mohamedirfansh"},"content":"    private static void deleteTask(String[] userInput) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"mohamedirfansh"},"content":"        if (userInput.length \u003c 2) {","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(DELETE_ERROR);","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"mohamedirfansh"},"content":"        int taskNumToDelete \u003d Integer.parseInt(userInput[userInput.length - 1]);","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"mohamedirfansh"},"content":"        if (taskNumToDelete \u003e tasks.size() || taskNumToDelete \u003c\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(DONE_ERROR);","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"mohamedirfansh"},"content":"        Task taskToDelete \u003d tasks.remove(taskNumToDelete - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(taskToDelete.getStatusIcon() + taskToDelete.getDescription());","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"mohamedirfansh"},"content":"     * A helper method used to add todos as one of the tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"mohamedirfansh"},"content":"     * @param text The user\u0027s input including the word \"todo\"","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"mohamedirfansh"},"content":"     *             and the subsequent todo description.","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"mohamedirfansh"},"content":"     * @throws DukeException If there are errors associated with the todo description.","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"mohamedirfansh"},"content":"    private static void addTodo(String text) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":165,"author":{"gitId":"mohamedirfansh"},"content":"        if (text.length() \u003c\u003d \"todo\".length()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(TODO_ERROR);","lastModifiedDate":"2021-09-07"},{"lineNumber":167,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":168,"author":{"gitId":"mohamedirfansh"},"content":"        String[] todoTaskInfo \u003d extractInfo(text, \"todo\");","lastModifiedDate":"2021-09-07"},{"lineNumber":169,"author":{"gitId":"mohamedirfansh"},"content":"        Task newTodo \u003d new Todo(todoTaskInfo[0], false);","lastModifiedDate":"2021-09-10"},{"lineNumber":170,"author":{"gitId":"mohamedirfansh"},"content":"        tasks.add(newTodo);","lastModifiedDate":"2021-09-10"},{"lineNumber":171,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(ADD_TASK_MSG);","lastModifiedDate":"2021-09-07"},{"lineNumber":172,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\"\\t\" + newTodo);","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":174,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":175,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"mohamedirfansh"},"content":"     * A helper method used to add deadlines as one of the tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"mohamedirfansh"},"content":"     * @param text The user\u0027s input including the word \"deadline\"","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"mohamedirfansh"},"content":"     *             and the subsequent deadline description.","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"mohamedirfansh"},"content":"     * @throws DukeException If there are errors associated with the deadline","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"mohamedirfansh"},"content":"     *             description or if the description does not contain \"/by\".","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"mohamedirfansh"},"content":"    private static void addDeadline(String text) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":183,"author":{"gitId":"mohamedirfansh"},"content":"        if (text.length() \u003c\u003d \"deadline\".length()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":184,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(DEADLINE_ERROR);","lastModifiedDate":"2021-09-07"},{"lineNumber":185,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":186,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":187,"author":{"gitId":"mohamedirfansh"},"content":"        if (!text.contains(\"/by\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":188,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(DEADLINE_ERROR);","lastModifiedDate":"2021-09-07"},{"lineNumber":189,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":190,"author":{"gitId":"mohamedirfansh"},"content":"        String[] deadlineTaskInfo \u003d extractInfo(text, \"deadline\");","lastModifiedDate":"2021-09-07"},{"lineNumber":191,"author":{"gitId":"mohamedirfansh"},"content":"        Task newDeadline \u003d new Deadline(deadlineTaskInfo[0], deadlineTaskInfo[1], false);","lastModifiedDate":"2021-09-10"},{"lineNumber":192,"author":{"gitId":"mohamedirfansh"},"content":"        tasks.add(newDeadline);","lastModifiedDate":"2021-09-10"},{"lineNumber":193,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(ADD_TASK_MSG);","lastModifiedDate":"2021-09-07"},{"lineNumber":194,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\"\\t\" + newDeadline);","lastModifiedDate":"2021-09-22"},{"lineNumber":195,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":196,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":197,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":198,"author":{"gitId":"mohamedirfansh"},"content":"     * A helper method used to add event as one of the tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":199,"author":{"gitId":"mohamedirfansh"},"content":"     * @param text The user\u0027s input including the word \"event\"","lastModifiedDate":"2021-09-22"},{"lineNumber":200,"author":{"gitId":"mohamedirfansh"},"content":"     *             and the subsequent event description.","lastModifiedDate":"2021-09-22"},{"lineNumber":201,"author":{"gitId":"mohamedirfansh"},"content":"     * @throws DukeException If there are errors associated with the event","lastModifiedDate":"2021-09-22"},{"lineNumber":202,"author":{"gitId":"mohamedirfansh"},"content":"     *             description or if the description does not contain \"/at\".","lastModifiedDate":"2021-09-22"},{"lineNumber":203,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":204,"author":{"gitId":"mohamedirfansh"},"content":"    private static void addEvent(String text) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":205,"author":{"gitId":"mohamedirfansh"},"content":"        if (text.length() \u003c\u003d \"event\".length()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(EVENT_ERROR);","lastModifiedDate":"2021-09-07"},{"lineNumber":207,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":208,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":209,"author":{"gitId":"mohamedirfansh"},"content":"        if (!text.contains(\"/at\")) {","lastModifiedDate":"2021-09-07"},{"lineNumber":210,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(EVENT_ERROR);","lastModifiedDate":"2021-09-07"},{"lineNumber":211,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":212,"author":{"gitId":"mohamedirfansh"},"content":"        String[] eventTaskInfo \u003d extractInfo(text, \"event\");","lastModifiedDate":"2021-09-07"},{"lineNumber":213,"author":{"gitId":"mohamedirfansh"},"content":"        Task newEvent \u003d new Event(eventTaskInfo[0], eventTaskInfo[1], false);","lastModifiedDate":"2021-09-10"},{"lineNumber":214,"author":{"gitId":"mohamedirfansh"},"content":"        tasks.add(newEvent);","lastModifiedDate":"2021-09-10"},{"lineNumber":215,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(ADD_TASK_MSG);","lastModifiedDate":"2021-09-07"},{"lineNumber":216,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\"\\t\" + newEvent);","lastModifiedDate":"2021-09-22"},{"lineNumber":217,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":218,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":219,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":220,"author":{"gitId":"mohamedirfansh"},"content":"     * A helper method used to search for a task by keyword.","lastModifiedDate":"2021-09-22"},{"lineNumber":221,"author":{"gitId":"mohamedirfansh"},"content":"     * @param text The user\u0027s input including the word \"find\"","lastModifiedDate":"2021-09-22"},{"lineNumber":222,"author":{"gitId":"mohamedirfansh"},"content":"     *             and the subsequent keyword.","lastModifiedDate":"2021-09-22"},{"lineNumber":223,"author":{"gitId":"mohamedirfansh"},"content":"     * @throws DukeException if there are errors in the keyword","lastModifiedDate":"2021-09-22"},{"lineNumber":224,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":225,"author":{"gitId":"mohamedirfansh"},"content":"    private static void findTask(String text) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":226,"author":{"gitId":"mohamedirfansh"},"content":"        if (text.length() \u003c\u003d \"find\".length()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(SEARCH_ERROR);","lastModifiedDate":"2021-09-22"},{"lineNumber":228,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"mohamedirfansh"},"content":"        ArrayList\u003cTask\u003e tasksFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":230,"author":{"gitId":"mohamedirfansh"},"content":"        String[] taskToFind \u003d extractInfo(text, \"find\");","lastModifiedDate":"2021-09-22"},{"lineNumber":231,"author":{"gitId":"mohamedirfansh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-22"},{"lineNumber":232,"author":{"gitId":"mohamedirfansh"},"content":"            if (task.getDescription().contains(taskToFind[0])) {","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"mohamedirfansh"},"content":"                tasksFound.add(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"mohamedirfansh"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":235,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"mohamedirfansh"},"content":"        if (tasksFound.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"mohamedirfansh"},"content":"            System.out.println(SEARCH_ERROR);","lastModifiedDate":"2021-09-22"},{"lineNumber":238,"author":{"gitId":"mohamedirfansh"},"content":"            return;","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":240,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":241,"author":{"gitId":"mohamedirfansh"},"content":"        for (Task task : tasksFound) {","lastModifiedDate":"2021-09-22"},{"lineNumber":242,"author":{"gitId":"mohamedirfansh"},"content":"            System.out.println(\"* \" + task.toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":243,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":244,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":245,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":246,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":247,"author":{"gitId":"mohamedirfansh"},"content":"     * A helper method used to extract the task info from the user input.","lastModifiedDate":"2021-09-22"},{"lineNumber":248,"author":{"gitId":"mohamedirfansh"},"content":"     * The method is also able to extract the dates for the tasks that need them.","lastModifiedDate":"2021-09-22"},{"lineNumber":249,"author":{"gitId":"mohamedirfansh"},"content":"     * @param taskString The user input which contains the task word eg. \"todo\"","lastModifiedDate":"2021-09-22"},{"lineNumber":250,"author":{"gitId":"mohamedirfansh"},"content":"     *             and the task description.","lastModifiedDate":"2021-09-22"},{"lineNumber":251,"author":{"gitId":"mohamedirfansh"},"content":"     * @param taskType The task type to extract the info from.","lastModifiedDate":"2021-09-22"},{"lineNumber":252,"author":{"gitId":"mohamedirfansh"},"content":"     *             eg. \"todo\", \"event\", \"deadline\"","lastModifiedDate":"2021-09-22"},{"lineNumber":253,"author":{"gitId":"mohamedirfansh"},"content":"     * @return taskInfo array of size 2, where the taskInfo[0] is the task description","lastModifiedDate":"2021-09-22"},{"lineNumber":254,"author":{"gitId":"mohamedirfansh"},"content":"     *             and taskInfo[1] is an optional date/time info.","lastModifiedDate":"2021-09-22"},{"lineNumber":255,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":256,"author":{"gitId":"mohamedirfansh"},"content":"    private static String[] extractInfo(String taskString, String taskType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":257,"author":{"gitId":"mohamedirfansh"},"content":"        String[] taskInfo \u003d new String[2];","lastModifiedDate":"2021-08-27"},{"lineNumber":258,"author":{"gitId":"mohamedirfansh"},"content":"        int slashPos \u003d taskString.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-08-27"},{"lineNumber":259,"author":{"gitId":"mohamedirfansh"},"content":"        switch (taskType) {","lastModifiedDate":"2021-08-27"},{"lineNumber":260,"author":{"gitId":"mohamedirfansh"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-27"},{"lineNumber":261,"author":{"gitId":"mohamedirfansh"},"content":"        case \"find\":","lastModifiedDate":"2021-09-22"},{"lineNumber":262,"author":{"gitId":"mohamedirfansh"},"content":"            taskInfo[0] \u003d taskString.substring(\"find\".length() + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":263,"author":{"gitId":"mohamedirfansh"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":264,"author":{"gitId":"mohamedirfansh"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-27"},{"lineNumber":265,"author":{"gitId":"mohamedirfansh"},"content":"            taskInfo[0] \u003d taskString.substring(\"deadline\".length() + 1, slashPos - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":266,"author":{"gitId":"mohamedirfansh"},"content":"            taskInfo[1] \u003d taskString.substring(slashPos + \"/by\".length() + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":267,"author":{"gitId":"mohamedirfansh"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":268,"author":{"gitId":"mohamedirfansh"},"content":"        case \"event\":","lastModifiedDate":"2021-08-27"},{"lineNumber":269,"author":{"gitId":"mohamedirfansh"},"content":"            taskInfo[0] \u003d taskString.substring(\"event\".length() + 1, slashPos - 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":270,"author":{"gitId":"mohamedirfansh"},"content":"            taskInfo[1] \u003d taskString.substring(slashPos + \"/at\".length() + 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":271,"author":{"gitId":"mohamedirfansh"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":272,"author":{"gitId":"mohamedirfansh"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":273,"author":{"gitId":"mohamedirfansh"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":274,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":275,"author":{"gitId":"mohamedirfansh"},"content":"        return taskInfo;","lastModifiedDate":"2021-08-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":277,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":278,"author":{"gitId":"mohamedirfansh"},"content":"    private static void showByeGreeting() {","lastModifiedDate":"2021-09-22"},{"lineNumber":279,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":280,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-22"},{"lineNumber":281,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":282,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":283,"author":{"gitId":"mohamedirfansh"},"content":"    private static void showHelloGreeting() {","lastModifiedDate":"2021-09-22"},{"lineNumber":284,"author":{"gitId":"mohamedirfansh"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":285,"author":{"gitId":"mohamedirfansh"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":286,"author":{"gitId":"mohamedirfansh"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":287,"author":{"gitId":"mohamedirfansh"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":288,"author":{"gitId":"mohamedirfansh"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":289,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-22"},{"lineNumber":290,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-22"},{"lineNumber":291,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(\" Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-09-22"},{"lineNumber":292,"author":{"gitId":"mohamedirfansh"},"content":"                \" What can I do for you?\");","lastModifiedDate":"2021-09-22"},{"lineNumber":293,"author":{"gitId":"mohamedirfansh"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-22"},{"lineNumber":294,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":295,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":296,"author":{"gitId":"mohamedirfansh"},"content":"    private static void showErrorMessage() throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":297,"author":{"gitId":"mohamedirfansh"},"content":"        throw new DukeException(ERROR_MSG);","lastModifiedDate":"2021-09-07"},{"lineNumber":298,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"mohamedirfansh":295,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":" * Custom exception class","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":" * @author Mohamed Irfan","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"mohamedirfansh"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"mohamedirfansh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"mohamedirfansh"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"mohamedirfansh"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"mohamedirfansh"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"mohamedirfansh":11}},{"path":"src/main/java/duke/data/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"package duke.data;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"mohamedirfansh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"mohamedirfansh"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"mohamedirfansh"},"content":"import java.io.File;","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"mohamedirfansh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"mohamedirfansh"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"mohamedirfansh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"mohamedirfansh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"mohamedirfansh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":15,"author":{"gitId":"mohamedirfansh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-10"},{"lineNumber":16,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"mohamedirfansh"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"mohamedirfansh"},"content":" * A storage class used to handle all functionalities related to saving","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"mohamedirfansh"},"content":" * and retrieving data from the local storage file.","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"mohamedirfansh"},"content":" * @author Mohamed Irfan","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"mohamedirfansh"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"mohamedirfansh"},"content":"public class Storage {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"mohamedirfansh"},"content":"    private final File data;","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"mohamedirfansh"},"content":"    private final String[] dataReadWriteErrorMsg \u003d {","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"mohamedirfansh"},"content":"            \"Directory to file cannot be found.\",","lastModifiedDate":"2021-09-10"},{"lineNumber":26,"author":{"gitId":"mohamedirfansh"},"content":"            \"Task cannot be read from local file.\",","lastModifiedDate":"2021-09-10"},{"lineNumber":27,"author":{"gitId":"mohamedirfansh"},"content":"            \"Tasks cannot be saved to local file.\"","lastModifiedDate":"2021-09-10"},{"lineNumber":28,"author":{"gitId":"mohamedirfansh"},"content":"    };","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":30,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"mohamedirfansh"},"content":"     * Constructor method that creates a new tasks file if one does not exist.","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"mohamedirfansh"},"content":"     * @param pathToFile The path to the file including the file name and extension (eg. tasks.txt)","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"mohamedirfansh"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"mohamedirfansh"},"content":"    public Storage(String pathToFile) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"mohamedirfansh"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":37,"author":{"gitId":"mohamedirfansh"},"content":"            File data \u003d new File(pathToFile);","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"mohamedirfansh"},"content":"            if (data.createNewFile()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":39,"author":{"gitId":"mohamedirfansh"},"content":"                System.out.println(\"* New storage file created *\");","lastModifiedDate":"2021-09-10"},{"lineNumber":40,"author":{"gitId":"mohamedirfansh"},"content":"            } else {","lastModifiedDate":"2021-09-10"},{"lineNumber":41,"author":{"gitId":"mohamedirfansh"},"content":"                System.out.println(\"* Tasks successfully loaded *\");","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"mohamedirfansh"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":43,"author":{"gitId":"mohamedirfansh"},"content":"            this.data \u003d data;","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"mohamedirfansh"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(dataReadWriteErrorMsg[0]);","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"mohamedirfansh"},"content":"     * Method to load tasks from the local storage file. Once it reads the data","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"mohamedirfansh"},"content":"     * from the file, it does the necessary processing of the data to convert","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"mohamedirfansh"},"content":"     * it into Task objects for use by the application.","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"mohamedirfansh"},"content":"     * @return tasks - A list of task objects loaded and parsed from local storage file.","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"mohamedirfansh"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"mohamedirfansh"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"mohamedirfansh"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"mohamedirfansh"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"mohamedirfansh"},"content":"            Scanner in \u003d new Scanner(data);","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"mohamedirfansh"},"content":"            while (in.hasNextLine()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"mohamedirfansh"},"content":"                String[] taskData \u003d in.nextLine().split(\" \\\\| \");","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"mohamedirfansh"},"content":"                String taskTime;","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"mohamedirfansh"},"content":"                String taskType \u003d taskData[0];","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"mohamedirfansh"},"content":"                String taskDescription \u003d taskData[2];","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"mohamedirfansh"},"content":"                boolean isDone \u003d taskData[1].equals(\"1\");","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"mohamedirfansh"},"content":"                switch (taskType) {","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"mohamedirfansh"},"content":"                case \"T\":","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"mohamedirfansh"},"content":"                    Task todo \u003d new Todo(taskDescription, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"mohamedirfansh"},"content":"                    tasks.add(todo);","lastModifiedDate":"2021-09-10"},{"lineNumber":70,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-09-10"},{"lineNumber":71,"author":{"gitId":"mohamedirfansh"},"content":"                case \"E\":","lastModifiedDate":"2021-09-10"},{"lineNumber":72,"author":{"gitId":"mohamedirfansh"},"content":"                    taskTime \u003d taskData[3];","lastModifiedDate":"2021-09-10"},{"lineNumber":73,"author":{"gitId":"mohamedirfansh"},"content":"                    Task event \u003d new Event(taskDescription, taskTime, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":74,"author":{"gitId":"mohamedirfansh"},"content":"                    tasks.add(event);","lastModifiedDate":"2021-09-10"},{"lineNumber":75,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-09-10"},{"lineNumber":76,"author":{"gitId":"mohamedirfansh"},"content":"                case \"D\":","lastModifiedDate":"2021-09-10"},{"lineNumber":77,"author":{"gitId":"mohamedirfansh"},"content":"                    taskTime \u003d taskData[3];","lastModifiedDate":"2021-09-10"},{"lineNumber":78,"author":{"gitId":"mohamedirfansh"},"content":"                    Task deadline \u003d new Deadline(taskDescription, taskTime, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":79,"author":{"gitId":"mohamedirfansh"},"content":"                    tasks.add(deadline);","lastModifiedDate":"2021-09-10"},{"lineNumber":80,"author":{"gitId":"mohamedirfansh"},"content":"                    break;","lastModifiedDate":"2021-09-10"},{"lineNumber":81,"author":{"gitId":"mohamedirfansh"},"content":"                default:","lastModifiedDate":"2021-09-10"},{"lineNumber":82,"author":{"gitId":"mohamedirfansh"},"content":"                    throw new DukeException(dataReadWriteErrorMsg[1]);","lastModifiedDate":"2021-09-10"},{"lineNumber":83,"author":{"gitId":"mohamedirfansh"},"content":"                }","lastModifiedDate":"2021-09-10"},{"lineNumber":84,"author":{"gitId":"mohamedirfansh"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"mohamedirfansh"},"content":"            return tasks;","lastModifiedDate":"2021-09-10"},{"lineNumber":86,"author":{"gitId":"mohamedirfansh"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2021-09-10"},{"lineNumber":87,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(dataReadWriteErrorMsg[0]);","lastModifiedDate":"2021-09-10"},{"lineNumber":88,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":89,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":90,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":91,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"mohamedirfansh"},"content":"     * Method to save tasks to the local storage file","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"mohamedirfansh"},"content":"     * @param tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"mohamedirfansh"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"mohamedirfansh"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"mohamedirfansh"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"mohamedirfansh"},"content":"            PrintWriter writer \u003d new PrintWriter(new FileWriter(data));","lastModifiedDate":"2021-09-10"},{"lineNumber":99,"author":{"gitId":"mohamedirfansh"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-09-10"},{"lineNumber":100,"author":{"gitId":"mohamedirfansh"},"content":"                writer.println(task.formatSaveToFile());","lastModifiedDate":"2021-09-10"},{"lineNumber":101,"author":{"gitId":"mohamedirfansh"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":102,"author":{"gitId":"mohamedirfansh"},"content":"            writer.close();","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"mohamedirfansh"},"content":"        } catch (IOException err) {","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"mohamedirfansh"},"content":"            throw new DukeException(dataReadWriteErrorMsg[2]);","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"mohamedirfansh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":106,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":107,"author":{"gitId":"mohamedirfansh"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"mohamedirfansh":107}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":" * Deadline class used to add deadline as a type of task.","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":" * @author Mohamed Irfan","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"mohamedirfansh"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"mohamedirfansh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"mohamedirfansh"},"content":"    protected String dueDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"mohamedirfansh"},"content":"    public Deadline(String description, String dueDate, boolean isDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"mohamedirfansh"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":13,"author":{"gitId":"mohamedirfansh"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"mohamedirfansh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"mohamedirfansh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"mohamedirfansh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + dueDate + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"mohamedirfansh"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"mohamedirfansh"},"content":"    public String formatSaveToFile() {","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"mohamedirfansh"},"content":"        return \"D\" + super.formatSaveToFile() + \" | \" + dueDate;","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"mohamedirfansh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"mohamedirfansh":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":" * Event class used to add events as a type of task.","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":" * @author Mohamed Irfan","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"mohamedirfansh"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"mohamedirfansh"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"mohamedirfansh"},"content":"    protected String eventDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"mohamedirfansh"},"content":"    public Event(String description, String eventDate, boolean isDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"mohamedirfansh"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"mohamedirfansh"},"content":"        this.eventDate \u003d eventDate;","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"mohamedirfansh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"mohamedirfansh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"mohamedirfansh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventDate + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"mohamedirfansh"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"mohamedirfansh"},"content":"    public String formatSaveToFile() {","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"mohamedirfansh"},"content":"        return \"E\" + super.formatSaveToFile() + \" | \" + eventDate;","lastModifiedDate":"2021-09-10"},{"lineNumber":23,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"mohamedirfansh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"mohamedirfansh":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":" * General Task class which more specific task classes will inherit.","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":" * @author Mohamed Irfan","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"mohamedirfansh"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"mohamedirfansh"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"mohamedirfansh"},"content":"    protected String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":9,"author":{"gitId":"mohamedirfansh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"mohamedirfansh"},"content":"     * Constructor method to initiate the task\u0027s description and is done status.","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"mohamedirfansh"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"mohamedirfansh"},"content":"     * @param isDone The status of tasks whether it is done.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"mohamedirfansh"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"mohamedirfansh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"mohamedirfansh"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"mohamedirfansh"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-21"},{"lineNumber":22,"author":{"gitId":"mohamedirfansh"},"content":"        return this.description;","lastModifiedDate":"2021-08-21"},{"lineNumber":23,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"mohamedirfansh"},"content":"     * Checks if the task is marked as done and returns the appropriate icon.","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"mohamedirfansh"},"content":"     * @return icon which can be either [X] or [ ]","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"mohamedirfansh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"mohamedirfansh"},"content":"        return (isDone ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"mohamedirfansh"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"mohamedirfansh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"mohamedirfansh"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"mohamedirfansh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"mohamedirfansh"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":42,"author":{"gitId":"mohamedirfansh"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"mohamedirfansh"},"content":"     * Helper method that converts the task to a format suitable to be saved in local file.","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"mohamedirfansh"},"content":"     * @return task in a suitable format to save in local file","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"mohamedirfansh"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"mohamedirfansh"},"content":"    public String formatSaveToFile() {","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"mohamedirfansh"},"content":"        int isDone \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"mohamedirfansh"},"content":"        return \" | \" + isDone + \" | \" + description;","lastModifiedDate":"2021-09-10"},{"lineNumber":49,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"mohamedirfansh"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"mohamedirfansh":50}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":" * Todo class used to add todos as a type of task.","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":" * @author Mohamed Irfan","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"mohamedirfansh"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"mohamedirfansh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"mohamedirfansh"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"mohamedirfansh"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"mohamedirfansh"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"mohamedirfansh"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"mohamedirfansh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"mohamedirfansh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":17,"author":{"gitId":"mohamedirfansh"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"mohamedirfansh"},"content":"    public String formatSaveToFile() {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"mohamedirfansh"},"content":"        return \"T\" + super.formatSaveToFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"mohamedirfansh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"mohamedirfansh"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"mohamedirfansh":21}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"T | 1 | read book","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"D | 0 | return book | June 6th","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"E | 0 | project meeting | Aug 6th 2-4pm","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":"T | 1 | join sports club","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":"T | 0 | borrow book","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"mohamedirfansh":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mohamedirfansh"},"content":"todo borrow book","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"mohamedirfansh"},"content":"deadline return book /by June 30th","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"mohamedirfansh"},"content":"event project meeting /at Aug 30th 2pm","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"mohamedirfansh"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"mohamedirfansh"},"content":"done 1","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"mohamedirfansh"},"content":"todo buy bread","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"mohamedirfansh"},"content":"done 2","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"mohamedirfansh"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"mohamedirfansh"},"content":"bye","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"mohamedirfansh":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mohamedirfansh"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mohamedirfansh":1,"-":20}}]
