[{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":" * Represents a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"    private String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"     * Create Task with specified name.","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"     * @param name The name of task.","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"        setName(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"        setCompleted(false);","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"     * Gets the task\u0027s name.","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"     * @return A string representing the task\u0027s name.","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"    public String getName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"        return name;","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"     * Gets the potential task completion status.","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"     * @return A boolean value representing the task\u0027s completion status.","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"    public boolean getCompleted() {","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"        return isCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"     * Set the task\u0027s last name.","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"     * @param name A string containing the task\u0027s name.","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"     * Set the task\u0027s completion status.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"     * @param isCompleted A boolean containing the task\u0027s completion status.","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"    public void setCompleted(boolean isCompleted) {","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    // @@author unknown","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Reused from https://nus-cs2113-ay2122s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Get the task\u0027s completion status formatted into.","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * If isCompleted is true, return \"X\" else returns \" \".","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @return A string representing the status.","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // Mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wutdequack":48,"-":13}},{"path":"src/main/java/Terminator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-18"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"public class Terminator {","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"     * List of constants used in formatWithHeading.","lastModifiedDate":"2021-08-19"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"    public static final int TERMINATOR_FORMATTING \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"    public static final int USER_FORMATTING \u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"     * List of constants used in tokenizing user input.","lastModifiedDate":"2021-08-19"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"    public static final int KEYWORD_INDEX \u003d 0;","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"    public static final int TASK_NUMBER_INDEX \u003d 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"     * Global variable used to show if loop to get user input should continue running.","lastModifiedDate":"2021-08-19"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"    public static Boolean toContinue \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-19"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-19"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"     * Global Array List of all tasks created by the user.","lastModifiedDate":"2021-08-19"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-19"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"    public static ArrayList\u003cTask\u003e tasksList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"     * Prints response back to user of task that is modified.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"     * @param task_number The index of the task to be updated.","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"    public static void printUpdateMessage(int task_number) {","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"        Task current_task \u003d tasksList.get(task_number);","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"        System.out.println(\"Great! The following item has been marked as completed:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"        System.out.println(\"[\" + current_task.getStatusIcon() + \"] \" + current_task.getName());","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"        System.out.println(formatWithHeading(\"Is there anything else you would like me to do?\",","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"                TERMINATOR_FORMATTING));","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"     * Update the completion status of the Task to true.","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"     * @param task_number The index of the task to be updated.","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"    public static void updateCompletion(int task_number) {","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"        tasksList.get(task_number).setCompleted(true);","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"     * Prints the tasks in the Task list with formatting.","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"    public static void printTasks() {","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"        System.out.println(\"Here is a list of taskings:\");","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-08-19"},{"lineNumber":54,"author":{"gitId":"wutdequack"},"content":"        System.out.printf(\"|| %4s || %-28s || %-3s ||\\n\", \"S/N\", \"Task Name\", \"Done?\");","lastModifiedDate":"2021-08-19"},{"lineNumber":55,"author":{"gitId":"wutdequack"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-08-19"},{"lineNumber":56,"author":{"gitId":"wutdequack"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); ++i) {","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"wutdequack"},"content":"            Task currentTask \u003d tasksList.get(i);","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"            // If the current task is completed, check the completion_status","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"wutdequack"},"content":"            String completion_status \u003d \"[\" + currentTask.getStatusIcon() + \"]\";","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"wutdequack"},"content":"            System.out.printf(\"||%4d. || %-28s || %-3s   ||\" + System.lineSeparator(), i+1, currentTask.getName(),","lastModifiedDate":"2021-08-19"},{"lineNumber":61,"author":{"gitId":"wutdequack"},"content":"                    completion_status);","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"wutdequack"},"content":"            System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-08-19"},{"lineNumber":63,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":64,"author":{"gitId":"wutdequack"},"content":"        System.out.println(formatWithHeading(\"Anything else?\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-08-18"},{"lineNumber":65,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":66,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":67,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":68,"author":{"gitId":"wutdequack"},"content":"     * Prints response back to user of task that is added.","lastModifiedDate":"2021-08-18"},{"lineNumber":69,"author":{"gitId":"wutdequack"},"content":"     * @param task_name The name of the task to be added.","lastModifiedDate":"2021-08-18"},{"lineNumber":70,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":71,"author":{"gitId":"wutdequack"},"content":"    public static void printAddTaskMessage(String task_name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":72,"author":{"gitId":"wutdequack"},"content":"        System.out.println(formatWithHeading(\"Added \\\"\" + task_name + \"\\\" successfully!\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-08-18"},{"lineNumber":73,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":74,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":75,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":76,"author":{"gitId":"wutdequack"},"content":"     * Creates a new Task with name provided and adds it to ArrayList.","lastModifiedDate":"2021-08-18"},{"lineNumber":77,"author":{"gitId":"wutdequack"},"content":"     * @param task_name The name of the task to be added.","lastModifiedDate":"2021-08-18"},{"lineNumber":78,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":79,"author":{"gitId":"wutdequack"},"content":"    public static void addTask(String task_name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":80,"author":{"gitId":"wutdequack"},"content":"        // Instantiate new Task object","lastModifiedDate":"2021-08-18"},{"lineNumber":81,"author":{"gitId":"wutdequack"},"content":"        Task new_task \u003d new Task(task_name);","lastModifiedDate":"2021-08-18"},{"lineNumber":82,"author":{"gitId":"wutdequack"},"content":"        // Add to tasksList","lastModifiedDate":"2021-08-18"},{"lineNumber":83,"author":{"gitId":"wutdequack"},"content":"        tasksList.add(new_task);","lastModifiedDate":"2021-08-18"},{"lineNumber":84,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":85,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":86,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":87,"author":{"gitId":"wutdequack"},"content":"     * Prints Goodbye message to user.","lastModifiedDate":"2021-08-18"},{"lineNumber":88,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"wutdequack"},"content":"    public static void printGoodByeMessage() {","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"wutdequack"},"content":"        System.out.println(formatWithHeading(\"Hasta la vista.\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"wutdequack"},"content":"        System.out.println(formatWithHeading(\"I will be back.\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"wutdequack"},"content":"        System.out.println(formatWithHeading(\"Program Terminating in...\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"wutdequack"},"content":"        // Stops at 2 intentionally","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"wutdequack"},"content":"        for (int i \u003d 5; i \u003e 1; --i) {","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"wutdequack"},"content":"            System.out.println(formatWithHeading(Integer.toString(i), TERMINATOR_FORMATTING));","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"wutdequack"},"content":"     * Format printed messages with the appropriate headings.","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"wutdequack"},"content":"     * If option TERMINATOR_FORMATTING is selected, [The Terminator] will prepend the msg.","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"wutdequack"},"content":"     * If option USER_FORMATTING is selected, [User] will prepend the msg.","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"wutdequack"},"content":"     * @param msg Message to be printed.","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"wutdequack"},"content":"     * @param option TERMINATOR_FORMATTING or USER_FORMATTING.","lastModifiedDate":"2021-08-17"},{"lineNumber":105,"author":{"gitId":"wutdequack"},"content":"     * @return String with prepended heading.","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":107,"author":{"gitId":"wutdequack"},"content":"    public static String formatWithHeading(String msg, Integer option) {","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"wutdequack"},"content":"        String prepend \u003d \"\";","lastModifiedDate":"2021-08-17"},{"lineNumber":109,"author":{"gitId":"wutdequack"},"content":"        switch (option) {","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"wutdequack"},"content":"        case TERMINATOR_FORMATTING:","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"wutdequack"},"content":"            prepend \u003d \"[The Terminator]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":112,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"wutdequack"},"content":"        case USER_FORMATTING:","lastModifiedDate":"2021-08-17"},{"lineNumber":114,"author":{"gitId":"wutdequack"},"content":"            prepend \u003d \"[User]\";","lastModifiedDate":"2021-08-17"},{"lineNumber":115,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-08-17"},{"lineNumber":116,"author":{"gitId":"wutdequack"},"content":"        default:","lastModifiedDate":"2021-08-17"},{"lineNumber":117,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-08-17"},{"lineNumber":118,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":119,"author":{"gitId":"wutdequack"},"content":"        return String.format(\"%s: %s\", prepend, msg);","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":123,"author":{"gitId":"wutdequack"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2021-08-17"},{"lineNumber":124,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":125,"author":{"gitId":"wutdequack"},"content":"    public static void printHelloMessage() {","lastModifiedDate":"2021-08-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // @@author ObASCII","lastModifiedDate":"2021-08-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // Reused from https://www.asciiart.eu/computers/computers","lastModifiedDate":"2021-08-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2021-08-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String logo \u003d \"              ,---------------------------,\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + \"              |  /---------------------\\\\  |\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + \"              | |                       | |\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + \"              | |     404               | |\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                + \"              | |      Send             | |\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                + \"              | |       Help            | |\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                + \"              | |        Pls            | |\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                + \"              |  \\\\_____________________/  |\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                + \"              |___________________________|\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + \"            ,---\\\\_____     []     _______/------,\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + \"          /         /______________\\\\           /|\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                + \"        /___________________________________ /  | ___\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                + \"        |                                   |   |    )\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + \"        |  _ _ _                 [-------]  |   |   (\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                + \"        |  o o o                 [-------]  |  /    _)_\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                + \"        |__________________________________ |/     /  /\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                + \"    /-------------------------------------/|      ( )/\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                + \"  /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                + \"/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                + \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        System.out.println(formatWithHeading(\"Hola Amigos, I am the Terminator.\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-08-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        System.out.println(formatWithHeading(\"What would you like me to do?\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-08-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        System.out.println(\"[*] Type \\\"bye\\\" if you want to leave!\");","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Main Function that is called upon program execution.","lastModifiedDate":"2021-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * @param args System Arguments added to the program.","lastModifiedDate":"2021-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // Prints opening message","lastModifiedDate":"2021-08-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        printHelloMessage();","lastModifiedDate":"2021-08-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Scanner scanObject \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // Continue Running Loop until bye is called","lastModifiedDate":"2021-08-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        while (toContinue) {","lastModifiedDate":"2021-08-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            // Gets user input","lastModifiedDate":"2021-08-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            System.out.print(formatWithHeading(\"\", USER_FORMATTING));","lastModifiedDate":"2021-08-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            String userInput \u003d scanObject.nextLine();","lastModifiedDate":"2021-08-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            // This is assuming user will put input","lastModifiedDate":"2021-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            // TODO: Error checking that user has put something in","lastModifiedDate":"2021-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            // Parse out keyword from user input","lastModifiedDate":"2021-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            String keyword \u003d userInput.split(\" \")[KEYWORD_INDEX];","lastModifiedDate":"2021-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            // Checks for the input for keywords BYE and LIST","lastModifiedDate":"2021-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            switch (keyword.toUpperCase()) {","lastModifiedDate":"2021-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                case \"DONE\":","lastModifiedDate":"2021-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    // Assumption that there are at least 2 tokens in split input","lastModifiedDate":"2021-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                    // No check to see if task number is valid yet","lastModifiedDate":"2021-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    // TODO: Might want to include error checks (like try/catch) at later levels","lastModifiedDate":"2021-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                    // Parse out task number from user input","lastModifiedDate":"2021-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                    int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[TASK_NUMBER_INDEX]) - 1;","lastModifiedDate":"2021-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                    // Update the list and print respective message","lastModifiedDate":"2021-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    updateCompletion(taskNumber);","lastModifiedDate":"2021-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                    printUpdateMessage(taskNumber);","lastModifiedDate":"2021-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                case \"LIST\":","lastModifiedDate":"2021-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                    // Print Tasks with in-built tasksList","lastModifiedDate":"2021-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    printTasks();","lastModifiedDate":"2021-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                case \"BYE\":","lastModifiedDate":"2021-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                    // Stop loop and print Goodbye message","lastModifiedDate":"2021-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                    toContinue \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                    printGoodByeMessage();","lastModifiedDate":"2021-08-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                default:","lastModifiedDate":"2021-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                    // Create Task and add to tasksList","lastModifiedDate":"2021-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"                    addTask(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"                    printAddTaskMessage(userInput);","lastModifiedDate":"2021-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                    break;","lastModifiedDate":"2021-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-08-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"wutdequack":125,"-":79}}]
