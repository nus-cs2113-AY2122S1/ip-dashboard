[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"User Guide for Terminator","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"- [User Guide for Terminator](#user-guide-for-terminator)","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"  - [list](#list---lists-current-tasks)","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"  - [find](#find---filter-out-current-tasks-based-on-keywords)","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"  - [delete](#delete---delete-current-tasks-based-on-index-provided)","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"  - [done](#done---mark-current-tasks-as-completed-based-on-index-provided)","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"  - [todo](#todo---adds-a-new-todo-task-to-the-list)","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"  - [deadline](#deadline---adds-a-new-deadline-task-to-the-list)","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"  - [event](#event---adds-a-new-event-task-to-the-list)","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"  - [bye](#bye---exits-current-program)","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"  - [Saving Data](#saving-the-data)","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"  - [Editing Data](#editing-the-data-file)","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"-----------------------------","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"Terminator is a **command-line (CLI) desktop app for managing tasks to do.** It targets at fast typists ","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"who want to take a look at their tasks to do on the fly.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"## Quick Start","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"1. Ensure you have Java `11` or above installed in your computer.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"2. Download the latest version of Terminator from [here](https://github.com/wutdequack/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"3. Copy the file to the folder you want to use as the home folder for Terminator.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"4. Create a new folder called `data` and put your `records.txt` file there.","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"5. Open your favourite terminal/command shell with the context of your home folder and run the ","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"following command: ```java -jar Terminator.jar```.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"![](Intro.jpg)","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"6. Type in your command and press Enter to execute it. ","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"This is a list of sample commands you can try:","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"* `list`: Lists all tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"* `todo get the duck`: Adds an item `get the duck` in the todo list for a user to complete.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"* `event Attend CS2113 Lecture /at Fri 4-6pm`: Adds an item `Attend CS2113 Lecture` at ","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"`Fri 4-6pm` in the event list for a user to attend.","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"* `deadline Submit iP /by 1 Oct 2359`: Adds an item `Submit iP` by","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"`1 Oct 2359` in the deadline list for a user to complete by the given time.","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"* `find CS2113`: Find all tasks that has the phrase `CS2113` in its title.","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"* `delete 3`: Deletes the 3rd task shown in the current list.","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"* `done 3`: Mark the 3rd task shown in the current list as _completed_.","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"* `bye`: Exits the program.","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"### `list` - Lists current tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"wutdequack"},"content":"Lists all current tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"wutdequack"},"content":"Format: ```list```","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"wutdequack"},"content":"* If Current List is empty, no tasks will be listed. ","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"wutdequack"},"content":"Example:","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"wutdequack"},"content":"* ```list``` returns list of current tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"wutdequack"},"content":"![](ListCommand.jpg)","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"wutdequack"},"content":"### `find` - Filter out current tasks based on keywords","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"wutdequack"},"content":"Filter tasks based on given keyword.","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"wutdequack"},"content":"Format: ```find KEYWORDS```","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"wutdequack"},"content":"* The search is sensitive. i.e CS2113 will be different from cs2113","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"wutdequack"},"content":"* The search will look for all the keywords to see if it appears in the description of the task in ","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"wutdequack"},"content":"that order.","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"wutdequack"},"content":"Example:","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"wutdequack"},"content":"* ```find CS2113``` returns `Attend CS2113 Lecture`","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"wutdequack"},"content":"![](FindCommand.jpg)","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"wutdequack"},"content":"### `delete` - Delete current tasks based on index provided","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"wutdequack"},"content":"Delete the specified task from the list. ","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"wutdequack"},"content":"Format: ```delete INDEX```","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"wutdequack"},"content":"* Deletes the task at the specified `INDEX`.","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"wutdequack"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"wutdequack"},"content":"* The index must be a positive integer 1, 2, 3.","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"wutdequack"},"content":"Example:","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"wutdequack"},"content":"* ```delete 2``` will delete the second task `Submit iP` from the [list](ListCommand.jpg).","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"wutdequack"},"content":"![](DeleteCommand.jpg)","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"wutdequack"},"content":"### `done` - Mark current tasks as completed based on index provided","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"wutdequack"},"content":"Mark the specified task as Done in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"wutdequack"},"content":"Format: ```done INDEX```","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"wutdequack"},"content":"* Mark the task at the specified `INDEX` to be completed.","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"wutdequack"},"content":"* The index refers to the index number shown in the displayed task list.","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"wutdequack"},"content":"* The index must be a positive integer 1, 2, 3.","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"wutdequack"},"content":"Example:","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"wutdequack"},"content":"* ```done 1``` will mark the first task `Attend CS2113 Lecture` from the [list](ListCommand.jpg) ","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"wutdequack"},"content":"as completed with a `X`.","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"wutdequack"},"content":"![](DoneCommand.jpg)","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"wutdequack"},"content":"### `todo` - Adds a new ToDo Task to the list","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"wutdequack"},"content":"Adds a new ToDo task.","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"wutdequack"},"content":"Format: ```todo TASKNAME```","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"wutdequack"},"content":"Example:","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"wutdequack"},"content":"* ```todo Buy Nissin Cup Noodles``` will add a ToDo Task with the name ","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"wutdequack"},"content":"`Buy Nissin Cup Noodles` to the list. ","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"wutdequack"},"content":"![](ToDoCommand.jpg)","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"wutdequack"},"content":"### `deadline` - Adds a new Deadline Task to the list","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"wutdequack"},"content":"Adds a new Deadline task.","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"wutdequack"},"content":"Format: ```deadline TASKNAME /by DATETIME```","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"wutdequack"},"content":"Example:","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"wutdequack"},"content":"* ```deadline End of Phase 2 /by 2021``` will add a Deadline Task with the name","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"wutdequack"},"content":"  `End of Phase 2` with an attached timeframe `2021` to the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"wutdequack"},"content":"![](DeadlineCommand.jpg)","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"wutdequack"},"content":"### `event` - Adds a new Event Task to the list","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"wutdequack"},"content":"Adds a new Event task.","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"wutdequack"},"content":"Format: ```event TASKNAME /at DATETIME```","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"wutdequack"},"content":"Example:","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"wutdequack"},"content":"* ```event Halloween /at 31 October 2021``` will add a Event Task with the name","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"wutdequack"},"content":"  `Halloween` with an attached timeframe `31 October 2021` to the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":155,"author":{"gitId":"wutdequack"},"content":"![](EventCommand.jpg)","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":157,"author":{"gitId":"wutdequack"},"content":"### `bye` - Exits current program","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"wutdequack"},"content":"Exits the program.","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"wutdequack"},"content":"Format: ```bye```","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"wutdequack"},"content":"Example:","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"wutdequack"},"content":"* ```bye``` will quit this program","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"wutdequack"},"content":"![](ByeCommand.jpg)","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"wutdequack"},"content":"### Saving the data","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"wutdequack"},"content":"Terminator data is _saved in the hard disk automatically_ after any command that changes the data. ","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"wutdequack"},"content":"There is no need to save manually.","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":173,"author":{"gitId":"wutdequack"},"content":"### Editing the data file","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"wutdequack"},"content":"Terminator data are saved as a txt file at `data/records.txt` in relation to your local directory. ","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"wutdequack"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"wutdequack":161,"-":14}},{"path":"src/main/java/wutdequack/terminator/Terminator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.parser.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.storage.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.tasklist.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.ui.TextUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.BYE_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DEADLINE_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DELETE_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DONE_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.EVENT_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.FIND_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.FROM_USER;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.LIST_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.TODO_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.tasksList;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"public class Terminator {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"     * Global variable used to show if loop to get user input should continue running.","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"    public static Boolean toContinue \u003d true;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"     * Handle the bye sequence for Terminator.","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"    public void handleByeSequence() {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"        toContinue \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"        ui.printGoodByeMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"     * Executes the command based on what is given by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"     * @param userLine Line that is inputted by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"    private void executeCommand(String userLine) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"        String keyword \u003d new Parser().getKeywordFromUserInput(userLine);","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"        // Checks for the input for keywords BYE and LIST","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"        switch (keyword.toUpperCase()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"        case DONE_STRING:","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"            // Go to helper function to mark task as done","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"            taskList.handleDoneTask(userLine);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"        case DELETE_STRING:","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"wutdequack"},"content":"            // Go to helper function to mark task as done","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"wutdequack"},"content":"            taskList.handleDeleteTask(userLine);","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"wutdequack"},"content":"        case LIST_STRING:","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"            // Print Tasks with in-built tasksList","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"wutdequack"},"content":"            ui.printTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"wutdequack"},"content":"        case BYE_STRING:","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"wutdequack"},"content":"            // Stop loop and print Goodbye","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"wutdequack"},"content":"            handleByeSequence();","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"wutdequack"},"content":"        case TODO_STRING:","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"wutdequack"},"content":"            taskList.createToDoTask(userLine, FROM_USER);","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"wutdequack"},"content":"        case DEADLINE_STRING:","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"wutdequack"},"content":"            taskList.createDeadlineTask(userLine, FROM_USER);","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"wutdequack"},"content":"        case EVENT_STRING:","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"wutdequack"},"content":"            taskList.createEventTask(userLine, FROM_USER);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"wutdequack"},"content":"        case FIND_STRING:","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"wutdequack"},"content":"            ui.findTasks(userLine);","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"wutdequack"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"wutdequack"},"content":"            ui.printUnknownCommandMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"wutdequack"},"content":"        // Update the list","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"wutdequack"},"content":"        storage.updateTasksToFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"wutdequack"},"content":"     * Main Function that is called upon program execution.","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"wutdequack"},"content":"     * @param args System Arguments added to the program.","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"wutdequack"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"wutdequack"},"content":"        new Terminator().run();","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"wutdequack"},"content":"     * Runs program until termination","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"wutdequack"},"content":"    public void run() {","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"wutdequack"},"content":"        start();","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"wutdequack"},"content":"        loopUntilByeInitiated();","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"wutdequack"},"content":"    private void loopUntilByeInitiated() {","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"wutdequack"},"content":"        // Continue Running Loop until bye is called","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"wutdequack"},"content":"        while (toContinue) {","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"wutdequack"},"content":"            // Gets user input","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"wutdequack"},"content":"            String userInput \u003d ui.getUserInput();","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"wutdequack"},"content":"            executeCommand(userInput);","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"wutdequack"},"content":"     * Set up required objects and prints welcome message","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"wutdequack"},"content":"    private void start() {","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"wutdequack"},"content":"        ui \u003d new TextUi();","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"wutdequack"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"wutdequack"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"wutdequack"},"content":"        tasksList  \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"wutdequack"},"content":"        ui.printHelloMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"wutdequack"},"content":"        storage.loadTasksFromFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"wutdequack":122}},{"path":"src/main/java/wutdequack/terminator/common/MagicValues.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.common;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.tasklist.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.ui.TextUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.storage.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"public class MagicValues {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"     * Keywords for commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"    public static final String BYE_STRING \u003d \"BYE\";","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"    public static final String DONE_STRING \u003d \"DONE\";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"    public static final String LIST_STRING \u003d \"LIST\";","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"    public static final String FIND_STRING \u003d \"FIND\";","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"    public static final String TODO_STRING \u003d \"TODO\";","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"    public static final String EVENT_STRING \u003d \"EVENT\";","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"    public static final String DELETE_STRING \u003d \"DELETE\";","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"    public static final String DEADLINE_STRING \u003d \"DEADLINE\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"     * List of constants used to define who is speaking.","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"    public static final String TERMINATOR_STRING \u003d \"[The Terminator]\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"    public static final String USER_STRING \u003d \"[User]\";","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"     * List of constants used in extractNameDateTime","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"    public static final String BY_KEYWORD \u003d \"/by\";","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"    public static final String AT_KEYWORD \u003d \"/at\";","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"    public static final String TODO_KEYWORD \u003d \"todo\";","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"    public static final String EVENT_KEYWORD \u003d \"event\";","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"    public static final String DEADLINE_KEYWORD \u003d \"deadline\";","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"     * List of constants used in formatWithHeading.","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"    public static final int TERMINATOR_FORMATTING \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"    public static final int USER_FORMATTING \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"     * List of constants used in tokenizing user input.","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"    public static final int KEYWORD_INDEX \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"    public static final int SEARCH_TERM_INDEX \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"    public static final int TASK_NUMBER_INDEX \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"     * List of constants used to identify Event Type for createEvent","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"    public static final String TODO_TYPE \u003d \"T\";","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"wutdequack"},"content":"    public static final String EVENT_TYPE \u003d \"E\";","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"wutdequack"},"content":"    public static final String DEADLINE_TYPE \u003d \"D\";","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"     * List of constants used to show index of taskName and dateTime from retrieval list","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"wutdequack"},"content":"    public static final int TASK_NAME_INDEX \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"wutdequack"},"content":"    public static final int DATE_TIME_INDEX \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"wutdequack"},"content":"    public static final int COMPLETION_INDEX \u003d 2;","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"wutdequack"},"content":"     * Global File Path to save and retrieve Task Records","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"wutdequack"},"content":"    public static final String FILE_LOCATION \u003d \"./data/records.txt\";","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"wutdequack"},"content":"     * Global variables used to determine if input for Task Creation is from file or from user","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"wutdequack"},"content":"    public static final int FROM_USER \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"wutdequack"},"content":"    public static final int FROM_FILE \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"wutdequack"},"content":"     * Global variable to show the deliminator for strings stored in the file format","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"wutdequack"},"content":"    public static final String DELIMINATOR_FOR_FILE \u003d \" | \";","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"wutdequack"},"content":"     * Global ArrayList of all Tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"wutdequack"},"content":"    public static ArrayList\u003cTask\u003e tasksList;","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"wutdequack"},"content":"    public static TextUi ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"wutdequack":85}},{"path":"src/main/java/wutdequack/terminator/common/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.common;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"public class Messages {","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"    /**Static messages for greetings**/","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    // @@author ObASCII","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    // Reused from https://www.asciiart.eu/computers/computers","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String LOGO \u003d \"              ,---------------------------,\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"            + \"              |  /---------------------\\\\  |\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"            + \"              | |                       | |\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \"              | |     404               | |\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"              | |      Send             | |\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"              | |       Help            | |\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"              | |        Pls            | |\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"              |  \\\\_____________________/  |\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"              |___________________________|\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"            ,---\\\\_____     []     _______/------,\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"          /         /______________\\\\           /|\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"        /___________________________________ /  | ___\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"        |                                   |   |    )\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"        |  _ _ _                 [-------]  |   |   (\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"        |  o o o                 [-------]  |  /    _)_\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"        |__________________________________ |/     /  /\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    /-------------------------------------/|      ( )/\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"  /-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/-/ /\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\";","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String GREETING_MESSAGE \u003d \"\\\"Hola Amigos, I am the Terminator.\\\"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String GREETING_QUERY_MESSAGE \u003d \"What would you like me to do?\";","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String GREETING_QUIT_MESSAGE \u003d \"[*] Type \\\"bye\\\" if you want to leave!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**Error Messages**/","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String ERROR_NUMBER_INVALID_MESSAGE \u003d \"Input was not a valid number\";","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String ERROR_INDEX_OUT_OF_BOUNDS_MESSAGE \u003d \"Index is out of bounds! Try again :(\";","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String ERROR_MISSING_PARAMS_MESSAGE \u003d \"You are missing parameters! Try again!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String ERROR_MISSING_DATETIME_MESSAGE \u003d \"Missing Task Name/Date Time!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String ERROR_INVALID_TODO_TASK_MESSAGE \u003d \"You did not enter a valid ToDo task\";","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String ERROR_CONFUSED_MESSAGE \u003d \"Sorry, I don\u0027t understand you\";","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String ERROR_INVALID_TASK_COMMAND \u003d \"Put either list/deadline/todo/event\";","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**CRUD Messages**/","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String COMPLETED_TASK_MESSAGE \u003d \"Great! The following item has been marked as completed\";","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String UPDATED_TASK_MESSAGE \u003d \"Noted. The following item has been deleted\";","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String POST_CRUD_QUERY_MESSAGE \u003d \"Is there anything else you would like me to do?\";","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADD_TASK_MESSAGE \u003d \"Added the following Task\";","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADD_TASK_COUNTER_MESSAGE \u003d \"You have %d tasks in the list\";","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADD_TASK_QUERY_MESSAGE \u003d \"Hmmm... what should I do now?\";","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**File IO Messages**/","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String FILE_DONT_EXIST_MESSAGE \u003d \"Directory (data) and/or File (data/records.txt) does not \"","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"exist!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String FILE_DATABASE_EXIST_MESSAGE \u003d \"New database created\";","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String FILE_PERMISSION_ERROR_MESSAGE \u003d \"Cannot create file here. Check your permissions!\";","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**Filter Tasks**/","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String FILTER_TASKS_MESSAGE \u003d \"These are a list of tasks based on the search term: %s\";","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"wutdequack":5,"-":55}},{"path":"src/main/java/wutdequack/terminator/objects/exception/InsufficientParametersException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.objects.exception;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"public class InsufficientParametersException extends Exception {","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"    public InsufficientParametersException() {","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"wutdequack":6}},{"path":"src/main/java/wutdequack/terminator/objects/exception/MissingVariablesException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.objects.exception;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"public class MissingVariablesException extends Exception {","lastModifiedDate":"2021-09-03"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"    public MissingVariablesException() {","lastModifiedDate":"2021-09-03"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-03"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-09-03"}],"authorContributionMap":{"wutdequack":6}},{"path":"src/main/java/wutdequack/terminator/objects/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.objects.task;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"    protected String datetime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"     * Create Deadline with given name and associated datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"     * @param name The description of the Deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"     * @param datetime The datetime of when the task is due.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"    public Deadline(String name, String datetime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"        super(name);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"     * Get the current due date and time of the Deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"     * @return The string with the datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"    public String getDatetime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"        return datetime;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"     * Set the current due date and time of the Deadline task.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"     * @param datetime The string with the datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"    public void setDatetime(String datetime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"     * Get the Item type which is D in this case.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"     * @return A string \"D\".","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"    public String getItemType() {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"        return \"D\";","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"     * Changes a Task into a human-readable format.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"     * @return A formatted String of the Deadline, its status, type, description and datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"        return String.format(\"%s (by: %s)\", super.toString(), datetime);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"     * Changes a Task into a human-readable format to be stored in file.","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"     * @return A formatted String of the Deadline, its status, type, description and datetime.","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"wutdequack"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"wutdequack"},"content":"    public String toFileStringFormat() {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"wutdequack"},"content":"        return String.format(\"%s | %s\", super.toFileStringFormat(), datetime);","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"wutdequack":58}},{"path":"src/main/java/wutdequack/terminator/objects/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.objects.task;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"    protected String datetime;","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"     * Create Event with given name and associated datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"     * @param name The description of the Event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"     * @param datetime The datetime of when the task is due.","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"    public Event(String name, String datetime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"        super(name);","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"     * Get the current due date and time of the Event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"     * @return The string with the datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"    public String getDatetime() {","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"        return datetime;","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"     * Set the current due date and time of the Event task.","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"     * @param datetime The string with the datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"    public void setDatetime(String datetime) {","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"     * Get the Item type which is E in this case.","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"     * @return A string \"E\".","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"    public String getItemType() {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"        return \"E\";","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"     * Changes a Task into a human-readable format.","lastModifiedDate":"2021-08-26"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"     * @return A formatted String of the Event, its status, type, description and datetime.","lastModifiedDate":"2021-08-26"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"        return String.format(\"%s (at: %s)\", super.toString(), datetime);","lastModifiedDate":"2021-08-26"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"     * Changes a Task into a human-readable format to be stored in file.","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"     * @return A formatted String of the Event, its status, type, description and datetime.","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"wutdequack"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"wutdequack"},"content":"    public String toFileStringFormat() {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"wutdequack"},"content":"        return String.format(\"%s | %s\", super.toFileStringFormat(), datetime);","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"wutdequack":58}},{"path":"src/main/java/wutdequack/terminator/objects/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.objects.task;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"/**","lastModifiedDate":"2021-08-18"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":" * Represents a Task.","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":" */","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"public class Task {","lastModifiedDate":"2021-08-18"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"    private String name;","lastModifiedDate":"2021-08-18"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"    private boolean isCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"     * Create Task with specified name.","lastModifiedDate":"2021-08-18"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"     * @param name The name of task.","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"        setName(name);","lastModifiedDate":"2021-08-18"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"        setCompleted(false);","lastModifiedDate":"2021-08-18"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"     * Gets the task\u0027s name.","lastModifiedDate":"2021-08-18"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"     * @return A string representing the task\u0027s name.","lastModifiedDate":"2021-08-18"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"    public String getName() {","lastModifiedDate":"2021-08-18"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"        return name;","lastModifiedDate":"2021-08-18"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"     * Gets the potential task completion status.","lastModifiedDate":"2021-08-18"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"     * @return A boolean value representing the task\u0027s completion status.","lastModifiedDate":"2021-08-18"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"    public boolean getCompleted() {","lastModifiedDate":"2021-08-18"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"        return isCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"     * Set the task\u0027s last name.","lastModifiedDate":"2021-08-18"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"     * @param name A string containing the task\u0027s name.","lastModifiedDate":"2021-08-18"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-08-18"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-18"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"     * Set the task\u0027s completion status.","lastModifiedDate":"2021-08-18"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"     * @param isCompleted A boolean containing the task\u0027s completion status.","lastModifiedDate":"2021-08-18"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"    public void setCompleted(boolean isCompleted) {","lastModifiedDate":"2021-08-18"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"        this.isCompleted \u003d isCompleted;","lastModifiedDate":"2021-08-18"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // @@author unknown","lastModifiedDate":"2021-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Reused from https://nus-cs2113-ay2122s1.github.io/website/schedule/week3/project.html","lastModifiedDate":"2021-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Get the task\u0027s completion status formatted into.","lastModifiedDate":"2021-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * If isCompleted is true, return \"X\" else returns \" \".","lastModifiedDate":"2021-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return A string representing the status.","lastModifiedDate":"2021-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Mark done task with X","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return (isCompleted ? \"X\" : \" \");","lastModifiedDate":"2021-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Get the Item type.","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns empty string for normal Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Meant to be polymorphed.","lastModifiedDate":"2021-08-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @return An empty string \" \"","lastModifiedDate":"2021-08-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public String getItemType() {","lastModifiedDate":"2021-08-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return \" \";","lastModifiedDate":"2021-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Changes a Task into a human-readable format.","lastModifiedDate":"2021-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @return A formatted String of the Task, its status, type and description.","lastModifiedDate":"2021-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return String.format(\"[%s][%s] %s\", getItemType(), getStatusIcon(), name);","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Changes a Task into a human-readable format to be stored in file.","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return A formatted String of the Task, its status, type and description.","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public String toFileStringFormat() {","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return String.format(\"%s | %s | %s\", getItemType(), getStatusIcon(), name);","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-18"}],"authorContributionMap":{"wutdequack":50,"-":40}},{"path":"src/main/java/wutdequack/terminator/objects/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.objects.task;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"     * Create a ToDo Task.","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"     *","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"     * @param name The name of task.","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"    public ToDo(String name) {","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"        super(name);","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"     * Get the Item type which is T in this case.","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"     * @return A string \"T\".","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"    @Override","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"    public String getItemType() {","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"        return \"T\";","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"wutdequack":22}},{"path":"src/main/java/wutdequack/terminator/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.AT_KEYWORD;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.BY_KEYWORD;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.COMPLETION_INDEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DATE_TIME_INDEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DEADLINE_KEYWORD;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DEADLINE_TYPE;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DELIMINATOR_FOR_FILE;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.EVENT_KEYWORD;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.EVENT_TYPE;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.KEYWORD_INDEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.SEARCH_TERM_INDEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.TASK_NAME_INDEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.TASK_NUMBER_INDEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.TODO_KEYWORD;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.exception.InsufficientParametersException;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"public class Parser {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"    public Parser() {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"     * Given user command to mark task as completed, return the task number.","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"     * @param userInput String containing the TaskNumber.","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"     * @return The TaskNumber to be marked as done","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"    public int getTaskNumberFromInput(String userInput) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"            int taskNumber \u003d Integer.parseInt(userInput.split(\" \")[TASK_NUMBER_INDEX]) - 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"            // If less than 0, throw exception","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"            if (taskNumber \u003c 0) {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"            return taskNumber;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"            ui.printInvalidUserNumberMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"            return -1;","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"     * Parse the String into different parts based on format.","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"     * @param fileFormattedString A string extracted from the input file.","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"     * @param eventType The type of task to extract based on.","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"     * @return String array of parsed Strings","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"wutdequack"},"content":"    public String[] parseFileFormattedString(String fileFormattedString, String eventType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"wutdequack"},"content":"        String[] returnArray \u003d new String[3];","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"wutdequack"},"content":"        String[] splitResult \u003d fileFormattedString.split(Pattern.quote(DELIMINATOR_FOR_FILE));","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"        returnArray[COMPLETION_INDEX] \u003d splitResult[1];","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"wutdequack"},"content":"        returnArray[TASK_NAME_INDEX] \u003d splitResult[2];","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"wutdequack"},"content":"        if (Objects.equals(eventType, DEADLINE_TYPE) || Objects.equals(eventType, EVENT_TYPE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"wutdequack"},"content":"            returnArray[DATE_TIME_INDEX] \u003d splitResult[3];","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"wutdequack"},"content":"        return returnArray;","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"wutdequack"},"content":"     * Utilizes user input to extract Task Name and UserInput.","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"wutdequack"},"content":"     * @param userInput The string given by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"wutdequack"},"content":"     * @param eventType The type of task to extract based on.","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"wutdequack"},"content":"     * @return String array containing userinput and eventType.","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"wutdequack"},"content":"    public String[] extractNameDateTime(String userInput, String eventType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"wutdequack"},"content":"        String[] returnArray \u003d new String[3];","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"wutdequack"},"content":"        if (Objects.equals(eventType, DEADLINE_TYPE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"wutdequack"},"content":"            // Get indexes to substring","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"wutdequack"},"content":"            int startOfByIndex \u003d userInput.indexOf(BY_KEYWORD);","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"wutdequack"},"content":"            int endOfByIndex \u003d startOfByIndex + 3;","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"wutdequack"},"content":"            int endOfDeadlineStringIndex \u003d userInput.indexOf(DEADLINE_KEYWORD) + 8;","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"wutdequack"},"content":"            // Get specific task_name and date_time","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"wutdequack"},"content":"            String taskName \u003d userInput.substring(endOfDeadlineStringIndex, startOfByIndex).strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"wutdequack"},"content":"            String dateTime \u003d userInput.substring(endOfByIndex).strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"wutdequack"},"content":"            // Place values into array","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"wutdequack"},"content":"            returnArray[TASK_NAME_INDEX] \u003d taskName;","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"wutdequack"},"content":"            returnArray[DATE_TIME_INDEX] \u003d dateTime;","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"wutdequack"},"content":"        } else if (Objects.equals(eventType, EVENT_TYPE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"wutdequack"},"content":"            // Get indexes to substring","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"wutdequack"},"content":"            int startOfAtIndex \u003d userInput.indexOf(AT_KEYWORD);","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"wutdequack"},"content":"            int endOfAtIndex \u003d startOfAtIndex + 3;","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"wutdequack"},"content":"            int endOfEventStringIndex \u003d userInput.indexOf(EVENT_KEYWORD) + 5;","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"wutdequack"},"content":"            // Get specific task_name and date_time","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"wutdequack"},"content":"            String taskName \u003d userInput.substring(endOfEventStringIndex, startOfAtIndex).strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"wutdequack"},"content":"            String dateTime \u003d userInput.substring(endOfAtIndex).strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"wutdequack"},"content":"            // Place values into array","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"wutdequack"},"content":"            returnArray[TASK_NAME_INDEX] \u003d taskName;","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"wutdequack"},"content":"            returnArray[DATE_TIME_INDEX] \u003d dateTime;","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"wutdequack"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"wutdequack"},"content":"            // Extract values for ToDo","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"wutdequack"},"content":"            int endOfToDoStringIndex \u003d userInput.indexOf(TODO_KEYWORD) + 4;","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"wutdequack"},"content":"            String taskName \u003d userInput.substring(endOfToDoStringIndex).strip();","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"wutdequack"},"content":"            returnArray[TASK_NAME_INDEX] \u003d taskName;","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"wutdequack"},"content":"        return returnArray;","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"wutdequack"},"content":"     * Checks if the correct format is given based on the task option.","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"wutdequack"},"content":"     * @param rawUserInput String given by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"wutdequack"},"content":"     * @param taskType The type of task to determine the subclass to create.","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"wutdequack"},"content":"    public Boolean isCorrectFormat(String rawUserInput, String taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"wutdequack"},"content":"            boolean incorrectDeadlineString \u003d taskType.equals(DEADLINE_TYPE) \u0026\u0026 !rawUserInput.contains(BY_KEYWORD);","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"wutdequack"},"content":"            boolean incorrectEventString \u003d taskType.equals(EVENT_TYPE) \u0026\u0026 !rawUserInput.contains(AT_KEYWORD);","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"wutdequack"},"content":"            if (incorrectEventString || incorrectDeadlineString) {","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"wutdequack"},"content":"                throw new InsufficientParametersException();","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"wutdequack"},"content":"        } catch (InsufficientParametersException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"wutdequack"},"content":"            // If not enough parameters, print message and return False","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"wutdequack"},"content":"            ui.printMissingParametersMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"wutdequack"},"content":"            return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"wutdequack"},"content":"        // If pass all checks, it is in the correct format","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"wutdequack"},"content":"        return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"wutdequack"},"content":"     * Extracts keyword from user input.","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"wutdequack"},"content":"     * @param userLine Line that is inputted by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"wutdequack"},"content":"     * @return String containing the keyword.","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"wutdequack"},"content":"    public String getKeywordFromUserInput(String userLine) {","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"wutdequack"},"content":"        return userLine.split(\" \")[KEYWORD_INDEX];","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"wutdequack"},"content":"     * Extracts search term from input","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"wutdequack"},"content":"     * @param userLine Line that is inputted by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"wutdequack"},"content":"     * @return String containing the search term","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"wutdequack"},"content":"    public String getSearchTermFromInput(String userLine) {","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"wutdequack"},"content":"        String[] tokenizedInput \u003d userLine.split(\" \");","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"wutdequack"},"content":"        String[] tokenizedSearchTerms \u003d Arrays.copyOfRange(tokenizedInput, 1, tokenizedInput.length);","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"wutdequack"},"content":"        return String.join(\" \", tokenizedSearchTerms);","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"wutdequack":150}},{"path":"src/main/java/wutdequack/terminator/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DEADLINE_TYPE;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.EVENT_TYPE;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.FILE_LOCATION;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.FROM_FILE;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"import java.io.File;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"import java.util.StringJoiner;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.Terminator;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.tasklist.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.ui.TextUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"public class Storage {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"    private TextUi ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"    public Storage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"        this.ui \u003d new TextUi();","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"     * Reads Strings from file, add them to arraylist and return arraylist.","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"    public ArrayList\u003cString\u003e readFromFile() {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"        ArrayList\u003cString\u003e returnArrayList \u003d new ArrayList\u003cString\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"            File fileObject \u003d new File(FILE_LOCATION);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"            Scanner scanObject \u003d new Scanner(fileObject);","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"            // Iterate through the lines and add it into the arrayList.","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"            while (scanObject.hasNext()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"                returnArrayList.add(scanObject.nextLine());","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"            handleFileNotFound();","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"        return returnArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"     * Stores given string into the file path.","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"     * @param stringToBeSaved A string to be be stored into the file.","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"    private void writeToFile(String stringToBeSaved) {","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"wutdequack"},"content":"            FileWriter fw \u003d new FileWriter(FILE_LOCATION);","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"wutdequack"},"content":"            fw.write(stringToBeSaved);","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"wutdequack"},"content":"            fw.close();","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"wutdequack"},"content":"            handleFileNotFound();","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"wutdequack"},"content":"     * Handles the scenario if a file is not found.","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"wutdequack"},"content":"    private void handleFileNotFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"wutdequack"},"content":"        ui.printFileDontExistMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"wutdequack"},"content":"            File fileObject \u003d new File(FILE_LOCATION);","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"wutdequack"},"content":"            fileObject.getParentFile().mkdirs();","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"wutdequack"},"content":"            if (fileObject.createNewFile()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"wutdequack"},"content":"                ui.printFileCreationMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"wutdequack"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"wutdequack"},"content":"            ui.printFilePermissionsErrorMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"wutdequack"},"content":"            new Terminator().handleByeSequence();","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"wutdequack"},"content":"     * Handler function for updating Tasks to File.","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"wutdequack"},"content":"    public void updateTasksToFile() {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"wutdequack"},"content":"        String generatedString \u003d generateStringToStore();","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"wutdequack"},"content":"        writeToFile(generatedString);","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"wutdequack"},"content":"     * Handler function for updating Tasks from File.","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"wutdequack"},"content":"    public void loadTasksFromFile() {","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"wutdequack"},"content":"        ArrayList\u003cString\u003e contentFromFile \u003d  readFromFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"wutdequack"},"content":"        facilitateTaskObjectCreation(contentFromFile);","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"wutdequack"},"content":"     * Facilitates the task object creation given the strings from the file.","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"wutdequack"},"content":"     * @param fileFormattedTaskStrings An ArrayList of Strings read from a file","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"wutdequack"},"content":"    private void facilitateTaskObjectCreation(ArrayList\u003cString\u003e fileFormattedTaskStrings) {","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"wutdequack"},"content":"        for (String fileFormatString: fileFormattedTaskStrings) {","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"wutdequack"},"content":"            // Get the first char from the string","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"wutdequack"},"content":"            String firstChar \u003d fileFormatString.substring(0,1);","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"wutdequack"},"content":"            switch (firstChar.toUpperCase()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"wutdequack"},"content":"            case EVENT_TYPE:","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"wutdequack"},"content":"                taskList.createEventTask(fileFormatString, FROM_FILE);","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"wutdequack"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"wutdequack"},"content":"            case DEADLINE_TYPE:","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"wutdequack"},"content":"                taskList.createDeadlineTask(fileFormatString, FROM_FILE);","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"wutdequack"},"content":"                break;","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"wutdequack"},"content":"            default:","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"wutdequack"},"content":"                taskList.createToDoTask(fileFormatString, FROM_FILE);","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"wutdequack"},"content":"     * Generates string version of all the tasks to be stored.","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"wutdequack"},"content":"     * @return A String of all the tasks to be stored in a text file.","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"wutdequack"},"content":"    private String generateStringToStore() {","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"wutdequack"},"content":"        StringJoiner taskJoiner \u003d new StringJoiner(System.lineSeparator());","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"wutdequack"},"content":"        for (Task t: taskList.getTasksList()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"wutdequack"},"content":"            taskJoiner.add(t.toFileStringFormat());","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"wutdequack"},"content":"        return taskJoiner.toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"wutdequack":129}},{"path":"src/main/java/wutdequack/terminator/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.tasklist;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.COMPLETION_INDEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DATE_TIME_INDEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.DEADLINE_TYPE;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.EVENT_TYPE;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.FROM_FILE;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.FROM_USER;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.TASK_NAME_INDEX;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.TODO_TYPE;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.tasksList;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.ui.TextUi;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.parser.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.task.ToDo;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.task.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.task.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.exception.MissingVariablesException;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"public class TaskList {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"    private Parser parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"     * Global Array List of all tasks created by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"        return tasksList;","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"     * Handles the creation of done tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"     * @param userLine Line of input from user.","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"    public void handleDoneTask(String userLine) {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"            // Parse out task number from user input","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"            int taskNumber \u003d parser.getTaskNumberFromInput(userLine);","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"            // Update the list and print respective message","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"            updateTaskCompletionStatus(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"            String taskString \u003d getTaskStringFromIndex(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"            ui.printUpdateMessage(taskString);","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"wutdequack"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"wutdequack"},"content":"            ui.printOutOfBoundsMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"wutdequack"},"content":"     * Handler function to delete task from list.","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"wutdequack"},"content":"     * @param userLine Line of input from user.","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"wutdequack"},"content":"    public void handleDeleteTask(String userLine) {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"wutdequack"},"content":"            // Parse out task number from user input","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"wutdequack"},"content":"            int taskNumber \u003d parser.getTaskNumberFromInput(userLine);","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"wutdequack"},"content":"            // Print respective message and delete the task","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"wutdequack"},"content":"            String taskString \u003d getTaskStringFromIndex(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"wutdequack"},"content":"            ui.printDeleteMessage(taskString);","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"wutdequack"},"content":"            deleteTaskFromList(taskNumber);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"wutdequack"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"wutdequack"},"content":"            ui.printOutOfBoundsMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"wutdequack"},"content":"     * Retrieves Task String based on task number index in list.","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"wutdequack"},"content":"     * @param taskNumber Index of task.","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"wutdequack"},"content":"     * @return A String containing the toString version of the Task.","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"wutdequack"},"content":"    private String getTaskStringFromIndex(int taskNumber) {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"wutdequack"},"content":"        return tasksList.get(taskNumber).toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"wutdequack"},"content":"     * Updates the completion status of the Task to true.","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"wutdequack"},"content":"     * @param taskNumber The index of the task to be updated.","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"wutdequack"},"content":"    private void updateTaskCompletionStatus(int taskNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"wutdequack"},"content":"        tasksList.get(taskNumber).setCompleted(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"wutdequack"},"content":"     * Deletes the Task from the list.","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"wutdequack"},"content":"     * @param taskNumber The index of the task to be deleted.","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"wutdequack"},"content":"    private void deleteTaskFromList(int taskNumber) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"wutdequack"},"content":"        tasksList.remove(taskNumber);","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"wutdequack"},"content":"     * Workers class to create ToDo Tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"wutdequack"},"content":"     * @param userLine Line that is inputted by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"wutdequack"},"content":"     * @param option FROM_USER or FROM_FILE.","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"wutdequack"},"content":"    public void createToDoTask(String userLine, int option) {","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"wutdequack"},"content":"        // Extract values and create ToDo Task","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"wutdequack"},"content":"            String[] extractedValues \u003d new String[3];","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"wutdequack"},"content":"            String taskName, completionStatus \u003d \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"wutdequack"},"content":"            if (option \u003d\u003d FROM_USER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"wutdequack"},"content":"                extractedValues \u003d parser.extractNameDateTime(userLine, TODO_TYPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"wutdequack"},"content":"            } else if (option \u003d\u003d FROM_FILE) {","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"wutdequack"},"content":"                extractedValues \u003d parser.parseFileFormattedString(userLine, TODO_TYPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"wutdequack"},"content":"            taskName \u003d extractedValues[TASK_NAME_INDEX];","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"wutdequack"},"content":"            completionStatus \u003d extractedValues[COMPLETION_INDEX];","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"wutdequack"},"content":"            Task createdTask \u003d createTask(taskName, TODO_TYPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"wutdequack"},"content":"            if (Objects.equals(completionStatus, \"X\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"wutdequack"},"content":"                createdTask.setCompleted(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"wutdequack"},"content":"            if (taskName.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"wutdequack"},"content":"                throw new MissingVariablesException();","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"wutdequack"},"content":"            addTask(createdTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"wutdequack"},"content":"            ui.printAddTaskMessage(createdTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"wutdequack"},"content":"        } catch (MissingVariablesException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"wutdequack"},"content":"            ui.printInvalidToDoMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"wutdequack"},"content":"     * Worker class to create Deadline Tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"wutdequack"},"content":"     * @param userLine Line that is inputted by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"wutdequack"},"content":"     * @param option FROM_USER or FROM_FILE.","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"wutdequack"},"content":"    public void createDeadlineTask(String userLine, int option) {","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"wutdequack"},"content":"        // Extract values and create Deadline Task","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"wutdequack"},"content":"            String[] extractedValues \u003d new String[3];","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"wutdequack"},"content":"            String taskName, dateTime, completionStatus \u003d \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"wutdequack"},"content":"            if (option \u003d\u003d FROM_USER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"wutdequack"},"content":"                if (!parser.isCorrectFormat(userLine, DEADLINE_TYPE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"wutdequack"},"content":"                    return;","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"wutdequack"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"wutdequack"},"content":"                extractedValues \u003d parser.extractNameDateTime(userLine, DEADLINE_TYPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"wutdequack"},"content":"            } else if (option \u003d\u003d FROM_FILE) {","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"wutdequack"},"content":"                extractedValues \u003d parser.parseFileFormattedString(userLine, DEADLINE_TYPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"wutdequack"},"content":"            taskName \u003d extractedValues[TASK_NAME_INDEX];","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"wutdequack"},"content":"            dateTime \u003d extractedValues[DATE_TIME_INDEX];","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"wutdequack"},"content":"            completionStatus \u003d extractedValues[COMPLETION_INDEX];","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"wutdequack"},"content":"            if (taskName.isEmpty() || dateTime.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"wutdequack"},"content":"                throw new MissingVariablesException();","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"wutdequack"},"content":"            Task createdTask \u003d createTask(taskName, dateTime, DEADLINE_TYPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"wutdequack"},"content":"            if (Objects.equals(completionStatus, \"X\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"wutdequack"},"content":"                createdTask.setCompleted(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"wutdequack"},"content":"            addTask(createdTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"wutdequack"},"content":"            ui.printAddTaskMessage(createdTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"wutdequack"},"content":"        } catch (MissingVariablesException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"wutdequack"},"content":"            ui.printDateTimeMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"wutdequack"},"content":"     * Worker class to create Event Tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"wutdequack"},"content":"     * @param userLine Line that is inputted by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"wutdequack"},"content":"     * @param option FROM_USER or FROM_FILE.","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"wutdequack"},"content":"    public void createEventTask(String userLine, int option) {","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"wutdequack"},"content":"        // Extract values and create Event Task","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"wutdequack"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"wutdequack"},"content":"            String[] extractedValues \u003d new String[3];","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"wutdequack"},"content":"            String taskName, dateTime, completionStatus \u003d \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"wutdequack"},"content":"            if (option \u003d\u003d FROM_USER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"wutdequack"},"content":"                if (!parser.isCorrectFormat(userLine, EVENT_TYPE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"wutdequack"},"content":"                    return;","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"wutdequack"},"content":"                }","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"wutdequack"},"content":"                extractedValues \u003d parser.extractNameDateTime(userLine, EVENT_TYPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"wutdequack"},"content":"            } else if (option \u003d\u003d FROM_FILE) {","lastModifiedDate":"2021-09-22"},{"lineNumber":183,"author":{"gitId":"wutdequack"},"content":"                extractedValues \u003d parser.parseFileFormattedString(userLine, EVENT_TYPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":184,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"wutdequack"},"content":"            taskName \u003d extractedValues[TASK_NAME_INDEX];","lastModifiedDate":"2021-09-22"},{"lineNumber":186,"author":{"gitId":"wutdequack"},"content":"            dateTime \u003d extractedValues[DATE_TIME_INDEX];","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"wutdequack"},"content":"            completionStatus \u003d extractedValues[COMPLETION_INDEX];","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"wutdequack"},"content":"            if (taskName.isEmpty() || dateTime.isEmpty()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":189,"author":{"gitId":"wutdequack"},"content":"                throw new MissingVariablesException();","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":191,"author":{"gitId":"wutdequack"},"content":"            Task createdTask \u003d createTask(taskName, dateTime, EVENT_TYPE);","lastModifiedDate":"2021-09-22"},{"lineNumber":192,"author":{"gitId":"wutdequack"},"content":"            if (Objects.equals(completionStatus, \"X\")) {","lastModifiedDate":"2021-09-22"},{"lineNumber":193,"author":{"gitId":"wutdequack"},"content":"                createdTask.setCompleted(true);","lastModifiedDate":"2021-09-22"},{"lineNumber":194,"author":{"gitId":"wutdequack"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":195,"author":{"gitId":"wutdequack"},"content":"            addTask(createdTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":196,"author":{"gitId":"wutdequack"},"content":"            ui.printAddTaskMessage(createdTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":197,"author":{"gitId":"wutdequack"},"content":"        } catch (MissingVariablesException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":198,"author":{"gitId":"wutdequack"},"content":"            ui.printDateTimeMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":199,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":200,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":201,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":202,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":203,"author":{"gitId":"wutdequack"},"content":"     * Creates a new default/ToDo Task with name provided and adds it to ArrayList.","lastModifiedDate":"2021-09-22"},{"lineNumber":204,"author":{"gitId":"wutdequack"},"content":"     * @param taskName The name of the task to be added.","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"wutdequack"},"content":"     * @return The task object created by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":207,"author":{"gitId":"wutdequack"},"content":"    private static Task createTask(String taskName, String taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":208,"author":{"gitId":"wutdequack"},"content":"        Task newTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":209,"author":{"gitId":"wutdequack"},"content":"        if (Objects.equals(taskType, TODO_TYPE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":210,"author":{"gitId":"wutdequack"},"content":"            newTask \u003d new ToDo(taskName);","lastModifiedDate":"2021-09-22"},{"lineNumber":211,"author":{"gitId":"wutdequack"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"wutdequack"},"content":"            newTask \u003d new Task(taskName);","lastModifiedDate":"2021-09-22"},{"lineNumber":213,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":214,"author":{"gitId":"wutdequack"},"content":"        return newTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":215,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":216,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":217,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":218,"author":{"gitId":"wutdequack"},"content":"     * Creates a Deadline/Event Task with name and appropriate date time.","lastModifiedDate":"2021-09-22"},{"lineNumber":219,"author":{"gitId":"wutdequack"},"content":"     * If task_type \u003d DEADLINE_TYPE, create a Deadline object.","lastModifiedDate":"2021-09-22"},{"lineNumber":220,"author":{"gitId":"wutdequack"},"content":"     * Else If task_type \u003d EVENT_TYPE, create a Event object.","lastModifiedDate":"2021-09-22"},{"lineNumber":221,"author":{"gitId":"wutdequack"},"content":"     * @param taskName The name assigned to the given task.","lastModifiedDate":"2021-09-22"},{"lineNumber":222,"author":{"gitId":"wutdequack"},"content":"     * @param dateTime The date-time associated with the task.","lastModifiedDate":"2021-09-22"},{"lineNumber":223,"author":{"gitId":"wutdequack"},"content":"     * @param taskType The type of task to determine the subclass to create.","lastModifiedDate":"2021-09-22"},{"lineNumber":224,"author":{"gitId":"wutdequack"},"content":"     * @return The task object created by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":225,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":226,"author":{"gitId":"wutdequack"},"content":"    private Task createTask(String taskName, String dateTime, String taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"wutdequack"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2021-09-22"},{"lineNumber":228,"author":{"gitId":"wutdequack"},"content":"        if (Objects.equals(taskType, DEADLINE_TYPE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"wutdequack"},"content":"            newTask \u003d new Deadline(taskName, dateTime);","lastModifiedDate":"2021-09-22"},{"lineNumber":230,"author":{"gitId":"wutdequack"},"content":"        } else if (Objects.equals(taskType, EVENT_TYPE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":231,"author":{"gitId":"wutdequack"},"content":"            newTask \u003d new Event(taskName, dateTime);","lastModifiedDate":"2021-09-22"},{"lineNumber":232,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"wutdequack"},"content":"        return newTask;","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":235,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"wutdequack"},"content":"     * Adds a new task into the list of tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":238,"author":{"gitId":"wutdequack"},"content":"     * @param newTask A task created by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":240,"author":{"gitId":"wutdequack"},"content":"    private void addTask(Task newTask) {","lastModifiedDate":"2021-09-22"},{"lineNumber":241,"author":{"gitId":"wutdequack"},"content":"        tasksList.add(newTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":242,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":243,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":244,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"wutdequack":244}},{"path":"src/main/java/wutdequack/terminator/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"package wutdequack.terminator.ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.objects.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.parser.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"import wutdequack.terminator.tasklist.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.tasksList;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ADD_TASK_COUNTER_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ADD_TASK_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ADD_TASK_QUERY_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.COMPLETED_TASK_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ERROR_CONFUSED_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ERROR_INVALID_TASK_COMMAND;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ERROR_INVALID_TODO_TASK_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ERROR_MISSING_DATETIME_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ERROR_MISSING_PARAMS_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.FILE_DATABASE_EXIST_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.FILE_DONT_EXIST_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.FILE_PERMISSION_ERROR_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.FILTER_TASKS_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.LOGO;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.GREETING_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.GREETING_QUERY_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.GREETING_QUIT_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ERROR_NUMBER_INVALID_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.ERROR_INDEX_OUT_OF_BOUNDS_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.USER_FORMATTING;","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.TERMINATOR_FORMATTING;","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.USER_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.MagicValues.TERMINATOR_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.POST_CRUD_QUERY_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"wutdequack"},"content":"import static wutdequack.terminator.common.Messages.UPDATED_TASK_MESSAGE;","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"wutdequack"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"wutdequack"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"wutdequack"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"wutdequack"},"content":"public class TextUi {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"wutdequack"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"wutdequack"},"content":"    private final Scanner in;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"wutdequack"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"wutdequack"},"content":"    public TextUi() {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"wutdequack"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"wutdequack"},"content":"    public TextUi(InputStream in, PrintStream out) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"wutdequack"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"wutdequack"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"wutdequack"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"wutdequack"},"content":"     * Formats printed messages with the appropriate headings.","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"wutdequack"},"content":"     * If option TERMINATOR_FORMATTING is selected, [The Terminator] will prepend the msg.","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"wutdequack"},"content":"     * If option USER_FORMATTING is selected, [User] will prepend the msg.","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"wutdequack"},"content":"     * @param msg Message to be printed.","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"wutdequack"},"content":"     * @param option TERMINATOR_FORMATTING or USER_FORMATTING.","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"wutdequack"},"content":"     * @return String with prepended heading.","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"wutdequack"},"content":"    private static String formatWithHeading(String msg, Integer option) {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"wutdequack"},"content":"        String prepend \u003d \"\";","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"wutdequack"},"content":"        switch (option) {","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"wutdequack"},"content":"        case TERMINATOR_FORMATTING:","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"wutdequack"},"content":"            prepend \u003d TERMINATOR_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"wutdequack"},"content":"        case USER_FORMATTING:","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"wutdequack"},"content":"            prepend \u003d USER_STRING;","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"wutdequack"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"wutdequack"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"wutdequack"},"content":"        return String.format(\"%s: %s\", prepend, msg);","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"wutdequack"},"content":"     * Prints the welcome message to the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"wutdequack"},"content":"    public void printHelloMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"wutdequack"},"content":"        out.println(LOGO);","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(GREETING_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(GREETING_QUERY_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"wutdequack"},"content":"        out.println(GREETING_QUIT_MESSAGE);","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"wutdequack"},"content":"     * Prints Invalid User Number message to the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"wutdequack"},"content":"    public void printInvalidUserNumberMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(ERROR_NUMBER_INVALID_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"wutdequack"},"content":"     * Prints error message if requested task to access is out of bounds.","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"wutdequack"},"content":"    public void printOutOfBoundsMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(ERROR_INDEX_OUT_OF_BOUNDS_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"wutdequack"},"content":"     * Prints response back to user of task that is modified.","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"wutdequack"},"content":"     * @param taskString The String of the Task.","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"wutdequack"},"content":"    public void printUpdateMessage(String taskString) {","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"wutdequack"},"content":"        out.println(COMPLETED_TASK_MESSAGE + System.lineSeparator() +","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"wutdequack"},"content":"                taskString);","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(POST_CRUD_QUERY_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"wutdequack"},"content":"     * Prints response back to user of task that is deleted.","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"wutdequack"},"content":"     * @param taskString The String of the Task.","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"wutdequack"},"content":"    public void printDeleteMessage(String taskString) {","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"wutdequack"},"content":"        out.println(UPDATED_TASK_MESSAGE  + System.lineSeparator() +","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"wutdequack"},"content":"                taskString);","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(POST_CRUD_QUERY_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"wutdequack"},"content":"     * Prints the tasks in the Task list with formatting.","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"wutdequack"},"content":"    public void printTasks() {","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"wutdequack"},"content":"        out.println(\"Here is a list of taskings:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"wutdequack"},"content":"        out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"wutdequack"},"content":"        for (int i \u003d 0; i \u003c taskList.getTasksList().size(); ++i) {","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"wutdequack"},"content":"            Task currentTask \u003d taskList.getTasksList().get(i);","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"wutdequack"},"content":"            // If the current task is completed, check the completion status","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"wutdequack"},"content":"            System.out.printf(\"%d.%s\" + System.lineSeparator(), i+1, currentTask.toString());","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(\"Anything else?\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"wutdequack"},"content":"     * Prints response back to user of task that is added.","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"wutdequack"},"content":"     * @param newTask The task that is added by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"wutdequack"},"content":"    public void printAddTaskMessage(Task newTask) {","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(ADD_TASK_MESSAGE + System.lineSeparator() +","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"wutdequack"},"content":"                newTask.toString(), TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(String.format(ADD_TASK_COUNTER_MESSAGE,","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"wutdequack"},"content":"                taskList.getTasksList().size()), TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(ADD_TASK_QUERY_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"wutdequack"},"content":"     * Prints message to user informing them that their input lack the required parameters.","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"wutdequack"},"content":"    public void printMissingParametersMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(ERROR_MISSING_PARAMS_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"wutdequack"},"content":"     * Prints message to user informing them that they are missing the date/time field.","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"wutdequack"},"content":"    public void printDateTimeMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(ERROR_MISSING_DATETIME_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"wutdequack"},"content":"     * Prints message to user informing them that their todo task is invalid.","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"wutdequack"},"content":"    public void printInvalidToDoMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(ERROR_INVALID_TODO_TASK_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"wutdequack"},"content":"     * Prints message to user informing them that their file to read from does not exist.","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"wutdequack"},"content":"    public void printFileDontExistMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(FILE_DONT_EXIST_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"wutdequack"},"content":"     * Prints message to user informing them that a file has been created for them to read from.","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"wutdequack"},"content":"    public void printFileCreationMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(FILE_DATABASE_EXIST_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":183,"author":{"gitId":"wutdequack"},"content":"     * Prints message to user informing them that file could not be created.","lastModifiedDate":"2021-09-22"},{"lineNumber":184,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"wutdequack"},"content":"    public void printFilePermissionsErrorMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":186,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(FILE_PERMISSION_ERROR_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":189,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"wutdequack"},"content":"     * Prints Goodbye message to user.","lastModifiedDate":"2021-09-22"},{"lineNumber":191,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":192,"author":{"gitId":"wutdequack"},"content":"    public void printGoodByeMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":193,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(\"Hasta la vista.\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":194,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(\"I will be back.\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":195,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(\"Program Terminating in...\", TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":196,"author":{"gitId":"wutdequack"},"content":"        // Stops at 2 intentionally","lastModifiedDate":"2021-09-22"},{"lineNumber":197,"author":{"gitId":"wutdequack"},"content":"        for (int i \u003d 5; i \u003e 1; --i) {","lastModifiedDate":"2021-09-22"},{"lineNumber":198,"author":{"gitId":"wutdequack"},"content":"            out.println(formatWithHeading(Integer.toString(i), TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":199,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":200,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":201,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":202,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":203,"author":{"gitId":"wutdequack"},"content":"     * Prompts the user for input and returns the received input.","lastModifiedDate":"2021-09-22"},{"lineNumber":204,"author":{"gitId":"wutdequack"},"content":"     * @return Line entered by the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"wutdequack"},"content":"    public String getUserInput() {","lastModifiedDate":"2021-09-22"},{"lineNumber":207,"author":{"gitId":"wutdequack"},"content":"        System.out.print(formatWithHeading(\"\", USER_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":208,"author":{"gitId":"wutdequack"},"content":"        String input \u003d in.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":209,"author":{"gitId":"wutdequack"},"content":"        // Keep getting input until its not empty","lastModifiedDate":"2021-09-22"},{"lineNumber":210,"author":{"gitId":"wutdequack"},"content":"        while (input.trim().isEmpty()){","lastModifiedDate":"2021-09-22"},{"lineNumber":211,"author":{"gitId":"wutdequack"},"content":"            input \u003d in.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"wutdequack"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":213,"author":{"gitId":"wutdequack"},"content":"        return input;","lastModifiedDate":"2021-09-22"},{"lineNumber":214,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":215,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":216,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":217,"author":{"gitId":"wutdequack"},"content":"     * Prints to the screen that you don\u0027t understand the commands.","lastModifiedDate":"2021-09-22"},{"lineNumber":218,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":219,"author":{"gitId":"wutdequack"},"content":"    public void printUnknownCommandMessage(){","lastModifiedDate":"2021-09-22"},{"lineNumber":220,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(ERROR_CONFUSED_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":221,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(ERROR_INVALID_TASK_COMMAND, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":222,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":223,"author":{"gitId":"wutdequack"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":224,"author":{"gitId":"wutdequack"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":225,"author":{"gitId":"wutdequack"},"content":"     * Finds and prints tasks given user\u0027s request.","lastModifiedDate":"2021-09-22"},{"lineNumber":226,"author":{"gitId":"wutdequack"},"content":"     * @param userLine Line of input from the user.","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"wutdequack"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":228,"author":{"gitId":"wutdequack"},"content":"    public void findTasks(String userLine) {","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"wutdequack"},"content":"        String searchTerm \u003d new Parser().getSearchTermFromInput(userLine);","lastModifiedDate":"2021-09-22"},{"lineNumber":230,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(String.format(FILTER_TASKS_MESSAGE, searchTerm), TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":231,"author":{"gitId":"wutdequack"},"content":"        tasksList","lastModifiedDate":"2021-09-22"},{"lineNumber":232,"author":{"gitId":"wutdequack"},"content":"                .stream()","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"wutdequack"},"content":"                .filter((t) -\u003e t.toString().contains(searchTerm))","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"wutdequack"},"content":"                .forEach(out::println);","lastModifiedDate":"2021-09-22"},{"lineNumber":235,"author":{"gitId":"wutdequack"},"content":"        out.println(formatWithHeading(POST_CRUD_QUERY_MESSAGE, TERMINATOR_FORMATTING));","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"wutdequack"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"wutdequack"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"wutdequack":237}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wutdequack"},"content":"todo read book","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"wutdequack"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"wutdequack"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"wutdequack"},"content":"todo join sports club","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"wutdequack"},"content":"list","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"wutdequack"},"content":"done 1","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"wutdequack"},"content":"done 4","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"wutdequack"},"content":"list","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"wutdequack"},"content":"todo borrow book","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"wutdequack"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"wutdequack"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"wutdequack"},"content":"list","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"wutdequack":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"wutdequack"},"content":"java -classpath ..\\bin Terminator \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"wutdequack":1,"-":20}}]
