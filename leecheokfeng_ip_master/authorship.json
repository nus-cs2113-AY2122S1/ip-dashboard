[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"import duke.exception.EmptyCommandArgumentException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":"import duke.exception.InvalidCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":"import duke.exception.InvalidCommandSeparatorException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"import duke.exception.InvalidTaskIndexException;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"leecheokfeng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"leecheokfeng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"leecheokfeng"},"content":"import duke.task.Parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"leecheokfeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"leecheokfeng"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"leecheokfeng"},"content":"    protected Ui ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"leecheokfeng"},"content":"    protected Storage storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"leecheokfeng"},"content":"    public Duke() {","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"leecheokfeng"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"leecheokfeng"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"leecheokfeng"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"leecheokfeng"},"content":"     * Processes the input provided by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"leecheokfeng"},"content":"     * Calls the appropriate function based on the user\u0027s input.","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"leecheokfeng"},"content":"    public void handleCommand() {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"leecheokfeng"},"content":"        String userInput;","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"leecheokfeng"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"leecheokfeng"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"leecheokfeng"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"leecheokfeng"},"content":"        String[] inputWords \u003d parser.getInputAsWordsArray(userInput);","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"leecheokfeng"},"content":"        String userCommand \u003d parser.getCommand(inputWords);","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"leecheokfeng"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"leecheokfeng"},"content":"            switch (userCommand) {","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"leecheokfeng"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"leecheokfeng"},"content":"                ui.printBye();","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"leecheokfeng"},"content":"                break;","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"leecheokfeng"},"content":"            case \"list\":","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"leecheokfeng"},"content":"                taskList.showList();","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"leecheokfeng"},"content":"                handleCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"leecheokfeng"},"content":"                break;","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"leecheokfeng"},"content":"            case \"done\":","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"leecheokfeng"},"content":"                taskList.markTaskAsDone(inputWords[1]);","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"leecheokfeng"},"content":"                handleCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"leecheokfeng"},"content":"                break;","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"leecheokfeng"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"leecheokfeng"},"content":"                taskList.addDeadlineOrEventTask(inputWords, \"deadline\");","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"leecheokfeng"},"content":"                handleCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"leecheokfeng"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"leecheokfeng"},"content":"            case \"event\":","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"leecheokfeng"},"content":"                taskList.addDeadlineOrEventTask(inputWords, \"event\");","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"leecheokfeng"},"content":"                handleCommand();","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"leecheokfeng"},"content":"                break;","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"leecheokfeng"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"leecheokfeng"},"content":"                taskList.addTodoTask(inputWords);","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"leecheokfeng"},"content":"                handleCommand();","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"leecheokfeng"},"content":"                break;","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"leecheokfeng"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"leecheokfeng"},"content":"                taskList.deleteTask(inputWords);","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"leecheokfeng"},"content":"                handleCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"leecheokfeng"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"leecheokfeng"},"content":"            case \"find\":","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"leecheokfeng"},"content":"                taskList.findTask(inputWords);","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"leecheokfeng"},"content":"                handleCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"leecheokfeng"},"content":"                break;","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"leecheokfeng"},"content":"            default:","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"leecheokfeng"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2021-09-07"},{"lineNumber":74,"author":{"gitId":"leecheokfeng"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":75,"author":{"gitId":"leecheokfeng"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"leecheokfeng"},"content":"            ui.printErrorInvalidCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"leecheokfeng"},"content":"            handleCommand();","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"leecheokfeng"},"content":"        } catch (EmptyCommandArgumentException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":79,"author":{"gitId":"leecheokfeng"},"content":"            ui.printErrorEmptyCommandArg();","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"leecheokfeng"},"content":"            handleCommand();","lastModifiedDate":"2021-09-07"},{"lineNumber":81,"author":{"gitId":"leecheokfeng"},"content":"        } catch (InvalidCommandSeparatorException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"leecheokfeng"},"content":"            ui.printErrorInvalidSeparator();","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"leecheokfeng"},"content":"            handleCommand();","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"leecheokfeng"},"content":"        } catch (InvalidTaskIndexException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"leecheokfeng"},"content":"            ui.printErrorInvalidTaskIndex();","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"leecheokfeng"},"content":"            handleCommand();","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"leecheokfeng"},"content":"     * Runs the main functions to start the chatbot.","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"leecheokfeng"},"content":"    public void run() {","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"leecheokfeng"},"content":"        ui.printWelcome();","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"leecheokfeng"},"content":"        storage.createDataFile();","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"leecheokfeng"},"content":"        storage.loadDataFile(taskList);","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"leecheokfeng"},"content":"        handleCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"leecheokfeng"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"leecheokfeng":99,"-":4}},{"path":"src/main/java/duke/exception/EmptyCommandArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":" * This exception is thrown if the input command\u0027s argument is missing.","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"public class EmptyCommandArgumentException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"leecheokfeng":7}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":" * This exception is thrown if the input command is invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"public class InvalidCommandException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"leecheokfeng":7}},{"path":"src/main/java/duke/exception/InvalidCommandSeparatorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":" * This exception is thrown if the input command has an invalid or missing separator.","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"public class InvalidCommandSeparatorException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"leecheokfeng":7}},{"path":"src/main/java/duke/exception/InvalidTaskIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":" * This exception is thrown if a task index that is out-of-bounds is specified.","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"public class InvalidTaskIndexException extends Exception{","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"leecheokfeng":7}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":"import java.io.File;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"leecheokfeng"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"leecheokfeng"},"content":"public class Storage {","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"leecheokfeng"},"content":"     * Creates a directory and txt file to store the task data.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"leecheokfeng"},"content":"    public void createDataFile() {","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"leecheokfeng"},"content":"        File dataFolder \u003d new File(\"data\");","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"leecheokfeng"},"content":"        File dataFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"leecheokfeng"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"leecheokfeng"},"content":"            dataFolder.mkdir();","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"leecheokfeng"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"leecheokfeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"leecheokfeng"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"leecheokfeng"},"content":"     * Loads the task data from the txt file into the Duke program task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"leecheokfeng"},"content":"     * @param taskList The task list of the Duke program.","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"leecheokfeng"},"content":"    public void loadDataFile(TaskList taskList) {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"leecheokfeng"},"content":"        File dataFile \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"leecheokfeng"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"leecheokfeng"},"content":"            Scanner s \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"leecheokfeng"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"leecheokfeng"},"content":"                taskList.processDataFile(s.nextLine());","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"leecheokfeng"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"leecheokfeng"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"leecheokfeng"},"content":"            System.out.println((\"File not found!\"));","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"leecheokfeng":43}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":"    protected String by;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"leecheokfeng"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"leecheokfeng"},"content":"     * Re-formats the task type, status, description and deadline into the proper format for the txt file.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"leecheokfeng"},"content":"     * @return task details in format for txt file.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"leecheokfeng"},"content":"    public String getTaskDetailsInFileFormat() {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"leecheokfeng"},"content":"        return \"D | \" + isDone + \" | \" + description + \" | \" + by;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"leecheokfeng"},"content":"     * Overwrites the default method with a custom print message instead.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"leecheokfeng"},"content":"     * @return the task type, status, details and deadline.","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"leecheokfeng"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"leecheokfeng"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"leecheokfeng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"leecheokfeng":29}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":"    protected String at;","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"leecheokfeng"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"leecheokfeng"},"content":"     * Re-formats the task type, status, description and event time into the proper format for the txt file.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"leecheokfeng"},"content":"     * @return task details in format for txt file.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"leecheokfeng"},"content":"    public String getTaskDetailsInFileFormat() {","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"leecheokfeng"},"content":"        return \"E | \" + isDone + \" | \" + description + \" | \" + at;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"leecheokfeng"},"content":"     * Overwrites the default method with a custom print message instead.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"leecheokfeng"},"content":"     * @return the task type, status, details and event time.","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"leecheokfeng"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"leecheokfeng"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"leecheokfeng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"leecheokfeng":29}},{"path":"src/main/java/duke/task/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.task;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"public class Parser {","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"     * Splits a user-input string into an array of words.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"     * The initial string is separated at blank spaces.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"leecheokfeng"},"content":"     * @param userInput String input by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"leecheokfeng"},"content":"     * @return Array of individual strings.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"leecheokfeng"},"content":"    public String[] getInputAsWordsArray(String userInput) {","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"leecheokfeng"},"content":"        return userInput.split(\" \");","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"leecheokfeng"},"content":"     * Gets the command word (ie. first string) from the user\u0027s input string array.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"leecheokfeng"},"content":"     * @param inputWords Array of strings obtained from user\u0027s input.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"leecheokfeng"},"content":"     * @return The first string in the array.","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"leecheokfeng"},"content":"    public String getCommand(String[] inputWords) {","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"leecheokfeng"},"content":"        return inputWords[0];","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"leecheokfeng":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":" * Represents a task that was added to the TaskList.","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"    protected String description;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"leecheokfeng"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"leecheokfeng"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"leecheokfeng"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"leecheokfeng"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"leecheokfeng"},"content":"     * Re-formats the task type, status and description into the proper format for the txt file.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"leecheokfeng"},"content":"     * @return task details in format for txt file.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"leecheokfeng"},"content":"    public abstract String getTaskDetailsInFileFormat();","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"leecheokfeng"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"leecheokfeng"},"content":"     * @return description of task.","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"leecheokfeng"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"leecheokfeng"},"content":"        return this.description;","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"leecheokfeng"},"content":"     * Checks if the task is done or not, and gets the corresponding icon.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"leecheokfeng"},"content":"     * @return X if task is done, otherwise returns a blank space.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"leecheokfeng"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"leecheokfeng"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"leecheokfeng"},"content":"     * Sets a particular task as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"leecheokfeng"},"content":"    public void setAsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"leecheokfeng"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"leecheokfeng"},"content":"     * Overwrites the default method with a custom print message instead.","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"leecheokfeng"},"content":"     * @return the task status and details.","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"leecheokfeng"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"leecheokfeng"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"leecheokfeng"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"leecheokfeng":56}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.task;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"import duke.exception.EmptyCommandArgumentException;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":"import duke.exception.InvalidCommandSeparatorException;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":"import duke.exception.InvalidTaskIndexException;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"leecheokfeng"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"leecheokfeng"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"leecheokfeng"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"leecheokfeng"},"content":"public class TaskList {","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"leecheokfeng"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"leecheokfeng"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"leecheokfeng"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"leecheokfeng"},"content":"    Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"leecheokfeng"},"content":"     * Deletes a task from the current task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"leecheokfeng"},"content":"     * Prints out a message indicating successful deletion and number of tasks remaining.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"leecheokfeng"},"content":"     * @param inputWords Array of strings entered by the user, containing task information.","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"leecheokfeng"},"content":"     * @throws EmptyCommandArgumentException If the command or its arguments are empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"leecheokfeng"},"content":"     * @throws InvalidTaskIndexException If the input task index is out-of-bounds.","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"leecheokfeng"},"content":"    public void deleteTask(String[] inputWords)","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"leecheokfeng"},"content":"            throws EmptyCommandArgumentException, InvalidTaskIndexException {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"leecheokfeng"},"content":"        if (inputWords.length \u003c 2) {","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"leecheokfeng"},"content":"            throw new EmptyCommandArgumentException();","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"leecheokfeng"},"content":"        int taskIndex \u003d Integer.parseInt(inputWords[1]) - 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"leecheokfeng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"leecheokfeng"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"leecheokfeng"},"content":"        Task deletedTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"leecheokfeng"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(deletedTask);","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Now you have \" + taskList.size() + \" task(s) in the list.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"leecheokfeng"},"content":"        updateTasksInFile();","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"leecheokfeng"},"content":"     * Adds a deadline task or an event task to the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"leecheokfeng"},"content":"     * Prints out the task that was added.","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"leecheokfeng"},"content":"     * @param inputWords Array of strings entered by the user, containing task information.","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"leecheokfeng"},"content":"     * @param type String which indicates whether the task is a deadline or an event.","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"leecheokfeng"},"content":"     * @throws EmptyCommandArgumentException If the command or its arguments are empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"leecheokfeng"},"content":"     * @throws InvalidCommandSeparatorException If the command separator is missing or invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"leecheokfeng"},"content":"    public void addDeadlineOrEventTask(String[] inputWords, String type)","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"leecheokfeng"},"content":"            throws EmptyCommandArgumentException, InvalidCommandSeparatorException {","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"leecheokfeng"},"content":"        // Throw exception where command argument is empty","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"leecheokfeng"},"content":"        if (inputWords.length \u003c 2) {","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"leecheokfeng"},"content":"            throw new EmptyCommandArgumentException();","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"leecheokfeng"},"content":"        // Find separator index","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"leecheokfeng"},"content":"        int separatorIndex \u003d -1;","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"leecheokfeng"},"content":"        for (int i \u003d 1; i \u003c inputWords.length; i++) {","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"leecheokfeng"},"content":"            if (inputWords[i].equals(\"/by\") || inputWords[i].equals(\"/at\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"leecheokfeng"},"content":"                separatorIndex \u003d i;","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"leecheokfeng"},"content":"                break;","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"leecheokfeng"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"leecheokfeng"},"content":"        // Throw exception where separator is not found","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"leecheokfeng"},"content":"        if (separatorIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"leecheokfeng"},"content":"            throw new InvalidCommandSeparatorException();","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"leecheokfeng"},"content":"        // Set description","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"leecheokfeng"},"content":"        String description \u003d inputWords[1];","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"leecheokfeng"},"content":"        for (int i \u003d 2; i \u003c separatorIndex; i++) {","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"leecheokfeng"},"content":"            description \u003d description + \" \" + inputWords[i];","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"leecheokfeng"},"content":"        // Set deadline (by when) or event time (at what time)","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"leecheokfeng"},"content":"        String time \u003d inputWords[separatorIndex + 1];","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"leecheokfeng"},"content":"        for (int i \u003d separatorIndex + 2; i \u003c inputWords.length; i++) {","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"leecheokfeng"},"content":"            time \u003d time + \" \" + inputWords[i];","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"leecheokfeng"},"content":"        if (type.equals(\"deadline\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"leecheokfeng"},"content":"            taskList.add(new Deadline(description, time));","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"leecheokfeng"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"leecheokfeng"},"content":"            taskList.add(new Event(description, time));","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"leecheokfeng"},"content":"        appendTaskToFile(taskList.get(taskList.size() - 1));","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"leecheokfeng"},"content":"     * Adds a todo task to the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"leecheokfeng"},"content":"     * Prints out the task that was added.","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"leecheokfeng"},"content":"     * @param inputWords Array of strings entered by the user, containing task information.","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"leecheokfeng"},"content":"     * @throws EmptyCommandArgumentException If the command or its arguments are empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"leecheokfeng"},"content":"    public void addTodoTask(String[] inputWords) throws EmptyCommandArgumentException {","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"leecheokfeng"},"content":"        // Throw exception where command argument is empty","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"leecheokfeng"},"content":"        if (inputWords.length \u003c 2) {","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"leecheokfeng"},"content":"            throw new EmptyCommandArgumentException();","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"leecheokfeng"},"content":"        String description \u003d inputWords[1];","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"leecheokfeng"},"content":"        for (int i \u003d 2; i \u003c inputWords.length; i++) {","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"leecheokfeng"},"content":"            description \u003d description + \" \" + inputWords[i];","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"leecheokfeng"},"content":"        taskList.add(new Todo(description));","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(taskList.get(taskList.size() - 1));","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"leecheokfeng"},"content":"        appendTaskToFile(taskList.get(taskList.size() - 1));","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"leecheokfeng"},"content":"     * Marks a task as done in the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"leecheokfeng"},"content":"     * Prints the task that was marked as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"leecheokfeng"},"content":"     * @param taskNumber The task number entered by the user to be marked as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"leecheokfeng"},"content":"     * @throws InvalidTaskIndexException If the input task index is out-of-bounds.","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"leecheokfeng"},"content":"    public void markTaskAsDone(String taskNumber) throws InvalidTaskIndexException {","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"leecheokfeng"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"leecheokfeng"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"leecheokfeng"},"content":"            throw new InvalidTaskIndexException();","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"leecheokfeng"},"content":"        taskList.get(taskIndex).setAsDone();","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(taskList.get(taskIndex));","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"leecheokfeng"},"content":"        updateTasksInFile();","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"leecheokfeng"},"content":"     * Prints the whole task list as a numbered list.","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"leecheokfeng"},"content":"    public void showList() {","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"leecheokfeng"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"leecheokfeng"},"content":"            System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"leecheokfeng"},"content":"     * Adds a task to the txt file when the user adds a task from the terminal interface.","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"leecheokfeng"},"content":"     * @param task The task that was added to the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":171,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"leecheokfeng"},"content":"    public void appendTaskToFile(Task task) {","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"leecheokfeng"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"leecheokfeng"},"content":"            FileWriter file \u003d new FileWriter(\"data/duke.txt\", true);","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"leecheokfeng"},"content":"            String taskDetails \u003d task.getTaskDetailsInFileFormat() + \"\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"leecheokfeng"},"content":"            file.write(taskDetails);","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"leecheokfeng"},"content":"            file.close();","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"leecheokfeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"leecheokfeng"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"leecheokfeng"},"content":"     * Updates or removes a task from the txt file when the user updates or deletes a task through","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"leecheokfeng"},"content":"     * the terminal interface.","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"leecheokfeng"},"content":"    public void updateTasksInFile() {","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"leecheokfeng"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"leecheokfeng"},"content":"            FileWriter file \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"leecheokfeng"},"content":"            String taskDetails \u003d \"\";","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"leecheokfeng"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"leecheokfeng"},"content":"                taskDetails +\u003d taskList.get(i).getTaskDetailsInFileFormat() + \"\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"leecheokfeng"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"leecheokfeng"},"content":"            file.write(taskDetails);","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"leecheokfeng"},"content":"            file.close();","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"leecheokfeng"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"leecheokfeng"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"leecheokfeng"},"content":"     * Adds tasks to the task list based on the tasks from the txt file.","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"leecheokfeng"},"content":"     * @param dataTask String containing the task information in txt file format.","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"leecheokfeng"},"content":"    public void processDataFile(String dataTask) {","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"leecheokfeng"},"content":"        String[] taskDetails \u003d dataTask.split(\" \\\\| \");","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"leecheokfeng"},"content":"        String taskType \u003d taskDetails[0];","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"leecheokfeng"},"content":"        boolean taskIsDone \u003d Boolean.parseBoolean(taskDetails[1]);","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"leecheokfeng"},"content":"        String taskDescription \u003d taskDetails[2];","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"leecheokfeng"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"leecheokfeng"},"content":"        case \"T\":","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"leecheokfeng"},"content":"            taskList.add(new Todo(taskDescription));","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"leecheokfeng"},"content":"            if (taskIsDone) {","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"leecheokfeng"},"content":"                taskList.get(taskList.size() - 1).setAsDone();","lastModifiedDate":"2021-09-29"},{"lineNumber":219,"author":{"gitId":"leecheokfeng"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"leecheokfeng"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"leecheokfeng"},"content":"        case \"D\":","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"leecheokfeng"},"content":"            String deadline \u003d taskDetails[3];","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"leecheokfeng"},"content":"            taskList.add(new Deadline(taskDescription, deadline));","lastModifiedDate":"2021-09-29"},{"lineNumber":224,"author":{"gitId":"leecheokfeng"},"content":"            if (taskIsDone) {","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"leecheokfeng"},"content":"                taskList.get(taskList.size() - 1).setAsDone();","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"leecheokfeng"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"leecheokfeng"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"leecheokfeng"},"content":"        case \"E\":","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"leecheokfeng"},"content":"            String eventTime \u003d taskDetails[3];","lastModifiedDate":"2021-09-29"},{"lineNumber":230,"author":{"gitId":"leecheokfeng"},"content":"            taskList.add(new Event(taskDescription, eventTime));","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"leecheokfeng"},"content":"            if (taskIsDone) {","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"leecheokfeng"},"content":"                taskList.get(taskList.size() - 1).setAsDone();","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"leecheokfeng"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":234,"author":{"gitId":"leecheokfeng"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"leecheokfeng"},"content":"        default:","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"leecheokfeng"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"leecheokfeng"},"content":"     * Finds a task from the task list using a single keyword entered by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":242,"author":{"gitId":"leecheokfeng"},"content":"     * Prints out the tasks that contain the matching keyword.","lastModifiedDate":"2021-09-30"},{"lineNumber":243,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":244,"author":{"gitId":"leecheokfeng"},"content":"     * @param inputWords Array of strings entered by the user, containing the command word and keyword.","lastModifiedDate":"2021-09-30"},{"lineNumber":245,"author":{"gitId":"leecheokfeng"},"content":"     * @throws EmptyCommandArgumentException If the command or its arguments are empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":246,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":247,"author":{"gitId":"leecheokfeng"},"content":"    public void findTask(String[] inputWords) throws EmptyCommandArgumentException {","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"leecheokfeng"},"content":"        if (inputWords.length \u003c 2) {","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"leecheokfeng"},"content":"            throw new EmptyCommandArgumentException();","lastModifiedDate":"2021-09-29"},{"lineNumber":250,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":251,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":253,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":254,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"leecheokfeng"},"content":"        int counter \u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":256,"author":{"gitId":"leecheokfeng"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-29"},{"lineNumber":257,"author":{"gitId":"leecheokfeng"},"content":"            String currentTaskDescription \u003d taskList.get(i).getDescription();","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":259,"author":{"gitId":"leecheokfeng"},"content":"            if (currentTaskDescription.contains(inputWords[1])) {","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"leecheokfeng"},"content":"                System.out.println(counter + \". \" + taskList.get(i));","lastModifiedDate":"2021-09-29"},{"lineNumber":261,"author":{"gitId":"leecheokfeng"},"content":"                counter++;","lastModifiedDate":"2021-09-29"},{"lineNumber":262,"author":{"gitId":"leecheokfeng"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":263,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":264,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":265,"author":{"gitId":"leecheokfeng"},"content":"        if (counter \u003d\u003d 1) {","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"leecheokfeng"},"content":"            System.out.println(\"No matching tasks found.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":267,"author":{"gitId":"leecheokfeng"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":268,"author":{"gitId":"leecheokfeng"},"content":"        ui.printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":269,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":270,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"leecheokfeng":270}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"leecheokfeng"},"content":"     * Re-formats the task type, status and description into the proper format for the txt file.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"leecheokfeng"},"content":"     * @return task details in format for txt file.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"leecheokfeng"},"content":"    public String getTaskDetailsInFileFormat() {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"leecheokfeng"},"content":"        return \"T | \" + isDone + \" | \" + description;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"leecheokfeng"},"content":"     * Overwrites the default method with a custom print message instead.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"leecheokfeng"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"leecheokfeng"},"content":"     * @return the task type, status and details.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"leecheokfeng"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"leecheokfeng"},"content":"    public String toString() {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"leecheokfeng"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"leecheokfeng":27}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"leecheokfeng"},"content":"package duke.ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"leecheokfeng"},"content":"public class Ui {","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"leecheokfeng"},"content":"    private static final String SEPARATOR_LINE \u003d \"-----------------------------------------------\";","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"leecheokfeng"},"content":"     * Prints a horizontal separator line.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"leecheokfeng"},"content":"    public void printLine() {","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(SEPARATOR_LINE);","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"leecheokfeng"},"content":"     * Prints a welcome message to greet the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"leecheokfeng"},"content":"    public void printWelcome() {","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"leecheokfeng"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"leecheokfeng"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"leecheokfeng"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"leecheokfeng"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"leecheokfeng"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Hello! I\u0027m Duke.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"leecheokfeng"},"content":"     * Prints a goodbye message.","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"leecheokfeng"},"content":"    public void printBye() {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"leecheokfeng"},"content":"     * Prints an error message to inform the user that the command entered was invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"leecheokfeng"},"content":"     * Shows a list of available commands.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"leecheokfeng"},"content":"    public void printErrorInvalidCommand() {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means! :(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"Available commands: deadline, todo, event, done, list, delete, find, bye\");","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"leecheokfeng"},"content":"     * Prints an error message to inform the user that the arguments of the command were empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"leecheokfeng"},"content":"     * Shows the proper format of the commands.","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"leecheokfeng"},"content":"    public void printErrorEmptyCommandArg() {","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"OOPS! The description of the command word cannot be empty! \" +","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"leecheokfeng"},"content":"                \"Please follow this format:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"deadline \u003cyour task here\u003e /by \u003cyour deadline time\u003e\");","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"event \u003cyour task here\u003e /at \u003cyour event time period\u003e\");","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"todo \u003cyour task here\u003e\");","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"delete \u003ctask number\u003e\");","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"find \u003ckeyword\u003e\");","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"leecheokfeng"},"content":"     * Prints an error message to inform the user that the command has an invalid or missing separator.","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"leecheokfeng"},"content":"     * Shows the proper format of the commands.","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"leecheokfeng"},"content":"    public void printErrorInvalidSeparator() {","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"OOPS! The deadline/event description must be separated from \" +","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"leecheokfeng"},"content":"                \"the time using \u0027/by\u0027 or \u0027/at\u0027. Please follow this format:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"deadline \u003cyour task here\u003e /by \u003cyour deadline time\u003e\");","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"event \u003cyour task here\u003e /at \u003cyour event time period\u003e\");","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"leecheokfeng"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"leecheokfeng"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"leecheokfeng"},"content":"     * Prints an error message to inform the user that the entered task index is out-of-bounds.","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"leecheokfeng"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"leecheokfeng"},"content":"    public void printErrorInvalidTaskIndex() {","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"leecheokfeng"},"content":"        System.out.println(\"OOPS! That task does not exist!\");","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"leecheokfeng"},"content":"        printLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"leecheokfeng"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"leecheokfeng"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"leecheokfeng":86}}]
