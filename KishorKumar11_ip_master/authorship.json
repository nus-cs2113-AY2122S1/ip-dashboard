[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":" * To initialize the key objects needed and run the program","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"public class Duke {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"    public Duke() {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"            storage \u003d new Storage();","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"            storage.loadData();","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"KishorKumar11"},"content":"            ui.printErrorMessage(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"KishorKumar11"},"content":"     * Runs the program until user enters the exit command (bye).","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"KishorKumar11"},"content":"    private void run() {","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"KishorKumar11"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"KishorKumar11"},"content":"        while (!Command.isExit()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"KishorKumar11"},"content":"            String input \u003d Parser.getUserInput(in);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"KishorKumar11"},"content":"            String command \u003d Parser.getFirstWordFromCommand(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"KishorKumar11"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"KishorKumar11"},"content":"                TaskManager.parseUserCommand(command, input, taskList, storage);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"KishorKumar11"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"KishorKumar11"},"content":"                Ui.printErrorMessage(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"KishorKumar11"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"KishorKumar11"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"KishorKumar11"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printByeMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":51}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":" * To make sense of user commands by extracting keywords, descriptions and time/date","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"public class Parser {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"    private static final int INDEX_AFTER_TODO \u003d 4;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"    private static final int INDEX_AFTER_DEADLINE \u003d 8;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"    private static final int INDEX_AFTER_EVENT \u003d 5;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"     * Extracts the description, creates a todo Task object","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"     * @param input is the command given by the user","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"     * @return the todo object created under Task","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"KishorKumar11"},"content":"     * @throws DukeException if no description is present after the todo command","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"KishorKumar11"},"content":"    public static Task getTodoDetails(String input) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"KishorKumar11"},"content":"        if (input.substring(INDEX_AFTER_TODO).isBlank()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"Task description is missing\");","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"KishorKumar11"},"content":"        // To extract the description after the four-letter word \"todo\"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"KishorKumar11"},"content":"        String todoDescription \u003d input.substring(INDEX_AFTER_TODO).trim();","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"KishorKumar11"},"content":"        Task todo \u003d new Todo(todoDescription);","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"KishorKumar11"},"content":"        return todo;","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"KishorKumar11"},"content":"     * Extracts the description and day/date, creates a deadline Task object","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"KishorKumar11"},"content":"     * @param input is the command given by the user","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"KishorKumar11"},"content":"     * @return the deadline object created under Task","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"KishorKumar11"},"content":"     * @throws DukeException if /by is not present in the command or if no description is present after the deadline command","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"KishorKumar11"},"content":"    public static Task getDeadlineDetails(String input) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"KishorKumar11"},"content":"        if (input.substring(INDEX_AFTER_DEADLINE).isBlank()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"Task description is missing\");","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"KishorKumar11"},"content":"        if (!input.contains(\"/by\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"DEADLINE task description is missing \\\"/by\\\" [Format: deadline task description /by deadline time/day/date]\");","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"KishorKumar11"},"content":"        // To extract description between the eight-letter word \"deadline\" and \"/by\"","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"KishorKumar11"},"content":"        int endIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"KishorKumar11"},"content":"        String deadlineDescription \u003d input.substring(INDEX_AFTER_DEADLINE, endIndex).trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"KishorKumar11"},"content":"        String deadlineDate \u003d getDateFromCommand(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"KishorKumar11"},"content":"        Task deadline \u003d new Deadline(deadlineDescription, deadlineDate);","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"KishorKumar11"},"content":"        return deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"KishorKumar11"},"content":"     * Extracts the description and the time, creates an event Task object","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"KishorKumar11"},"content":"     * @param input is the command given by the user","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"KishorKumar11"},"content":"     * @return the event object created under Task","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"KishorKumar11"},"content":"     * @throws DukeException if /at is not present in the command or if no description is present after the event command","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"KishorKumar11"},"content":"    public static Task getEventDetails(String input) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"KishorKumar11"},"content":"        if (input.substring(INDEX_AFTER_EVENT).isBlank()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"Task description is missing\");","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"KishorKumar11"},"content":"        if (!input.contains(\"/at\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"EVENT task description is missing \\\"/at\\\" [Format: event task description /at event time/day/place]\");","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"KishorKumar11"},"content":"        // To extract description between the five-letter word \"event\" and \"/at\"","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"KishorKumar11"},"content":"        int endIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"KishorKumar11"},"content":"        String eventDescription \u003d input.substring(INDEX_AFTER_EVENT, endIndex).trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"KishorKumar11"},"content":"        String eventDate \u003d getDateFromCommand(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"KishorKumar11"},"content":"        Task event \u003d new Event(eventDescription, eventDate);","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"KishorKumar11"},"content":"        return event;","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"KishorKumar11"},"content":"    public static String getUserInput(Scanner in) {","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"KishorKumar11"},"content":"        String input;","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"KishorKumar11"},"content":"        input \u003d in.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"KishorKumar11"},"content":"        return input;","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"KishorKumar11"},"content":"     * @param input is the command given by the user","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"KishorKumar11"},"content":"     * @return the substring after the three-letter words /by or /at","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"KishorKumar11"},"content":"    protected static String getDateFromCommand(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"KishorKumar11"},"content":"        int startIndex \u003d input.indexOf(\"/\");","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"KishorKumar11"},"content":"        return input.substring(startIndex + 3).trim();","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"KishorKumar11"},"content":"     * Extracts the index from the done/delete command","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"KishorKumar11"},"content":"     * @param input is the command given by the user","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"KishorKumar11"},"content":"     * @return the index of the task present in the task list","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"KishorKumar11"},"content":"    public static int getIndex(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"KishorKumar11"},"content":"        String[] temp \u003d input.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"KishorKumar11"},"content":"        int index \u003d Integer.parseInt(temp[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"KishorKumar11"},"content":"        index \u003d index - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"KishorKumar11"},"content":"        return index;","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":123,"author":{"gitId":"KishorKumar11"},"content":"     * @param input is the command given by the user","lastModifiedDate":"2021-09-15"},{"lineNumber":124,"author":{"gitId":"KishorKumar11"},"content":"     * @return the lowercase form of the first word present in the command","lastModifiedDate":"2021-09-15"},{"lineNumber":125,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":126,"author":{"gitId":"KishorKumar11"},"content":"    public static String getFirstWordFromCommand(String input) {","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"KishorKumar11"},"content":"        return input.toLowerCase().split(\" \")[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"KishorKumar11":129}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":" * To deal with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"public class Storage {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"    private final File file \u003d new File(\"data/tasks.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"    public Storage() throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"KishorKumar11"},"content":"            file.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"KishorKumar11"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"Unable to load data!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"KishorKumar11"},"content":"     * Adds data from the task list to the text file","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"KishorKumar11"},"content":"     * @throws DukeException if IO operations fails","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"KishorKumar11"},"content":"    public void saveData() throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"KishorKumar11"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"KishorKumar11"},"content":"            FileWriter fw \u003d new FileWriter(\"data/tasks.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"KishorKumar11"},"content":"            for (Task task : TaskList.list) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"KishorKumar11"},"content":"                fw.write(\"\" + task.getStoreDataString() + System.lineSeparator());","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"KishorKumar11"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"KishorKumar11"},"content":"            fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"KishorKumar11"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"Unable to save data!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"KishorKumar11"},"content":"     * Loads data from the text file to the task list","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"KishorKumar11"},"content":"     * @throws DukeException if file not found","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"KishorKumar11"},"content":"    public void loadData() throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"KishorKumar11"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"KishorKumar11"},"content":"            Scanner load \u003d new Scanner(file);","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"KishorKumar11"},"content":"            while (load.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"KishorKumar11"},"content":"                String sentence \u003d load.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"KishorKumar11"},"content":"                addData(sentence);","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"KishorKumar11"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"KishorKumar11"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"Unable to load data!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"KishorKumar11"},"content":"     * Creates task from txt file and stores them in Task objects respectively","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"KishorKumar11"},"content":"     * @param taskWords data present in the txt file","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"KishorKumar11"},"content":"     * @throws DukeException if the lines in the txt file do not start with T/D/E or if negative/unwanted array index is being accessed","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"KishorKumar11"},"content":"    public void addData(String taskWords) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"KishorKumar11"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"KishorKumar11"},"content":"            String[] word \u003d taskWords.split(\" \\\\| \");","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"KishorKumar11"},"content":"            switch (word[0]) {","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"KishorKumar11"},"content":"            case \"T\":","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"KishorKumar11"},"content":"                Task todo \u003d new Todo(word[2]);","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"KishorKumar11"},"content":"                if (word[1].equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"KishorKumar11"},"content":"                    todo.markAsDone();","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"KishorKumar11"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"KishorKumar11"},"content":"                TaskList.list.add(TaskList.count, todo);","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"KishorKumar11"},"content":"                TaskList.count++;","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"KishorKumar11"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"KishorKumar11"},"content":"            case \"D\":","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"KishorKumar11"},"content":"                Task deadline \u003d new Deadline(word[2], word[3]);","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"KishorKumar11"},"content":"                if (word[1].equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"KishorKumar11"},"content":"                    deadline.markAsDone();","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"KishorKumar11"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"KishorKumar11"},"content":"                TaskList.list.add(TaskList.count, deadline);","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"KishorKumar11"},"content":"                TaskList.count++;","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"KishorKumar11"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"KishorKumar11"},"content":"            case \"E\":","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"KishorKumar11"},"content":"                Task event \u003d new Event(word[2], word[3]);","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"KishorKumar11"},"content":"                if (word[1].equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"KishorKumar11"},"content":"                    event.markAsDone();","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"KishorKumar11"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"KishorKumar11"},"content":"                TaskList.list.add(TaskList.count, event);","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"KishorKumar11"},"content":"                TaskList.count++;","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"KishorKumar11"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"KishorKumar11"},"content":"            default:","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"KishorKumar11"},"content":"                throw new DukeException(\"Unable to parse data!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"KishorKumar11"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"KishorKumar11"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"Unable to parse data!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"KishorKumar11":107}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":" * To perform operations on the list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"public class TaskList {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"    public static ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"    static int count \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"     * Adds a task to the list and prints a completion message","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"     * @param task is the Task object is being added to the list","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"        list.add(count, task);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"        count++;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printAddTaskMessage(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"KishorKumar11"},"content":"     * Marks a task as done with the given index and prints a completion message","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"KishorKumar11"},"content":"     * @param taskIndex is the index of the task needed to be marked as done","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"KishorKumar11"},"content":"    public void doneTask(int taskIndex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"KishorKumar11"},"content":"        list.get(taskIndex).markAsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printDoneTaskMessage(taskIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"KishorKumar11"},"content":"     * Deletes a task with the given index and prints a completion message","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"KishorKumar11"},"content":"     * @param taskIndex is the index of the task needed to be deleted","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"KishorKumar11"},"content":"     * @throws DukeException if index provided is larger than the list size or is lesser than 1","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"KishorKumar11"},"content":"    public void deleteTask(int taskIndex) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"KishorKumar11"},"content":"        if (taskIndex \u003e\u003d list.size()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"Task index does not exist!\");","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"KishorKumar11"},"content":"        } else if (taskIndex \u003c\u003d -1) {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"Task index must be larger than 0\");","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printDeleteTaskMessage(taskIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"KishorKumar11"},"content":"        list.remove(taskIndex);","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"KishorKumar11"},"content":"        count--;","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"KishorKumar11"},"content":"     * Prints all the tasks present in the list","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"KishorKumar11"},"content":"    public void listTasks() {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printTaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":65}},{"path":"src/main/java/duke/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":" * To execute task actions based on keywords used in user command","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"public class TaskManager {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"     * Processes the extracted user command","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"     * @param command is the extracted first word of the user input","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"     * @param input is the command given by the user","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"     * @param taskList is a TaskList object","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"     * @param storage is a Storage object","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"KishorKumar11"},"content":"     * @throws DukeException if delete/done command is not provided with an index or an invalid command is given","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"KishorKumar11"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"KishorKumar11"},"content":"    public static void parseUserCommand(String command, String input, TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"KishorKumar11"},"content":"        switch (command) {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"KishorKumar11"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"KishorKumar11"},"content":"            // Changes the loop condition to true to exit from the program","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"KishorKumar11"},"content":"            ExitCommand.isExit();","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"KishorKumar11"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"KishorKumar11"},"content":"        case \"list\":","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"KishorKumar11"},"content":"            // Passes the current list of tasks in the txt file to show all the tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"KishorKumar11"},"content":"            new ListCommand().executeUserCommand(taskList, storage);","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"KishorKumar11"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"KishorKumar11"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"KishorKumar11"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"KishorKumar11"},"content":"                int indexOfDelete \u003d Parser.getIndex(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"KishorKumar11"},"content":"                // Passes the index and current list from the txt file to delete a task","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"KishorKumar11"},"content":"                new DeleteCommand(indexOfDelete).executeUserCommand(taskList, storage);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"KishorKumar11"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"KishorKumar11"},"content":"                throw new DukeException(\"I do not know which task you want me to DELETE. Give the task number my friend\");","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"KishorKumar11"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"KishorKumar11"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"KishorKumar11"},"content":"        case \"done\":","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"KishorKumar11"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"KishorKumar11"},"content":"                // Extracts the index number from the text","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"KishorKumar11"},"content":"                int indexOfDone \u003d Parser.getIndex(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"KishorKumar11"},"content":"                // Passes the index and current list from the txt file to mark a task as done","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"KishorKumar11"},"content":"                new DoneCommand(indexOfDone).executeUserCommand(taskList, storage);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"KishorKumar11"},"content":"            } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"KishorKumar11"},"content":"                throw new DukeException(\"I do not know which task you want me to MARK. Give the task number my friend\");","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"KishorKumar11"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"KishorKumar11"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"KishorKumar11"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"KishorKumar11"},"content":"            Task todo \u003d Parser.getTodoDetails(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"KishorKumar11"},"content":"            // Passes pointer to task object and adds task to the list","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"KishorKumar11"},"content":"            new AddCommand(todo).executeUserCommand(taskList, storage);","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"KishorKumar11"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"KishorKumar11"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"KishorKumar11"},"content":"            Task deadline \u003d Parser.getDeadlineDetails(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"KishorKumar11"},"content":"            // Passes pointer to deadline object and adds task to the list","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"KishorKumar11"},"content":"            new AddCommand(deadline).executeUserCommand(taskList, storage);","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"KishorKumar11"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"KishorKumar11"},"content":"        case \"event\":","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"KishorKumar11"},"content":"            Task event \u003d Parser.getEventDetails(input);","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"KishorKumar11"},"content":"            // Passes pointer to event object and adds task to the list","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"KishorKumar11"},"content":"            new AddCommand(event).executeUserCommand(taskList, storage);","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"KishorKumar11"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"KishorKumar11"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"KishorKumar11"},"content":"            throw new DukeException(\"I\u0027m sorry, I do not know what you are trying to say\");","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":79}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"import static duke.TaskList.count;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"import static duke.TaskList.list;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":" * To print messages and details to deal with user interactions","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"public class Ui {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"    public static void printLineSeparator() {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"        String line \u003d \"________________________________________________________\";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"        //logo","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"        String logo \u003d \" _____  ________    _        ______  ___  ___  ______\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"                + \"|_   _||  _   _ |  / \\\\    .\u0027 ___  | |_  ||  _||__   _|\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"                + \"  | |     | |     / _ \\\\  / .\u0027   \\\\_   | |__| |    | |\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"                + \"  | |     | |    / ___ \\\\ | |         |  __  |    | |\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"KishorKumar11"},"content":"                + \" _| |_   _| |_ _/ /     \\\\ \\\\ `.___.\u0027\\\\_| |  | |   _| |_\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"KishorKumar11"},"content":"                + \"|_____| |_____|____| |____ `.____ .|____||____||_____|\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(\"THE GREATEST SHINOBI\\n\" + logo","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"KishorKumar11"},"content":"                + \"\\nWelcome! You have entered my illusion where I will be your partner\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"KishorKumar11"},"content":"                + \"and I will make you productive in order for you to reach your goals\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"KishorKumar11"},"content":"                + \"so that I can fulfill my dream of making someone great.\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"KishorKumar11"},"content":"                + \"Go ahead, give your command\\n\");","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"KishorKumar11"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"KishorKumar11"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"KishorKumar11"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"KishorKumar11"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(\"Farewell. Come back when you need more help\");","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"KishorKumar11"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"KishorKumar11"},"content":"    public static void printErrorMessage(DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"KishorKumar11"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"KishorKumar11"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"KishorKumar11"},"content":"    public static void printAddTaskMessage(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"KishorKumar11"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + task + \"\\nNow you have \" + count + \" tasks in the list.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"KishorKumar11"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"KishorKumar11"},"content":"    public static void printDeleteTaskMessage(int taskIndex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(\"Noted. I\u0027ve deleted this task:\\n\" + list.get(taskIndex) + \"\\nNow you have \" + (count - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"KishorKumar11"},"content":"    public static void printDoneTaskMessage(int taskIndex) {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(list.get(taskIndex));","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"KishorKumar11"},"content":"        Ui.printLineSeparator();","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"KishorKumar11"},"content":"    public static void printTaskList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"KishorKumar11"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"KishorKumar11"},"content":"        //Lists down all the tasks added along with its status","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"KishorKumar11"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"KishorKumar11"},"content":"            System.out.println((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"KishorKumar11"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":77}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"    protected Task task;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"    public void executeUserCommand(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"        storage.saveData();","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":20}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"    protected static boolean isOver \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"    public static boolean isExit() {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"        return isOver;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"    public abstract void executeUserCommand(TaskList taskList, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":15}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"    protected int indexOfDelete;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"    public DeleteCommand(int indexOfDelete) {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"        this.indexOfDelete \u003d indexOfDelete;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"    public void executeUserCommand(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"        taskList.deleteTask(indexOfDelete);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"        storage.saveData();","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":19}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"    protected int indexOfDone;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"    public DoneCommand(int indexOfDone) {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"        this.indexOfDone \u003d indexOfDone;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"    public void executeUserCommand(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"        taskList.doneTask(indexOfDone);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"        storage.saveData();","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":19}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"    public static boolean isExit() {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"        return isOver \u003d true;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"    public void executeUserCommand(TaskList taskList, Storage storage) throws DukeException { }","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":15}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.command;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"import duke.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"import duke.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"    public void executeUserCommand(TaskList taskList, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"        taskList.listTasks();","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.exception;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":" * Prints the current error message provided during an exception","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"KishorKumar11":10}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.task;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"    protected String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"        return by;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"    public void setBy(String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"KishorKumar11"},"content":"    public String getStoreDataString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"KishorKumar11"},"content":"        String checkDone \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"KishorKumar11"},"content":"        return \"D | \" + checkDone + \" | \" + description + \" | \" + by;","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"KishorKumar11":29}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.task;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"    protected String at;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"        return at;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"    public void setAt(String at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + description + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"KishorKumar11"},"content":"    public String getStoreDataString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"KishorKumar11"},"content":"        String checkDone \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"KishorKumar11"},"content":"        return \"E | \" + checkDone + \" | \" + description + \" | \" + at;","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"KishorKumar11":29}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.task;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"    public String getStoreDataString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"        return \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"    // mark done task with X","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"KishorKumar11"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"KishorKumar11"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"KishorKumar11":30}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"package duke.task;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"        super(description, isDone);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"    public String getStoreDataString() {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"        String checkDone \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"KishorKumar11"},"content":"        return \"T | \" + checkDone + \" | \" +  description;","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"KishorKumar11"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"KishorKumar11":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"KishorKumar11"},"content":"blah blah","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"KishorKumar11"},"content":"todo","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"KishorKumar11"},"content":"todo read book","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"KishorKumar11"},"content":"deadline","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"KishorKumar11"},"content":"deadline random stuff","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"KishorKumar11"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"KishorKumar11"},"content":"event","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"KishorKumar11"},"content":"event random stuff","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"KishorKumar11"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"KishorKumar11"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"KishorKumar11"},"content":"done 2","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"KishorKumar11"},"content":"list","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"KishorKumar11"},"content":"done","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"KishorKumar11"},"content":"done a","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"KishorKumar11"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"delete 6","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"KishorKumar11"},"content":"delete","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"KishorKumar11"},"content":"delete 1","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"KishorKumar11"},"content":"list","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"KishorKumar11"},"content":"bye","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"KishorKumar11":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"KishorKumar11"},"content":"if ! javac  -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/error/exception/*.java ../src/main/java/error/*.java ../src/main/java/task/subtask/*.java ../src/main/java/task/*.java","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"KishorKumar11"},"content":"java -classpath ../bin task.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KishorKumar11":2,"-":36}}]
