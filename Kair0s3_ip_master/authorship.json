[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"T||true||time to do cs2113t","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"D||true||cs2113t iP||1","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"E||false||surf www||5-3","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"E||true||you are the apex champion||5-8pm","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"T||false||take you time","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"T||true||fine I will do it myself","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"E||false||testing last time||4-5pm","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"D||false||OS lab 2||next week","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"Kair0s3":8}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"import exception.DukeException;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import task.Event;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"import task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import task.Todo;","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"import java.io.File;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public static Ui ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"     * Error Messages","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    private static final String INVALID_TASK_MESSAGE \u003d ui.CONSOLE_LINE_PREFIX + ui.LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"            + ui.SPACE_PREFIX + \"That is invalid... Please use the syntax - \"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"            + \"[taskType]\" + ui.SPACE_PREFIX + \"[taskName] ([/by dateTime] or [/at dateTime] depending on taskType)\"","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"            + ui.LINE_BREAK + ui.CONSOLE_LINE_PREFIX;","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    private static final String UNKNOWN_COMMAND_MESSAGE \u003d ui.CONSOLE_LINE_PREFIX + ui.LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"            + ui.SPACE_PREFIX + \"Hey, I don\u0027t quite understand this command. Please install a new CPU for me ;D\"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"            + ui.LINE_BREAK + ui.SPACE_PREFIX + \"Just kidding, it\u0027s too expensive, just try again...\" + ui.LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"            + ui.CONSOLE_LINE_PREFIX;","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"    private static final String MISSING_INDEX_MESSAGE \u003d ui.CONSOLE_LINE_PREFIX + ui.LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"            + ui.SPACE_PREFIX + \"Excuse me Sir/Madam, which task number? Where is it? Under the Sea?\" + ui.LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"            + ui.CONSOLE_LINE_PREFIX;","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    private static final String NO_TASK_MESSAGE \u003d ui.CONSOLE_LINE_PREFIX + ui.LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"            + ui.SPACE_PREFIX + \"Woah woah, you can\u0027t just mark something when your list of tasks is empty\"","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"            + ui.LINE_BREAK + ui.CONSOLE_LINE_PREFIX;","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"    private static final String TODO_EMPTY_MESSAGE \u003d ui.CONSOLE_LINE_PREFIX + ui.LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"            + ui.SPACE_PREFIX + \"Excuse you? The description for todo can NEVER be empty!\" + ui.LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"            + ui.CONSOLE_LINE_PREFIX;","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"    // Command Prefixes for checking type of command","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"    private static final String COMMAND_BYE \u003d \"Bye\";","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"    private static final String COMMAND_DONE \u003d \"Done\";","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"    private static final String COMMAND_LIST \u003d \"List\";","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"    // Prefixes meant for processing data parameters for Task","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"    private static final String BY_WHEN_PREFIX \u003d \"/by\";","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"    private static final String AT_WHEN_PREFIX \u003d \"/at\";","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"    private static final String TASK_TODO_PREFIX \u003d \"Todo\";","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"    private static final String TASK_DEADLINE_PREFIX \u003d \"Deadline\";","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"    private static final String TASK_EVENT_PREFIX \u003d \"Event\";","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"    private static final String COMMAND_DELETE \u003d \"Delete\";","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"     * Initializing Scanner variable to allow for reading User Inputs.","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"    private static final Scanner SC \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"     * These variables are responsible for the management of Tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-12"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"     * Initializes the list of Tasks and Task Counter","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"    private static void initTasks() {","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Kair0s3"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"Kair0s3"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"        instantiateTasksFromFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"     * Returns the user input from I/O","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"Kair0s3"},"content":"     * @return User Input","lastModifiedDate":"2021-09-05"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-09-05"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"    private static String getUserInput() {","lastModifiedDate":"2021-09-04"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"        String userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"        System.out.print(ui.SPACE_PREFIX + \"What\u0027s your plans/command for today (No... I am not hitting on you) : \");","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"        userInput \u003d SC.nextLine();","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"        return userInput;","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"     * Creates a TodoObject from task name given by the user","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"Kair0s3"},"content":"     * and returns it to be added to Tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":85,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"     * @param taskName name of the Todo_Task to be created","lastModifiedDate":"2021-08-29"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"     * @return TodoObject","lastModifiedDate":"2021-08-29"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"    private static Todo createNewToDo(String taskName) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"        if (taskName.equals(\"\")) {","lastModifiedDate":"2021-09-05"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"            throw new DukeException(TODO_EMPTY_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":92,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"        return new Todo(taskName);","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"Kair0s3"},"content":"     * Processes the unprocessed task name given by user, to get the actual task name","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"Kair0s3"},"content":"     * and the date to be completed (\"byWhen\").","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"Kair0s3"},"content":"     * Lastly, creates a Deadline Object before returning it to be added to Tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"Kair0s3"},"content":"     * @param unprocessedTaskName task name given by user before removing non-taskName relevant info","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"Kair0s3"},"content":"     * @return DeadlineObject","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"Kair0s3"},"content":"    private static Deadline createNewDeadline(String unprocessedTaskName) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"Kair0s3"},"content":"        if (!unprocessedTaskName.contains(BY_WHEN_PREFIX)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"Kair0s3"},"content":"            throw new DukeException(INVALID_TASK_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":107,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":108,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"Kair0s3"},"content":"            String byWhen \u003d unprocessedTaskName.split(BY_WHEN_PREFIX)[1].trim();","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"Kair0s3"},"content":"            String actualTaskName \u003d unprocessedTaskName.replace(BY_WHEN_PREFIX, \"\").replace(byWhen, \"\");","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"Kair0s3"},"content":"            actualTaskName \u003d actualTaskName.trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"Kair0s3"},"content":"            return new Deadline(actualTaskName, byWhen);","lastModifiedDate":"2021-08-29"},{"lineNumber":113,"author":{"gitId":"Kair0s3"},"content":"        } catch (ArrayIndexOutOfBoundsException arrError) {","lastModifiedDate":"2021-09-12"},{"lineNumber":114,"author":{"gitId":"Kair0s3"},"content":"            throw new DukeException(\"TOBEREPLACED WITH DEADLINE_EMPTY_MESSAGE\");","lastModifiedDate":"2021-09-12"},{"lineNumber":115,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":116,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"Kair0s3"},"content":"     * Processes the unprocessed task name given by user, to get the actual task name","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"Kair0s3"},"content":"     * and the date of the event (\"atWhen\").","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"Kair0s3"},"content":"     * Lastly, creates an Event Object before returning it to be added to Tasks","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"Kair0s3"},"content":"     * @param unprocessedTaskName task name given by user before removing non-taskName relevant info","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"Kair0s3"},"content":"     * @return EventObject","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"Kair0s3"},"content":"    private static Event createNewEvent(String unprocessedTaskName) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":127,"author":{"gitId":"Kair0s3"},"content":"        if (!unprocessedTaskName.contains(AT_WHEN_PREFIX)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"Kair0s3"},"content":"            throw new DukeException(INVALID_TASK_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":131,"author":{"gitId":"Kair0s3"},"content":"            String atWhen \u003d unprocessedTaskName.split(AT_WHEN_PREFIX)[1].trim();","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"Kair0s3"},"content":"            String actualTaskName \u003d unprocessedTaskName.replace(AT_WHEN_PREFIX, \"\").replace(atWhen, \"\");","lastModifiedDate":"2021-08-29"},{"lineNumber":133,"author":{"gitId":"Kair0s3"},"content":"            actualTaskName \u003d actualTaskName.trim();","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"Kair0s3"},"content":"            return new Event(actualTaskName, atWhen);","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"Kair0s3"},"content":"        } catch (ArrayIndexOutOfBoundsException arrError) {","lastModifiedDate":"2021-09-12"},{"lineNumber":136,"author":{"gitId":"Kair0s3"},"content":"            throw new DukeException(\"TOBEREPLACED WITH EVENT_EMPTY_MESSAGE\");","lastModifiedDate":"2021-09-12"},{"lineNumber":137,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":138,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":139,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":140,"author":{"gitId":"Kair0s3"},"content":"    private static Task createSavedTask(String fileLine) {","lastModifiedDate":"2021-09-12"},{"lineNumber":141,"author":{"gitId":"Kair0s3"},"content":"        String[] tokens \u003d fileLine.split(\"\\\\|\\\\|\");","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"Kair0s3"},"content":"        String taskType \u003d tokens[0];","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"Kair0s3"},"content":"        String taskName \u003d tokens[2];","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"Kair0s3"},"content":"        boolean isDone \u003d Boolean.valueOf(tokens[1]);","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"Kair0s3"},"content":"        Task savedTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":146,"author":{"gitId":"Kair0s3"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"Kair0s3"},"content":"        case \"D\":","lastModifiedDate":"2021-09-12"},{"lineNumber":148,"author":{"gitId":"Kair0s3"},"content":"            savedTask \u003d new Deadline(taskName, isDone, tokens[3]);","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":150,"author":{"gitId":"Kair0s3"},"content":"        case \"E\":","lastModifiedDate":"2021-09-12"},{"lineNumber":151,"author":{"gitId":"Kair0s3"},"content":"            savedTask \u003d new Event(taskName, isDone, tokens[3]);","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"Kair0s3"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":153,"author":{"gitId":"Kair0s3"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":154,"author":{"gitId":"Kair0s3"},"content":"            savedTask \u003d new Todo(taskName, isDone);","lastModifiedDate":"2021-09-20"},{"lineNumber":155,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":156,"author":{"gitId":"Kair0s3"},"content":"        return savedTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":157,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":158,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":159,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"Kair0s3"},"content":"     * Adds a new Task to list of Tasks.","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"Kair0s3"},"content":"     * @param userInput The type of task and relevant details","lastModifiedDate":"2021-09-20"},{"lineNumber":163,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":164,"author":{"gitId":"Kair0s3"},"content":"    private static void addToTasks(String userInput) {","lastModifiedDate":"2021-09-05"},{"lineNumber":165,"author":{"gitId":"Kair0s3"},"content":"        String taskType \u003d userInput.split(ui.SPACE_PREFIX)[0];","lastModifiedDate":"2021-09-20"},{"lineNumber":166,"author":{"gitId":"Kair0s3"},"content":"        // Remove the Type of Task from the user input","lastModifiedDate":"2021-09-05"},{"lineNumber":167,"author":{"gitId":"Kair0s3"},"content":"        String taskName \u003d userInput.replace(taskType, \"\").trim();","lastModifiedDate":"2021-09-05"},{"lineNumber":168,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":169,"author":{"gitId":"Kair0s3"},"content":"            Task newTask;","lastModifiedDate":"2021-08-29"},{"lineNumber":170,"author":{"gitId":"Kair0s3"},"content":"            if (taskType.equalsIgnoreCase(TASK_TODO_PREFIX)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"Kair0s3"},"content":"                newTask \u003d createNewToDo(taskName);","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"Kair0s3"},"content":"            } else if (taskType.equalsIgnoreCase(TASK_DEADLINE_PREFIX)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":173,"author":{"gitId":"Kair0s3"},"content":"                newTask \u003d createNewDeadline(taskName);","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"Kair0s3"},"content":"            } else if (taskType.equalsIgnoreCase(TASK_EVENT_PREFIX)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"Kair0s3"},"content":"                newTask \u003d createNewEvent(taskName);","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"Kair0s3"},"content":"            } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":177,"author":{"gitId":"Kair0s3"},"content":"                System.out.println(UNKNOWN_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":178,"author":{"gitId":"Kair0s3"},"content":"                return;","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":180,"author":{"gitId":"Kair0s3"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":181,"author":{"gitId":"Kair0s3"},"content":"            saveToFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":182,"author":{"gitId":"Kair0s3"},"content":"            ui.printAddedTaskMessage(newTask.getTaskName());","lastModifiedDate":"2021-09-20"},{"lineNumber":183,"author":{"gitId":"Kair0s3"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2021-09-05"},{"lineNumber":184,"author":{"gitId":"Kair0s3"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-08-21"},{"lineNumber":186,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":187,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":188,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":189,"author":{"gitId":"Kair0s3"},"content":"     * Mark the task as done and print out marked as done message.","lastModifiedDate":"2021-08-29"},{"lineNumber":190,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-08-29"},{"lineNumber":191,"author":{"gitId":"Kair0s3"},"content":"     * @param index task index of task that user wants to mark as done in the list","lastModifiedDate":"2021-08-29"},{"lineNumber":192,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"Kair0s3"},"content":"    private static void markTaskAsDone(int index) throws DukeException{","lastModifiedDate":"2021-09-05"},{"lineNumber":194,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":195,"author":{"gitId":"Kair0s3"},"content":"            if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":196,"author":{"gitId":"Kair0s3"},"content":"                throw new DukeException(NO_TASK_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":197,"author":{"gitId":"Kair0s3"},"content":"            } else if (tasks.size() \u003c\u003d index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":198,"author":{"gitId":"Kair0s3"},"content":"                throw new DukeException(\"OVERFLOWED INDEX PLEASE REPLACE ME\");","lastModifiedDate":"2021-09-12"},{"lineNumber":199,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":200,"author":{"gitId":"Kair0s3"},"content":"            Task task \u003d tasks.get(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":201,"author":{"gitId":"Kair0s3"},"content":"            task.setDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":202,"author":{"gitId":"Kair0s3"},"content":"            ui.printMarkedTaskDoneMessage(task);","lastModifiedDate":"2021-09-20"},{"lineNumber":203,"author":{"gitId":"Kair0s3"},"content":"            saveToFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":204,"author":{"gitId":"Kair0s3"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":205,"author":{"gitId":"Kair0s3"},"content":"            throw new DukeException(\"TOBECHANGED\");","lastModifiedDate":"2021-09-05"},{"lineNumber":206,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":207,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":208,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":209,"author":{"gitId":"Kair0s3"},"content":"    private static void deleteTask(int index) {","lastModifiedDate":"2021-09-12"},{"lineNumber":210,"author":{"gitId":"Kair0s3"},"content":"        Task deletedTask \u003d tasks.get(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":211,"author":{"gitId":"Kair0s3"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-12"},{"lineNumber":212,"author":{"gitId":"Kair0s3"},"content":"        // Print deleted message","lastModifiedDate":"2021-09-12"},{"lineNumber":213,"author":{"gitId":"Kair0s3"},"content":"        ui.printDeletedTaskMessage(deletedTask, tasks.size());","lastModifiedDate":"2021-09-20"},{"lineNumber":214,"author":{"gitId":"Kair0s3"},"content":"        saveToFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":215,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":216,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":217,"author":{"gitId":"Kair0s3"},"content":"    private static void saveToFile() {","lastModifiedDate":"2021-09-12"},{"lineNumber":218,"author":{"gitId":"Kair0s3"},"content":"        ArrayList\u003cString\u003e stringFormattedTasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":219,"author":{"gitId":"Kair0s3"},"content":"        File saveDir \u003d new File(\"data\");","lastModifiedDate":"2021-09-12"},{"lineNumber":220,"author":{"gitId":"Kair0s3"},"content":"        saveDir.mkdir();","lastModifiedDate":"2021-09-12"},{"lineNumber":221,"author":{"gitId":"Kair0s3"},"content":"        File saveFile \u003d new File(saveDir, \"duke.txt\");","lastModifiedDate":"2021-09-12"},{"lineNumber":222,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":223,"author":{"gitId":"Kair0s3"},"content":"            saveFile.createNewFile();","lastModifiedDate":"2021-09-12"},{"lineNumber":224,"author":{"gitId":"Kair0s3"},"content":"            FileWriter fw \u003d new FileWriter(saveFile);","lastModifiedDate":"2021-09-12"},{"lineNumber":225,"author":{"gitId":"Kair0s3"},"content":"            stringFormattedTasks \u003d getTasksAsStringArrayList();","lastModifiedDate":"2021-09-20"},{"lineNumber":226,"author":{"gitId":"Kair0s3"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":227,"author":{"gitId":"Kair0s3"},"content":"                fw.write(stringFormattedTasks.get(i) + ui.LINE_BREAK);","lastModifiedDate":"2021-09-20"},{"lineNumber":228,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":229,"author":{"gitId":"Kair0s3"},"content":"            fw.close();","lastModifiedDate":"2021-09-12"},{"lineNumber":230,"author":{"gitId":"Kair0s3"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":231,"author":{"gitId":"Kair0s3"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-12"},{"lineNumber":232,"author":{"gitId":"Kair0s3"},"content":"            System.out.println(\"Something went wrong\");","lastModifiedDate":"2021-09-20"},{"lineNumber":233,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":234,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":235,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":236,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":237,"author":{"gitId":"Kair0s3"},"content":"     * Formats the list of Tasks and","lastModifiedDate":"2021-09-20"},{"lineNumber":238,"author":{"gitId":"Kair0s3"},"content":"     * returns a List of Tasks formatted as string","lastModifiedDate":"2021-09-20"},{"lineNumber":239,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":240,"author":{"gitId":"Kair0s3"},"content":"     * @return ArrayList of String formatted Tasks","lastModifiedDate":"2021-09-20"},{"lineNumber":241,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":242,"author":{"gitId":"Kair0s3"},"content":"    private static ArrayList\u003cString\u003e getTasksAsStringArrayList() {","lastModifiedDate":"2021-09-20"},{"lineNumber":243,"author":{"gitId":"Kair0s3"},"content":"        ArrayList\u003cString\u003e stringFormattedTasks \u003d new ArrayList\u003cString\u003e ();","lastModifiedDate":"2021-09-20"},{"lineNumber":244,"author":{"gitId":"Kair0s3"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":245,"author":{"gitId":"Kair0s3"},"content":"            char taskIdentifier \u003d tasks.get(i).toString().charAt(1);","lastModifiedDate":"2021-09-20"},{"lineNumber":246,"author":{"gitId":"Kair0s3"},"content":"            String temp \u003d taskIdentifier + \"||\" + tasks.get(i).isDone() + \"||\" + tasks.get(i).getTaskName();","lastModifiedDate":"2021-09-20"},{"lineNumber":247,"author":{"gitId":"Kair0s3"},"content":"            if (taskIdentifier \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-09-20"},{"lineNumber":248,"author":{"gitId":"Kair0s3"},"content":"                temp +\u003d \"||\" + ((Deadline) tasks.get(i)).getByWhen();","lastModifiedDate":"2021-09-20"},{"lineNumber":249,"author":{"gitId":"Kair0s3"},"content":"            } else if (taskIdentifier \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-09-20"},{"lineNumber":250,"author":{"gitId":"Kair0s3"},"content":"                temp +\u003d \"||\" + ((Event) tasks.get(i)).getAtWhen();","lastModifiedDate":"2021-09-20"},{"lineNumber":251,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":252,"author":{"gitId":"Kair0s3"},"content":"            stringFormattedTasks.add(temp);","lastModifiedDate":"2021-09-20"},{"lineNumber":253,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":254,"author":{"gitId":"Kair0s3"},"content":"        return stringFormattedTasks;","lastModifiedDate":"2021-09-20"},{"lineNumber":255,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":256,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":257,"author":{"gitId":"Kair0s3"},"content":"    private static void instantiateTasksFromFile() {","lastModifiedDate":"2021-09-12"},{"lineNumber":258,"author":{"gitId":"Kair0s3"},"content":"        File saveDir \u003d new File(\"data\");","lastModifiedDate":"2021-09-12"},{"lineNumber":259,"author":{"gitId":"Kair0s3"},"content":"        saveDir.mkdir();","lastModifiedDate":"2021-09-12"},{"lineNumber":260,"author":{"gitId":"Kair0s3"},"content":"        File savedFile \u003d new File(saveDir, \"duke.txt\");","lastModifiedDate":"2021-09-12"},{"lineNumber":261,"author":{"gitId":"Kair0s3"},"content":"        if (!savedFile.exists()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":262,"author":{"gitId":"Kair0s3"},"content":"            return;","lastModifiedDate":"2021-09-20"},{"lineNumber":263,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":264,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":265,"author":{"gitId":"Kair0s3"},"content":"            Scanner fileScanner \u003d new Scanner(savedFile);","lastModifiedDate":"2021-09-12"},{"lineNumber":266,"author":{"gitId":"Kair0s3"},"content":"            while (fileScanner.hasNext()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":267,"author":{"gitId":"Kair0s3"},"content":"                String fileLine \u003d fileScanner.nextLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":268,"author":{"gitId":"Kair0s3"},"content":"                Task savedTask \u003d createSavedTask(fileLine);","lastModifiedDate":"2021-09-12"},{"lineNumber":269,"author":{"gitId":"Kair0s3"},"content":"                tasks.add(savedTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":270,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":271,"author":{"gitId":"Kair0s3"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":272,"author":{"gitId":"Kair0s3"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-12"},{"lineNumber":273,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":274,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":275,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":276,"author":{"gitId":"Kair0s3"},"content":"    private static void parseTaskCommands(String userInput) {","lastModifiedDate":"2021-09-20"},{"lineNumber":277,"author":{"gitId":"Kair0s3"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":278,"author":{"gitId":"Kair0s3"},"content":"            String[] userParams \u003d userInput.split(ui.SPACE_PREFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":279,"author":{"gitId":"Kair0s3"},"content":"            if (userParams[0].equalsIgnoreCase(COMMAND_DONE)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":280,"author":{"gitId":"Kair0s3"},"content":"                int index \u003d Integer.parseInt(userParams[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":281,"author":{"gitId":"Kair0s3"},"content":"                markTaskAsDone(index - 1);","lastModifiedDate":"2021-08-29"},{"lineNumber":282,"author":{"gitId":"Kair0s3"},"content":"            } else if (userParams[0].equalsIgnoreCase(COMMAND_DELETE)) {","lastModifiedDate":"2021-09-12"},{"lineNumber":283,"author":{"gitId":"Kair0s3"},"content":"                int index \u003d Integer.parseInt(userParams[1]);","lastModifiedDate":"2021-09-12"},{"lineNumber":284,"author":{"gitId":"Kair0s3"},"content":"                deleteTask(index - 1);","lastModifiedDate":"2021-09-12"},{"lineNumber":285,"author":{"gitId":"Kair0s3"},"content":"            } else {","lastModifiedDate":"2021-09-05"},{"lineNumber":286,"author":{"gitId":"Kair0s3"},"content":"                addToTasks(userInput);","lastModifiedDate":"2021-09-05"},{"lineNumber":287,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":288,"author":{"gitId":"Kair0s3"},"content":"        } catch (ArrayIndexOutOfBoundsException arrError) {","lastModifiedDate":"2021-09-12"},{"lineNumber":289,"author":{"gitId":"Kair0s3"},"content":"            System.out.println(MISSING_INDEX_MESSAGE);","lastModifiedDate":"2021-09-05"},{"lineNumber":290,"author":{"gitId":"Kair0s3"},"content":"        } catch (DukeException dukeError) {","lastModifiedDate":"2021-09-12"},{"lineNumber":291,"author":{"gitId":"Kair0s3"},"content":"            ui.printErrorMessage(dukeError.getMessage());","lastModifiedDate":"2021-09-20"},{"lineNumber":292,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":293,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":294,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-20"},{"lineNumber":296,"author":{"gitId":"Kair0s3"},"content":"        initTasks();","lastModifiedDate":"2021-09-20"},{"lineNumber":297,"author":{"gitId":"Kair0s3"},"content":"        ui.printLogo();","lastModifiedDate":"2021-09-20"},{"lineNumber":298,"author":{"gitId":"Kair0s3"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-09-20"},{"lineNumber":299,"author":{"gitId":"Kair0s3"},"content":"        String userInput;","lastModifiedDate":"2021-09-20"},{"lineNumber":300,"author":{"gitId":"Kair0s3"},"content":"        while (true) {","lastModifiedDate":"2021-09-20"},{"lineNumber":301,"author":{"gitId":"Kair0s3"},"content":"            userInput \u003d getUserInput();","lastModifiedDate":"2021-09-20"},{"lineNumber":302,"author":{"gitId":"Kair0s3"},"content":"            if (userInput.equalsIgnoreCase(COMMAND_BYE)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":303,"author":{"gitId":"Kair0s3"},"content":"                break;","lastModifiedDate":"2021-09-20"},{"lineNumber":304,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":305,"author":{"gitId":"Kair0s3"},"content":"            if (userInput.equalsIgnoreCase(COMMAND_LIST) || userInput.equals(\"\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":306,"author":{"gitId":"Kair0s3"},"content":"                ui.printTasks(tasks);","lastModifiedDate":"2021-09-20"},{"lineNumber":307,"author":{"gitId":"Kair0s3"},"content":"            } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":308,"author":{"gitId":"Kair0s3"},"content":"                parseTaskCommands(userInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":309,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":310,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":311,"author":{"gitId":"Kair0s3"},"content":"        SC.close();","lastModifiedDate":"2021-08-29"},{"lineNumber":312,"author":{"gitId":"Kair0s3"},"content":"        ui.printFarewell();","lastModifiedDate":"2021-09-20"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Kair0s3":310,"-":4}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package exception;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"Kair0s3":7}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"    protected String byWhen;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"    public Deadline(String taskName, String byWhen) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"    public Deadline(String taskName, boolean isDone, String byWhen) {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"        this.byWhen \u003d byWhen;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public String getByWhen() {","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"        return byWhen;","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"        return \"[D]\" + super.toString() + \" (By -\u003e \" + byWhen + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Kair0s3":24}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"    protected String atWhen;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"    public Event(String taskName, String atWhen) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"        super(taskName);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"        this.atWhen \u003d atWhen;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"    public Event(String taskName, boolean isDone, String atWhen) {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"        this.atWhen \u003d atWhen;","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public String getAtWhen() {","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"        return atWhen;","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"        return \"[E]\" + super.toString() + \" (At -\u003e \" + atWhen + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Kair0s3":24}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"    protected String taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"    // Constructor","lastModifiedDate":"2021-08-21"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"    public Task(String taskName) {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"    public Task(String taskName, boolean isDone) {","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"        this(taskName);","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"        if (isDone) {","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"            setDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    // Getters and Setters","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"    public String getTaskName() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"        return taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"        return isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"    // Function to get StatusIcon based on isDone","lastModifiedDate":"2021-08-21"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"        return (isDone() ? \"X\" : \" \");","lastModifiedDate":"2021-08-21"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"        return \"[\" + getStatusIcon() + \"] \" + taskName;","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"Kair0s3":42}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package task;","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import task.Task;","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"    public Todo(String taskname) {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"        super(taskname);","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"    public Todo(String taskName, boolean isDone) {","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"        super(taskName, isDone);","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Kair0s3":18}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"package ui;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"import task.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"public class Ui {","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"    private final Scanner sc;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"     * Decorative prefixes to format program\u0027s output more neatly/cleaner.","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"    public static final String CONSOLE_LINE_PREFIX \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"Kair0s3"},"content":"    public static final String SPACE_PREFIX \u003d \" \";","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"Kair0s3"},"content":"    public static final String LINE_BREAK \u003d \"\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"Kair0s3"},"content":"    public Ui() {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"Kair0s3"},"content":"        this(System.in);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"Kair0s3"},"content":"    public Ui(InputStream in) {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"Kair0s3"},"content":"        this.sc \u003d new Scanner(in);","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"Kair0s3"},"content":"     * Prints the program logo.","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"Kair0s3"},"content":"    public static void printLogo() {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"Kair0s3"},"content":"        /**","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"Kair0s3"},"content":"         * ASCII Art Logo generated using","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"Kair0s3"},"content":"         * https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dDancing%20Font\u0026t\u003dDuke","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"Kair0s3"},"content":"         */","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"Kair0s3"},"content":"        String logo \u003d \"  ____     _   _    _  __  U _____ u\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"Kair0s3"},"content":"                + \" |  _\\\"\\\\ U |\\\"|u| |  |\\\"|/ /  \\\\| ___\\\"|/\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"Kair0s3"},"content":"                + \"/| | | | \\\\| |\\\\| |  | \u0027 /    |  _|\\\"\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"Kair0s3"},"content":"                + \"U| |_| |\\\\ | |_| |U/| . \\\\u   | |___\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"Kair0s3"},"content":"                + \" |____/ u\u003c\u003c\\\\___/   |_|\\\\_\\\\   |_____|\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"Kair0s3"},"content":"                + \"  |||_  (__) )(  ,-,\u003e\u003e \\\\\\\\,-.\u003c\u003c   \u003e\u003e\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"Kair0s3"},"content":"                + \" (__)_)     (__)  \\\\.)   (_/(__) (__)\";","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"Kair0s3"},"content":"     * Prints out the program greeting message.","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"Kair0s3"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"Kair0s3"},"content":"        String greeting \u003d CONSOLE_LINE_PREFIX + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + \"Hello! You probably know that Iron Man has the best AI-assistant called Jarvis\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + \"and Spiderman has hmmm, maybe his tingly spidey senses?\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + \"But don\u0027t worry! You have me, Duke! I am your personal SIDEKICK that does \\\"something\\\"!\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + \"What is \\\"something\\\" you want me to do?\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"Kair0s3"},"content":"                + CONSOLE_LINE_PREFIX;","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(greeting);","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"Kair0s3"},"content":"     * Prints out the program farewell (exit) message.","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"Kair0s3"},"content":"    public static void printFarewell() {","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"Kair0s3"},"content":"        String farewell \u003d CONSOLE_LINE_PREFIX + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + \"Bye, have a nice day! From your friendly neighbourhood assistant, Duke~\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + \"(NICE, I can finally binge watch Rick and Morty~)\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"Kair0s3"},"content":"                + CONSOLE_LINE_PREFIX;","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(farewell);","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"Kair0s3"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"Kair0s3"},"content":"     * Print added to Tasks message.","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"Kair0s3"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"Kair0s3"},"content":"     * @param taskName The task\u0027s name","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"Kair0s3"},"content":"    public static void printAddedTaskMessage(String taskName) {","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(CONSOLE_LINE_PREFIX + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + \"Here you go...\" + LINE_BREAK + \" Added to stuff you would definitely forget to do (*facepalm*): \"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"Kair0s3"},"content":"                + taskName","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"Kair0s3"},"content":"                + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"Kair0s3"},"content":"                + CONSOLE_LINE_PREFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"Kair0s3"},"content":"    public static void printDeletedTaskMessage(Task deletedTaskName, int taskCounter) {","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(CONSOLE_LINE_PREFIX + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + \"Roger that! I am Thanos and I have snapped away : \" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + deletedTaskName","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"Kair0s3"},"content":"                + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + \"Now you have \" + taskCounter + \" tasks left!\"","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"Kair0s3"},"content":"                + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"Kair0s3"},"content":"                + CONSOLE_LINE_PREFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"Kair0s3"},"content":"    public static void printMarkedTaskDoneMessage(Task doneTask) {","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"Kair0s3"},"content":"        System.out.println(SPACE_PREFIX + \"Great! You didn\u0027t forget to do it! I have marked it as done!\" + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"Kair0s3"},"content":"                + SPACE_PREFIX + doneTask + LINE_BREAK","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"Kair0s3"},"content":"                + CONSOLE_LINE_PREFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"Kair0s3"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"Kair0s3"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"Kair0s3"},"content":"     * Prints all the Tasks.","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"Kair0s3"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"Kair0s3"},"content":"    public static void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"Kair0s3"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"Kair0s3"},"content":"            System.out.println(CONSOLE_LINE_PREFIX + LINE_BREAK + SPACE_PREFIX + \"Hi there! You have no dates! LITERALLY\"","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"Kair0s3"},"content":"                    + LINE_BREAK + CONSOLE_LINE_PREFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"Kair0s3"},"content":"        } else {","lastModifiedDate":"2021-09-20"},{"lineNumber":109,"author":{"gitId":"Kair0s3"},"content":"            System.out.println(SPACE_PREFIX + \"EEEEEOOOOOO~ ALL RIGHT~ Oops was jamming away in my virtual garage, here\u0027s your PLAN/S...\");","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"Kair0s3"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"Kair0s3"},"content":"                System.out.println(SPACE_PREFIX + (i + 1) + \".\" + SPACE_PREFIX + tasks.get(i));","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"Kair0s3"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"Kair0s3"},"content":"            System.out.println(CONSOLE_LINE_PREFIX);","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"Kair0s3"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"Kair0s3"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"Kair0s3"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"Kair0s3":116}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Kair0s3"},"content":"list","lastModifiedDate":"2021-09-05"},{"lineNumber":2,"author":{"gitId":"Kair0s3"},"content":"todo borrow book","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"Kair0s3"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"Kair0s3"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"Kair0s3"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"Kair0s3"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"Kair0s3"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"Kair0s3"},"content":"done 3","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"Kair0s3"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"Kair0s3"},"content":"done 2","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"Kair0s3"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"Kair0s3"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"Kair0s3"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"Kair0s3"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"Kair0s3":14}}]
