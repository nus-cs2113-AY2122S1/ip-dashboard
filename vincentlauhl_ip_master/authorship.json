[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"# Duke","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"* Duke helps you record your tasks and manage them.  ","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"* It is a CLI program, where you type in commands to the program.  ","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"* If you forget or are unsure about Duke\u0027s functions, enter **help** to learn how to use them.  ","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"## Functionalities","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vincentlauhl":12,"-":19}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"### Add Task","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"Allows you to add different kinds of tasks such as ToDos, Deadlines and Events","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"* ToDo - A task that can be done anytime","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"* Deadline - A task that needs to be done before a certain time","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"* Events - A task that needs to be done at a certain period of time","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"### List","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"Shows you the list of tasks you have and their status of completion.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"### Find","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"Allows you to find tasks with a specific description or date.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"### Done","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"Allows you to mark a task as done","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"### Delete","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"Allows you to remove a task from the list","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"### Load","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"Loads tasks from the \"duke.txt\" file if it exists. Creates a new \"duke.txt\" file if it does not","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"### Save","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"Saves the tasks to the \"duke.txt\" file when the program is terminated","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"### `todo` - todo *description* ","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"* Adds a ToDo task with its description to the list. ","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"* If successful, the system will print out a success message, the task added, and the number of tasks in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"`todo read book`","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"* The success message is shown, along with the description of the task, the type of task added and the number of tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"      I\u0027ve added this to your list :D","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"      [T][ ] read book","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"      Now you have 1 task(s) in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"### `deadline` - deadline *description* /by *date*","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"* Adds a Deadline task with its description and the date and time of the deadline to the list. ","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"* If successful, the system will print out a success message, the task added, and the number of tasks in the list. ","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"* The date of deadline is in the format of *yyyy-MM-ddTHH:mm* , where *yyyy* is the year, *MM* is the month, *dd* is the day, *HH* is the hour and *mm* is the minute.","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"`deadline finish homework /by 2021-09-30T23:00`","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"* The success message is shown, along with the description of the task, date and time of the deadline, the type of task added, and the number of tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"      I\u0027ve added this to your list :D","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"      [D][ ] finish homework (by: Sep 30 2021 23:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"      Now you have 2 task(s) in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"vincentlauhl"},"content":"### `event` - event *description* /at *start time* /to *end time*","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"vincentlauhl"},"content":"* Adds an Event task with its description and the date and time of the event to the list. ","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"vincentlauhl"},"content":"* If successful, the system will return a success message, the task added, and the number of tasks in the list. ","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"vincentlauhl"},"content":"* The date and time of the start of the event should be added before */to* and the date and time of the end of the event should be added after */to*","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"vincentlauhl"},"content":"* The date of deadline is in the format of *yyyy-MM-ddTHH:mm* , where *yyyy* is the year, *MM* is the month, *dd* is the day, *HH* is the hour and *mm* is the minute.","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"vincentlauhl"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"vincentlauhl"},"content":"`event celebrate birthday /at 2021-09-30T00:00 /to 2021-09-30T02:00`","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"vincentlauhl"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"vincentlauhl"},"content":"* The success message is shown, along with the description of the task, date and time of the event, the type of task added, and the number of tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"vincentlauhl"},"content":"      I\u0027ve added this to your list :D","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"vincentlauhl"},"content":"      [E][ ] celebrate birthday (at: Sep 30 2021 00:00 to Sep 30 02:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"vincentlauhl"},"content":"      Now you have 3 task(s) in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"vincentlauhl"},"content":"### `list` - list","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"vincentlauhl"},"content":"* Displays the list of all tasks and their status of completion.","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"vincentlauhl"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"vincentlauhl"},"content":"`list`","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"vincentlauhl"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"vincentlauhl"},"content":"* The list of tasks with their status of completion.","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"vincentlauhl"},"content":"* If **X** appears in the second box, it means the task is completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"vincentlauhl"},"content":"* If the second box is empty, it means the task is not completed.","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"vincentlauhl"},"content":"      Here are the things you need to do :","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"vincentlauhl"},"content":"      1.[T][ ] read book","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"vincentlauhl"},"content":"      2.[D][ ] finish homework (by: Sep 30 2021 23:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"vincentlauhl"},"content":"      3.[E][ ] celebrate birthday (at: Sep 30 2021 00:00 to Sep 30 02:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"vincentlauhl"},"content":"### `find` - find *keyword* **or** find /d *date*","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"vincentlauhl"},"content":"* Searches through the list for tasks containing the keyword or with the same date, then displays all such tasks to the user if there is any.","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"vincentlauhl"},"content":"* The date should be typed in the format of *yyyy-MM-dd* , where *yyyy* is the year, *MM* is the month and *dd* is the day","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"vincentlauhl"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"vincentlauhl"},"content":"1. `find read`","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"vincentlauhl"},"content":"2. `find /d 2021-09-30`","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"vincentlauhl"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"vincentlauhl"},"content":"1. A list of tasks containing the keyword given is shown to the user","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"vincentlauhl"},"content":"2. A list of tasks with the same date is shown to the user","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"vincentlauhl"},"content":"      Here are the matching tasks in your list : ","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"vincentlauhl"},"content":"      1.[T][ ] read book","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"vincentlauhl"},"content":"      Here are the matching tasks in your list : ","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"vincentlauhl"},"content":"      1.[D][ ] finish homework (by: Sep 30 2021 23:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"vincentlauhl"},"content":"      2.[E][ ] celebrate birthday (at: Sep 30 2021 00:00 to Sep 30 02:00)","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"vincentlauhl"},"content":"### `done` - done *integer*","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"vincentlauhl"},"content":"* Marks the task with the specific number on the list as done.","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"vincentlauhl"},"content":"* If successful, the system will print out the task marked as done and the task will have an **X** in the second box.","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"vincentlauhl"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":162,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":163,"author":{"gitId":"vincentlauhl"},"content":"`done 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"vincentlauhl"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"vincentlauhl"},"content":"* The first task in the list is marked as done.","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"vincentlauhl"},"content":"      You\u0027ve completed the task! Well done!","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"vincentlauhl"},"content":"      [T][X] read book","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"vincentlauhl"},"content":"### `delete` - delete *integer*","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"vincentlauhl"},"content":"* Deletes the task with the specific number on the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"vincentlauhl"},"content":"* If successful, the system will print out a success message, the deleted task, and the number of remaining tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"vincentlauhl"},"content":"`delete 1`","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"vincentlauhl"},"content":"* The first task is deleted. The deleted task and the number of remaining tasks are shown.","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"vincentlauhl"},"content":"      Alright, I\u0027ve removed this task:","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"vincentlauhl"},"content":"      [T][X] read book","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"vincentlauhl"},"content":"      Now you have 2 task(s) in the list ","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"vincentlauhl"},"content":"### `help` - help","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"vincentlauhl"},"content":"* Asks Duke to show the list of commands.","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"vincentlauhl"},"content":"Example of usage: ","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"vincentlauhl"},"content":"`help`","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"vincentlauhl"},"content":"Expected outcome:","lastModifiedDate":"2021-09-29"},{"lineNumber":206,"author":{"gitId":"vincentlauhl"},"content":"* The list of all the commands is printed out.","lastModifiedDate":"2021-09-29"},{"lineNumber":207,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":208,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":209,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":210,"author":{"gitId":"vincentlauhl"},"content":"      list","lastModifiedDate":"2021-09-29"},{"lineNumber":211,"author":{"gitId":"vincentlauhl"},"content":"      - Shows you the list of tasks you have","lastModifiedDate":"2021-09-29"},{"lineNumber":212,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":213,"author":{"gitId":"vincentlauhl"},"content":"      todo (description)","lastModifiedDate":"2021-09-29"},{"lineNumber":214,"author":{"gitId":"vincentlauhl"},"content":"      - Saves a general todo task","lastModifiedDate":"2021-09-29"},{"lineNumber":215,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":216,"author":{"gitId":"vincentlauhl"},"content":"      deadline (description) /by yyyy-MM-ddTHH:mm","lastModifiedDate":"2021-09-29"},{"lineNumber":217,"author":{"gitId":"vincentlauhl"},"content":"      - Saves a task with a given deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":218,"author":{"gitId":"vincentlauhl"},"content":"      - yyyy is the year, MM is the month, dd is the day, HH is the hour,","lastModifiedDate":"2021-09-29"},{"lineNumber":219,"author":{"gitId":"vincentlauhl"},"content":"        and mm is the minute ","lastModifiedDate":"2021-09-29"},{"lineNumber":220,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":221,"author":{"gitId":"vincentlauhl"},"content":"      event (description) /at yyyy-MM-ddTHH:mm /to yyyy-MM-ddTHH:mm","lastModifiedDate":"2021-09-29"},{"lineNumber":222,"author":{"gitId":"vincentlauhl"},"content":"      - Saves an event happening at a certain time period","lastModifiedDate":"2021-09-29"},{"lineNumber":223,"author":{"gitId":"vincentlauhl"},"content":"      - yyyy is the year, MM is the month, dd is the day, HH is the hour,","lastModifiedDate":"2021-09-29"},{"lineNumber":224,"author":{"gitId":"vincentlauhl"},"content":"        and mm is the minute ","lastModifiedDate":"2021-09-29"},{"lineNumber":225,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":226,"author":{"gitId":"vincentlauhl"},"content":"      delete (integer)","lastModifiedDate":"2021-09-29"},{"lineNumber":227,"author":{"gitId":"vincentlauhl"},"content":"      - Deletes a task with the corresponding number on the list","lastModifiedDate":"2021-09-29"},{"lineNumber":228,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":229,"author":{"gitId":"vincentlauhl"},"content":"      done (integer)","lastModifiedDate":"2021-09-29"},{"lineNumber":230,"author":{"gitId":"vincentlauhl"},"content":"      - Marks the task with the corresponding number as done","lastModifiedDate":"2021-09-29"},{"lineNumber":231,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":232,"author":{"gitId":"vincentlauhl"},"content":"      find (keyword)","lastModifiedDate":"2021-09-29"},{"lineNumber":233,"author":{"gitId":"vincentlauhl"},"content":"      - Finds tasks that contains the String given","lastModifiedDate":"2021-09-29"},{"lineNumber":234,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":235,"author":{"gitId":"vincentlauhl"},"content":"      find /d yyyy-MM-dd","lastModifiedDate":"2021-09-29"},{"lineNumber":236,"author":{"gitId":"vincentlauhl"},"content":"      - Finds tasks with the same date as the date given","lastModifiedDate":"2021-09-29"},{"lineNumber":237,"author":{"gitId":"vincentlauhl"},"content":"      - yyyy is the year, MM is the month and dd is the day","lastModifiedDate":"2021-09-29"},{"lineNumber":238,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":239,"author":{"gitId":"vincentlauhl"},"content":"```","lastModifiedDate":"2021-09-29"},{"lineNumber":240,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":241,"author":{"gitId":"vincentlauhl"},"content":"### `bye` - bye","lastModifiedDate":"2021-09-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":243,"author":{"gitId":"vincentlauhl"},"content":"* Terminates the program and saves the tasks to the file \"duke.txt\".","lastModifiedDate":"2021-09-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":247,"author":{"gitId":"vincentlauhl"},"content":"`bye`","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":251,"author":{"gitId":"vincentlauhl"},"content":"* The exit message is printed.","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":253,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":254,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"vincentlauhl"},"content":"      Bye, hope to see you again soon! :)","lastModifiedDate":"2021-09-29"},{"lineNumber":256,"author":{"gitId":"vincentlauhl"},"content":"      ___________________________________________________________","lastModifiedDate":"2021-09-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"vincentlauhl":230,"-":27}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import static constants.Message.INDENTATION;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import duke.DefaultException;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import task.ToDo;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import task.TaskType;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":" * A Command class that contains methods for adding tasks to the ArrayList.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"public class AddCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    private static final int EXPECTED_LENGTH_FOR_DEADLINE \u003d 2;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    private static final int EXPECTED_LENGTH_FOR_EVENT \u003d 3;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    public static final String DEADLINE_FORMAT_ERROR \u003d \"Please type the deadline in the format : \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"            INDENTATION + \"\u0027deadline (description) /by yyyy-MM-ddThh:mm\u0027 :)\";","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    public static final String EVENT_FORMAT_ERROR \u003d \"Please type the event in the format: \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"            INDENTATION + \"\u0027event (description) /at yyyy-MM-ddThh:mm /to yyyy-MM-ddThh:mm\u0027 :)\";","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    private static final String DATE_TIME_FORMAT_ERROR_FOR_DEADLINE \u003d \"Please write the date and time in the\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"            \" format : \u0027yyyy-mm-ddThh:mm\u0027  :)\";","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    private static final String DATE_TIME_FORMAT_ERROR_FOR_EVENT \u003d \"Please write the date and time in the format : \\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"            + INDENTATION + \"\u0027yyyy-mm-ddThh:mm /to yyy-mm-ddThh:mm\u0027  :)\";","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    public static final String ADDED_TO_LIST \u003d \"I\u0027ve added this to your list :D\";","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    public static final String TODO_COMMAND \u003d \"todo\";","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"    public static final String EVENT_COMMAND \u003d \"event\";","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"    public static final String DEADLINE_COMMAND \u003d \"deadline\";","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"    private final String[] parsedOutputs;","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    private final TaskType type;","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    public AddCommand(String[] parsedOutputs, TaskType type) {","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        this.parsedOutputs \u003d parsedOutputs;","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a task object and adds it to the ArrayList depending on the type of task.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that tells the Ui to print the status of the execution","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"     * and the task added (if successful).","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"     * @throws DefaultException Throws an exception if something unexpected happens.","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult execute() throws  DefaultException {","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"        switch(type){","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        case TODO:","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"            tasks.addTask(new ToDo(parsedOutputs[0]));","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"            return new CommandResult(ADDED_TO_LIST,tasks.getTask(Task.getTotalTasks()-1),","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"                    PrintOptions.WITH_TASK_AND_NUMBER_OF_TASK);","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"        case EVENT:","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"            return getCommandResultForEvent();","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"            return getCommandResultForDeadline();","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"        default :","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"            throw new DefaultException();","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"     * Tries to add a deadline to the ArrayList.","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that tells the Ui to print the status of the execution","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"     * and the task added (if successful).","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"    private CommandResult getCommandResultForDeadline() {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"        if(parsedOutputs.length \u003c EXPECTED_LENGTH_FOR_DEADLINE) {","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"            return new CommandResult(DEADLINE_FORMAT_ERROR,PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"            tasks.addTask(new Deadline(parsedOutputs[0], LocalDateTime.parse(parsedOutputs[1])));","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"            return new CommandResult(ADDED_TO_LIST,tasks.getTask(Task.getTotalTasks()-1),","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"                    PrintOptions.WITH_TASK_AND_NUMBER_OF_TASK);","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"            return new CommandResult(DATE_TIME_FORMAT_ERROR_FOR_DEADLINE,PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"vincentlauhl"},"content":"     * Tries to add an event to the ArrayList.","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that tells the Ui to print the status of the execution","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"vincentlauhl"},"content":"     * and the task added (if successful).","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"vincentlauhl"},"content":"    private CommandResult getCommandResultForEvent() {","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"vincentlauhl"},"content":"        if(parsedOutputs.length \u003c EXPECTED_LENGTH_FOR_EVENT) {","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"vincentlauhl"},"content":"            return new CommandResult(EVENT_FORMAT_ERROR,PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"vincentlauhl"},"content":"            tasks.addTask(new Event(parsedOutputs[0], LocalDateTime.parse(parsedOutputs[1]),","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"vincentlauhl"},"content":"                    LocalDateTime.parse(parsedOutputs[2])));","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"vincentlauhl"},"content":"            return new CommandResult(ADDED_TO_LIST,tasks.getTask(Task.getTotalTasks()-1),","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"vincentlauhl"},"content":"                    PrintOptions.WITH_TASK_AND_NUMBER_OF_TASK);","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"vincentlauhl"},"content":"            return new CommandResult(DATE_TIME_FORMAT_ERROR_FOR_EVENT,PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":105}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import duke.DefaultException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":" * An abstract class with the common methods and attributes for different types of Commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    protected TaskList tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public Command() {","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    public abstract CommandResult execute() throws DukeException, DefaultException;","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"    public void passTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":21}},{"path":"src/main/java/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":" * A class for passing the message from the execution of the Command to the Ui.","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"public class CommandResult{","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    public final String message;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    public final Task task;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    public final TaskList tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    public final PrintOptions type;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a CommandResult that allows the list of tasks to be shown to the user","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"     * @param message Message to the user","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"     * @param tasks The list of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"     * @param type The options for printing in Ui.showResult","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult(String message, TaskList tasks, PrintOptions type) {","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        this.task \u003d null;","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a CommandResult that only needs to show a message to the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"     * @param message Message to the user","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"     * @param type The options for printing in Ui.showResult","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult(String message, PrintOptions type) {","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"        this.task \u003d null;","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        this.tasks \u003d null;","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a CommandResult that requires a deleted/added task to be shown to the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"     * @param message Message to the user","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"     * @param task The task shown to the user","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"     * @param type The options for printing in Ui.showResult","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult(String message, Task task, PrintOptions type) {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        this.tasks \u003d null;","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":56}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":" * A Command class that deletes a task in the ArrayList.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    public static final String DELETE_COMMAND \u003d \"delete\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    public static final String TASK_REMOVED \u003d \"Alright, I\u0027ve removed this task:\";","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    private final int index;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"     * Deletes a task with a given index on the ArrayList","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that tells the Ui to print the status of execution","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"     * and the deleted task.","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"     * @throws NumberFormatException Throws an exception if the input given is not a number.","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult execute() throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        Task temp \u003d tasks.getTask(index);","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"        tasks.deleteTask(index);","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        return new CommandResult(TASK_REMOVED,temp,PrintOptions.WITH_TASK_AND_NUMBER_OF_TASK);","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":31}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":" * A Command class that marks a task in the ArrayList as done","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"    private final int index;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"    private static final String TASK_COMPLETED_MESSAGE \u003d \"You\u0027ve completed the task! Well done!\";","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    public static final String DONE_COMMAND \u003d \"done\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"     * Marks a task of a given index in the ArrayList as done","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that that tells the Ui to print the status of execution","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"     * and the task that is done.","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"     * @throws IndexOutOfBoundsException Throws an exception if the input given is not a number.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult execute() throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"        tasks.getTask(index).markAsDone();","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        return new CommandResult(TASK_COMPLETED_MESSAGE,tasks.getTask(index),PrintOptions.ONLY_TASK);","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":29}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":" * A Command class that passes the exit message to the Ui","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"    public static final String GOODBYE_MESSAGE \u003d \"Bye, hope to see you again soon! :)\";","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"    public static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"     * Sends the exit message to the Ui","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that tells the Ui to print the exit message.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"        return new CommandResult(GOODBYE_MESSAGE,PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":20}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import task.Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":" * A Command class that contains methods for finding tasks with specific description or date.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    private final String input;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    private final LocalDate dateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"    private static final String LIST_CONTAINING_STRING_MESSAGE \u003d \"Here are the matching tasks in your list : \";","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    private static final String LIST_OF_SPECIFIC_DATE \u003d \"Here are the things you need to do on that day :\";","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    private static final String NO_SIMILAR_WORDS \u003d \"There are no matching tasks :(\";","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    public static final String FIND_COMMAND \u003d \"find\";","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        this.input \u003d input;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"        this.dateTime \u003d null;","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    public FindCommand(LocalDate dateTime) {","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"        this.input \u003d null;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"     * Searches through the ArrayList for tasks which contains the descriptions","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"     * given or have the same date.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that tells the Ui to print the status of the execution","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"     * and the list of tasks with similar descriptions / dates (if successful).","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"        int totalTasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"        String message;","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"        TaskList taskContainingInput \u003d new TaskList();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"        if(input \u003d\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"            totalTasks \u003d getTasksOfSpecificDate(taskContainingInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"            message \u003d LIST_OF_SPECIFIC_DATE;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"            totalTasks \u003d getTasksOfSpecificString(taskContainingInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"            message \u003d LIST_CONTAINING_STRING_MESSAGE;","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"        taskContainingInput.setNumberOfTask(totalTasks);","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"        if(totalTasks \u003d\u003d 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"            return new CommandResult(NO_SIMILAR_WORDS,PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"        return new CommandResult(message,","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"                taskContainingInput,PrintOptions.LIST_WITH_SPECIFIC_CONDITIONS);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"     * Iterates through the ArrayList to get tasks with specific descriptions","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"     * @param taskContainingString The new TaskList created for adding tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"     *                             with specific descriptions","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"     * @return The total number of tasks in the new TaskList","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"    private int getTasksOfSpecificString(TaskList taskContainingString) {","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"        int totalTasks \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"            if(tasks.getTask(i).getDescription().contains(input)){","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"                taskContainingString.addTaskForFindCommand(tasks.getTask(i));","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"                totalTasks++;","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"        return totalTasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"     * Iterates through the ArrayList to get tasks with a specific date","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"     * @param tasksOfSpecificDate The new TaskList created for adding tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"     *                             with a specific date","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"vincentlauhl"},"content":"     * @return The total number of tasks in the new TaskList","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"vincentlauhl"},"content":"    private int getTasksOfSpecificDate(TaskList tasksOfSpecificDate) {","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"vincentlauhl"},"content":"        int totalTasks \u003d 0;","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"vincentlauhl"},"content":"        for (int i \u003d 0; i \u003cTask.getTotalTasks(); i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"vincentlauhl"},"content":"            Task temp \u003d tasks.getTask(i);","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"vincentlauhl"},"content":"            if (taskWithSameDate(temp) !\u003d null) {","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"vincentlauhl"},"content":"                tasksOfSpecificDate.addTaskForFindCommand(taskWithSameDate(temp));","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"vincentlauhl"},"content":"                totalTasks++;","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"vincentlauhl"},"content":"        return totalTasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"vincentlauhl"},"content":"    private Task taskWithSameDate(Task temp) {","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"vincentlauhl"},"content":"        if(temp instanceof Event \u0026\u0026 sameDate(((Event) temp).getFromDateAndTime())) {","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"vincentlauhl"},"content":"            return temp;","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"vincentlauhl"},"content":"        } else if(temp instanceof Deadline \u0026\u0026 sameDate(((Deadline) temp).getDateAndTime())){","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"vincentlauhl"},"content":"            return temp;","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"vincentlauhl"},"content":"        } else {","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"vincentlauhl"},"content":"            return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"vincentlauhl"},"content":"    private Boolean sameDate (LocalDateTime date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"vincentlauhl"},"content":"        Boolean isSameYear \u003d date.getYear() \u003d\u003d dateTime.getYear();","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"vincentlauhl"},"content":"        Boolean isSameDayOfYear \u003d date.getDayOfYear() \u003d\u003d dateTime.getDayOfYear();","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"vincentlauhl"},"content":"        return (isSameYear \u0026\u0026 isSameDayOfYear);","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"vincentlauhl":110}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import static constants.Message.INDENTATION;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":" * A Command class that send the help message to the Ui","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"public class HelpCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    public static final String HELP_COMMAND \u003d \"help\";","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    private static final String HELP_MESSAGE \u003d \"list\\n\" +INDENTATION +","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"            \"- Shows you the list of tasks you have\\n\\n\" +INDENTATION +","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"            \"todo (description)\\n\" + INDENTATION +","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"            \"- Saves a general todo task\\n\\n\" + INDENTATION +","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"            \"deadline (description) /by yyyy-MM-ddTHH:mm\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"            \"- Saves a task with a given deadline\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"            \"- yyyy is the year, MM is the month, dd is the day, HH is the hour,\\n\" +INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"            \"  and mm is the minute \\n\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"            \"event (description) /at yyyy-MM-ddTHH:mm /to yyyy-MM-ddTHH:mm\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"            \"- Saves an event happening at a certain time period\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"            \"- yyyy is the year, MM is the month, dd is the day, HH is the hour,\\n\" +INDENTATION+","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"            \"  and mm is the minute \\n\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"            \"delete (integer)\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"            \"- Deletes a task with the corresponding number on the list\\n\\n\" + INDENTATION +","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"            \"done (integer)\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"            \"- Marks the task with the corresponding number as done\\n\\n\" + INDENTATION +","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"            \"find (keyword)\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"            \"- Finds tasks that contains the String given\\n\\n\" + INDENTATION +","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"            \"find /d yyyy-MM-dd\\n\" + INDENTATION +","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"            \"- Finds tasks with the same date as the date given\\n\" + INDENTATION +","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"            \"- yyyy is the year, MM is the month and dd is the day\";","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"     * Sends the help message to the Ui","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that tells the Ui to print the help message.","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        return new CommandResult(HELP_MESSAGE,PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":41}},{"path":"src/main/java/commands/IncorrectCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":" * A Command Class that send an error message to the Ui","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"public class IncorrectCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"    private final String message;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    public IncorrectCommand(String message) {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"     * Sends the error message to the Ui","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that tells the Ui to print the error message.","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult execute() {","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"        return new CommandResult(message,PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":23}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":" * A Command class that contains methods that asks the Ui to print out the ArrayList.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    public static final String LIST_IS_EMPTY \u003d \"You\u0027re a free man :)\";","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    private static final String LIST_IS_NOT_EMPTY \u003d \"Here are the things you need to do :\";","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    public static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    public static final int NO_TASKS \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"    public ListCommand () {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"        super();","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"     * Sends the ArrayList to be printed to the Ui","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"     * @return A CommandResult that tells the Ui to print the status of execution","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"     * and the list (if not empty).","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    public CommandResult execute(){","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        if(Task.getTotalTasks() \u003d\u003d NO_TASKS) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"            return new CommandResult(LIST_IS_EMPTY,PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"        return new CommandResult(LIST_IS_NOT_EMPTY,tasks,PrintOptions.LIST);","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":32}},{"path":"src/main/java/commands/PrintOptions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":" * Used to reduce the number of methods in the Ui class by determining","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" * what needs to be printed.","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"public enum PrintOptions {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"    WITH_TASK_AND_NUMBER_OF_TASK,ONLY_TASK,LIST,DEFAULT,LIST_WITH_SPECIFIC_CONDITIONS","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":9}},{"path":"src/main/java/constants/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package constants;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import static commands.ListCommand.LIST_IS_EMPTY;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":" * Messages that do not belong to any Commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"public class Message {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    public static final String DIVIDER \u003d \"___________________________________________________________\";","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    public static final String INDENTATION \u003d \"      \";","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    public static final String HELLO_MESSAGE_2 \u003d \"Hello! I\u0027m Duke, your friendly neighbourhood task manager\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"            INDENTATION + \"What can I do for you? :D\\n\" + INDENTATION  + \"(type help if you\u0027re not sure what to do!)\";","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    public static final String TYPE_SUITABLE_COMMAND_MESSAGE \u003d \"Sorry,\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"            \" I don\u0027t know what you mean, do type \u0027help\u0027 if you\u0027re unsure :)\";","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    public static final String FILE_WRITING_ERROR_MESSAGE \u003d \"Oops, something unexpected happened while \" +","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"            \"writing to file\";","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    public static final String FILE_READING_ERROR_MESSAGE \u003d \"Oops, something unexpected happened while \" +","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"            \"reading the file\";","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    public static final String PROMPT_TASK_NUMBER \u003d \"Please tell me which task you want to select :)\";","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    public static final String PROMPT_SENSIBLE_INDEX \u003d \"Please give a number between 1 and \";","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    public static final String DEFAULT_ERROR_MESSAGE \u003d \"Oops, something went wrong!\";","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    public static final String FILE_ERROR_MESSAGE \u003d \"Oops, there might be something wrong with the file.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    public static final String FILE_NOT_CREATED \u003d \"Looks like you don\u0027t have a file for your tasks, \" +","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"            \"let me create one now.....\";","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"    public static final String DONE \u003d \"Done!\";","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"    public static final String GETTING_TASK \u003d \"Getting your tasks.....\";","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"    public static final String PROMPT_NUMBER \u003d \"Please give me an integer :)\";","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"     * Asks the user to give a number between 1 and the total number of tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"     * @param number Total number of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"     * @return Message","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"    public static String giveSensibleRange(int number) {","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"        if(number \u003c 1) {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"            return LIST_IS_EMPTY;","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"        return PROMPT_SENSIBLE_INDEX + number + \" :)\";","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":47}},{"path":"src/main/java/duke/DefaultException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package duke;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":" * An Exception class created for unexpected errors while running the program.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"public class DefaultException extends Exception{","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import commands.ExitCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import commands.CommandResult;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import commands.Command;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import commands.PrintOptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import constants.Message;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"import task.Task;","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":" * The class that contains the main code for the execution of the Duke Program.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    private final Storage storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"     * Creates a Duke object to run the application. It also tries to find and load","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"     * the text file duke.txt.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"    public Duke() {","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"        ui.printStartingMessage();","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"        ui.printMessage(Message.GETTING_TASK);","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"            storage.loadTextFile(tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"            ui.printMessage(Message.DONE);","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"            ui.printMessage(Message.FILE_NOT_CREATED);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"            ui.printMessage(Message.DONE);","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"        } catch (IOException error) {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"            ui.printMessage(Message.FILE_READING_ERROR_MESSAGE);","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception error) {","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"            ui.printMessage(Message.FILE_ERROR_MESSAGE);","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"            System.exit(1);","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"     * Repeats the process of getting an input from the user, creating a Parser to parse","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"     * the input, creating a Command object based on the parsed input, then executing the","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"     * command and showing the command output to the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"     * Stops when an ExitCommand is created.","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"    //@@se-edu vincentlauhl-reused","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"    //Reused from https://github.com/se-edu/addressbook-level2/blob/master/src/seedu/addressbook/Main.java","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"    public void run(){","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"        Command command \u003d null;","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"        while (!(command instanceof ExitCommand)){","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"            String input \u003d ui.getUserCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"            command \u003d new Parser().parseInput(input);","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"            CommandResult result \u003d executeCommand(command);","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"            ui.showResult(result);","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"        exitProcess();","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"    private void exitProcess() {","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"            storage.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"        } catch (IOException error) {","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"            ui.printMessage(Message.FILE_WRITING_ERROR_MESSAGE);","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"vincentlauhl"},"content":"     * Passes the tasks to the command and tries to execute the command. Returns","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"vincentlauhl"},"content":"     * appropriate error messages if execution fails.","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"vincentlauhl"},"content":"     * @param command Command that needs to be executed.","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"vincentlauhl"},"content":"     * @return Message and actions from the execution of the command.","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"vincentlauhl"},"content":"    private CommandResult executeCommand(Command command) {","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"vincentlauhl"},"content":"        String errorMessage;","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"vincentlauhl"},"content":"            command.passTaskList(tasks);","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"vincentlauhl"},"content":"            return command.execute();","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"vincentlauhl"},"content":"        } catch (IndexOutOfBoundsException error) {","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"vincentlauhl"},"content":"            errorMessage \u003d Message.giveSensibleRange(Task.getTotalTasks());","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"vincentlauhl"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"vincentlauhl"},"content":"            errorMessage \u003d Message.PROMPT_NUMBER;","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DefaultException error) {","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"vincentlauhl"},"content":"            errorMessage \u003d Message.DEFAULT_ERROR_MESSAGE;","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"vincentlauhl"},"content":"            errorMessage \u003d Message.TYPE_SUITABLE_COMMAND_MESSAGE;","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":104,"author":{"gitId":"vincentlauhl"},"content":"        return new CommandResult(errorMessage, PrintOptions.DEFAULT);","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"vincentlauhl":104,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package duke;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":" * An Exception class created for exceptions specific to duke.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"vincentlauhl":7}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import commands.Command;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import commands.AddCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import commands.ExitCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import commands.FindCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import commands.IncorrectCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import commands.ListCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"import commands.HelpCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"import commands.DoneCommand;","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"import constants.Message;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"import task.TaskType;","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":" * A class for parsing the input to determine the command to execute","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"public class Parser {","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    private static final String TODO_FORMAT_ERROR \u003d \"Please type the todo in the format: \u0027todo (description)\u0027 :)\";","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    private static final String DATE_FORMAT_ERROR \u003d \"Please write the date in the format of \u0027yyyy-MM-dd\u0027 :)\";","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    private static final String DEADLINE_DESCRIPTION_AND_DATE_SPLITTER \u003d \" /by \";","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"    private static final String EVENT_DESCRIPTION_AND_DATE_TIME_SPLITTER \u003d \" /at \";","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    private static final String FIND_FORMAT_ERROR \u003d \"Please type the find input in the format: \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"            Message.INDENTATION + \"- \u0027find /d yyyy-MM-dd\u0027 to find tasks with a specific date \\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"            Message.INDENTATION + \"- \u0027find (description)\u0027 to find tasks with a specific description :)\";","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"    private static final int EXPECTED_LENGTH_FOR_DELETE_INPUT \u003d 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"    private static final int EXPECTED_LENGTH_FOR_DONE_INPUT \u003d 2;","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"    private static final int FIND_STARTING_INDEX \u003d 5;","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    private static final String EVENT_FROM_AND_TO_DATE_TIME_SPLITTER \u003d \" /to \";","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    private static final int TODO_STARTING_INDEX \u003d 5;","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    private static final int DEADLINE_STARTING_INDEX \u003d 9;","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    private static final int EVENT_STARTING_INDEX \u003d 6;","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"    public static final int WITH_DATE \u003d 2;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"     * Parses the input to determine the required Command object to be created.","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"     * The command returned depends on the first word of the input before the","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"     * first space. If the first word does not match any of the cases, a default","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"     * error message is returned with the prompt to type \u0027help\u0027.","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"     * @param input Input from user","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"     * @return Certain type of command depending on the input","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"    public Command parseInput(String input) {","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"        String type \u003d input.split(\" \")[0].toLowerCase();","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        switch(type) {","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        case AddCommand.TODO_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"            return executeTaskCase(input, TaskType.TODO, TODO_FORMAT_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"        case AddCommand.DEADLINE_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"            return executeTaskCase(input, TaskType.DEADLINE, AddCommand.DEADLINE_FORMAT_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"        case AddCommand.EVENT_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"            return executeTaskCase(input, TaskType.EVENT, AddCommand.EVENT_FORMAT_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"        case ListCommand.LIST_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"        case DoneCommand.DONE_COMMAND:","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"            return executeDoneCase(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"        case HelpCommand.HELP_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"        case DeleteCommand.DELETE_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"            return executeDeleteCase(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"        case ExitCommand.EXIT_COMMAND:","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"        case FindCommand.FIND_COMMAND:","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"            return executeFindCase(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"        default :","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(Message.TYPE_SUITABLE_COMMAND_MESSAGE);","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"    private Command executeFindCase(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"            return prepareFindCommand(input.strip().substring(FIND_STARTING_INDEX));","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DateTimeParseException error) {","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(DATE_FORMAT_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"vincentlauhl"},"content":"        } catch (Exception error) {","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(FIND_FORMAT_ERROR);","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"vincentlauhl"},"content":"    private Command executeDeleteCase(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"vincentlauhl"},"content":"            return prepareDeleteCommand(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(Message.PROMPT_TASK_NUMBER);","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"vincentlauhl"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(Message.PROMPT_NUMBER);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"vincentlauhl"},"content":"    private Command executeDoneCase(String input) {","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"vincentlauhl"},"content":"            return prepareDoneCommand(input);","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"vincentlauhl"},"content":"        } catch (DukeException error) {","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(Message.PROMPT_TASK_NUMBER);","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"vincentlauhl"},"content":"        } catch (NumberFormatException error) {","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(Message.PROMPT_NUMBER);","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"vincentlauhl"},"content":"    private Command executeTaskCase(String input, TaskType type, String todoFormatError) {","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"vincentlauhl"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"vincentlauhl"},"content":"            return prepareAddCommand(input, type);","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"vincentlauhl"},"content":"        } catch (StringIndexOutOfBoundsException error) {","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(todoFormatError);","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":113,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"vincentlauhl"},"content":"     * Parses the input further to create a different AddCommand Object for different task","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"vincentlauhl"},"content":"     * types. Returns an error message if something unexpected happens.","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"vincentlauhl"},"content":"     * @param input Input from the user","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"vincentlauhl"},"content":"     * @param type Type of task","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"vincentlauhl"},"content":"     * @return AddCommand object with a different parsed Output depending on the type of task","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"vincentlauhl"},"content":"     * @throws StringIndexOutOfBoundsException If the format of the input is incorrect","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"vincentlauhl"},"content":"    private Command prepareAddCommand(String input,TaskType type) throws StringIndexOutOfBoundsException {","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"vincentlauhl"},"content":"        String description;","lastModifiedDate":"2021-09-25"},{"lineNumber":125,"author":{"gitId":"vincentlauhl"},"content":"        String parsedOutputs[];","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"vincentlauhl"},"content":"        switch(type){","lastModifiedDate":"2021-09-25"},{"lineNumber":127,"author":{"gitId":"vincentlauhl"},"content":"        case TODO:","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"vincentlauhl"},"content":"            description \u003d input.strip().substring(TODO_STARTING_INDEX);","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"vincentlauhl"},"content":"            parsedOutputs \u003d new String[]{description};","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"vincentlauhl"},"content":"            return new AddCommand(parsedOutputs,TaskType.TODO);","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"vincentlauhl"},"content":"        case EVENT:","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"vincentlauhl"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"vincentlauhl"},"content":"                description \u003d input.strip().substring(EVENT_STARTING_INDEX);","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"vincentlauhl"},"content":"                parsedOutputs \u003d getParsedOutputForEvent(description);","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"vincentlauhl"},"content":"                return new AddCommand(parsedOutputs,TaskType.EVENT);","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"vincentlauhl"},"content":"            } catch(ArrayIndexOutOfBoundsException error) {","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"vincentlauhl"},"content":"                return new IncorrectCommand(AddCommand.EVENT_FORMAT_ERROR);","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"vincentlauhl"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"vincentlauhl"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"vincentlauhl"},"content":"            description \u003d input.strip().substring(DEADLINE_STARTING_INDEX);","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"vincentlauhl"},"content":"            parsedOutputs \u003d description.split(DEADLINE_DESCRIPTION_AND_DATE_SPLITTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"vincentlauhl"},"content":"            return new AddCommand(parsedOutputs,TaskType.DEADLINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"vincentlauhl"},"content":"        default:","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"vincentlauhl"},"content":"            return new IncorrectCommand(Message.DEFAULT_ERROR_MESSAGE);","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"vincentlauhl"},"content":"    private String[] getParsedOutputForEvent(String description) throws ArrayIndexOutOfBoundsException{","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"vincentlauhl"},"content":"        String[] parsedOutputs \u003d new String[3];","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"vincentlauhl"},"content":"        parsedOutputs[0] \u003d description.split(EVENT_DESCRIPTION_AND_DATE_TIME_SPLITTER)[0];","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"vincentlauhl"},"content":"        parsedOutputs[1] \u003d description.split(EVENT_DESCRIPTION_AND_DATE_TIME_SPLITTER)[1].","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"vincentlauhl"},"content":"                split(EVENT_FROM_AND_TO_DATE_TIME_SPLITTER)[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"vincentlauhl"},"content":"        parsedOutputs[WITH_DATE] \u003d description.split(EVENT_DESCRIPTION_AND_DATE_TIME_SPLITTER)[1].","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"vincentlauhl"},"content":"                split(EVENT_FROM_AND_TO_DATE_TIME_SPLITTER)[1];","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"vincentlauhl"},"content":"        return parsedOutputs;","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"vincentlauhl"},"content":"     * Parses the input further to create a different FindCommand object for finding task with","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"vincentlauhl"},"content":"     * a specific description / date.","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"vincentlauhl"},"content":"     * @param input Parsed input from the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"vincentlauhl"},"content":"     * @return FindCommand object with a different parsed output depending on whether the","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"vincentlauhl"},"content":"     * description / date needs to be found","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"vincentlauhl"},"content":"     * @throws IndexOutOfBoundsException throws an exception when user inputs a number out","lastModifiedDate":"2021-09-27"},{"lineNumber":166,"author":{"gitId":"vincentlauhl"},"content":"     * of the range of the ArrayList","lastModifiedDate":"2021-09-27"},{"lineNumber":167,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":168,"author":{"gitId":"vincentlauhl"},"content":"    private FindCommand prepareFindCommand(String input) throws IndexOutOfBoundsException{","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"vincentlauhl"},"content":"        String[] parsedOutputs \u003d input.split(\" \");","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"vincentlauhl"},"content":"        if(parsedOutputs[0].equals(\"/d\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"vincentlauhl"},"content":"            return new FindCommand(LocalDate.parse(parsedOutputs[1]));","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"vincentlauhl"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"vincentlauhl"},"content":"            return new FindCommand(parsedOutputs[0]);","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"vincentlauhl"},"content":"     * Parses the input further to create a DoneCommand with the index of the task to be","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"vincentlauhl"},"content":"     * marked as done.","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"vincentlauhl"},"content":"     * @param input Parsed input from the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"vincentlauhl"},"content":"     * @return DoneCommand object with the index of the completed task.","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"vincentlauhl"},"content":"     * @throws DukeException throws an exception when the input from the user","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"vincentlauhl"},"content":"     * is incorrect","lastModifiedDate":"2021-09-27"},{"lineNumber":185,"author":{"gitId":"vincentlauhl"},"content":"     * @throws NumberFormatException throws an exception when the user inputs","lastModifiedDate":"2021-09-27"},{"lineNumber":186,"author":{"gitId":"vincentlauhl"},"content":"     * something that is not an integer.","lastModifiedDate":"2021-09-27"},{"lineNumber":187,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":188,"author":{"gitId":"vincentlauhl"},"content":"    private DoneCommand prepareDoneCommand(String input) throws DukeException,","lastModifiedDate":"2021-09-27"},{"lineNumber":189,"author":{"gitId":"vincentlauhl"},"content":"            NumberFormatException{","lastModifiedDate":"2021-09-27"},{"lineNumber":190,"author":{"gitId":"vincentlauhl"},"content":"        if(input.split(\" \").length \u003c EXPECTED_LENGTH_FOR_DONE_INPUT) {","lastModifiedDate":"2021-09-27"},{"lineNumber":191,"author":{"gitId":"vincentlauhl"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":193,"author":{"gitId":"vincentlauhl"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":194,"author":{"gitId":"vincentlauhl"},"content":"        return new DoneCommand(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":195,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"vincentlauhl"},"content":"     * Parses the input further to create a DoneCommand with the index of the task to be","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"vincentlauhl"},"content":"     * marked as done.","lastModifiedDate":"2021-09-27"},{"lineNumber":200,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":201,"author":{"gitId":"vincentlauhl"},"content":"     * @param input Parsed input from the user.","lastModifiedDate":"2021-09-27"},{"lineNumber":202,"author":{"gitId":"vincentlauhl"},"content":"     * @return DoneCommand object with the index of the completed task.","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"vincentlauhl"},"content":"     * @throws DukeException throws an exception when the input from the user","lastModifiedDate":"2021-09-27"},{"lineNumber":204,"author":{"gitId":"vincentlauhl"},"content":"     * is incorrect","lastModifiedDate":"2021-09-27"},{"lineNumber":205,"author":{"gitId":"vincentlauhl"},"content":"     * @throws NumberFormatException throws an exception when the user inputs","lastModifiedDate":"2021-09-27"},{"lineNumber":206,"author":{"gitId":"vincentlauhl"},"content":"     * something that is not an integer.","lastModifiedDate":"2021-09-27"},{"lineNumber":207,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":208,"author":{"gitId":"vincentlauhl"},"content":"    private DeleteCommand prepareDeleteCommand(String input) throws DukeException,","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"vincentlauhl"},"content":"            NumberFormatException {","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"vincentlauhl"},"content":"        if(input.split(\" \").length \u003c EXPECTED_LENGTH_FOR_DELETE_INPUT) {","lastModifiedDate":"2021-09-27"},{"lineNumber":211,"author":{"gitId":"vincentlauhl"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-27"},{"lineNumber":212,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"vincentlauhl"},"content":"        int index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":214,"author":{"gitId":"vincentlauhl"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2021-09-27"},{"lineNumber":215,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":216}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import duke.DukeException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import task.Deadline;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import task.Event;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"import task.ToDo;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import tasklist.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"import java.io.File;","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":" * A class that loads tasks to and saves tasks from the duke.txt file.","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"public class Storage {","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    private static final String SEPARATOR_FOR_FILE \u003d \" / \";","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    public Storage() {}","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"     * Loads the tasks from duke.txt file and creates a file if no file is found.","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"     * @param tasks The ArrayList to store the tasks in","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"     * @throws IOException Throws an exception if something unexpected happens","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"     * when reading the file","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"     * @throws DukeException Throws an exception to tell the user the file is not","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"     * found and a new file is created","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    public void loadTextFile(TaskList tasks) throws IOException, DukeException {","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"        File file \u003d new File(\"./duke.txt\");","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        if(file.createNewFile()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"            addTaskFromFile(s,tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"     * Saves the tasks to the duke.txt file before the program stops","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"     * @param tasks The ArrayList where the tasks are stored","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"     * @throws IOException Throws an exception if something unexpected happens","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"     *  when writing to the file.","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"    public void saveTasksToFile(TaskList tasks) throws IOException{","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"        FileWriter fw \u003d new FileWriter (\"./duke.txt\");","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"            fw.write(tasks.getTask(i).getStatusIconAndDescriptionForFile() + System.lineSeparator());","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"        fw.close();","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"     * Adds the tasks from the file and their completion status into the ArrayList","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"     * in different ways depending on the type of task.","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"     * @param s the Scanner which is reading the file","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"     * @param tasks The ArrayList of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"     * @throws IndexOutOfBoundsException Throws an exception if the format of tasks","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"     * saved on the files are different.","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"    private void addTaskFromFile(Scanner s, TaskList tasks) throws IndexOutOfBoundsException,","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"            DateTimeParseException {","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"        String[] parsedOutput \u003d s.nextLine().split(SEPARATOR_FOR_FILE);","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"        switch(parsedOutput[0]){","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"        case ToDo.IDENTIFIER:","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"            tasks.addTask(new ToDo(parsedOutput[2]));","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"            updateTaskStatus(parsedOutput[1],tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"        case Event.IDENTIFIER:","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"            tasks.addTask(new Event(parsedOutput[2], LocalDateTime.parse(parsedOutput[3]),","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"vincentlauhl"},"content":"                    LocalDateTime.parse(parsedOutput[4])));","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"vincentlauhl"},"content":"            updateTaskStatus(parsedOutput[1],tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"vincentlauhl"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"vincentlauhl"},"content":"        case Deadline.IDENTIFIER:","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"vincentlauhl"},"content":"            tasks.addTask(new Deadline(parsedOutput[2], LocalDateTime.parse(parsedOutput[3])));","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"vincentlauhl"},"content":"            updateTaskStatus(parsedOutput[1],tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"vincentlauhl"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"vincentlauhl"},"content":"    private void updateTaskStatus(String done, TaskList tasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"vincentlauhl"},"content":"        if (done.equals(\"1\")) {","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"vincentlauhl"},"content":"            tasks.getTask(Task.getTotalTasks()-1).markAsDone();","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":96,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":96}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":" * A Task class which contains the description of the task and date in which","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":" * the task needs to be done.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    public static final String BY \u003d \"by: \";","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    protected LocalDateTime dateAndTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    public static final String IDENTIFIER \u003d \"D\";","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"    public Deadline(String description,LocalDateTime date) {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"        this.dateAndTime \u003d date;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    public LocalDateTime getDateAndTime () {","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"        return dateAndTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    public String getStatusIconAndDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"        String icon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"        return addSquareBrackets(IDENTIFIER) + addSquareBrackets(icon) + \" \" + description + \" \"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"                + addBrackets(BY + formatDateTime(dateAndTime));","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"    private String formatDateTime(LocalDateTime DateAndTime) {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"        return DateAndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    public String getStatusIconAndDescriptionForFile() {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"        String icon \u003d (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        return  IDENTIFIER + SEPARATOR + icon + SEPARATOR + description + SEPARATOR + dateAndTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vincentlauhl":40}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":" * A Task Class that saves the description of the task and the period of","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":" * date and time in which the task needs to be done.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    public static final String AT \u003d \"at: \";","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    protected LocalDateTime fromDateAndTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    protected LocalDateTime toDateAndTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public static final String IDENTIFIER \u003d \"E\";","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"    public Event(String description, LocalDateTime fromDateAndTime, LocalDateTime toDateAndTime) {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"        this.fromDateAndTime \u003d fromDateAndTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"        this.toDateAndTime \u003d toDateAndTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"    public LocalDateTime getFromDateAndTime () {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"        return fromDateAndTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    public String getStatusIconAndDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"        String icon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"        return addSquareBrackets(IDENTIFIER) + addSquareBrackets(icon) + \" \" + description + \" \" +","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"                addBrackets(AT + formatDateTime(fromDateAndTime) + \" to \" + formatDateTime(toDateAndTime));","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"    private String formatDateTime(LocalDateTime DateAndTime) {","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"        return DateAndTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    public String getStatusIconAndDescriptionForFile() {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"        String icon \u003d (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"        return  IDENTIFIER + SEPARATOR + icon + SEPARATOR + description + SEPARATOR + fromDateAndTime +","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"                SEPARATOR + toDateAndTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vincentlauhl":43}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" * An abstract class with the common methods and attributes for different types of Tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"    protected static final String SEPARATOR \u003d \" / \";","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"    protected String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    private static int totalTasks \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"     * Gets the completion status and description of task when printing it as a list","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"     * @return the status and description of a task in a specific format","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    public abstract String getStatusIconAndDescription();","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"        return description;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"     * Gets the completion status and description of the task when saving them to a file","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"     * @return the status and description of a task in a specific format","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"    public abstract String getStatusIconAndDescriptionForFile();","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    public static int getTotalTasks() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"        return totalTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"    public static void setTotalTasks(int totalTasks) {","lastModifiedDate":"2021-08-25"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"        Task.totalTasks \u003d totalTasks;","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"    protected static String addSquareBrackets(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"        return \"[\" + s + \"]\";","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"    protected static String addBrackets(String s) {","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"        return \"(\" + s + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"vincentlauhl":50}},{"path":"src/main/java/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":" * To differentiate between the different types of tasks.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"public enum TaskType {","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"    TODO,DEADLINE,EVENT;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vincentlauhl":8}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":" * A Task class that saves the description of the task.","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"    public static final String IDENTIFIER \u003d \"T\";","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"    public String getStatusIconAndDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"        String icon \u003d (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"        return addSquareBrackets(IDENTIFIER) + addSquareBrackets(icon) + \" \" + description;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    public String getStatusIconAndDescriptionForFile() {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"        String icon \u003d (isDone ? \"1\" : \"0\");","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"        return  IDENTIFIER + SEPARATOR + icon + SEPARATOR + description;","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vincentlauhl":24}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package tasklist;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":" * A class that stores an ArrayList of tasks and the related methods for the ArrayList.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"public class TaskList {","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"    private int numberOfTasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"        this.numberOfTasks \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"     * @return Returns the number of tasks in the list produced by execution of FindCommand.","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"        return numberOfTasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    public void setNumberOfTask(int numberOfTasks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"        this.numberOfTasks \u003d numberOfTasks;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"        Task.setTotalTasks(Task.getTotalTasks() + 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"     * Adds existing tasks to a new list when FindCommand is executed.","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"     * This is to separate from the usual addTask method which increases","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"     * the total number of tasks in the main ArrayList.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"     * @param task The task that needs to be printed after executing FindCommand.","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"    public void addTaskForFindCommand(Task task) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"    public void deleteTask(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"        Task.setTotalTasks(Task.getTotalTasks() - 1);","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"    public Task getTask(int index) throws IndexOutOfBoundsException{","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":55}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"package ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"import commands.CommandResult;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"import commands.PrintOptions;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"import constants.Message;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"import task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"/**","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":" * A class with methods that interacts with the user by accepting inputs and printing results.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":" */","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"public class Ui {","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"    private final Scanner in;","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"    private static final Boolean NOTIFY_NUMBER_OF_TASK \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"    private static final Boolean PRINT_TASK \u003d true;","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"vincentlauhl"},"content":"    public Ui(){","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"vincentlauhl"},"content":"        this(System.in);","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"vincentlauhl"},"content":"    public Ui(InputStream in){","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"vincentlauhl"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"vincentlauhl"},"content":"    public String getUserCommand() {","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"vincentlauhl"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"vincentlauhl"},"content":"     * Divides the outputs so that it looks neater","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"vincentlauhl"},"content":"    public void printIndentationAndDivider() {","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"vincentlauhl"},"content":"        System.out.print(Message.INDENTATION);","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"vincentlauhl"},"content":"        System.out.println(Message.DIVIDER);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"vincentlauhl"},"content":"    public void printWordsWithIndentation(String words) {","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"vincentlauhl"},"content":"        System.out.print(Message.INDENTATION);","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"vincentlauhl"},"content":"        System.out.println(words);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"vincentlauhl"},"content":"     * Prints the logo and the welcome message in the given format.","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"vincentlauhl"},"content":"    public void printStartingMessage() {","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"vincentlauhl"},"content":"        System.out.println(\"Hello from\\n\" + Message.LOGO);","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"vincentlauhl"},"content":"        printIndentationAndDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"vincentlauhl"},"content":"        printWordsWithIndentation(Message.HELLO_MESSAGE_2);","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"vincentlauhl"},"content":"        printIndentationAndDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"vincentlauhl"},"content":"        System.out.println();","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"vincentlauhl"},"content":"     * Prints messages to the user not issued by a CommandResult in the given format.","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"vincentlauhl"},"content":"     * @param message The message that needs to be printed","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"vincentlauhl"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"vincentlauhl"},"content":"        printIndentationAndDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"vincentlauhl"},"content":"        printWordsWithIndentation(message);","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"vincentlauhl"},"content":"        printIndentationAndDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"vincentlauhl"},"content":"        System.out.println();","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"vincentlauhl"},"content":"     * Prints the result from the executed Commands in the given format.","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"vincentlauhl"},"content":"     * @param result CommandResult which contains the contents to be printed.","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"vincentlauhl"},"content":"     * @param notifyNumberOfTasks Determines whether the number of tasks in","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"vincentlauhl"},"content":"     *                           the list needs to be printed.","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"vincentlauhl"},"content":"     * @param printTask Determines whether the selected task needs to be printed.","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"vincentlauhl"},"content":"    private void printCommandResultMessage(CommandResult result, Boolean notifyNumberOfTasks, Boolean printTask) {","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"vincentlauhl"},"content":"        printIndentationAndDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"vincentlauhl"},"content":"        printWordsWithIndentation(result.message);","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"vincentlauhl"},"content":"        if(printTask) {","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"vincentlauhl"},"content":"            printWordsWithIndentation(result.task.getStatusIconAndDescription());","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"vincentlauhl"},"content":"        if(notifyNumberOfTasks){","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"vincentlauhl"},"content":"            printWordsWithIndentation(notifyNumberOfTasks());","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"vincentlauhl"},"content":"        printIndentationAndDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"vincentlauhl"},"content":"        System.out.println();","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"vincentlauhl"},"content":"     * Selects the type of function needed to show the result of different executed Commands","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"vincentlauhl"},"content":"     * This reduces the number of methods needed in the Ui class.","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"vincentlauhl"},"content":"     * @param result CommandResult which contains the contents to be printed.","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"vincentlauhl"},"content":"    public void showResult(CommandResult result) {","lastModifiedDate":"2021-09-25"},{"lineNumber":97,"author":{"gitId":"vincentlauhl"},"content":"        switch(result.type){","lastModifiedDate":"2021-09-25"},{"lineNumber":98,"author":{"gitId":"vincentlauhl"},"content":"        case WITH_TASK_AND_NUMBER_OF_TASK:","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"vincentlauhl"},"content":"            printCommandResultMessage(result,NOTIFY_NUMBER_OF_TASK,PRINT_TASK);","lastModifiedDate":"2021-09-25"},{"lineNumber":100,"author":{"gitId":"vincentlauhl"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":101,"author":{"gitId":"vincentlauhl"},"content":"        case ONLY_TASK:","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"vincentlauhl"},"content":"            printCommandResultMessage(result,!NOTIFY_NUMBER_OF_TASK,PRINT_TASK);","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"vincentlauhl"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"vincentlauhl"},"content":"        case LIST_WITH_SPECIFIC_CONDITIONS:","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"vincentlauhl"},"content":"        case LIST:","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"vincentlauhl"},"content":"            printList(result);","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"vincentlauhl"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"vincentlauhl"},"content":"        case DEFAULT:","lastModifiedDate":"2021-09-25"},{"lineNumber":109,"author":{"gitId":"vincentlauhl"},"content":"            printCommandResultMessage(result,!NOTIFY_NUMBER_OF_TASK,!PRINT_TASK);","lastModifiedDate":"2021-09-25"},{"lineNumber":110,"author":{"gitId":"vincentlauhl"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":111,"author":{"gitId":"vincentlauhl"},"content":"        default:","lastModifiedDate":"2021-09-25"},{"lineNumber":112,"author":{"gitId":"vincentlauhl"},"content":"            printMessage(result.message);","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":114,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"vincentlauhl"},"content":"     * Prints the task\u0027s description with its completion status","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"vincentlauhl"},"content":"     * @param result A CommandResult object which passes the list that needs to be printed","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":123,"author":{"gitId":"vincentlauhl"},"content":"    private void printTask(CommandResult result) {","lastModifiedDate":"2021-09-25"},{"lineNumber":124,"author":{"gitId":"vincentlauhl"},"content":"        int totalTasks;","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"vincentlauhl"},"content":"        if(result.type \u003d\u003d PrintOptions.LIST_WITH_SPECIFIC_CONDITIONS) {","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"vincentlauhl"},"content":"            totalTasks \u003d result.tasks.getNumberOfTasks();","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"vincentlauhl"},"content":"        } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"vincentlauhl"},"content":"           totalTasks \u003d Task.getTotalTasks();","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"vincentlauhl"},"content":"        for(int i \u003d 0; i \u003c totalTasks; i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"vincentlauhl"},"content":"            printWordsWithIndentation(i + 1 + \".\" + result.tasks.getTask(i).getStatusIconAndDescription());","lastModifiedDate":"2021-09-25"},{"lineNumber":132,"author":{"gitId":"vincentlauhl"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":133,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"vincentlauhl"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":136,"author":{"gitId":"vincentlauhl"},"content":"     * Prints the list of tasks with the given format.","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"vincentlauhl"},"content":"     *","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"vincentlauhl"},"content":"     * @param result The CommandResult determines the message shown to the user","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"vincentlauhl"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"vincentlauhl"},"content":"    private void printList(CommandResult result) {","lastModifiedDate":"2021-09-25"},{"lineNumber":141,"author":{"gitId":"vincentlauhl"},"content":"        printIndentationAndDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":142,"author":{"gitId":"vincentlauhl"},"content":"        printWordsWithIndentation(result.message);","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"vincentlauhl"},"content":"        printTask(result);","lastModifiedDate":"2021-09-25"},{"lineNumber":144,"author":{"gitId":"vincentlauhl"},"content":"        printIndentationAndDivider();","lastModifiedDate":"2021-09-25"},{"lineNumber":145,"author":{"gitId":"vincentlauhl"},"content":"        System.out.println();","lastModifiedDate":"2021-09-25"},{"lineNumber":146,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":147,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"vincentlauhl"},"content":"    private String notifyNumberOfTasks() {","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"vincentlauhl"},"content":"        int taskNumber \u003d Task.getTotalTasks();","lastModifiedDate":"2021-09-25"},{"lineNumber":150,"author":{"gitId":"vincentlauhl"},"content":"        return \"Now you have \" + taskNumber + \" task(s) in the list\";","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"vincentlauhl"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"vincentlauhl"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"vincentlauhl":152}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vincentlauhl"},"content":"todo borrow book","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"vincentlauhl"},"content":"DeadLine return book /by Sunday","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"vincentlauhl"},"content":"Event project meeting /at 4th Sep 2-3pm","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"vincentlauhl"},"content":"DEADLINE /by Monday","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"vincentlauhl"},"content":"done","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"vincentlauhl"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"vincentlauhl"},"content":"done 1","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"vincentlauhl"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"vincentlauhl"},"content":"done -","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"done 0","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"done 5","lastModifiedDate":"2021-09-08"},{"lineNumber":12,"author":{"gitId":"vincentlauhl"},"content":"delete 1","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"vincentlauhl"},"content":"delete","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"vincentlauhl"},"content":"delete 0","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"vincentlauhl"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"vincentlauhl"},"content":"delete 1","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"vincentlauhl"},"content":"delete 1","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"vincentlauhl"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"vincentlauhl":19}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"vincentlauhl"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java  ..\\src\\main\\java\\task\\*.java ..\\src\\main\\java\\tasklist\\*.java  ..\\src\\main\\java\\ui\\*.java  ..\\src\\main\\java\\commands\\*.java ..\\src\\main\\java\\constants\\*.java  ..\\src\\main\\java\\parser\\*.java  ..\\src\\main\\java\\storage\\*.java","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"vincentlauhl"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"vincentlauhl"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"vincentlauhl":3,"-":19}}]
