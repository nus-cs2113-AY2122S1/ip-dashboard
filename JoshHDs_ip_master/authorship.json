[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"JoshHDs":2}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"T|0|run","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"T|0|play","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"JoshHDs":2}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"public class Deadlines  extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"    //variables","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"    protected  String by;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"    //constructors","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"    public Deadlines(String description, String by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    //methods","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        return(\"[D]\" + super.toString() + \" (by: \" + by + \")\");","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"JoshHDs":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"//for reading file","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"//for writing to file","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    public static void showWelcomeMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\");","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    public static void printList(ArrayList\u003cTask\u003e list, int size) {","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        int position \u003d 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"        for( int i \u003d 0 ; i \u003c size ; i ++ ) {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"            System.out.println( \"    \" + position  + \".\" + list.get(i));","lastModifiedDate":"2021-09-10"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"            position ++;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"    public static void markTaskDone(ArrayList\u003cTask\u003e list , String word) {","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"        //convert string number to int number","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"        int position \u003d Integer.parseInt(word);","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"        //if task does not exist, return","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"        if (position \u003e list.size()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"            System.out.println(\"    Sorry! No such task!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"        //if task exist, mark task as done","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"        Task task \u003d list.get(position - 1);","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"        task.setDone();","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"        //print notification","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"    public static void addTask(ArrayList\u003cTask\u003e list, Task newTask, int size) {","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"        //add task to list","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"        list.add(newTask);","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"        //print statements","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"      \" + list.get(size));","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Now you have \" + (size + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e list, String word, int size ) {","lastModifiedDate":"2021-09-10"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"        //convert string number to int number","lastModifiedDate":"2021-09-10"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"        int position \u003d Integer.parseInt(word);","lastModifiedDate":"2021-09-10"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"        //if task does not exist, return","lastModifiedDate":"2021-09-10"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"        if (position \u003e list.size()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":58,"author":{"gitId":"JoshHDs"},"content":"            System.out.println(\"    Sorry! No such task!\");","lastModifiedDate":"2021-09-10"},{"lineNumber":59,"author":{"gitId":"JoshHDs"},"content":"            return;","lastModifiedDate":"2021-09-10"},{"lineNumber":60,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"        Task task \u003d list.get(position - 1);","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"JoshHDs"},"content":"        list.remove(position - 1);","lastModifiedDate":"2021-09-10"},{"lineNumber":63,"author":{"gitId":"JoshHDs"},"content":"        //print statements","lastModifiedDate":"2021-09-10"},{"lineNumber":64,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-10"},{"lineNumber":65,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Now you have \" + (size - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":67,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":68,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":69,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"JoshHDs"},"content":"    public static Deadlines createNewDeadline(String command) {","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"JoshHDs"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"JoshHDs"},"content":"        String by \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"JoshHDs"},"content":"        String deadlineDescription \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"JoshHDs"},"content":"        boolean foundBy \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"JoshHDs"},"content":"        for(int i \u003d 0 ; i \u003c words.length ; i ++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"JoshHDs"},"content":"            if(foundBy) {","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"JoshHDs"},"content":"                by \u003d by + \" \" + words[i];","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"JoshHDs"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"JoshHDs"},"content":"                if(words[i].equals(\"/by\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"JoshHDs"},"content":"                    foundBy \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"JoshHDs"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"JoshHDs"},"content":"                    deadlineDescription \u003d deadlineDescription + \" \" + words[i];","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"JoshHDs"},"content":"        Deadlines newDeadline \u003d new Deadlines(deadlineDescription.substring(1), by.substring(1));","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"JoshHDs"},"content":"        return newDeadline;","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":92,"author":{"gitId":"JoshHDs"},"content":"    public static Events createNewEvent(String command) {","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"JoshHDs"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"JoshHDs"},"content":"        String timeAllocation \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"JoshHDs"},"content":"        String eventDescription \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":97,"author":{"gitId":"JoshHDs"},"content":"        boolean foundAt \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"JoshHDs"},"content":"        for(int i \u003d 0 ; i \u003c words.length ; i ++) {","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"JoshHDs"},"content":"            if(foundAt) {","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"JoshHDs"},"content":"                timeAllocation \u003d timeAllocation + \" \" + words[i];","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"JoshHDs"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"JoshHDs"},"content":"                if(words[i].equals(\"/at\")) {","lastModifiedDate":"2021-08-28"},{"lineNumber":103,"author":{"gitId":"JoshHDs"},"content":"                    foundAt \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"JoshHDs"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"JoshHDs"},"content":"                    eventDescription \u003d  eventDescription + \" \" + words[i];","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-08-28"},{"lineNumber":107,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":108,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":109,"author":{"gitId":"JoshHDs"},"content":"        Events newEvent \u003d new Events(eventDescription.substring(1), timeAllocation.substring(1));","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"JoshHDs"},"content":"        return newEvent;","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":114,"author":{"gitId":"JoshHDs"},"content":"    public static int distinguishCommand(String command , ArrayList\u003cTask\u003e list, int size) {","lastModifiedDate":"2021-09-10"},{"lineNumber":115,"author":{"gitId":"JoshHDs"},"content":"        //split into word array","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"JoshHDs"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"JoshHDs"},"content":"        String firstWord \u003d words[0];","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"JoshHDs"},"content":"        int taskCount \u003d size;","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"JoshHDs"},"content":"        //determine command","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"JoshHDs"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-08-28"},{"lineNumber":122,"author":{"gitId":"JoshHDs"},"content":"        case \"list\":","lastModifiedDate":"2021-08-28"},{"lineNumber":123,"author":{"gitId":"JoshHDs"},"content":"            printList(list, size);","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"JoshHDs"},"content":"        case \"done\":","lastModifiedDate":"2021-08-28"},{"lineNumber":126,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"JoshHDs"},"content":"                markTaskDone(list, words[1]);","lastModifiedDate":"2021-08-28"},{"lineNumber":128,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a done cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":132,"author":{"gitId":"JoshHDs"},"content":"        case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":133,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-02"},{"lineNumber":134,"author":{"gitId":"JoshHDs"},"content":"                ToDos newToDo \u003d new ToDos(command.substring(5));","lastModifiedDate":"2021-08-28"},{"lineNumber":135,"author":{"gitId":"JoshHDs"},"content":"                addTask(list, newToDo, taskCount);","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"JoshHDs"},"content":"                taskCount ++;","lastModifiedDate":"2021-08-28"},{"lineNumber":137,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-02"},{"lineNumber":138,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-02"},{"lineNumber":139,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-02"},{"lineNumber":140,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"JoshHDs"},"content":"        case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"JoshHDs"},"content":"                Deadlines newDeadline \u003d createNewDeadline(command.substring(9));","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"JoshHDs"},"content":"                addTask(list, newDeadline, size);","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"JoshHDs"},"content":"                taskCount ++;","lastModifiedDate":"2021-08-28"},{"lineNumber":146,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":149,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":150,"author":{"gitId":"JoshHDs"},"content":"        case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"JoshHDs"},"content":"            //extract out event description and timeAllocation","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":153,"author":{"gitId":"JoshHDs"},"content":"                Events newEvent \u003d createNewEvent(command.substring(6));","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"JoshHDs"},"content":"                addTask(list, newEvent, size);","lastModifiedDate":"2021-08-28"},{"lineNumber":155,"author":{"gitId":"JoshHDs"},"content":"                taskCount ++;","lastModifiedDate":"2021-08-28"},{"lineNumber":156,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":158,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":159,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":160,"author":{"gitId":"JoshHDs"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-10"},{"lineNumber":161,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-10"},{"lineNumber":162,"author":{"gitId":"JoshHDs"},"content":"                deleteTask(list, words[1], size);","lastModifiedDate":"2021-09-10"},{"lineNumber":163,"author":{"gitId":"JoshHDs"},"content":"                taskCount --;","lastModifiedDate":"2021-09-10"},{"lineNumber":164,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":165,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-10"},{"lineNumber":166,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-10"},{"lineNumber":167,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-10"},{"lineNumber":168,"author":{"gitId":"JoshHDs"},"content":"        default:","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-02"},{"lineNumber":170,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":171,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-08-28"},{"lineNumber":172,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":174,"author":{"gitId":"JoshHDs"},"content":"        try{","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"JoshHDs"},"content":"            writeToFile(\"data/data.txt\",list, taskCount);","lastModifiedDate":"2021-09-15"},{"lineNumber":176,"author":{"gitId":"JoshHDs"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"JoshHDs"},"content":"            System.out.println(\"    OOPS!!! There was an error updating the data filelist\");","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"JoshHDs"},"content":"        return taskCount;","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"JoshHDs"},"content":"    public static int distinguishText(String command , ArrayList\u003cTask\u003e list, int size) {","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"JoshHDs"},"content":"        //split into word array","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"JoshHDs"},"content":"        String[] sections \u003d command.split(\"[|]\");","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"JoshHDs"},"content":"        String firstSection \u003d sections[0];","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"JoshHDs"},"content":"        String[] description \u003d sections[2].split(\" \");","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"JoshHDs"},"content":"        int taskCount \u003d size;","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(description[0]);","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"JoshHDs"},"content":"        //create objects","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"JoshHDs"},"content":"        switch (firstSection) {","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"JoshHDs"},"content":"        case \"T\":","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":194,"author":{"gitId":"JoshHDs"},"content":"                ToDos newToDo \u003d new ToDos(sections[2]);","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"JoshHDs"},"content":"                if(sections[1].equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"JoshHDs"},"content":"                    newToDo.setDone();","lastModifiedDate":"2021-09-15"},{"lineNumber":197,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"JoshHDs"},"content":"                Duke.addTask(list, newToDo, taskCount);","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"JoshHDs"},"content":"                taskCount ++;","lastModifiedDate":"2021-09-15"},{"lineNumber":200,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":202,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":203,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"JoshHDs"},"content":"        case \"D\":","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":206,"author":{"gitId":"JoshHDs"},"content":"                Deadlines newDeadline \u003d createNewDeadline(command.substring(4));","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"JoshHDs"},"content":"                if(sections[1].equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":208,"author":{"gitId":"JoshHDs"},"content":"                    newDeadline.setDone();","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":210,"author":{"gitId":"JoshHDs"},"content":"                Duke.addTask(list, newDeadline, size);","lastModifiedDate":"2021-09-15"},{"lineNumber":211,"author":{"gitId":"JoshHDs"},"content":"                taskCount ++;","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":213,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":214,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":215,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"JoshHDs"},"content":"        case \"E\":","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"JoshHDs"},"content":"                Events newEvent \u003d createNewEvent(command.substring(4));","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"JoshHDs"},"content":"                if(sections[1].equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"JoshHDs"},"content":"                    newEvent.setDone();","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"JoshHDs"},"content":"                Duke.addTask(list, newEvent, size);","lastModifiedDate":"2021-09-15"},{"lineNumber":223,"author":{"gitId":"JoshHDs"},"content":"                taskCount ++;","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":225,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":228,"author":{"gitId":"JoshHDs"},"content":"        default:","lastModifiedDate":"2021-09-15"},{"lineNumber":229,"author":{"gitId":"JoshHDs"},"content":"            System.out.println(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":231,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"JoshHDs"},"content":"        return taskCount;","lastModifiedDate":"2021-09-15"},{"lineNumber":233,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":234,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"JoshHDs"},"content":"    public static int loadFileContents(String filePath, ArrayList\u003cTask\u003e list) throws FileNotFoundException {","lastModifiedDate":"2021-09-15"},{"lineNumber":236,"author":{"gitId":"JoshHDs"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":237,"author":{"gitId":"JoshHDs"},"content":"        // create a File for the given file path","lastModifiedDate":"2021-09-15"},{"lineNumber":238,"author":{"gitId":"JoshHDs"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"JoshHDs"},"content":"        // create a Scanner using the File as the source","lastModifiedDate":"2021-09-15"},{"lineNumber":240,"author":{"gitId":"JoshHDs"},"content":"        Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-15"},{"lineNumber":241,"author":{"gitId":"JoshHDs"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":242,"author":{"gitId":"JoshHDs"},"content":"            taskCount \u003d distinguishText(s.nextLine(), list, taskCount);","lastModifiedDate":"2021-09-15"},{"lineNumber":243,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":244,"author":{"gitId":"JoshHDs"},"content":"        return taskCount;","lastModifiedDate":"2021-08-28"},{"lineNumber":245,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":246,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":247,"author":{"gitId":"JoshHDs"},"content":"    private static int getDoneNumber( boolean bool) {","lastModifiedDate":"2021-09-15"},{"lineNumber":248,"author":{"gitId":"JoshHDs"},"content":"        if(bool \u003d\u003d true) {","lastModifiedDate":"2021-09-15"},{"lineNumber":249,"author":{"gitId":"JoshHDs"},"content":"            return 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":250,"author":{"gitId":"JoshHDs"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":251,"author":{"gitId":"JoshHDs"},"content":"            return 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":252,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":253,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":254,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":255,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":256,"author":{"gitId":"JoshHDs"},"content":"    private static void writeToFile(String filePath, ArrayList\u003cTask\u003e tasks, int size) throws IOException {","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"JoshHDs"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-15"},{"lineNumber":258,"author":{"gitId":"JoshHDs"},"content":"        for( int i \u003d 0 ; i \u003c size; i ++ ) {","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"JoshHDs"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-09-15"},{"lineNumber":260,"author":{"gitId":"JoshHDs"},"content":"            String className \u003d task.getClass().getName();","lastModifiedDate":"2021-09-15"},{"lineNumber":261,"author":{"gitId":"JoshHDs"},"content":"            String textDescription \u003d \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"JoshHDs"},"content":"            if(className.equals(\"duke.ToDos\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":263,"author":{"gitId":"JoshHDs"},"content":"                ToDos todo \u003d (ToDos) task;","lastModifiedDate":"2021-09-15"},{"lineNumber":264,"author":{"gitId":"JoshHDs"},"content":"                textDescription \u003d \"T\" + \"|\" + getDoneNumber(todo.getDone()) + \"|\" + todo.getDescription();","lastModifiedDate":"2021-09-15"},{"lineNumber":265,"author":{"gitId":"JoshHDs"},"content":"            } else if ( className.equals(\"duke.Deadlines\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":266,"author":{"gitId":"JoshHDs"},"content":"                Deadlines deadline \u003d (Deadlines) task;","lastModifiedDate":"2021-09-15"},{"lineNumber":267,"author":{"gitId":"JoshHDs"},"content":"                textDescription \u003d \"D\" + \"|\" + getDoneNumber(deadline.getDone()) + \"|\" + task.getDescription()+ \" /by \" + deadline.by;","lastModifiedDate":"2021-09-15"},{"lineNumber":268,"author":{"gitId":"JoshHDs"},"content":"            } else if (className.equals(\"duke.Events\") ) {","lastModifiedDate":"2021-09-15"},{"lineNumber":269,"author":{"gitId":"JoshHDs"},"content":"                Events event \u003d (Events) task;","lastModifiedDate":"2021-09-15"},{"lineNumber":270,"author":{"gitId":"JoshHDs"},"content":"                textDescription \u003d \"E\" + \"|\" + getDoneNumber(event.getDone()) + \"|\" + task.getDescription() + \" /at \" + event.timeAllocation;","lastModifiedDate":"2021-09-15"},{"lineNumber":271,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":272,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":273,"author":{"gitId":"JoshHDs"},"content":"            fw.write(textDescription +  System.lineSeparator());","lastModifiedDate":"2021-09-15"},{"lineNumber":274,"author":{"gitId":"JoshHDs"},"content":"            //do not create a string variable by itself with System.lineSeparator()","lastModifiedDate":"2021-09-15"},{"lineNumber":275,"author":{"gitId":"JoshHDs"},"content":"            System.lineSeparator();","lastModifiedDate":"2021-09-15"},{"lineNumber":276,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":277,"author":{"gitId":"JoshHDs"},"content":"        fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":278,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":279,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":280,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":281,"author":{"gitId":"JoshHDs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":282,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":283,"author":{"gitId":"JoshHDs"},"content":"        String line;","lastModifiedDate":"2021-08-22"},{"lineNumber":284,"author":{"gitId":"JoshHDs"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":285,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":286,"author":{"gitId":"JoshHDs"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":287,"author":{"gitId":"JoshHDs"},"content":"        int taskCount \u003d 0;","lastModifiedDate":"2021-08-28"},{"lineNumber":288,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":289,"author":{"gitId":"JoshHDs"},"content":"        //create directory if it does not exist","lastModifiedDate":"2021-09-15"},{"lineNumber":290,"author":{"gitId":"JoshHDs"},"content":"        File directory \u003d new File(\"data\");","lastModifiedDate":"2021-09-15"},{"lineNumber":291,"author":{"gitId":"JoshHDs"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":292,"author":{"gitId":"JoshHDs"},"content":"            directory.mkdirs();","lastModifiedDate":"2021-09-15"},{"lineNumber":293,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":294,"author":{"gitId":"JoshHDs"},"content":"        //create txt file if it does not exist","lastModifiedDate":"2021-09-15"},{"lineNumber":295,"author":{"gitId":"JoshHDs"},"content":"        File file \u003d new File(\"data/data.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":296,"author":{"gitId":"JoshHDs"},"content":"        if(!file.exists()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":297,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":298,"author":{"gitId":"JoshHDs"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":299,"author":{"gitId":"JoshHDs"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":300,"author":{"gitId":"JoshHDs"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":301,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":302,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":303,"author":{"gitId":"JoshHDs"},"content":"        //if both directory and file exist read in the data","lastModifiedDate":"2021-09-15"},{"lineNumber":304,"author":{"gitId":"JoshHDs"},"content":"        if(directory.exists() \u0026\u0026 file.exists() ) {","lastModifiedDate":"2021-09-15"},{"lineNumber":305,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-15"},{"lineNumber":306,"author":{"gitId":"JoshHDs"},"content":"                taskCount \u003d loadFileContents(\"data/data.txt\", list);","lastModifiedDate":"2021-09-15"},{"lineNumber":307,"author":{"gitId":"JoshHDs"},"content":"            } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":308,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"File not found\");","lastModifiedDate":"2021-09-15"},{"lineNumber":309,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":310,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":311,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":312,"author":{"gitId":"JoshHDs"},"content":"        showWelcomeMessage();","lastModifiedDate":"2021-09-15"},{"lineNumber":313,"author":{"gitId":"JoshHDs"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":314,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":315,"author":{"gitId":"JoshHDs"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2021-08-22"},{"lineNumber":316,"author":{"gitId":"JoshHDs"},"content":"            taskCount \u003d distinguishCommand(line, list, taskCount);","lastModifiedDate":"2021-08-28"},{"lineNumber":317,"author":{"gitId":"JoshHDs"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":318,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":319,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":320,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-22"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"JoshHDs":319}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"    public DukeException(){","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"        System.out.println( \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"JoshHDs":8}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"    //variables","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"    protected  String timeAllocation;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"    //constructors","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"    public Events(String description, String timeAllocation) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"        this.timeAllocation \u003d timeAllocation;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    //methods","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        return(\"[E]\" + super.toString() + \" (at: \" + timeAllocation + \")\");","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"JoshHDs":21}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"    //variables","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"    //constructor","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    //getters","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        return isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    //setters","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"    //other methods","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"        if(getDone()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"            return (\"[X] \" + description);","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"            return (\"[ ] \" + description);","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"JoshHDs":40}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import duke.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"    //variables","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    //methods","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"        return(\"[T]\" + super.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"JoshHDs":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"todo borrow book","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"done 2","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"list","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"JoshHDs":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"JoshHDs":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"#previously if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"JoshHDs":3}}]
