[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"JoshHDs":2}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"T|1|play","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"T|0|jump","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"JoshHDs":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"### Adding Tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"Allows you to add different types of tasks to your list","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"### Marking Tasks as complete","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"Allows you to mark tasks as complete.","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"### Searching for Tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"Allows you to search for specific tasks within your list","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"### `list`","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"Displays all the tasks stored in your list.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"Example of usage: ","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"`list`","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"Expected outcome:","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"    1.[E][ ] run (at: 04:30 Jan 15 2030)","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"    2.[D][ ] submit homework (by: 08:00 Jan 13 2020)","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"expected output","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"------------------------------------------------------","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"### `todo`","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"Adds a todo task to the list","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"`todo return book`","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"Expected outcome:","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"      [T][ ] return book","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"    Now you have 7 tasks in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"expected output","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"JoshHDs"},"content":"------------------------------------------------------","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"JoshHDs"},"content":"### `event`","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"Adds a event task to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"JoshHDs"},"content":"`event run /at 07-02-1999 12:00`","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"JoshHDs"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"JoshHDs"},"content":"      [E][ ] run (at: 12:00 Feb 07 1999)","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"JoshHDs"},"content":"    Now you have 8 tasks in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"JoshHDs"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"JoshHDs"},"content":"expected output","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"JoshHDs"},"content":"------------------------------------------------------","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"JoshHDs"},"content":"### `deadline`","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"JoshHDs"},"content":"Adds a deadline task to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"JoshHDs"},"content":"Example of usage: ","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"JoshHDs"},"content":"`deadline submit homework /by 07-02-1999 12:00`","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"JoshHDs"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"JoshHDs"},"content":"      [D][ ] submit homework (by: 12:00 Feb 07 1999)","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"JoshHDs"},"content":"    Now you have 9 tasks in the list.0)","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"JoshHDs"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"JoshHDs"},"content":"expected output","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"JoshHDs"},"content":"------------------------------------------------------","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"JoshHDs"},"content":"### `done`","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"JoshHDs"},"content":"Marks a task in the list as completed.","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"JoshHDs"},"content":"Example of usage: ","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"JoshHDs"},"content":"`done 1`","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"JoshHDs"},"content":"Expected outcome:","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"JoshHDs"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"JoshHDs"},"content":"    [T][X] jump","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"JoshHDs"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"JoshHDs"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"JoshHDs"},"content":"expected output","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"JoshHDs"},"content":"------------------------------------------------------","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"JoshHDs"},"content":"### `delete`","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"JoshHDs"},"content":"Deletes a task from your list","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"JoshHDs"},"content":"Example of usage: ","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"JoshHDs"},"content":"`delete 1`","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"JoshHDs"},"content":"Expected outcome:","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"JoshHDs"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"JoshHDs"},"content":"      [T][X] jump","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"JoshHDs"},"content":"    Now you have 7 tasks in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"JoshHDs"},"content":"Description of the outcome.","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"JoshHDs"},"content":"expected output","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"JoshHDs"},"content":"```","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"JoshHDs"},"content":"------------------------------------------------------","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"JoshHDs"},"content":"### `find` ","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"JoshHDs"},"content":"Displays tasks from your list that matches your search","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"JoshHDs"},"content":"Example of usage: ","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"JoshHDs"},"content":"`find run`","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"JoshHDs"},"content":"Expected outcome:","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"JoshHDs"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"JoshHDs"},"content":"    1.[E][ ] run (at: 04:30 Jan 15 2030)","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"JoshHDs"},"content":"    2.[T][ ] run","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"JoshHDs"},"content":"    3.[E][ ] run (at: 12:00 Feb 07 1999)","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":28,"JoshHDs":129}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":" * Represents an activity with a deadline","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":" * A Deadlines object stores 3 characteristics: a description, a deadline date, and whether it is completed","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"public class Deadlines  extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    //variables","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    //constructors","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    public Deadlines(String description, LocalDateTime by) {","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    //methods","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"     * @return String representation of the Deadline in the format [D][ ] description (by:  )","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"        return(\"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\")) + \")\");","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"JoshHDs":32}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-15"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"     * Constructor class for Duke","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"     * Initialises a UI, Storage and TaskList class for Duke","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    public Duke() {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"     * Takes in user input repeatedly","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"     * If user inputs \"bye\", the program is terminated","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"    public void run() {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        ui.showWelcomeMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"        String line;","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"        while (!line.equals(\"bye\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"            Parser.distinguishCommand(line);","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"            try{","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"                storage.writeToFile(\"data/data.txt\",tasks.list);","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! There was an error updating the file storage\");","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"        ui.showExitMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":2,"JoshHDs":56}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-02"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"    public DukeException(){","lastModifiedDate":"2021-09-02"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"        System.out.println( \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-02"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"JoshHDs":8}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":" * Represents an activity occurring at a certain time","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":" * A Event object stores 3 characteristics: a description, the time of the event, and whether it is completed","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    //variables","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    protected LocalDateTime timeAllocation;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    //constructors","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    public Events(String description, LocalDateTime timeAllocation) {","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        this.timeAllocation \u003d timeAllocation;","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    //methods","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"     * @return String representation of the Event in the format [E][ ] description (at:  )","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        return(\"[E]\" + super.toString() + \" (at: \" + timeAllocation.format(DateTimeFormatter.ofPattern(\"HH:mm MMM dd yyyy\")) + \")\");","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"JoshHDs":32}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":" * This class deals with making sense of the user command and calling the necessary methods to execute the user command","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"public class Parser {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"     * This method determines what command the User inputs and calls the necessary methods and creates the necessary Task objects","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"     * to be stored in the Task ArrayList","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"     * @param command The input from the User","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    public static void distinguishCommand(String command) {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"        //split into word array","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        String firstWord \u003d words[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"        //determine command","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"        case \"list\":","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"            TaskList.printList();","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"        case \"done\":","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"                TaskList.markTaskDone(words[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a done cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"                ToDos newToDo \u003d new ToDos(command.substring(5));","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"                TaskList.addTask(newToDo);","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"                Deadlines newDeadline \u003d TaskList.createNewDeadline(command.substring(9));","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"                TaskList.addTask(newDeadline);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"        case \"event\":","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"            //extract out event description and timeAllocation","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"                Events newEvent \u003d TaskList.createNewEvent(command.substring(6));","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"                TaskList.addTask(newEvent);","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"                TaskList.deleteTask(words[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"JoshHDs"},"content":"        case \"find\":","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"JoshHDs"},"content":"                TaskList.findTask(command.substring(5));","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"JoshHDs"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"JoshHDs"},"content":"            System.out.println(\"    OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"JoshHDs":82}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"//for reading file","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import java.io.File;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"//for writing to file","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":" * This class deals with loading tasks from a saved file and saving current tasks into the file","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"public class Storage {","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    File directory;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    File file;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"     * The Constructor method for Storage class","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"     * It check if there is a file to read data from.","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"     * If there is no such file, it creates a file in that location","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    public Storage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        //create directory if directory does not exist","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        directory \u003d new File(\"data\");","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"        if (!directory.exists()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"            directory.mkdirs();","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"        //create txt file if file does not exist","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"        file \u003d new File(\"data/data.txt\");","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"        if(!file.exists()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"    //methods","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"     * This method reads the txt file and loads that data into an ArrayList","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"     * @return tasks It is an ArrayList consisting of all the tasks in the txt file and their details","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"        // create a Scanner using the File object as the source","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"        Scanner s \u003d null;","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"            s \u003d new Scanner(file);","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"JoshHDs"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"JoshHDs"},"content":"            distinguishText(s.nextLine(), tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"        return tasks;","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"JoshHDs"},"content":"     * This method converts a boolean to an integer","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"JoshHDs"},"content":"     * @param bool Takes in a boolean (true/false)","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"JoshHDs"},"content":"     * @return An integer representation of that boolean (1/0)","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"JoshHDs"},"content":"    public int getDoneNumber( boolean bool) {","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"JoshHDs"},"content":"        if(bool \u003d\u003d true) {","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"JoshHDs"},"content":"            return 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"JoshHDs"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"JoshHDs"},"content":"            return 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"JoshHDs"},"content":"     * This method writes details of all objects stored in list of Tasks to the txt file","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"JoshHDs"},"content":"     * @param filePath The location of where the txt file is located","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"JoshHDs"},"content":"     * @param tasks The list storing the different Tasks the user input","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"JoshHDs"},"content":"     * @throws IOException If there was a problem writing to the txt file","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"JoshHDs"},"content":"    public void writeToFile(String filePath, ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"JoshHDs"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"JoshHDs"},"content":"        for( int i \u003d 0 ; i \u003c tasks.size(); i ++ ) {","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"JoshHDs"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"JoshHDs"},"content":"            String className \u003d task.getClass().getName();","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"JoshHDs"},"content":"            String textDescription \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"JoshHDs"},"content":"            if(className.equals(\"duke.ToDos\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"JoshHDs"},"content":"                ToDos todo \u003d (ToDos) task;","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"JoshHDs"},"content":"                textDescription \u003d \"T\" + \"|\" + getDoneNumber(todo.getDone()) + \"|\" + todo.getDescription();","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"JoshHDs"},"content":"            } else if ( className.equals(\"duke.Deadlines\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"JoshHDs"},"content":"                Deadlines deadline \u003d (Deadlines) task;","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"JoshHDs"},"content":"                textDescription \u003d \"D\" + \"|\" + getDoneNumber(deadline.getDone()) + \"|\" + task.getDescription()+ \" /by \" + deadline.by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"JoshHDs"},"content":"            } else if (className.equals(\"duke.Events\") ) {","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"JoshHDs"},"content":"                Events event \u003d (Events) task;","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"JoshHDs"},"content":"                textDescription \u003d \"E\" + \"|\" + getDoneNumber(event.getDone()) + \"|\" + task.getDescription() + \" /at \" + event.timeAllocation.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"JoshHDs"},"content":"            fw.write(textDescription +  System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"JoshHDs"},"content":"            System.lineSeparator();","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"JoshHDs"},"content":"        fw.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"JoshHDs"},"content":"     * This method parses a line stored in the txt file and creates the corresponding Todos, Event or Deadline object","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"JoshHDs"},"content":"     * to be stored in the program\u0027s Task ArrayList.","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"JoshHDs"},"content":"     * @param command A single line from the txt file","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"JoshHDs"},"content":"     * @param list The list containing the different tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"JoshHDs"},"content":"    public void distinguishText(String command , ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"JoshHDs"},"content":"        //split into word array","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"JoshHDs"},"content":"        String[] sections \u003d command.split(\"[|]\");","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"JoshHDs"},"content":"        String firstSection \u003d sections[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"JoshHDs"},"content":"        String[] description \u003d sections[2].split(\" \");","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"JoshHDs"},"content":"        //create objects","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"JoshHDs"},"content":"        switch (firstSection) {","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"JoshHDs"},"content":"        case \"T\":","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"JoshHDs"},"content":"                ToDos newToDo \u003d new ToDos(sections[2]);","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"JoshHDs"},"content":"                if(sections[1].equals(\"1\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"JoshHDs"},"content":"                    newToDo.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"JoshHDs"},"content":"                //Duke.addTask(list, newToDo);","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"JoshHDs"},"content":"                list.add(newToDo);","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"JoshHDs"},"content":"        case \"D\":","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"JoshHDs"},"content":"                Deadlines newDeadline \u003d TaskList.createNewDeadline(command.substring(4));","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"JoshHDs"},"content":"                if(sections[1].equals(\"1\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"JoshHDs"},"content":"                    newDeadline.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"JoshHDs"},"content":"                list.add(newDeadline);","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"JoshHDs"},"content":"        case \"E\":","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"JoshHDs"},"content":"            try {","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"JoshHDs"},"content":"                Events newEvent \u003d TaskList.createNewEvent(command.substring(4));","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"JoshHDs"},"content":"                if(sections[1].equals(\"1\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"JoshHDs"},"content":"                    newEvent.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"JoshHDs"},"content":"                //Duke.addTask(list, newEvent);","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"JoshHDs"},"content":"                list.add(newEvent);","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"JoshHDs"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"JoshHDs"},"content":"                System.out.println(\"    OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"JoshHDs"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"JoshHDs"},"content":"            System.out.println(\"    There was an error reading the file\");","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"JoshHDs"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"JoshHDs":166}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":" * Represents a task","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":" * A task object stores 2 characteristics: a description, and whether it is completed","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":" * Task class is inherited by 3 other classes Todos, Events, and Deadlines class","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"    //variables","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"    protected String description;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"    //constructor","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"    //getters","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"        return description;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"        return isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"    //setters","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"    //other methods","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"     * @return String representation of the Task in the format [ ] description","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"        if(getDone()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"            return (\"[X] \" + description);","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"        } else {","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"            return (\"[ ] \" + description);","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"JoshHDs":48}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":" * Represents a list of tasks with operations that can be performed","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"public class TaskList {","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"    //attributes","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"    static ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    static ArrayList\u003cTask\u003e searchList;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    int taskCount \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"    //constructor","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"        list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"        searchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"JoshHDs"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"JoshHDs"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"JoshHDs"},"content":"        searchList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"JoshHDs"},"content":"    //methods","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"JoshHDs"},"content":"     * This method prints out the whole list of Todos/Deadlines/Events objects stored in the list","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"JoshHDs"},"content":"    public static void printList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"JoshHDs"},"content":"        int position \u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Here are the tasks in your list:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"JoshHDs"},"content":"        for( int i \u003d 0 ; i \u003c list.size() ; i ++ ) {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"JoshHDs"},"content":"            System.out.println( \"    \" + position  + \".\" + list.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"JoshHDs"},"content":"            position ++;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"JoshHDs"},"content":"    public static void printSearchList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"JoshHDs"},"content":"        int position \u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"JoshHDs"},"content":"        for( int i \u003d 0 ; i \u003c searchList.size() ; i ++ ) {","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"JoshHDs"},"content":"            System.out.println( \"    \" + position  + \".\" + searchList.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"JoshHDs"},"content":"            position ++;","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"JoshHDs"},"content":"    ","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"JoshHDs"},"content":"     * This method marks a Task in the list as \"completed\" according to the user input","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"JoshHDs"},"content":"     * @param word The String representation of the position of the specific Task in the list input by the User","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"JoshHDs"},"content":"    public static void markTaskDone(String word) {","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"JoshHDs"},"content":"        //convert string number to int number","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"JoshHDs"},"content":"        int position \u003d Integer.parseInt(word);","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"JoshHDs"},"content":"        //if task does not exist, return","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"JoshHDs"},"content":"        if (position \u003e list.size()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"JoshHDs"},"content":"            System.out.println(\"    Sorry! No such task!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"JoshHDs"},"content":"            return;","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"JoshHDs"},"content":"        //if task exist, mark task as done","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"JoshHDs"},"content":"        Task task \u003d list.get(position - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"JoshHDs"},"content":"        task.setDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"JoshHDs"},"content":"        //print notification","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    \" + task);","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"JoshHDs"},"content":"     * This method adds a new task to the end of its list of Tasks","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"JoshHDs"},"content":"     * @param newTask The Task objected to be added to the current list","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"JoshHDs"},"content":"    public static void addTask(Task newTask) {","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"JoshHDs"},"content":"        //add task to list","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"JoshHDs"},"content":"        list.add(newTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"JoshHDs"},"content":"        int size \u003d list.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"JoshHDs"},"content":"        //print statements","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"      \" + list.get(size - 1));","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Now you have \" + (size + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"JoshHDs"},"content":"     * This method deletes a Task from the list according to the user input","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"JoshHDs"},"content":"     * @param word The String representation of the position of the specific Task in the list input by the user","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"JoshHDs"},"content":"    public static void deleteTask(String word) {","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"JoshHDs"},"content":"        int size \u003d list.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"JoshHDs"},"content":"        //convert string number to int number","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"JoshHDs"},"content":"        int position \u003d Integer.parseInt(word);","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"JoshHDs"},"content":"        //if task does not exist, return","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"JoshHDs"},"content":"        if (position \u003e list.size()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"JoshHDs"},"content":"            System.out.println(\"    Sorry! No such task!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"JoshHDs"},"content":"            return;","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"JoshHDs"},"content":"        Task task \u003d list.get(position - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"JoshHDs"},"content":"        list.remove(position - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"JoshHDs"},"content":"        //print statements","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"      \" + task);","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Now you have \" + (size - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"JoshHDs"},"content":"    public static void findTask(String phrase) {","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"JoshHDs"},"content":"        for(Task task: list) {","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"JoshHDs"},"content":"            if(task.description.contains(phrase)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"JoshHDs"},"content":"                searchList.add(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"JoshHDs"},"content":"        //print the search list","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"JoshHDs"},"content":"        printSearchList();","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"JoshHDs"},"content":"        searchList.clear();","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"JoshHDs"},"content":"     * This method takes in a String representation of a Deadline Task, extracts out the description and deadline,","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"JoshHDs"},"content":"     * and creates a corresponding Deadline object","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"JoshHDs"},"content":"     * @param command the String representation of the description and deadline of the task","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"JoshHDs"},"content":"     * @return a Deadline object with description and deadline filled in","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"JoshHDs"},"content":"    public static Deadlines createNewDeadline(String command) {","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"JoshHDs"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"JoshHDs"},"content":"        String by \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"JoshHDs"},"content":"        String deadlineDescription \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"JoshHDs"},"content":"        boolean foundBy \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"JoshHDs"},"content":"        for(int i \u003d 0 ; i \u003c words.length ; i ++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"JoshHDs"},"content":"            if(foundBy) {","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"JoshHDs"},"content":"                by \u003d by + \" \" + words[i];","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"JoshHDs"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"JoshHDs"},"content":"                if(words[i].equals(\"/by\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"JoshHDs"},"content":"                    foundBy \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"JoshHDs"},"content":"                } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"JoshHDs"},"content":"                    deadlineDescription \u003d deadlineDescription + \" \" + words[i];","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"JoshHDs"},"content":"        String stringDateTime \u003d by.substring(1);","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"JoshHDs"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"JoshHDs"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(stringDateTime, format);","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"JoshHDs"},"content":"        Deadlines newDeadline \u003d new Deadlines(deadlineDescription.substring(1), dateTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":154,"author":{"gitId":"JoshHDs"},"content":"        return newDeadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":159,"author":{"gitId":"JoshHDs"},"content":"     * This method takes in a String representation of an Event Task, extracts out the description and event time,","lastModifiedDate":"2021-09-23"},{"lineNumber":160,"author":{"gitId":"JoshHDs"},"content":"     * and creates a corresponding Event object","lastModifiedDate":"2021-09-23"},{"lineNumber":161,"author":{"gitId":"JoshHDs"},"content":"     * @param command the String representation of the description and time of the task","lastModifiedDate":"2021-09-23"},{"lineNumber":162,"author":{"gitId":"JoshHDs"},"content":"     * @return a Event object with description and time filled in","lastModifiedDate":"2021-09-23"},{"lineNumber":163,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":164,"author":{"gitId":"JoshHDs"},"content":"    public static Events createNewEvent(String command) {","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"JoshHDs"},"content":"        String[] words \u003d command.split(\" \");","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"JoshHDs"},"content":"        String timeAllocation \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"JoshHDs"},"content":"        String eventDescription \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"JoshHDs"},"content":"        boolean foundAt \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"JoshHDs"},"content":"        for(int i \u003d 0 ; i \u003c words.length ; i ++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"JoshHDs"},"content":"            if(foundAt) {","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"JoshHDs"},"content":"                timeAllocation \u003d timeAllocation + \" \" + words[i];","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"JoshHDs"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"JoshHDs"},"content":"                if(words[i].equals(\"/at\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"JoshHDs"},"content":"                    foundAt \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"JoshHDs"},"content":"                } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"JoshHDs"},"content":"                    eventDescription \u003d  eventDescription + \" \" + words[i];","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"JoshHDs"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"JoshHDs"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"JoshHDs"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"JoshHDs"},"content":"        String stringDateTime \u003d timeAllocation.substring(1);","lastModifiedDate":"2021-09-23"},{"lineNumber":183,"author":{"gitId":"JoshHDs"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2021-09-23"},{"lineNumber":184,"author":{"gitId":"JoshHDs"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(stringDateTime, format);","lastModifiedDate":"2021-09-23"},{"lineNumber":185,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"JoshHDs"},"content":"        Events newEvent \u003d new Events(eventDescription.substring(1), dateTime);","lastModifiedDate":"2021-09-23"},{"lineNumber":188,"author":{"gitId":"JoshHDs"},"content":"        return newEvent;","lastModifiedDate":"2021-09-23"},{"lineNumber":189,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":190,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":191,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"JoshHDs":192}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":" * Represents an activity that is not time sensitive","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":" * A Todos object stores 2 characteristics: a description, and whether it is completed","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"    //variables","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"     * @return String representation of the Todos in the format [T][ ] description","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"    //methods","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"JoshHDs"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"JoshHDs"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"JoshHDs"},"content":"        return(\"[T]\" + super.toString());","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"JoshHDs":23}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"/**","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":" * Represents the various messages that will be shown to the User","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":" */","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"public class Ui {","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"JoshHDs"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\");","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"JoshHDs"},"content":"    public void showExitMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"JoshHDs"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"JoshHDs"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"JoshHDs":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JoshHDs"},"content":"todo borrow book","lastModifiedDate":"2021-08-28"},{"lineNumber":2,"author":{"gitId":"JoshHDs"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"JoshHDs"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"JoshHDs"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-28"},{"lineNumber":5,"author":{"gitId":"JoshHDs"},"content":"done 2","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"JoshHDs"},"content":"list","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"JoshHDs":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JoshHDs"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"JoshHDs":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"JoshHDs"},"content":"#previously if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"JoshHDs"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"JoshHDs"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"JoshHDs":3}}]
