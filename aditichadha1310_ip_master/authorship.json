[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditichadha1310"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"aditichadha1310"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"aditichadha1310"},"content":"     * Stores the deadline of the task","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"aditichadha1310"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aditichadha1310"},"content":"     * Constructor to initialize task description and deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aditichadha1310"},"content":"     * @param description Description stores the description of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aditichadha1310"},"content":"     * @param by          By stores the deadline of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aditichadha1310"},"content":"    Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aditichadha1310"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"aditichadha1310"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"aditichadha1310"},"content":"        this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"aditichadha1310"},"content":"     * returns the string in a particular format.","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"aditichadha1310"},"content":"     * @return Task description and deadline in a particular format.","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"aditichadha1310"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"aditichadha1310"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"aditichadha1310"},"content":"        return (\"[D]\" + super.toString() + \" (by:\" + this.by + \")\");","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"aditichadha1310"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"aditichadha1310":31}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditichadha1310"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"aditichadha1310"},"content":"import exception.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"aditichadha1310"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"aditichadha1310"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aditichadha1310"},"content":"     * Number of tasks scheduled","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aditichadha1310"},"content":"    public static int taskCounter \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aditichadha1310"},"content":"     * Task type 100 objects to store the tasks the user will create","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"aditichadha1310"},"content":"    private static ArrayList\u003cTask\u003e scheduledTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"aditichadha1310"},"content":"     * This is the main function which is responsible for executing all the functions","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"aditichadha1310"},"content":"        greet();","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"aditichadha1310"},"content":"        runDuke();","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"aditichadha1310"},"content":"        greetBye();","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"aditichadha1310"},"content":"     * Greets the user by printing some introductory messages","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"aditichadha1310"},"content":"    private static void greet() {","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"aditichadha1310"},"content":"        printLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"aditichadha1310"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"aditichadha1310"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"aditichadha1310"},"content":"        printLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"aditichadha1310"},"content":"     * Prints a line on the screen","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"aditichadha1310"},"content":"    public static void printLine() {","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"aditichadha1310"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":46,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":47,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"aditichadha1310"},"content":"     * Takes in input from the user and executes the given instructions.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"aditichadha1310"},"content":"     * If user input is \"list\", it calls the list() function to list all the tasks.","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"aditichadha1310"},"content":"     * If user input is done x, where x is a valid task number, it calls the MarkTaskAsDone() function to mark the task as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"aditichadha1310"},"content":"     * If user has scheduled a task by writing a statement beginning with \"event\", \"deadline\" or \"todo\",","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"aditichadha1310"},"content":"     * then it adds the task in the tasks list by calling the addTaskToList() function.","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"aditichadha1310"},"content":"     * @param userInput            userInput stores the input String entered by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"aditichadha1310"},"content":"     * @param taskCompletionStatus taskCompletionStatus Stores the status of the task, true if completed, false otherwise.","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"aditichadha1310"},"content":"    private static void runDuke() {","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"aditichadha1310"},"content":"        int i;","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"aditichadha1310"},"content":"        String userInput;","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"aditichadha1310"},"content":"        String taskCompletionStatus \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"aditichadha1310"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"aditichadha1310"},"content":"        userInput \u003d in.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"aditichadha1310"},"content":"        while (!(userInput.equalsIgnoreCase(\"bye\"))) {","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"aditichadha1310"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":66,"author":{"gitId":"aditichadha1310"},"content":"                if (userInput.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"aditichadha1310"},"content":"                    list();","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"aditichadha1310"},"content":"                } else if (userInput.startsWith(\"done\")) {","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"aditichadha1310"},"content":"                    markTaskAsDone(userInput);","lastModifiedDate":"2021-08-31"},{"lineNumber":70,"author":{"gitId":"aditichadha1310"},"content":"                } else if (userInput.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"aditichadha1310"},"content":"                    deleteTask(userInput);","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"aditichadha1310"},"content":"                } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":73,"author":{"gitId":"aditichadha1310"},"content":"                    addTaskToList(userInput);","lastModifiedDate":"2021-08-31"},{"lineNumber":74,"author":{"gitId":"aditichadha1310"},"content":"                }","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"aditichadha1310"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":76,"author":{"gitId":"aditichadha1310"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-07"},{"lineNumber":77,"author":{"gitId":"aditichadha1310"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":78,"author":{"gitId":"aditichadha1310"},"content":"            printLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"aditichadha1310"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"aditichadha1310"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":81,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":83,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":85,"author":{"gitId":"aditichadha1310"},"content":"     * Greets the user goodbye and the code finishes its execution.","lastModifiedDate":"2021-08-31"},{"lineNumber":86,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":87,"author":{"gitId":"aditichadha1310"},"content":"    private static void greetBye() {","lastModifiedDate":"2021-08-31"},{"lineNumber":88,"author":{"gitId":"aditichadha1310"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"aditichadha1310"},"content":"        System.out.println(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"aditichadha1310"},"content":"        printLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":91,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":92,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":93,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":94,"author":{"gitId":"aditichadha1310"},"content":"     * Adds the task to the task list if it is a valid task creation statement given by the user.","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"aditichadha1310"},"content":"     * Displays appropriate message if task is valid and is created successfully, vice versa.","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"aditichadha1310"},"content":"     * Displays the total number of tasks in the list as well.","lastModifiedDate":"2021-08-31"},{"lineNumber":97,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":98,"author":{"gitId":"aditichadha1310"},"content":"     * @param isTaskValid IsTaskValid stores true if the task statement entered by the user is a valid task creation statement and false, otherwise.","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"aditichadha1310"},"content":"     * @param index       Index stores the index of the \"/\" in the entered String","lastModifiedDate":"2021-08-31"},{"lineNumber":100,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":101,"author":{"gitId":"aditichadha1310"},"content":"    private static void addTaskToList(String userInput) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"aditichadha1310"},"content":"        int index;","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"aditichadha1310"},"content":"        boolean isTaskValid \u003d true;","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"aditichadha1310"},"content":"        String firstWord;","lastModifiedDate":"2021-09-07"},{"lineNumber":106,"author":{"gitId":"aditichadha1310"},"content":"        String[] split \u003d userInput.split(\" \", 2);","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"aditichadha1310"},"content":"        String taskDescription;","lastModifiedDate":"2021-09-07"},{"lineNumber":108,"author":{"gitId":"aditichadha1310"},"content":"        String timeDueAt;","lastModifiedDate":"2021-09-07"},{"lineNumber":109,"author":{"gitId":"aditichadha1310"},"content":"        String timeDueBy;","lastModifiedDate":"2021-09-07"},{"lineNumber":110,"author":{"gitId":"aditichadha1310"},"content":"        firstWord \u003d split[0].toLowerCase();","lastModifiedDate":"2021-09-07"},{"lineNumber":111,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":112,"author":{"gitId":"aditichadha1310"},"content":"        switch (firstWord) {","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"aditichadha1310"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-07"},{"lineNumber":114,"author":{"gitId":"aditichadha1310"},"content":"            if (split.length \u003c 2 || split[1].isEmpty() \u003d\u003d true) {","lastModifiedDate":"2021-09-07"},{"lineNumber":115,"author":{"gitId":"aditichadha1310"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":116,"author":{"gitId":"aditichadha1310"},"content":"            } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":117,"author":{"gitId":"aditichadha1310"},"content":"                scheduledTasks.add(new Todo(userInput));","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"aditichadha1310"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"aditichadha1310"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"aditichadha1310"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-07"},{"lineNumber":122,"author":{"gitId":"aditichadha1310"},"content":"            index \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-08-31"},{"lineNumber":123,"author":{"gitId":"aditichadha1310"},"content":"            if (split.length \u003c 2 || split[1].isEmpty() \u003d\u003d true || index \u003d\u003d -1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"aditichadha1310"},"content":"                throw new DukeException(\"☹ OOPS!!! The description or the deadline of the task cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"aditichadha1310"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"aditichadha1310"},"content":"            taskDescription \u003d split[1].split(\"/by\", 2)[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"aditichadha1310"},"content":"            timeDueBy \u003d split[1].split(\"/by\", 2)[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"aditichadha1310"},"content":"            if (taskDescription.isEmpty() \u003d\u003d true || timeDueBy.isEmpty() \u003d\u003d true) {","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"aditichadha1310"},"content":"                throw new DukeException(\"☹ OOPS!!! The description of the task seems incomplete.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":130,"author":{"gitId":"aditichadha1310"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"aditichadha1310"},"content":"            scheduledTasks.add(new Deadline(userInput.substring(0, index), userInput.substring(index + 3)));","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"aditichadha1310"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":134,"author":{"gitId":"aditichadha1310"},"content":"        case \"event\":","lastModifiedDate":"2021-09-07"},{"lineNumber":135,"author":{"gitId":"aditichadha1310"},"content":"            index \u003d userInput.indexOf(\"/\");","lastModifiedDate":"2021-08-31"},{"lineNumber":136,"author":{"gitId":"aditichadha1310"},"content":"            if (split.length \u003c 2 || split[1].isEmpty() \u003d\u003d true || index \u003d\u003d -1) {","lastModifiedDate":"2021-09-07"},{"lineNumber":137,"author":{"gitId":"aditichadha1310"},"content":"                throw new DukeException(\"☹ OOPS!!! The description and time schedule of the event cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":138,"author":{"gitId":"aditichadha1310"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":139,"author":{"gitId":"aditichadha1310"},"content":"            taskDescription \u003d split[1].split(\"/at\", 2)[0];","lastModifiedDate":"2021-09-07"},{"lineNumber":140,"author":{"gitId":"aditichadha1310"},"content":"            timeDueAt \u003d split[1].split(\"/at\", 2)[1];","lastModifiedDate":"2021-09-07"},{"lineNumber":141,"author":{"gitId":"aditichadha1310"},"content":"            if (taskDescription.isEmpty() \u003d\u003d true || timeDueAt.isEmpty() \u003d\u003d true) {","lastModifiedDate":"2021-09-07"},{"lineNumber":142,"author":{"gitId":"aditichadha1310"},"content":"                throw new DukeException(\"☹ OOPS!!! The description or time schedule of the event seems incomplete.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":143,"author":{"gitId":"aditichadha1310"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":144,"author":{"gitId":"aditichadha1310"},"content":"            scheduledTasks.add(new Event(userInput.substring(0, index), userInput.substring(index + 3)));","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"aditichadha1310"},"content":"            break;","lastModifiedDate":"2021-09-07"},{"lineNumber":146,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"aditichadha1310"},"content":"        default:","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"aditichadha1310"},"content":"            isTaskValid \u003d false;","lastModifiedDate":"2021-08-31"},{"lineNumber":149,"author":{"gitId":"aditichadha1310"},"content":"            throw new DukeException(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-07"},{"lineNumber":150,"author":{"gitId":"aditichadha1310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":151,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"aditichadha1310"},"content":"        if (isTaskValid) {","lastModifiedDate":"2021-08-31"},{"lineNumber":153,"author":{"gitId":"aditichadha1310"},"content":"            printLine();","lastModifiedDate":"2021-08-31"},{"lineNumber":154,"author":{"gitId":"aditichadha1310"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":155,"author":{"gitId":"aditichadha1310"},"content":"            System.out.println(\" \" + scheduledTasks.get(scheduledTasks.size() - 1));","lastModifiedDate":"2021-09-14"},{"lineNumber":156,"author":{"gitId":"aditichadha1310"},"content":"            taskCounter++;","lastModifiedDate":"2021-09-07"},{"lineNumber":157,"author":{"gitId":"aditichadha1310"},"content":"            System.out.println(\"Now you have \" + scheduledTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"aditichadha1310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":159,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":160,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":162,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":163,"author":{"gitId":"aditichadha1310"},"content":"     * Updates the status of the task by marking it as done in the task list.","lastModifiedDate":"2021-08-31"},{"lineNumber":164,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":165,"author":{"gitId":"aditichadha1310"},"content":"     * @param taskNumberCompleted TaskNumberCompleted stores the task number which has been completed by the user.","lastModifiedDate":"2021-08-31"},{"lineNumber":166,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":167,"author":{"gitId":"aditichadha1310"},"content":"    private static void markTaskAsDone(String userInput) throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":168,"author":{"gitId":"aditichadha1310"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":169,"author":{"gitId":"aditichadha1310"},"content":"        int taskNumberCompleted \u003d Integer.parseInt(userInput.substring(userInput.indexOf(\" \") + 1));","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":171,"author":{"gitId":"aditichadha1310"},"content":"        if ((taskNumberCompleted \u003c\u003d scheduledTasks.size()) \u0026\u0026 (taskNumberCompleted \u003e 0)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":172,"author":{"gitId":"aditichadha1310"},"content":"            scheduledTasks.get(taskNumberCompleted - 1).markAsDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":173,"author":{"gitId":"aditichadha1310"},"content":"            System.out.println(\"Nice! I have marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":174,"author":{"gitId":"aditichadha1310"},"content":"            System.out.println(scheduledTasks.get(taskNumberCompleted - 1));","lastModifiedDate":"2021-09-14"},{"lineNumber":175,"author":{"gitId":"aditichadha1310"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"aditichadha1310"},"content":"            throw new DukeException(\"Sorry, no task is assigned at this number, you might want to re-check?\");","lastModifiedDate":"2021-09-07"},{"lineNumber":177,"author":{"gitId":"aditichadha1310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":181,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":182,"author":{"gitId":"aditichadha1310"},"content":"     * Deletes the task from the task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":183,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":184,"author":{"gitId":"aditichadha1310"},"content":"     * @param deleteTask DeleteTask stores the task number which is supposed to be deleted.","lastModifiedDate":"2021-09-14"},{"lineNumber":185,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":186,"author":{"gitId":"aditichadha1310"},"content":"    private static void deleteTask(String userInput) throws DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":187,"author":{"gitId":"aditichadha1310"},"content":"        printLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":188,"author":{"gitId":"aditichadha1310"},"content":"        int deleteTask \u003d Integer.parseInt(userInput.substring(userInput.indexOf(\" \") + 1));","lastModifiedDate":"2021-09-14"},{"lineNumber":189,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":190,"author":{"gitId":"aditichadha1310"},"content":"        if ((deleteTask \u003c\u003d scheduledTasks.size()) \u0026\u0026 (deleteTask \u003e 0)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":191,"author":{"gitId":"aditichadha1310"},"content":"            Task taskToBeDeleted \u003d scheduledTasks.get(deleteTask - 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":192,"author":{"gitId":"aditichadha1310"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-14"},{"lineNumber":193,"author":{"gitId":"aditichadha1310"},"content":"            System.out.println(taskToBeDeleted);","lastModifiedDate":"2021-09-14"},{"lineNumber":194,"author":{"gitId":"aditichadha1310"},"content":"            scheduledTasks.remove(deleteTask - 1);","lastModifiedDate":"2021-09-14"},{"lineNumber":195,"author":{"gitId":"aditichadha1310"},"content":"            System.out.println(\"Now you have \" + scheduledTasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":196,"author":{"gitId":"aditichadha1310"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":197,"author":{"gitId":"aditichadha1310"},"content":"            throw new DukeException(\"Sorry, no task is assigned at this number, you might want to re-check?\");","lastModifiedDate":"2021-09-14"},{"lineNumber":198,"author":{"gitId":"aditichadha1310"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":199,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":200,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":201,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":202,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":203,"author":{"gitId":"aditichadha1310"},"content":"     * Lists all the tasks in the task list along with their task completion status.","lastModifiedDate":"2021-08-31"},{"lineNumber":204,"author":{"gitId":"aditichadha1310"},"content":"     * The tasks are enlisted which reveal if they are a \"todo\", \"event\" or a \"deadline\".","lastModifiedDate":"2021-08-31"},{"lineNumber":205,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":206,"author":{"gitId":"aditichadha1310"},"content":"     * @param taskCompletionStatus TaskCompletionStatus stores true if the task is completed, false otherwise.","lastModifiedDate":"2021-08-31"},{"lineNumber":207,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":208,"author":{"gitId":"aditichadha1310"},"content":"    private static void list() throws DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":209,"author":{"gitId":"aditichadha1310"},"content":"        int i;","lastModifiedDate":"2021-08-31"},{"lineNumber":210,"author":{"gitId":"aditichadha1310"},"content":"        String taskCompletionStatus;","lastModifiedDate":"2021-08-31"},{"lineNumber":211,"author":{"gitId":"aditichadha1310"},"content":"        printLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":212,"author":{"gitId":"aditichadha1310"},"content":"        if (scheduledTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":213,"author":{"gitId":"aditichadha1310"},"content":"            throw new DukeException(\"Sorry, no tasks have been added to the list as yet!\\n\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":214,"author":{"gitId":"aditichadha1310"},"content":"                    \"You can add tasks to this list simply by typing and pressing \\\"Enter\\\"!!\");","lastModifiedDate":"2021-08-31"},{"lineNumber":215,"author":{"gitId":"aditichadha1310"},"content":"        } else {","lastModifiedDate":"2021-08-31"},{"lineNumber":216,"author":{"gitId":"aditichadha1310"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-31"},{"lineNumber":217,"author":{"gitId":"aditichadha1310"},"content":"            i \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":218,"author":{"gitId":"aditichadha1310"},"content":"            for (Task task : scheduledTasks) {","lastModifiedDate":"2021-09-14"},{"lineNumber":219,"author":{"gitId":"aditichadha1310"},"content":"                taskCompletionStatus \u003d task.getStatus();","lastModifiedDate":"2021-09-14"},{"lineNumber":220,"author":{"gitId":"aditichadha1310"},"content":"                System.out.print((i + 1) + \".\");","lastModifiedDate":"2021-08-31"},{"lineNumber":221,"author":{"gitId":"aditichadha1310"},"content":"                System.out.println(task);","lastModifiedDate":"2021-09-14"},{"lineNumber":222,"author":{"gitId":"aditichadha1310"},"content":"                i++;","lastModifiedDate":"2021-09-14"},{"lineNumber":223,"author":{"gitId":"aditichadha1310"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":224,"author":{"gitId":"aditichadha1310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":226,"author":{"gitId":"aditichadha1310"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aditichadha1310":224,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditichadha1310"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"aditichadha1310"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aditichadha1310"},"content":"     * Stores the event time of the task","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"aditichadha1310"},"content":"    protected String at;","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aditichadha1310"},"content":"     * Constructor to initialize task description and event time.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aditichadha1310"},"content":"     * @param description Description stores the description of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aditichadha1310"},"content":"     * @param at          At stores the event time of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aditichadha1310"},"content":"    Event(String description, String at) {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"aditichadha1310"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"aditichadha1310"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"aditichadha1310"},"content":"        this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"aditichadha1310"},"content":"     * returns the string in a particular format.","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"aditichadha1310"},"content":"     * @return Task description and event time in a particular format.","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"aditichadha1310"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"aditichadha1310"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"aditichadha1310"},"content":"        return (\"[E]\" + super.toString() + \" (at:\" + this.at + \")\");","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"aditichadha1310"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"aditichadha1310":31}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditichadha1310"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"aditichadha1310"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"aditichadha1310"},"content":"     * Stores the task description.","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"aditichadha1310"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"aditichadha1310"},"content":"    protected TaskType taskType;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aditichadha1310"},"content":"     * Stores true if task is done and false otherwise.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"aditichadha1310"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aditichadha1310"},"content":"     * Default Constructor to initialise the task description and task completion status.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"aditichadha1310"},"content":"    public Task() {","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"aditichadha1310"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"aditichadha1310"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"aditichadha1310"},"content":"        this.taskType \u003d TaskType.NONE;","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"aditichadha1310"},"content":"     * Parameterized constructor to initialise the task description and task completion status.","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"aditichadha1310"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"aditichadha1310"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"aditichadha1310"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":32,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"aditichadha1310"},"content":"     * Returns X if task is completed and space otherwise.Returns the task completion status of a particular task.","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"aditichadha1310"},"content":"     * @return Task Completion Status","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"aditichadha1310"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"aditichadha1310"},"content":"        if (this.isDone) {","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"aditichadha1310"},"content":"            return \"X\";","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"aditichadha1310"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"aditichadha1310"},"content":"            return \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"aditichadha1310"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"aditichadha1310"},"content":"     * Marks a particular task as done.","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"aditichadha1310"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"aditichadha1310"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":54,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":55,"author":{"gitId":"aditichadha1310"},"content":"     * Returns the task status in a particular String format.","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"aditichadha1310"},"content":"     * @return Task completion Status in a String format.","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"aditichadha1310"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"aditichadha1310"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"aditichadha1310"},"content":"        String taskStatus \u003d isDone ? \"X\" : \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"aditichadha1310"},"content":"        return (\"[\" + taskStatus + \"] \" + this.description);","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"aditichadha1310"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"aditichadha1310":65}},{"path":"src/main/java/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditichadha1310"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"aditichadha1310"},"content":"public enum TaskType {","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"aditichadha1310"},"content":"    NONE, TODO, DEADLINE, EVENT","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"aditichadha1310"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"aditichadha1310":5}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditichadha1310"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"aditichadha1310"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aditichadha1310"},"content":"     * Constructor to initialize task description.","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"aditichadha1310"},"content":"     * @param description Description stores the description of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"aditichadha1310"},"content":"    Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"aditichadha1310"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"aditichadha1310"},"content":"        this.taskType \u003d TaskType.TODO;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"aditichadha1310"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"aditichadha1310"},"content":"     * Returns the string in a particular format.","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"aditichadha1310"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"aditichadha1310"},"content":"     * @return Task description in a particular format.","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"aditichadha1310"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"aditichadha1310"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"aditichadha1310"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"aditichadha1310"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"aditichadha1310"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"aditichadha1310":24}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aditichadha1310"},"content":"package exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"aditichadha1310"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"aditichadha1310"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"aditichadha1310"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"aditichadha1310"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"aditichadha1310"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"aditichadha1310"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"aditichadha1310":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aditichadha1310"},"content":"todo read","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"aditichadha1310"},"content":"deadline complete project /by 7pm","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"aditichadha1310"},"content":"event attend meeting /at 6-7pm","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"aditichadha1310"},"content":"done 2","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"aditichadha1310"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"aditichadha1310"},"content":"bye","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"aditichadha1310":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"aditichadha1310"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\exception\\*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"aditichadha1310"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aditichadha1310":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"aditichadha1310"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/exception/*.java","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"aditichadha1310"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"aditichadha1310":2,"-":36}}]
