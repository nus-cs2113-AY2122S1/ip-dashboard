[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"# xRoss project template","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"3. After that, locate the `src/main/java/xRoss.java` file, right-click it, and choose `Run xRoss.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xRossKoh":2,"-":22}},{"path":"src/main/java/xRoss/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import xRoss.exception.EmptyStringException;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"import xRoss.storage.FileManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"import xRoss.task.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"import xRoss.task.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"import xRoss.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"import xRoss.task.Todo;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"import java.io.File;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":" * Represents collection of Tasks and methods to edit them in task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"public class TaskManager implements FileManager {","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"     * tasks                ArrayList containing Tasks in task list","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"     * tasksCount           Number of Tasks in task list","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"     * completedTasksCount  Number of Tasks in task list that have been marked as done","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"    private int tasksCount \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"    private int completedTasksCount \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"     * Specified file path to save task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"    final String filepath \u003d \"data/xRoss.txt\";","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"     * Prints current task list to system output.","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"    public void printTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"        if (tasksCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tYou have no tasks in your task list at the moment.\\n\");","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tThis is your current task list:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"xRossKoh"},"content":"        for (int i \u003d 0; i \u003c tasksCount; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\"\\t\\t\" + (i + 1) + \".\");","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"xRossKoh"},"content":"            tasks.get(i).printTask();","lastModifiedDate":"2021-09-10"},{"lineNumber":50,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"xRossKoh"},"content":"        printTaskCounts();","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":54,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"xRossKoh"},"content":"     * Adds new Task to task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"xRossKoh"},"content":"     * @param task  New Task to be added to task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"xRossKoh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":60,"author":{"gitId":"xRossKoh"},"content":"        // add new task to task list","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"xRossKoh"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-10"},{"lineNumber":62,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":63,"author":{"gitId":"xRossKoh"},"content":"        // print name of task to system output","lastModifiedDate":"2021-08-22"},{"lineNumber":64,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"\\tGot it! I\u0027ve added this task for you:\\n\\t\\t\");","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xRossKoh"},"content":"        tasks.get(tasksCount).printTask();","lastModifiedDate":"2021-09-10"},{"lineNumber":66,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xRossKoh"},"content":"        // increment total tasksCount","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xRossKoh"},"content":"        tasksCount++;","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xRossKoh"},"content":"        printTaskCounts();","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"xRossKoh"},"content":"        // save current task list after change","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"xRossKoh"},"content":"        saveToFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":74,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":75,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"xRossKoh"},"content":"     * Marks a specified Task in current task list as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"xRossKoh"},"content":"     * @param inputTaskIndex    Index of Task in current task list to be marked as done.","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"xRossKoh"},"content":"    public void markAsDone(int inputTaskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":81,"author":{"gitId":"xRossKoh"},"content":"        int taskIndex \u003d inputTaskIndex - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":82,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"xRossKoh"},"content":"        // check if taskIndex is out of bounds of current task list","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"xRossKoh"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasksCount) {","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tYou have chosen an invalid task number.\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"xRossKoh"},"content":"            printTasks();","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"xRossKoh"},"content":"            return;","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"xRossKoh"},"content":"        // check if task is already marked as done","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"xRossKoh"},"content":"        if (tasks.get(taskIndex).isDone()) {","lastModifiedDate":"2021-09-10"},{"lineNumber":92,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tThis task has already been completed and marked as done.\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"xRossKoh"},"content":"            return;","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":95,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"xRossKoh"},"content":"        // set task as done and increment completedTasksCount","lastModifiedDate":"2021-09-10"},{"lineNumber":97,"author":{"gitId":"xRossKoh"},"content":"        tasks.get(taskIndex).setDone();","lastModifiedDate":"2021-09-10"},{"lineNumber":98,"author":{"gitId":"xRossKoh"},"content":"        completedTasksCount++;","lastModifiedDate":"2021-08-23"},{"lineNumber":99,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":100,"author":{"gitId":"xRossKoh"},"content":"        // Print name of task to system output","lastModifiedDate":"2021-08-23"},{"lineNumber":101,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"\\tGood job! I have marked your task as done.\\n\\t\\t\");","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"xRossKoh"},"content":"        tasks.get(taskIndex).printTask();","lastModifiedDate":"2021-09-10"},{"lineNumber":103,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tYou have \"","lastModifiedDate":"2021-09-10"},{"lineNumber":104,"author":{"gitId":"xRossKoh"},"content":"                + (tasksCount - completedTasksCount)","lastModifiedDate":"2021-09-10"},{"lineNumber":105,"author":{"gitId":"xRossKoh"},"content":"                + \" uncompleted task(s) left in your task list\\n\");","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"xRossKoh"},"content":"        // save current task list after change","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"xRossKoh"},"content":"        saveToFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":110,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":111,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"xRossKoh"},"content":"     * Deletes a specified Task in the current task list.","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"xRossKoh"},"content":"     * @param inputTaskIndex    Index of Task in current task list to be deleted.","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"xRossKoh"},"content":"    public void deleteTask(int inputTaskIndex){","lastModifiedDate":"2021-09-10"},{"lineNumber":117,"author":{"gitId":"xRossKoh"},"content":"        int taskIndex \u003d inputTaskIndex - 1;","lastModifiedDate":"2021-09-10"},{"lineNumber":118,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":119,"author":{"gitId":"xRossKoh"},"content":"        // check if taskIndex is out of bounds of current task list","lastModifiedDate":"2021-09-11"},{"lineNumber":120,"author":{"gitId":"xRossKoh"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasksCount) {","lastModifiedDate":"2021-09-10"},{"lineNumber":121,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tYou have chosen an invalid task number.\\n\");","lastModifiedDate":"2021-09-10"},{"lineNumber":122,"author":{"gitId":"xRossKoh"},"content":"            printTasks();","lastModifiedDate":"2021-09-10"},{"lineNumber":123,"author":{"gitId":"xRossKoh"},"content":"            return;","lastModifiedDate":"2021-09-10"},{"lineNumber":124,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-10"},{"lineNumber":125,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":126,"author":{"gitId":"xRossKoh"},"content":"         // deduct from completedTasksCount if task to be deleted is completed","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"xRossKoh"},"content":"        if (tasks.get(taskIndex).isDone()){","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"xRossKoh"},"content":"            completedTasksCount--;","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":130,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"xRossKoh"},"content":"        // delete task from task list and deduct from tasksCount","lastModifiedDate":"2021-09-10"},{"lineNumber":132,"author":{"gitId":"xRossKoh"},"content":"        Task deletedTask \u003d tasks.remove(taskIndex);","lastModifiedDate":"2021-09-10"},{"lineNumber":133,"author":{"gitId":"xRossKoh"},"content":"        tasksCount--;","lastModifiedDate":"2021-09-10"},{"lineNumber":134,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":135,"author":{"gitId":"xRossKoh"},"content":"        // print name of task to system output","lastModifiedDate":"2021-09-10"},{"lineNumber":136,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"\\tI have deleted task \"","lastModifiedDate":"2021-09-10"},{"lineNumber":137,"author":{"gitId":"xRossKoh"},"content":"                + inputTaskIndex","lastModifiedDate":"2021-09-10"},{"lineNumber":138,"author":{"gitId":"xRossKoh"},"content":"                + \" from your task list.\\n\\t\\t\");","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"xRossKoh"},"content":"        deletedTask.printTask();","lastModifiedDate":"2021-09-10"},{"lineNumber":140,"author":{"gitId":"xRossKoh"},"content":"        printTaskCounts();","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":142,"author":{"gitId":"xRossKoh"},"content":"        // save current task list after change","lastModifiedDate":"2021-09-15"},{"lineNumber":143,"author":{"gitId":"xRossKoh"},"content":"        saveToFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":144,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"xRossKoh"},"content":"    public void findTasksWithExp(String exp) throws EmptyStringException{","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"xRossKoh"},"content":"        if (tasksCount \u003d\u003d 0) {","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tYou have no tasks in your task list at the moment.\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"xRossKoh"},"content":"            return;","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"xRossKoh"},"content":"        if (exp.isEmpty()){","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"xRossKoh"},"content":"            throw new EmptyStringException();","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tLooking for tasks with the following expression: \" + exp);","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"xRossKoh"},"content":"        int numberOfTasksFound \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"xRossKoh"},"content":"        for (int i \u003d 0; i \u003c tasksCount; i++){","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"xRossKoh"},"content":"            if (tasks.get(i).getName().contains(exp)){","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"xRossKoh"},"content":"                System.out.print(\"\\t\\t\" + (i + 1) + \".\");","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"xRossKoh"},"content":"                tasks.get(i).printTask();","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"xRossKoh"},"content":"                numberOfTasksFound++;","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"xRossKoh"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tI found \" + numberOfTasksFound + \" tasks containing your specified expression.\");","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":171,"author":{"gitId":"xRossKoh"},"content":"     * Prints number of tasks and uncompleted tasks in current task list to system output.","lastModifiedDate":"2021-09-14"},{"lineNumber":172,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":173,"author":{"gitId":"xRossKoh"},"content":"    private void printTaskCounts() {","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tThere are \"","lastModifiedDate":"2021-09-11"},{"lineNumber":175,"author":{"gitId":"xRossKoh"},"content":"                + tasksCount","lastModifiedDate":"2021-09-10"},{"lineNumber":176,"author":{"gitId":"xRossKoh"},"content":"                + \" task(s) in your task list, of which \"","lastModifiedDate":"2021-09-11"},{"lineNumber":177,"author":{"gitId":"xRossKoh"},"content":"                + (tasksCount - completedTasksCount)","lastModifiedDate":"2021-09-10"},{"lineNumber":178,"author":{"gitId":"xRossKoh"},"content":"                + \" is/are uncompleted.\\n\");","lastModifiedDate":"2021-09-10"},{"lineNumber":179,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":180,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":181,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":182,"author":{"gitId":"xRossKoh"},"content":"     * Reads saved task list from specified text file.","lastModifiedDate":"2021-09-14"},{"lineNumber":183,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":184,"author":{"gitId":"xRossKoh"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":185,"author":{"gitId":"xRossKoh"},"content":"    public void readFromFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":186,"author":{"gitId":"xRossKoh"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":187,"author":{"gitId":"xRossKoh"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2021-09-13"},{"lineNumber":188,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":189,"author":{"gitId":"xRossKoh"},"content":"            // instantiate scanner to read file contents","lastModifiedDate":"2021-09-14"},{"lineNumber":190,"author":{"gitId":"xRossKoh"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"xRossKoh"},"content":"            while (s.hasNext()){","lastModifiedDate":"2021-09-13"},{"lineNumber":193,"author":{"gitId":"xRossKoh"},"content":"                Task task \u003d convertFileStrToTask(s.nextLine());","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":195,"author":{"gitId":"xRossKoh"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-14"},{"lineNumber":196,"author":{"gitId":"xRossKoh"},"content":"                tasksCount++;","lastModifiedDate":"2021-09-13"},{"lineNumber":197,"author":{"gitId":"xRossKoh"},"content":"                if (task.isDone()){","lastModifiedDate":"2021-09-13"},{"lineNumber":198,"author":{"gitId":"xRossKoh"},"content":"                    completedTasksCount++;","lastModifiedDate":"2021-09-13"},{"lineNumber":199,"author":{"gitId":"xRossKoh"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":200,"author":{"gitId":"xRossKoh"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":201,"author":{"gitId":"xRossKoh"},"content":"        } catch (FileNotFoundException e){ // file does not exist on first boot","lastModifiedDate":"2021-09-13"},{"lineNumber":202,"author":{"gitId":"xRossKoh"},"content":"            return;","lastModifiedDate":"2021-09-13"},{"lineNumber":203,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":204,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":205,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":206,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":207,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":208,"author":{"gitId":"xRossKoh"},"content":"     * Converts scanned file string to Task instance.","lastModifiedDate":"2021-09-14"},{"lineNumber":209,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":210,"author":{"gitId":"xRossKoh"},"content":"     * @param fileStr  Scanned file string.","lastModifiedDate":"2021-09-14"},{"lineNumber":211,"author":{"gitId":"xRossKoh"},"content":"     * @return  Converted Task instance from scanned file string.","lastModifiedDate":"2021-09-14"},{"lineNumber":212,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":213,"author":{"gitId":"xRossKoh"},"content":"    private Task convertFileStrToTask(String fileStr) {","lastModifiedDate":"2021-09-14"},{"lineNumber":214,"author":{"gitId":"xRossKoh"},"content":"        // split string using \" | \" pattern","lastModifiedDate":"2021-09-14"},{"lineNumber":215,"author":{"gitId":"xRossKoh"},"content":"        String[] scannedTask \u003d fileStr.split(\" \\\\| \");","lastModifiedDate":"2021-09-14"},{"lineNumber":216,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":217,"author":{"gitId":"xRossKoh"},"content":"        Task task \u003d null;","lastModifiedDate":"2021-09-13"},{"lineNumber":218,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":219,"author":{"gitId":"xRossKoh"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":220,"author":{"gitId":"xRossKoh"},"content":"            switch (scannedTask[0]){","lastModifiedDate":"2021-09-13"},{"lineNumber":221,"author":{"gitId":"xRossKoh"},"content":"            case \"T\":","lastModifiedDate":"2021-09-13"},{"lineNumber":222,"author":{"gitId":"xRossKoh"},"content":"                task \u003d new Todo(scannedTask[2]);","lastModifiedDate":"2021-09-13"},{"lineNumber":223,"author":{"gitId":"xRossKoh"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":224,"author":{"gitId":"xRossKoh"},"content":"            case \"D\":","lastModifiedDate":"2021-09-13"},{"lineNumber":225,"author":{"gitId":"xRossKoh"},"content":"                task \u003d new Deadline(scannedTask[2], scannedTask[3]);","lastModifiedDate":"2021-09-13"},{"lineNumber":226,"author":{"gitId":"xRossKoh"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":227,"author":{"gitId":"xRossKoh"},"content":"            case \"E\":","lastModifiedDate":"2021-09-13"},{"lineNumber":228,"author":{"gitId":"xRossKoh"},"content":"                task \u003d new Event(scannedTask[2], scannedTask[3]);","lastModifiedDate":"2021-09-13"},{"lineNumber":229,"author":{"gitId":"xRossKoh"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":230,"author":{"gitId":"xRossKoh"},"content":"            default:","lastModifiedDate":"2021-09-13"},{"lineNumber":231,"author":{"gitId":"xRossKoh"},"content":"                System.out.println(\"Error in saved file string...\");","lastModifiedDate":"2021-09-13"},{"lineNumber":232,"author":{"gitId":"xRossKoh"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":233,"author":{"gitId":"xRossKoh"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2021-09-13"},{"lineNumber":234,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"Error in task type description in saved file string...\");","lastModifiedDate":"2021-09-13"},{"lineNumber":235,"author":{"gitId":"xRossKoh"},"content":"        } catch (EmptyStringException e){","lastModifiedDate":"2021-09-13"},{"lineNumber":236,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"Empty string in saved file string...\");","lastModifiedDate":"2021-09-13"},{"lineNumber":237,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":238,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":239,"author":{"gitId":"xRossKoh"},"content":"        // check if scanned task is done","lastModifiedDate":"2021-09-14"},{"lineNumber":240,"author":{"gitId":"xRossKoh"},"content":"        if (scannedTask[1].equals(\"1\")){","lastModifiedDate":"2021-09-13"},{"lineNumber":241,"author":{"gitId":"xRossKoh"},"content":"            task.setDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":242,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":243,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":244,"author":{"gitId":"xRossKoh"},"content":"        return task;","lastModifiedDate":"2021-09-13"},{"lineNumber":245,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":246,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":247,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":248,"author":{"gitId":"xRossKoh"},"content":"     * Writes current task list to specified text file to save it.","lastModifiedDate":"2021-09-14"},{"lineNumber":249,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":250,"author":{"gitId":"xRossKoh"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":251,"author":{"gitId":"xRossKoh"},"content":"    public void saveToFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":252,"author":{"gitId":"xRossKoh"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":253,"author":{"gitId":"xRossKoh"},"content":"            File file \u003d new File(filepath);","lastModifiedDate":"2021-09-13"},{"lineNumber":254,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":255,"author":{"gitId":"xRossKoh"},"content":"            // create new directory and file if they do not exist","lastModifiedDate":"2021-09-14"},{"lineNumber":256,"author":{"gitId":"xRossKoh"},"content":"            if (!file.exists()){","lastModifiedDate":"2021-09-14"},{"lineNumber":257,"author":{"gitId":"xRossKoh"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2021-09-14"},{"lineNumber":258,"author":{"gitId":"xRossKoh"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":259,"author":{"gitId":"xRossKoh"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":260,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":261,"author":{"gitId":"xRossKoh"},"content":"            // instantiate FileWriter object to overwrite specified text file","lastModifiedDate":"2021-09-14"},{"lineNumber":262,"author":{"gitId":"xRossKoh"},"content":"            FileWriter fileWriter \u003d new FileWriter(filepath, false);","lastModifiedDate":"2021-09-14"},{"lineNumber":263,"author":{"gitId":"xRossKoh"},"content":"            for (int i \u003d 0; i \u003c tasksCount; i++){","lastModifiedDate":"2021-09-13"},{"lineNumber":264,"author":{"gitId":"xRossKoh"},"content":"                fileWriter.write(tasks.get(i).toString());","lastModifiedDate":"2021-09-14"},{"lineNumber":265,"author":{"gitId":"xRossKoh"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":266,"author":{"gitId":"xRossKoh"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":267,"author":{"gitId":"xRossKoh"},"content":"        } catch (IOException e){","lastModifiedDate":"2021-09-13"},{"lineNumber":268,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"Something went wrong while saving the task list to file...\");","lastModifiedDate":"2021-09-13"},{"lineNumber":269,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":270,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":271,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"xRossKoh":271}},{"path":"src/main/java/xRoss/exception/EmptyStringException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":" * Represents subclass of Exception to be thrown","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"public class EmptyStringException extends Exception{","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"xRossKoh":7}},{"path":"src/main/java/xRoss/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss.parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import xRoss.TaskManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"import xRoss.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":" * Represents making sense of user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"public class Parser {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"     * ui   Ui class instance used to invoke the relevant actions by chat bot.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"     * Makes sense of user input and invokes the relevant actions by the chat bot.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"     * @param taskManager Representation of current task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"     * @param inputLine   Scanned user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"     * @return Boolean value that keeps tracks of whether to exit the chat bot.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"    public boolean parseCommand(TaskManager taskManager, String inputLine) {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"        boolean commandLoop \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"        String[] userCommand \u003d inputLine.split(\" \", 2);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"        switch (userCommand[0]) {","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"            commandLoop \u003d false;","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"        case \"list\":","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"            ui.printTaskListResponse(taskManager);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"        case \"done\":","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"            ui.printDoneResponse(taskManager, inputLine);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"        case \"find\":","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"            ui.printFindResponse(taskManager, inputLine);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"            ui.printDeleteResponse(taskManager, inputLine);","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"            ui.printTodoResponse(taskManager, inputLine);","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"xRossKoh"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"xRossKoh"},"content":"            ui.printDeadlineResponse(taskManager, inputLine);","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"xRossKoh"},"content":"        case \"event\":","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"            ui.printEventResponse(taskManager, inputLine);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"xRossKoh"},"content":"        default:","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"xRossKoh"},"content":"            ui.printEcho(inputLine);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"xRossKoh"},"content":"        return commandLoop;","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"xRossKoh":61}},{"path":"src/main/java/xRoss/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss.storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":" * Interface containing methods to save to and read from a specified text file.","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"public interface FileManager {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"     * Read content from a specified text file.","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"    void readFromFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"     * Write content to specified text file to store them.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"    void saveToFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"xRossKoh":18}},{"path":"src/main/java/xRoss/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import xRoss.exception.EmptyStringException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":" * Represents tasks with deadlines.","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"     * DateTime format for reading from user input and saving to file","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"    final static DateTimeFormatter READ_SAVE_FORMATTER \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"     * DateTime format for printing to system output","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"    final static DateTimeFormatter DISPLAY_FORMATTER \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\");","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"     * by   Deadline date/time","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"     * Constructor for Deadline instance.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"     * @param name  Deadline description","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"     * @param by    Deadline date/time.","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"     * @throws EmptyStringException Exception thrown if \"name\" or \"by\" params are empty strings","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"    public Deadline(String name, String by) throws EmptyStringException {","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"        super(name);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"        setBy(by);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"    /**Getter and Setter for by variable*/","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"        return by;","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xRossKoh"},"content":"    public void setBy(String by) throws DateTimeParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"xRossKoh"},"content":"        this.by \u003d LocalDateTime.parse(by, READ_SAVE_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"xRossKoh"},"content":"     * Prints Deadline instance to system output.","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"xRossKoh"},"content":"    public void printTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"[D][\");","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xRossKoh"},"content":"        if (super.isDone()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xRossKoh"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"] \" + super.getName() + \" (by: \"","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"xRossKoh"},"content":"                + getBy().format(DISPLAY_FORMATTER)","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"xRossKoh"},"content":"                + \")\");","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"xRossKoh"},"content":"     * Converts Deadline instance to its String representation.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"xRossKoh"},"content":"     * @return  String representation of Deadline instance.","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"xRossKoh"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"xRossKoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"xRossKoh"},"content":"        return \"D\" + super.toString()","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"xRossKoh"},"content":"                + \" | \"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"xRossKoh"},"content":"                + getBy().format(READ_SAVE_FORMATTER)","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"xRossKoh"},"content":"                + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xRossKoh":83}},{"path":"src/main/java/xRoss/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import xRoss.exception.EmptyStringException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":" * Represents Tasks with specified date/time","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"     * DateTime format for reading from user input and saving to file","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"    final static DateTimeFormatter READ_SAVE_FORMATTER \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"     * DateTime format for printing to system output","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"    final static DateTimeFormatter DISPLAY_FORMATTER \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"            DateTimeFormatter.ofPattern(\"MMM d yyyy, HH:mm\");","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"     * at   Event date/time","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"     * Constructor for Event instance.","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"     * @param name  Event description","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"     * @param at    Event date/time","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"     * @throws EmptyStringException Exception thrown if \"name\" or \"at\" params are empty strings.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"    public Event(String name, String at) throws EmptyStringException {","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"        super(name);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"        setAt(at);","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"    /**Getter and Setter for at variable*/","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"    public LocalDateTime getAt() {","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"        return at;","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xRossKoh"},"content":"    public void setAt(String at) throws DateTimeParseException {","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"xRossKoh"},"content":"        this.at \u003d LocalDateTime.parse(at, READ_SAVE_FORMATTER);","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"xRossKoh"},"content":"     * Prints Event instance to system output.","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"xRossKoh"},"content":"    public void printTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"[E][\");","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"xRossKoh"},"content":"        if (super.isDone()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"xRossKoh"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"] \" + super.getName() + \" (at: \"","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"xRossKoh"},"content":"                + getAt().format(DISPLAY_FORMATTER)","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"xRossKoh"},"content":"                + \")\");","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"xRossKoh"},"content":"     * Converts Event instance to its String representation.","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"xRossKoh"},"content":"     * @return  String representation of Event instance.","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"xRossKoh"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"xRossKoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"xRossKoh"},"content":"        return \"E\" + super.toString()","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"xRossKoh"},"content":"                + \" | \"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"xRossKoh"},"content":"                + getAt().format(READ_SAVE_FORMATTER)","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"xRossKoh"},"content":"                + \"\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xRossKoh":82}},{"path":"src/main/java/xRoss/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import xRoss.exception.EmptyStringException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":" * Abstract class used to implement Task subclasses.","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"     * name     Task description","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"     * isDone   Boolean value denotes whether Task has been done","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"     * Protected access to be inherited by subclasses.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"    protected String name;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"     * Constructor for Task instance.","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"     * @param name  Task description.","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"     * @throws EmptyStringException Exception thrown if \"name\" param is an empty string.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"    public Task(String name) throws EmptyStringException {","lastModifiedDate":"2021-09-08"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"        if (name.isEmpty()){","lastModifiedDate":"2021-09-08"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"            throw new EmptyStringException();","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"    /**Getters and Setters for name and isDone variables*/","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"    public String getName() {","lastModifiedDate":"2021-08-22"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"        return name;","lastModifiedDate":"2021-08-22"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-22"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"        return isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"xRossKoh"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"xRossKoh"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"xRossKoh"},"content":"     * Abstract method to be implemented by Task subclasses.","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"xRossKoh"},"content":"    public abstract void printTask();","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"xRossKoh"},"content":"     * Converts Task instance to its String representation.","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"xRossKoh"},"content":"     * @return  String representation of Task instance.","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"xRossKoh"},"content":"    public String toString(){","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"xRossKoh"},"content":"        return \" | \" + (isDone()? \"1\": \"0\")","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"xRossKoh"},"content":"                + \" | \" + getName();","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"xRossKoh":66}},{"path":"src/main/java/xRoss/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import xRoss.exception.EmptyStringException;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":" * Represents Tasks with no additional parameters.","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"     * Constructor for Todo instance.","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"     * @param name  Todo description.","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"     * @throws EmptyStringException Exception thrown if \"name\" param is an empty string.","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"    public Todo(String name) throws EmptyStringException {","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"        super(name);","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"     * Prints Todo instance to system output.","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"    public void printTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"[T][\");","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"        if (super.isDone()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"] \" + super.getName());","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"     * Converts Todo instance to its String representation.","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"     * @return  String representation of Todo instance.","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"        return \"T\" + super.toString() + \"\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xRossKoh":44}},{"path":"src/main/java/xRoss/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import xRoss.TaskManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"import xRoss.exception.EmptyStringException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"import xRoss.task.Deadline;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"import xRoss.task.Event;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"import xRoss.task.Todo;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":" * Represents interaction with user","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"public class Ui {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"     * Prints a divider and new line to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"    private static void printDividerLine() {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"                \".....................................................................................................\"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"        );","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"     * Prints welcome message to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"        String logo \u003d \"        _____\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"                + \"       |  __ \\\\ _  __  __\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"                + \" _  _  |    _// \\\\|  \\\\|  \\\\\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"                + \"\\\\ \\\\/ / | |\\\\ \\\\| | |\\\\ \\\\\\\\ \\\\\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"                + \"/_/\\\\_\\\\ |_| \\\\_\\\\\\\\_/\\\\__|\\\\__|\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tHello! I\u0027m xRoss, your personal chat bot assistant!\\n\\tWhat can I do for you today?\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"     * Prints exit message to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tBye!\\n\\tHave a nice day and I hope to see you again soon!\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"xRossKoh"},"content":"     * Prints error messages for incorrect user commands to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"xRossKoh"},"content":"     * @param s Denotes command and error type to print corresponding error message.","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"xRossKoh"},"content":"    public static void printCommandErrorMessage(String s) {","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"xRossKoh"},"content":"        switch (s) {","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"xRossKoh"},"content":"        case \"todo_format\":","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tWrong Todo command format: \"","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"xRossKoh"},"content":"                    + \"String argument expected for Todo name\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\tCorrect format as follows:\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\t\\ttodo \u003cname\u003e\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"xRossKoh"},"content":"        case \"todo_empty_string\":","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tString argument for Todo name cannot be empty\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\tCorrect format as follows:\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\t\\ttodo \u003cname\u003e\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"xRossKoh"},"content":"        case \"deadline_format\":","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tWrong Deadline command format: \"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"xRossKoh"},"content":"                    + \"String argument expected for Deadline name and date/time\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\tCorrect format as follows:\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\t\\tdeadline \u003cname\u003e /by \u003cdue by date/time\u003e\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"xRossKoh"},"content":"        case \"deadline_empty_string\":","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"xRossKoh"},"content":"                    \"\\tString argument for Deadline name and date/time cannot be empty\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"xRossKoh"},"content":"                            + \"\\tCorrect format as follows:\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"xRossKoh"},"content":"                            + \"\\t\\tdeadline \u003cname\u003e /by \u003cdue by date/time\u003e\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"xRossKoh"},"content":"        case \"event_format\":","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tWrong Event command format: \"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"xRossKoh"},"content":"                    + \"String argument expected for Event name and date/time\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\tCorrect format as follows:\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\t\\tevent \u003cname\u003e /at \u003cdate/time of event\u003e\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"xRossKoh"},"content":"        case \"event_empty_string\":","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"xRossKoh"},"content":"                    \"\\tString argument for Event name and date/time cannot be empty\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"xRossKoh"},"content":"                            + \"\\tCorrect format as follows:\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"xRossKoh"},"content":"                            + \"\\t\\tevent \u003cname\u003e /at \u003cdate/time of event\u003e\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"xRossKoh"},"content":"        case \"done\":","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tWrong Mark as Done command format: \"","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"xRossKoh"},"content":"                    + \"Integer argument expected for task to be marked as done\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\tCorrect format as follows:\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\t\\tdone \u003cvalid task number\u003e\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"xRossKoh"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tWrong Delete command format: \"","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"xRossKoh"},"content":"                    + \"Integer argument expected for task to be deleted\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\tCorrect format as follows:\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\t\\tdelete \u003cvalid task number\u003e\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"xRossKoh"},"content":"        case \"find\":","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tWrong Find command format: \"","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"xRossKoh"},"content":"                    + \"String argument cannot be empty\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\tCorrect format as follows:\\n\"","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"xRossKoh"},"content":"                    + \"\\t\\tfind \u003cexpression to find\u003e\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"xRossKoh"},"content":"        case \"date_format\":","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tWrong Date/Time format: \"","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"xRossKoh"},"content":"                    + \"Date/Time argument expected in the form of DD-MM-YYYY HHmm\\n\");","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"xRossKoh"},"content":"            break;","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"xRossKoh"},"content":"        default:","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"xRossKoh"},"content":"     * Prints response to \"list\" command to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"xRossKoh"},"content":"     * @param taskManager Representation of current task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"xRossKoh"},"content":"    public static void printTaskListResponse(TaskManager taskManager) {","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"xRossKoh"},"content":"        taskManager.printTasks();","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"xRossKoh"},"content":"     * Prints response to \"done\" command to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"xRossKoh"},"content":"     * @param taskManager Representation of current task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"xRossKoh"},"content":"     * @param inputLine   Scanned user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"xRossKoh"},"content":"    public static void printDoneResponse(TaskManager taskManager, String inputLine) {","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"xRossKoh"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"xRossKoh"},"content":"            String[] taskNumberDone \u003d inputLine.split(\"done \");","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"xRossKoh"},"content":"            taskManager.markAsDone(Integer.parseInt(taskNumberDone[1]));","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"xRossKoh"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"done\");","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"xRossKoh"},"content":"        } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"xRossKoh"},"content":"            printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"xRossKoh"},"content":"     * Prints response to \"find\" command to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"xRossKoh"},"content":"     * @param taskManager Representation of current task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"xRossKoh"},"content":"     * @param inputLine   Scanned user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"xRossKoh"},"content":"    public void printFindResponse(TaskManager taskManager, String inputLine) {","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"xRossKoh"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"xRossKoh"},"content":"            String[] expToFind \u003d inputLine.split(\"find \");","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"xRossKoh"},"content":"            taskManager.findTasksWithExp(expToFind[1].trim());","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"xRossKoh"},"content":"        } catch (IndexOutOfBoundsException | EmptyStringException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"find\");","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"xRossKoh"},"content":"        } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"xRossKoh"},"content":"            printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"xRossKoh"},"content":"     * Prints response to \"delete\" command to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"xRossKoh"},"content":"     * @param taskManager Representation of current task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"xRossKoh"},"content":"     * @param inputLine   Scanned user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"xRossKoh"},"content":"    public static void printDeleteResponse(TaskManager taskManager, String inputLine) {","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"xRossKoh"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"xRossKoh"},"content":"            String[] taskNumberDone \u003d inputLine.split(\"delete \");","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"xRossKoh"},"content":"            taskManager.deleteTask(Integer.parseInt(taskNumberDone[1]));","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"xRossKoh"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"delete\");","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"xRossKoh"},"content":"        } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"xRossKoh"},"content":"            printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"xRossKoh"},"content":"     * Prints response to \"todo\" command to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"xRossKoh"},"content":"     * @param taskManager Representation of current task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"xRossKoh"},"content":"     * @param inputLine   Scanned user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"xRossKoh"},"content":"    public static void printTodoResponse(TaskManager taskManager, String inputLine) {","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"xRossKoh"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"xRossKoh"},"content":"            String[] newTodo \u003d inputLine.split(\"todo \");","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"xRossKoh"},"content":"            taskManager.addTask(new Todo(newTodo[1].trim()));","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"xRossKoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"todo_format\");","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"xRossKoh"},"content":"        } catch (EmptyStringException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"todo_empty_string\");","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"xRossKoh"},"content":"        } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"xRossKoh"},"content":"            printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"xRossKoh"},"content":"     * Prints response to \"deadline\" command to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"xRossKoh"},"content":"     * @param taskManager Representation of current task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"xRossKoh"},"content":"     * @param inputLine   Scanned user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"xRossKoh"},"content":"    public static void printDeadlineResponse(TaskManager taskManager, String inputLine) {","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"xRossKoh"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"xRossKoh"},"content":"            String[] newDeadline \u003d inputLine.split(\" /by \");","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"xRossKoh"},"content":"            taskManager.addTask(new Deadline(newDeadline[0].substring(9).trim(), newDeadline[1].trim()));","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"xRossKoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"deadline_format\");","lastModifiedDate":"2021-09-26"},{"lineNumber":220,"author":{"gitId":"xRossKoh"},"content":"        } catch (EmptyStringException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"deadline_empty_string\");","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"xRossKoh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":223,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"date_format\");","lastModifiedDate":"2021-09-27"},{"lineNumber":224,"author":{"gitId":"xRossKoh"},"content":"        } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":225,"author":{"gitId":"xRossKoh"},"content":"            printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":226,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":227,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":228,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":229,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":230,"author":{"gitId":"xRossKoh"},"content":"     * Prints response to \"event\" command to system output.","lastModifiedDate":"2021-09-26"},{"lineNumber":231,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":232,"author":{"gitId":"xRossKoh"},"content":"     * @param taskManager Representation of current task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":233,"author":{"gitId":"xRossKoh"},"content":"     * @param inputLine   Scanned user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":234,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":235,"author":{"gitId":"xRossKoh"},"content":"    public static void printEventResponse(TaskManager taskManager, String inputLine) {","lastModifiedDate":"2021-09-26"},{"lineNumber":236,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":237,"author":{"gitId":"xRossKoh"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":238,"author":{"gitId":"xRossKoh"},"content":"            String[] newEvent \u003d inputLine.split(\" /at \");","lastModifiedDate":"2021-09-26"},{"lineNumber":239,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":240,"author":{"gitId":"xRossKoh"},"content":"            taskManager.addTask(new Event(newEvent[0].substring(6).trim(), newEvent[1].trim()));","lastModifiedDate":"2021-09-26"},{"lineNumber":241,"author":{"gitId":"xRossKoh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":242,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"event_format\");","lastModifiedDate":"2021-09-26"},{"lineNumber":243,"author":{"gitId":"xRossKoh"},"content":"        } catch (EmptyStringException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":244,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"event_empty_string\");","lastModifiedDate":"2021-09-26"},{"lineNumber":245,"author":{"gitId":"xRossKoh"},"content":"        } catch(DateTimeParseException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":246,"author":{"gitId":"xRossKoh"},"content":"            printCommandErrorMessage(\"date_format\");","lastModifiedDate":"2021-09-27"},{"lineNumber":247,"author":{"gitId":"xRossKoh"},"content":"        } finally {","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"xRossKoh"},"content":"            printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":249,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":250,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":251,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":252,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":253,"author":{"gitId":"xRossKoh"},"content":"     * Prints echo of scanned user input if it is not recognized as a command","lastModifiedDate":"2021-09-26"},{"lineNumber":254,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":255,"author":{"gitId":"xRossKoh"},"content":"    public static void printEcho(String inputLine) {","lastModifiedDate":"2021-09-26"},{"lineNumber":256,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":257,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\t\" + inputLine);","lastModifiedDate":"2021-09-26"},{"lineNumber":258,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tI did not quite understand what you meant there, so I\u0027ll just echo your input...\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":259,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":260,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":261,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"xRossKoh":261}},{"path":"src/main/java/xRoss/xRoss.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"package xRoss;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"import xRoss.parser.Parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"import xRoss.ui.Ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"/**","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":" * Represents implementation of xRoss chat bot.","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":" */","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"public class xRoss {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"     * ui           Ui class instance used to invoke the relevant actions by chat bot.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"     * parser       Parser class instance used to parse scanned user input.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"     * taskManager  TaskManager class instance used to manage current task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"    private static Parser parser;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"    private static TaskManager taskManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"     * Main function to execute xRoss chat bot.","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"     * @param args","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-08"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"        taskManager.readFromFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"        boolean commandLoop \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"        while (commandLoop) {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"            String inputLine \u003d in.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"            commandLoop \u003d parser.parseCommand(taskManager, inputLine);","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"        ui.printExitMessage();","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xRossKoh":44,"-":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"todo","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"todo","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"todo read book","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"deadline","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"deadline do homework","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"deadline do homework /by Sunday 7pm","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"event","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"event sis bday 5th Sept","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"event sis bday /at 5th Sept","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"done","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"done a","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"done 4","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"xRossKoh":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"javac  -cp ..\\src\\main\\java\\xRoss -Xlint:none -d ..\\bin ..\\src\\main\\java\\xRoss\\xRoss.java","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"java -classpath ..\\bin\\xRoss xRoss \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xRossKoh":2,"-":19}}]
