[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"# xRoss project template","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"3. After that, locate the `src/main/java/xRoss.java` file, right-click it, and choose `Run xRoss.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xRossKoh":2,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"    protected String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"    public Deadline(String name, String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"        super(name);","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"        setBy(by);","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"        return by;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"    public void setBy(String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"    // prints Deadline name and by to system output","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"    public void printTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"[D][\");","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"        if (super.isDone()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"] \" + super.getName() + \" (by: \" + getBy() + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xRossKoh":31}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"    protected String at;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"    public Event(String name, String at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"        super(name);","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"        setAt(at);","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"    public String getAt() {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"        return at;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"    public void setAt(String at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"    // prints Event name and at to system output","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"    public void printTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"[E][\");","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"        if (super.isDone()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"] \" + super.getName() + \" (at: \" + getAt() + \")\");","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xRossKoh":31}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"    protected String name;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"    public String getName() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"        return name;","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"    public void setName(String name) {","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"        return isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"    // placeholder method for inherited classes","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"    public void printTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"        return;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"xRossKoh":31}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"    private Task[] tasks \u003d new Task[100];","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"    private int completedTasksCount \u003d 0;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"    private int tasksCount \u003d 0;","lastModifiedDate":"2021-08-22"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"    public void printTasks() {","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"        if (tasksCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tYou have no tasks in your to-do list at the moment\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"            return;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tThis is your current to-do list\");","lastModifiedDate":"2021-08-22"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"        for (int i \u003d 0; i \u003c tasksCount; i++) {","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\"\\t\" + (i + 1) + \".\");","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"            tasks[i].printTask();","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tThere are \" + tasksCount + \" task(s) in your to-do list\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"        // add new task to tasks array","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"        tasks[tasksCount] \u003d task;","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"        // print name of task to system output","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"\\tGot it! I\u0027ve added this task for you:\\n\\t\\t\");","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"        tasks[tasksCount].printTask();","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"        // increment total tasksCount","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"        tasksCount++;","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tThere are \" + tasksCount + \" task(s) in your to-do list\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"    public void markAsDone(int inputTaskIndex) {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"        int taskIndex \u003d inputTaskIndex - 1;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"        // check if taskIndex is out of bounds of current tasks list","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e\u003d tasksCount) {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tYou have chosen an invalid task number.\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"            printTasks();","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"            return;","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"        // check if task is already marked as done","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"        if (tasks[taskIndex].isDone()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"            System.out.println(\"\\tThis task has already been completed and marked as done.\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"            return;","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"xRossKoh"},"content":"        tasks[taskIndex].setDone();","lastModifiedDate":"2021-08-23"},{"lineNumber":50,"author":{"gitId":"xRossKoh"},"content":"        completedTasksCount++;","lastModifiedDate":"2021-08-23"},{"lineNumber":51,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"        // Print name of task to system output","lastModifiedDate":"2021-08-23"},{"lineNumber":53,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"\\tGood job! I have marked your task as done.\\n\\t\\t\");","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"xRossKoh"},"content":"        tasks[taskIndex].printTask();","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tYou have \" + (tasksCount - completedTasksCount) + \" uncompleted task(s) left in your to-do list\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":57,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"xRossKoh":57}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"        super(name);","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"    public void printTask() {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"        System.out.print(\"[T][\");","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"        if (super.isDone()) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\"X\");","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"        } else {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"            System.out.print(\" \");","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"] \" + super.getName());","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"xRossKoh":19}},{"path":"src/main/java/xRoss.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"public class xRoss {","lastModifiedDate":"2021-08-22"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"    // prints a divider line and new line to command line output","lastModifiedDate":"2021-08-18"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"    public static void printDividerLine() {","lastModifiedDate":"2021-08-22"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"..........................................................................................\");","lastModifiedDate":"2021-08-22"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"    // prints welcome message","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"xRossKoh"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"xRossKoh"},"content":"        String logo \u003d \"        _____\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"xRossKoh"},"content":"                + \"       |  __ \\\\ _  __  __\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"xRossKoh"},"content":"                + \" _  _  |    _// \\\\|  \\\\|  \\\\\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"xRossKoh"},"content":"                + \"\\\\ \\\\/ / | |\\\\ \\\\| | |\\\\ \\\\\\\\ \\\\\\n\"","lastModifiedDate":"2021-08-22"},{"lineNumber":16,"author":{"gitId":"xRossKoh"},"content":"                + \"/_/\\\\_\\\\ |_| \\\\_\\\\\\\\_/\\\\__|\\\\__|\\n\";","lastModifiedDate":"2021-08-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":19,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tHello! I\u0027m xRoss, your personal chat bot assistant!\\n\\tWhat can I do for you today?\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":22,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"xRossKoh"},"content":"    // prints exit message","lastModifiedDate":"2021-08-22"},{"lineNumber":25,"author":{"gitId":"xRossKoh"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-08-22"},{"lineNumber":26,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":27,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tBye!\\n\\tHave a nice day and I hope to see you again soon!\\n\");","lastModifiedDate":"2021-08-22"},{"lineNumber":28,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"xRossKoh"},"content":"    public static void printEcho(String inputLine) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":33,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\t\" + inputLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"xRossKoh"},"content":"        System.out.println(\"\\tI did not quite understand what you meant there, so I\u0027ll just echo your input...\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"xRossKoh"},"content":"        printDividerLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"xRossKoh"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"xRossKoh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"xRossKoh"},"content":"        printWelcomeMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":41,"author":{"gitId":"xRossKoh"},"content":"        // TaskManager instance to keep track of all tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":42,"author":{"gitId":"xRossKoh"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-08-22"},{"lineNumber":43,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"xRossKoh"},"content":"        // setting up variable and scanner for user input","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"xRossKoh"},"content":"        String inputLine;","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"xRossKoh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-22"},{"lineNumber":47,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":48,"author":{"gitId":"xRossKoh"},"content":"        // boolean value on whether","lastModifiedDate":"2021-08-22"},{"lineNumber":49,"author":{"gitId":"xRossKoh"},"content":"        boolean continueLoop \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":50,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":51,"author":{"gitId":"xRossKoh"},"content":"        while (continueLoop) {","lastModifiedDate":"2021-08-22"},{"lineNumber":52,"author":{"gitId":"xRossKoh"},"content":"            inputLine \u003d in.nextLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":53,"author":{"gitId":"xRossKoh"},"content":"            if (inputLine.equals(\"bye\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":54,"author":{"gitId":"xRossKoh"},"content":"                continueLoop \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":55,"author":{"gitId":"xRossKoh"},"content":"            } else if (inputLine.equals(\"list\")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":56,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":57,"author":{"gitId":"xRossKoh"},"content":"                taskManager.printTasks();","lastModifiedDate":"2021-08-22"},{"lineNumber":58,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":59,"author":{"gitId":"xRossKoh"},"content":"            } else if (inputLine.startsWith(\"done \")) {","lastModifiedDate":"2021-08-23"},{"lineNumber":60,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":61,"author":{"gitId":"xRossKoh"},"content":"                taskManager.markAsDone(Integer.parseInt(inputLine.substring(5)));","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-23"},{"lineNumber":63,"author":{"gitId":"xRossKoh"},"content":"            } else if (inputLine.startsWith(\"todo \")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"xRossKoh"},"content":"                Todo newTodo \u003d new Todo(inputLine.substring(5));","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"xRossKoh"},"content":"                taskManager.addTask(newTodo);","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"xRossKoh"},"content":"            } else if (inputLine.startsWith(\"deadline \")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"xRossKoh"},"content":"                String[] newDeadline \u003d inputLine.split(\" /by \");","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"xRossKoh"},"content":"                if (newDeadline.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"xRossKoh"},"content":"                    printDividerLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"xRossKoh"},"content":"                    System.out.println(\"\\tYour command for creating a new Deadline was in the wrong format.\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"xRossKoh"},"content":"                            + \"\\tThe correct format should be as follows:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"xRossKoh"},"content":"                            + \"\\t\\tdeadline \u003cname\u003e /by \u003cdue by date/time\u003e\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":76,"author":{"gitId":"xRossKoh"},"content":"                    printDividerLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"xRossKoh"},"content":"                    continue;","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"xRossKoh"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"xRossKoh"},"content":"                taskManager.addTask(new Deadline(newDeadline[0].substring(9), newDeadline[1]));","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"xRossKoh"},"content":"            } else if (inputLine.startsWith(\"event \")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"xRossKoh"},"content":"                String[] newEvent \u003d inputLine.split(\" /at \");","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"xRossKoh"},"content":"                if (newEvent.length \u003d\u003d 1) {","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"xRossKoh"},"content":"                    printDividerLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"xRossKoh"},"content":"                    System.out.println(\"\\tYour command for creating a new Event was in the wrong format.\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"xRossKoh"},"content":"                            + \"\\tThe correct format should be as follows:\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"xRossKoh"},"content":"                            + \"\\t\\tevent \u003cname\u003e /at \u003cdate/time of event\u003e\\n\");","lastModifiedDate":"2021-08-30"},{"lineNumber":90,"author":{"gitId":"xRossKoh"},"content":"                    printDividerLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"xRossKoh"},"content":"                    continue;","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"xRossKoh"},"content":"                }","lastModifiedDate":"2021-08-30"},{"lineNumber":93,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":94,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":95,"author":{"gitId":"xRossKoh"},"content":"                taskManager.addTask(new Event(newEvent[0].substring(6), newEvent[1]));","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"xRossKoh"},"content":"                printDividerLine();","lastModifiedDate":"2021-08-22"},{"lineNumber":97,"author":{"gitId":"xRossKoh"},"content":"            } else {","lastModifiedDate":"2021-08-25"},{"lineNumber":98,"author":{"gitId":"xRossKoh"},"content":"                printEcho(inputLine);","lastModifiedDate":"2021-08-25"},{"lineNumber":99,"author":{"gitId":"xRossKoh"},"content":"            }","lastModifiedDate":"2021-08-22"},{"lineNumber":100,"author":{"gitId":"xRossKoh"},"content":"        }","lastModifiedDate":"2021-08-22"},{"lineNumber":101,"author":{"gitId":"xRossKoh"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":102,"author":{"gitId":"xRossKoh"},"content":"        printExitMessage();","lastModifiedDate":"2021-08-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"xRossKoh":101,"-":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xRossKoh"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"xRossKoh"},"content":"todo read book","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"xRossKoh"},"content":"deadline do homework","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"xRossKoh"},"content":"deadline do homework /by Sunday 7pm","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"xRossKoh"},"content":"event sis bday 5th Sept","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"xRossKoh"},"content":"event sis bday /at 5th Sept","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"xRossKoh"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"xRossKoh"},"content":"done 4","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"xRossKoh"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"xRossKoh":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"xRossKoh"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\xRoss.java","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"xRossKoh"},"content":"java -classpath ..\\bin xRoss \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"xRossKoh":2,"-":19}}]
