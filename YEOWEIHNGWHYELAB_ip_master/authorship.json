[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"t-/-0-/-eat lunch ","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"e-/-0-/-dinner -/-/at1997-04-23 23:33","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"e-/-0-/-go school for CCA -/-/at2021-04-23 13:50","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"## Introducing DUKE CS2113T","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Hello there 👋 and welcome to **Duke**! **Duke** is a Task List designed to store various type of ","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"task like todo, event and deadline which can be displayed to the user.  ","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"## Setting up","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"- The text-art folder that contains all the text-art needs to be included in the JAR directory. ","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"- data/duke.txt will be created in the JAR directory if it does not exist and the duke.txt must ","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"be kept empty.","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"#### Active Update","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"The app will actively apply the last change to the duke.txt immediately after the command is ","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"entered in order to prevent the loss of data or changes when an error occur such as user ","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"accidentally pressing CTRL + C to the terminal... ","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"#### Anti-Duplicate","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Everytime a task is added, it is checked and ensure that no 2 task is exactly the same. ","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"### `todo` - Adds a todo type of Task","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Adds a todo task with the specified description (after \"todo\") and a notification will be ","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"shown on the terminal to show its been successfully added. The task will also by default ","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"be marked as not \"done\".","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: `todo Play Apex and Valorant With Friends`","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: Since \"Play Apex and Valorant With Friends\" is the description, it is ","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"shown on the notification below. And the Task is not \"done\" [ ]. It will also show the current ","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"number of task.","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      [T][ ] Play Apex and Valorant With Friends","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"### `event` - Adds a event type of Task","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Adds a event task with the specified description and at DateTime. The format must ","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"strictly be in the form of: event \u003cdescription\u003e /at \u003cyyyy-mm-dd HH:mm\u003e. ","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: `event go school for CCA /at 2021-04-23 13:50`","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: Since \"go school for CCA\" is the description, and that \"2021-04-23 13:50\" ","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"is the at DateTime. It will be shown as the following below with the description ","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"along with \"MMM d yyyy HH:mm a\" format of displaying DateTime. The task marked as not","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"\"done\" by default [ ]. It is also of the type [E]. It will also show the current ","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"number of task.","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      [E][ ] go school for CCA (at: Apr 23 2021 13:50 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"### `deadline` - Adds a deadline type of Task","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Adds a deadline task with the specified description and by DateTime. The format ","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"must strictly be in the form of: deadline \u003cdescription\u003e /by \u003cyyyy-mm-dd HH:mm\u003e. ","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: `deadline watch anime /by 2021-04-23 12:00`","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: Since \"watch anime\" is the description, and that \"2021-04-23 12:00\" ","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"is the at DateTime. It will be shown as the following below with the description ","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"along with \"MMM d yyyy HH:mm a\" format of displaying DateTime. The task marked as ","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"not \"done\" by default [ ]. It is also of the type [D]. It will also show the current ","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"number of task.","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      [D][ ] watch anime (by: Apr 23 2021 12:00 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"### `list` - List out all the current Task","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Shows the user the whole list of current Task and is numbered. ","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: `list`","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: List out all the task and numbered from 1 to the last task number. ","lastModifiedDate":"2021-09-20"},{"lineNumber":95,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"It also have type and done status displated before the description of the task.","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     1.[T][ ] eat lunch ","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     2.[E][ ] dinner (at: Apr 23 1997 23:33 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     3.[T][X] Play Apex and Valorant With Friends","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     4.[E][ ] go school for CCA (at: Apr 23 2021 13:50 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     5.[D][ ] watch anime (by: Apr 23 2021 12:00 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":105,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"### `done` - Marks a particular Task as done","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":109,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Allows the user to mark a particular task as \"done\" via its index from the \"list\" display.","lastModifiedDate":"2021-09-20"},{"lineNumber":110,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"It must strictly be in the format of: done \u003cTask Index\u003e","lastModifiedDate":"2021-09-20"},{"lineNumber":111,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: `done 3`","lastModifiedDate":"2021-09-20"},{"lineNumber":113,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: It will show a notification of the task being marked as done and this ","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"change will also be shown in the \"list\" command when it is entered. ","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     [T][X] Play Apex and Valorant With Friends","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"### `delete` - Delete a particular Task ","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Allows the user to delete a particular task via its index from the \"list\" display. ","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":128,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: `delete 5`","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: It will show a notification of the task being deleted and the deletion ","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"will also take immediate effect. Calling \"list\" command will show that the task is no ","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"longer present. It will also show that the number of task have decreased to 4.","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     Noted. I\u0027ve removed this task: ","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     [D][X] watch anime (by: Apr 23 2021 12:00 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":139,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":140,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"```","lastModifiedDate":"2021-09-20"},{"lineNumber":141,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":142,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"### `find` - Allows user to search for a Task ","lastModifiedDate":"2021-09-20"},{"lineNumber":143,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":144,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Lets user choose a particular keyword they want to search in Task and return the list of matching","lastModifiedDate":"2021-09-20"},{"lineNumber":145,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"numbered Task to the terminal. ","lastModifiedDate":"2021-09-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":147,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: `find [T]`","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":149,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: Since the keyword is [T], the program will search for all todo type of Task ","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"and list it all out on the terminal like so. The rest of the Task will not be shown.","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":152,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":153,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     1.[T][ ] eat lunch ","lastModifiedDate":"2021-09-20"},{"lineNumber":154,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"\t 2.[T][X] do homework","lastModifiedDate":"2021-09-20"},{"lineNumber":155,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":157,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"### `help` - List out the list of command ","lastModifiedDate":"2021-09-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":160,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Shows the list of command as shown on this README document. ","lastModifiedDate":"2021-09-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":162,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: `help`","lastModifiedDate":"2021-09-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":164,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: A copy of this README document. ","lastModifiedDate":"2021-09-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":166,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"### `bye` - Terminates the App.","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Shows a goodbye screen before the code terminates itself. ","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":146,"-":22}},{"path":"src/main/java/duke/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.exceptionHandler.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * Check for the type of entered command by the user.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class CommandHandler {","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * if, else if chunk to check user command.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param commandHandle Parser object which can be checked for what type of command is it.","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString Raw user input String.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param dukeTaskText Storage type object responsible for all duke.txt operation.","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return Boolean true if the command is not \"bye\" and false otherwise.","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws DukeException When invalid command is entered.","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws IOException When duke.txt is deleted while program is running.","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean commandHandle(Parser commandHandle, String userInputString, Storage dukeTaskText, Ui ui) throws DukeException, IOException {","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandHandle.isBye()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            Ui.showGoodBye();","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (commandHandle.isList()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            TaskList.printTaskList();","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (commandHandle.isDone()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            TaskList.finishTask(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (commandHandle.isDelete()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            TaskList.deleteTask(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (commandHandle.isToDo()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            TaskList.addToDo(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (commandHandle.isDeadline()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            TaskList.addDeadline(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (commandHandle.isEvent()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            TaskList.addEvent(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (commandHandle.isFind()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            TaskList.findTask(userInputString);","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (commandHandle.isHelp()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            ui.showHelp();","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":56}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This is the main class of the chat-bot app that helps user remember their different","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * types of task and \"parrot\" the task back to them when they request.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.exceptionHandler.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Main run() method. Initialize Ui, Scanner, check command and execute them accordingly.","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws IOException When there is issue with reading duke.txt due to lack of permission...","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void run() throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String userInputString;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        Storage dukeTaskText \u003d new Storage();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        TaskList.numberOfTasks \u003d dukeTaskText.loadTask(TaskList.tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        boolean isExit  \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            userInputString \u003d userInput.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            Parser commandHandle \u003d new Parser(userInputString);","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            CommandHandler runningUserCommand \u003d new CommandHandler();","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            try {","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                isExit \u003d runningUserCommand.commandHandle(commandHandle, userInputString, dukeTaskText, ui);","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } catch (DukeException dukeError) {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                dukeError.printErrorMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        userInput.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void main(String[] args) throws IOException { run(); }","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":46,"-":1}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * CommandHandling class helps to check the type of command given.","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Parser {","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private String commandString;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Constructor of CommandHandling class. Each object created","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * will consist of the attribute commandString which contain","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * the command string of the user input.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param commandString The raw user input command.","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public Parser(String commandString) {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isBye() {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.equals(\"bye\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isHelp() {","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.equals(\"help\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.equals(\"list\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isDelete() {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isToDo() {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isDeadline() {","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isEvent() {","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isFind() {","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"find\")) {","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":85}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.commandHandler.SaveCommandHandling;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.ToDo;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.File;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Storage {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static File directoryOfTaskText \u003d new File(\"./data\");","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static File dukeTaskText \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static int numberOfTasksAdded \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Find the exact line in duke.txt to remove.","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param file duke.txt directory.","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param lineToRemove Formatted String to be removed from duke.txt.","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param lastLine Is the String to be removed coming from last index.","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskNumberToDelete The Task index to delete.","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param numberOfTask The number of task left after deletion.","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void removeLineFromFile(String file, String lineToRemove, boolean lastLine, int taskNumberToDelete, int numberOfTask) {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            File inFile \u003d new File(file);","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int count \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            //@@author YEOWEIHNGWHYELAB-reused","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            //Reused from https://stackoverflow.com/questions/1377279/find-a-line-in-a-file-and-remove-it","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            // with minor modifications","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            if (!inFile.isFile()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                System.out.println(\"Parameter is not an existing file\");","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            // Construct the new file that will later be renamed to the original filename.","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileWriter(tempFile));","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            String line;","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            // Read from the original file and write to the new","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            // unless content matches data to be removed.","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                count +\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                if (!line.trim().equals(lineToRemove)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                    if (lastLine \u003d\u003d true \u0026\u0026 count \u003d\u003d taskNumberToDelete - 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        pw.print(line); // No newline...","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                        pw.flush();","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                    } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                        if (count \u003d\u003d numberOfTask) {","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                            pw.print(line);","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                            pw.flush();","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                            pw.println(line);","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                            pw.flush();","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                        }","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                    }","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            pw.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            br.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            // Delete the original file","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            if (!inFile.delete()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                System.out.println(\"Could not delete file\");","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                return;","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            // Rename the new file to the filename the original file had.","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            if (!tempFile.renameTo(inFile)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                System.out.println(\"Could not rename file\");","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":96,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Loads duke.txt to the tasks ArrayList.","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param tasks ArrayList of type Task that is responsible for storing","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws IOException If the data or duke.txt cannot be created.","lastModifiedDate":"2021-09-20"},{"lineNumber":100,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void fileTaskCopy(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        Scanner scanText \u003d new Scanner(dukeTaskText); // create a Scanner using the File as the source","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        while (scanText.hasNext()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String currentCommand \u003d scanText.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            SaveCommandHandling commandHandle \u003d new SaveCommandHandling(currentCommand);","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (commandHandle.isToDo()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                int done \u003d Integer.parseInt(currentCommand.split(\"-/-\")[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d currentCommand.split(\"-/-\")[2];","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.add(new ToDo(taskName));","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (done \u003d\u003d 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    tasks.get(numberOfTasksAdded).markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasksAdded +\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else if (commandHandle.isEvent()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                int done \u003d Integer.parseInt(currentCommand.split(\"-/-\")[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d currentCommand.split(\"-/-\")[2];","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String at \u003d currentCommand.split(\"-/-\")[3];","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.add(new Event(taskName, at));","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (done \u003d\u003d 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    tasks.get(numberOfTasksAdded).markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasksAdded +\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else if (commandHandle.isDeadline()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                int done \u003d Integer.parseInt(currentCommand.split(\"-/-\")[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d currentCommand.split(\"-/-\")[2];","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String by \u003d currentCommand.split(\"-/-\")[3];","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.add(new Deadline(taskName, by));","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (done \u003d\u003d 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    tasks.get(numberOfTasksAdded).markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasksAdded +\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        scanText.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Checks if directory exist first. If it doesn\u0027t, it means the duke.txt is also missing.","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * In such a case, make directory and then create duke.txt file there. Then if directory","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * exist, but duke.txt is missing, add duke.txt.","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param tasks ArrayList that will contain all the current task in memory.","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return The number of task added from duke.txt.","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static int loadTask(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (directoryOfTaskText.exists() \u003d\u003d false) {","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            directoryOfTaskText.mkdir();","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            dukeTaskText.createNewFile();","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (dukeTaskText.exists() \u003d\u003d false) {","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            dukeTaskText.createNewFile();","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            fileTaskCopy(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return numberOfTasksAdded;","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Check if the task already exist in the duke.txt.","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param stringToCheck","lastModifiedDate":"2021-09-20"},{"lineNumber":171,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return false when task has no duplicate and true otherwise.","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":173,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static boolean checkLineExist(String stringToCheck) {","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        //@@author YEOWEIHNGWHYELAB-reused","lastModifiedDate":"2021-09-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/questions/5600422/method-to-find-string-inside-of-the-text-file-then-getting-the-following-lines","lastModifiedDate":"2021-09-20"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2021-09-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            int lineNum \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                lineNum++;","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"                if (line.equals(stringToCheck)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                    scanner.close(); // Don\u0027t forget!","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"                    return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            scanner.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-09-20"},{"lineNumber":198,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":203,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Appends the new todo to the duke.txt.","lastModifiedDate":"2021-09-20"},{"lineNumber":204,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskName","lastModifiedDate":"2021-09-20"},{"lineNumber":205,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return true if no duplicate task is added and false otherwise.","lastModifiedDate":"2021-09-20"},{"lineNumber":206,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":207,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static boolean saveToDo(String taskName) {","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToWrite1 \u003d \"t-/-0-/-\" + taskName;","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToWrite2 \u003d \"t-/-1-/-\" + taskName;","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        //@@author YEOWEIHNGWHYELAB-reused","lastModifiedDate":"2021-09-20"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/questions/1625234/how-to-append-text-to-an-existing-file-in-java","lastModifiedDate":"2021-09-20"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        //with minor modifications","lastModifiedDate":"2021-09-20"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (checkLineExist(textToWrite1) \u003d\u003d false \u0026\u0026 checkLineExist(textToWrite2) \u003d\u003d false) {","lastModifiedDate":"2021-09-19"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                String dukeDirectory \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                File file \u003d new File(dukeDirectory);","lastModifiedDate":"2021-09-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                boolean fileIsEmpty \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"                if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    fileIsEmpty \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                FileWriter addToDo \u003d new FileWriter(dukeDirectory, true); //the true will append the new data","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                if (fileIsEmpty \u003d\u003d false) {","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                    addToDo.write(\"\\n\");","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                addToDo.write(textToWrite1);","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                addToDo.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        } catch(IOException ioe) {","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            System.err.println(\"IOException: \" + ioe.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-09-20"},{"lineNumber":238,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":240,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":242,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Appends the new event to the duke.txt.","lastModifiedDate":"2021-09-20"},{"lineNumber":243,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":244,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskName formatted task description.","lastModifiedDate":"2021-09-20"},{"lineNumber":245,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param at Raw at String.","lastModifiedDate":"2021-09-20"},{"lineNumber":246,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return true if no duplicate task is added and false otherwise.","lastModifiedDate":"2021-09-20"},{"lineNumber":247,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":248,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static boolean saveEvent(String taskName, String at) {","lastModifiedDate":"2021-09-19"},{"lineNumber":249,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String eventToWrite1 \u003d \"e-/-0-/-\" + taskName + \"-/-/at\" + at.substring(3);","lastModifiedDate":"2021-09-19"},{"lineNumber":250,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String eventToWrite2 \u003d \"e-/-1-/-\" + taskName + \"-/-/at\" + at.substring(3);","lastModifiedDate":"2021-09-19"},{"lineNumber":251,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        //@@author YEOWEIHNGWHYELAB-reused","lastModifiedDate":"2021-09-20"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/questions/1625234/how-to-append-text-to-an-existing-file-in-java","lastModifiedDate":"2021-09-20"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        //with minor modifications","lastModifiedDate":"2021-09-20"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            if (checkLineExist(eventToWrite1) \u003d\u003d false \u0026\u0026 checkLineExist(eventToWrite2) \u003d\u003d false) {","lastModifiedDate":"2021-09-19"},{"lineNumber":257,"author":{"gitId":"-"},"content":"                String dukeDirectory \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"                File file \u003d new File(dukeDirectory);","lastModifiedDate":"2021-09-19"},{"lineNumber":259,"author":{"gitId":"-"},"content":"                boolean fileIsEmpty \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    fileIsEmpty \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":263,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                FileWriter addToDo \u003d new FileWriter(dukeDirectory, true); //the true will append the new data","lastModifiedDate":"2021-09-19"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                if (fileIsEmpty \u003d\u003d false) {","lastModifiedDate":"2021-09-19"},{"lineNumber":267,"author":{"gitId":"-"},"content":"                    addToDo.write(\"\\n\");","lastModifiedDate":"2021-09-19"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":269,"author":{"gitId":"-"},"content":"                addToDo.write(eventToWrite1);","lastModifiedDate":"2021-09-19"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                addToDo.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":271,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":272,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        } catch(IOException ioe) {","lastModifiedDate":"2021-09-19"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            System.err.println(\"IOException: \" + ioe.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-09-20"},{"lineNumber":278,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":279,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":280,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":281,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":282,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Appends the new deadline to the duke.txt.","lastModifiedDate":"2021-09-20"},{"lineNumber":283,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":284,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskName formatted task description.","lastModifiedDate":"2021-09-20"},{"lineNumber":285,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param by Raw by String.","lastModifiedDate":"2021-09-20"},{"lineNumber":286,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return true if no duplicate task is added and false otherwise.","lastModifiedDate":"2021-09-20"},{"lineNumber":287,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":288,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static boolean saveDeadline(String taskName, String by) {","lastModifiedDate":"2021-09-19"},{"lineNumber":289,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String deadlineToWrite1 \u003d \"d-/-0-/-\" + taskName + \"-/-/by\" + by.substring(3);","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String deadlineToWrite2 \u003d \"d-/-1-/-\" + taskName + \"-/-/by\" + by.substring(3);","lastModifiedDate":"2021-09-19"},{"lineNumber":291,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        //@@author YEOWEIHNGWHYELAB-reused","lastModifiedDate":"2021-09-20"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/questions/1625234/how-to-append-text-to-an-existing-file-in-java","lastModifiedDate":"2021-09-20"},{"lineNumber":294,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2021-09-20"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            if (checkLineExist(deadlineToWrite1) \u003d\u003d false \u0026\u0026 checkLineExist(deadlineToWrite2) \u003d\u003d false) {","lastModifiedDate":"2021-09-19"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                String dukeDirectory \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-19"},{"lineNumber":298,"author":{"gitId":"-"},"content":"                File file \u003d new File(dukeDirectory);","lastModifiedDate":"2021-09-19"},{"lineNumber":299,"author":{"gitId":"-"},"content":"                boolean fileIsEmpty \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":301,"author":{"gitId":"-"},"content":"                if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":302,"author":{"gitId":"-"},"content":"                    fileIsEmpty \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                FileWriter addToDo \u003d new FileWriter(dukeDirectory, true); //the true will append the new data","lastModifiedDate":"2021-09-19"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                if (fileIsEmpty \u003d\u003d false) {","lastModifiedDate":"2021-09-19"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    addToDo.write(\"\\n\");","lastModifiedDate":"2021-09-19"},{"lineNumber":308,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"-"},"content":"                addToDo.write(deadlineToWrite1);","lastModifiedDate":"2021-09-19"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                addToDo.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":312,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2021-09-19"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        } catch(IOException ioe) {","lastModifiedDate":"2021-09-19"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            System.err.println(\"IOException: \" + ioe.getMessage());","lastModifiedDate":"2021-09-19"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-09-20"},{"lineNumber":318,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return true;","lastModifiedDate":"2021-09-19"},{"lineNumber":319,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":320,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":321,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":322,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Finds the corresponding task to be marked as done in duke.txt and mark as done.","lastModifiedDate":"2021-09-20"},{"lineNumber":323,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":324,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param oldLine","lastModifiedDate":"2021-09-20"},{"lineNumber":325,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskType","lastModifiedDate":"2021-09-20"},{"lineNumber":326,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws IOException","lastModifiedDate":"2021-09-20"},{"lineNumber":327,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":328,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void textFileTaskDoneMarker(String oldLine, Character taskType) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":329,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-19"},{"lineNumber":330,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        //@@author YEOWEIHNGWHYELAB-reused","lastModifiedDate":"2021-09-20"},{"lineNumber":332,"author":{"gitId":"-"},"content":"        //Reused from https://stackoverflow.com/questions/20039980/java-replace-line-in-text-file","lastModifiedDate":"2021-09-20"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        // with minor modifications","lastModifiedDate":"2021-09-20"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(new File(filePath));","lastModifiedDate":"2021-09-19"},{"lineNumber":335,"author":{"gitId":"-"},"content":"        StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2021-09-19"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        while (sc.hasNextLine() \u003d\u003d true) {","lastModifiedDate":"2021-09-19"},{"lineNumber":338,"author":{"gitId":"-"},"content":"            buffer.append(sc.nextLine());","lastModifiedDate":"2021-09-19"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            if (sc.hasNextLine() \u003d\u003d true) {","lastModifiedDate":"2021-09-19"},{"lineNumber":340,"author":{"gitId":"-"},"content":"                buffer.append(System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":341,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        String fileContents \u003d buffer.toString();","lastModifiedDate":"2021-09-19"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        String newLine \u003d \"\";","lastModifiedDate":"2021-09-19"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        if (taskType \u003d\u003d \u0027t\u0027) {","lastModifiedDate":"2021-09-19"},{"lineNumber":348,"author":{"gitId":"-"},"content":"            newLine +\u003d \"t-/-1-/-\" + oldLine.substring(8);","lastModifiedDate":"2021-09-19"},{"lineNumber":349,"author":{"gitId":"-"},"content":"        } else if (taskType \u003d\u003d \u0027e\u0027) {","lastModifiedDate":"2021-09-19"},{"lineNumber":350,"author":{"gitId":"-"},"content":"            newLine +\u003d \"e-/-1-/-\" + oldLine.substring(8);","lastModifiedDate":"2021-09-19"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":352,"author":{"gitId":"-"},"content":"            newLine +\u003d \"d-/-1-/-\" + oldLine.substring(8);","lastModifiedDate":"2021-09-19"},{"lineNumber":353,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":355,"author":{"gitId":"-"},"content":"        sc.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        fileContents \u003d fileContents.replaceAll(oldLine, newLine);","lastModifiedDate":"2021-09-19"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":359,"author":{"gitId":"-"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-19"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        writer.append(fileContents);","lastModifiedDate":"2021-09-19"},{"lineNumber":361,"author":{"gitId":"-"},"content":"        writer.flush();","lastModifiedDate":"2021-09-19"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        writer.close();","lastModifiedDate":"2021-09-19"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2021-09-20"},{"lineNumber":364,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":365,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":366,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":367,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String textToDoSaveFormatter(String rawTaskDescription) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":368,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskDecription \u003d rawTaskDescription.substring(7);","lastModifiedDate":"2021-09-19"},{"lineNumber":369,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"t-/-0-/-\" + taskDecription;","lastModifiedDate":"2021-09-19"},{"lineNumber":370,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":371,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":372,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String textEventSaveFormatter(String rawTaskDescription) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":373,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskFullDecription \u003d rawTaskDescription.substring(7);","lastModifiedDate":"2021-09-19"},{"lineNumber":374,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":375,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskDescription \u003d taskFullDecription.split(\"at: \")[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":376,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int indexOfDescriptionEnd \u003d taskDescription.length() - 2;","lastModifiedDate":"2021-09-19"},{"lineNumber":377,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        taskDescription \u003d taskDescription.substring(0, indexOfDescriptionEnd);","lastModifiedDate":"2021-09-19"},{"lineNumber":378,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":379,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskAt \u003d taskFullDecription.split(\"at: \")[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":380,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int indexOfByEnd \u003d taskAt.length() - 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":381,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        taskAt \u003d taskAt.substring(0, indexOfByEnd);","lastModifiedDate":"2021-09-19"},{"lineNumber":382,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":383,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"e-/-0-/-\" + taskDescription + \" -/-/at\" + taskAt;","lastModifiedDate":"2021-09-19"},{"lineNumber":384,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":385,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":386,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String textDeadlineSaveFormatter(String rawTaskDescription) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":387,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskFullDecription \u003d rawTaskDescription.substring(7);","lastModifiedDate":"2021-09-19"},{"lineNumber":388,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":389,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskDescription \u003d taskFullDecription.split(\"by: \")[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":390,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int indexOfDescriptionEnd \u003d taskDescription.length() - 2;","lastModifiedDate":"2021-09-19"},{"lineNumber":391,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        taskDescription \u003d taskDescription.substring(0, indexOfDescriptionEnd);","lastModifiedDate":"2021-09-19"},{"lineNumber":392,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":393,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskBy \u003d taskFullDecription.split(\"by: \")[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":394,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int indexOfByEnd \u003d taskBy.length() - 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":395,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        taskBy \u003d taskBy.substring(0, indexOfByEnd);","lastModifiedDate":"2021-09-19"},{"lineNumber":396,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":397,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"d-/-0-/-\" + taskDescription + \" -/-/by\" + taskBy;","lastModifiedDate":"2021-09-19"},{"lineNumber":398,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":399,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":400,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void saveFinishedTask(String rawTaskDescription) throws IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":401,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (rawTaskDescription.substring(1,2).equals(\"T\") \u003d\u003d true) {","lastModifiedDate":"2021-09-19"},{"lineNumber":402,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String formattedDescription \u003d textToDoSaveFormatter(rawTaskDescription);","lastModifiedDate":"2021-09-19"},{"lineNumber":403,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textFileTaskDoneMarker(formattedDescription, \u0027t\u0027);","lastModifiedDate":"2021-09-19"},{"lineNumber":404,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (rawTaskDescription.substring(1,2).equals(\"E\") \u003d\u003d true) {","lastModifiedDate":"2021-09-19"},{"lineNumber":405,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String formattedDescription \u003d textEventSaveFormatter(rawTaskDescription);","lastModifiedDate":"2021-09-19"},{"lineNumber":406,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textFileTaskDoneMarker(formattedDescription, \u0027e\u0027);","lastModifiedDate":"2021-09-19"},{"lineNumber":407,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":408,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String formattedDescription \u003d textDeadlineSaveFormatter(rawTaskDescription);","lastModifiedDate":"2021-09-19"},{"lineNumber":409,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textFileTaskDoneMarker(formattedDescription, \u0027d\u0027);","lastModifiedDate":"2021-09-19"},{"lineNumber":410,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":411,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":412,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":223,"-":189}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * TaskList that stores the current list in memory and also provides methods to","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * delete Task, add Task, done Task, find Task, list Task...","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.exceptionHandler.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskOperations.StringToRemoveFormat;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.ToDo;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class TaskList {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static int numberOfTasks \u003d 0;","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Takes in the raw userInputString and then based on the task index, and calls","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * removeLineFromFile method to remove the corresponding task from duke.txt.","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString Raw user input.","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param dukeTaskText Storage object that contains removeLineFromFile method.","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void deleteTask(String userInputString, Storage dukeTaskText) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int taskNumberToDelete \u003d Integer.parseInt(userInputString.split(\" \")[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String textToRemove;","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            boolean lastLine \u003d false;","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (taskNumberToDelete \u003d\u003d numberOfTasks \u0026\u0026 numberOfTasks !\u003d 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                lastLine \u003d true;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (taskNumberToDelete \u003c\u003d numberOfTasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.get(taskNumberToDelete - 1).deletedSuccessfully(numberOfTasks - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String typeOfTask \u003d tasks.get(taskNumberToDelete - 1).toString().substring(1,2);","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskIsDone \u003d tasks.get(taskNumberToDelete - 1).toString().substring(4,5);","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String rawTaskDescription;","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (typeOfTask.equals(\"E\") || typeOfTask.equals(\"D\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    rawTaskDescription \u003d tasks.get(taskNumberToDelete - 1).toRawString().substring(7);","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                else {","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    rawTaskDescription \u003d tasks.get(taskNumberToDelete - 1).toString().substring(7);","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                textToRemove \u003d StringToRemoveFormat.getStringToRemove(typeOfTask, taskIsDone, rawTaskDescription);","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                dukeTaskText.removeLineFromFile(\"./data/duke.txt\", textToRemove, lastLine, taskNumberToDelete, numberOfTasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.remove(taskNumberToDelete - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasks -\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"Please Enter the Legit Task Number to Delete... Or I won\u0027t talk to you!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Please Enter the Legit Task Number to Delete... Or I won\u0027t talk to you!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Adds a new todo task with the description of task provided. Format is","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * strictly: todo \u003cdescription\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString which contains the \"todo\" command along with","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        the description of the todo task. No time","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        details is needed here.","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param dukeTaskText Storage object that contains saveToDo method.","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addToDo(String userInputString, Storage dukeTaskText) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskName \u003d userInputString.substring(5);","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (taskName.equals(\"\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (dukeTaskText.saveToDo(taskName) \u003d\u003d true) {","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.add(new ToDo(taskName));","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasks +\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.get(numberOfTasks - 1).printAddingStatus(numberOfTasks - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"Please enter a different description. Or I will destroy your computer!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Adds a new deadline task with the description of deadline task provided","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * along with the time which is due \"by\". The format of command is quite strict:","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * deadline \u003cdescription\u003e /by \u003ctime\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Trail and Leading space are compulsory for /by separator","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString which contains the \"deadline\" command along with","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        the description of the deadline task and followed","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        by a \"/\" to separate the due time \"by\".","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param dukeTaskText Storage object that will be passed to addDeadlineCheckDescription.","lastModifiedDate":"2021-09-20"},{"lineNumber":112,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addDeadline(String userInputString, Storage dukeTaskText) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (userInputString.indexOf(\" /by \") \u003d\u003d -1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"Don\u0027t forget to add /by (must have trail and lead whitespace) to separate description and deadline\");","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            else {","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d userInputString.substring(9).split(\"/\")[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String by \u003d userInputString.substring(9).split(\"/\")[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addDeadlineCheckDescription(dukeTaskText, taskName, by);","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description and deadline info of deadline cannot be empty!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":130,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Check for the format of by is yyyy-mm-dd HH:mm.","lastModifiedDate":"2021-09-20"},{"lineNumber":131,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":132,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param dukeTaskText","lastModifiedDate":"2021-09-20"},{"lineNumber":133,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskName","lastModifiedDate":"2021-09-20"},{"lineNumber":134,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param by","lastModifiedDate":"2021-09-20"},{"lineNumber":135,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addDeadlineCheck(Storage dukeTaskText, String taskName, String by) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String formattedDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String date \u003d by.split(\" \")[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String time \u003d by.split(\" \")[2];","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            formattedDateTime \u003d date + \"T\" + time;","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The deadline is not stated correctly\");","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            dateTime \u003d LocalDateTime.parse(formattedDateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (DateTimeParseException formatIssue) {","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Deadline be in the format of: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (dukeTaskText.saveDeadline(taskName, by) \u003d\u003d true) {","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.add(new Deadline(taskName, by));","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            numberOfTasks +\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.get(numberOfTasks - 1).printAddingStatus(numberOfTasks - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Please enter a different description. Or I will destroy your computer!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":166,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Check for formatting of command.","lastModifiedDate":"2021-09-20"},{"lineNumber":167,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param dukeTaskText","lastModifiedDate":"2021-09-20"},{"lineNumber":168,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskName","lastModifiedDate":"2021-09-20"},{"lineNumber":169,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param by","lastModifiedDate":"2021-09-20"},{"lineNumber":170,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-20"},{"lineNumber":171,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":172,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addDeadlineCheckDescription(Storage dukeTaskText, String taskName, String by) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskName.equals(\"\") || by.equals(\"by \")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description and event time info of event cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            addDeadlineCheck(dukeTaskText, taskName, by);","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Adds a new event task with the description of task provided and time","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * which it is happening \"at\". The format of command is quite strict:","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * event \u003cdescription\u003e /at \u003ctime\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Trail and Leading space are compulsory for /at separator","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString which contains the \"event\" command along with","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        the description of the event task followed by","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        a \"/\" to separate the happening time \"at\".","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addEvent(String userInputString, Storage dukeTaskText) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (userInputString.indexOf(\" /at \") \u003d\u003d -1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"Don\u0027t forget to add /at (must have trail and lead whitespace) to separate description and event time\");","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d userInputString.substring(6).split(\"/\")[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String at \u003d userInputString.substring(6).split(\"/\")[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addEventCheckDescription(dukeTaskText, taskName, at);","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description and event time info of event cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":207,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Checks if the format of at is yyyy-mm-dd HH:mm.","lastModifiedDate":"2021-09-20"},{"lineNumber":208,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":209,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param dukeTaskText","lastModifiedDate":"2021-09-20"},{"lineNumber":210,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskName","lastModifiedDate":"2021-09-20"},{"lineNumber":211,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param at","lastModifiedDate":"2021-09-20"},{"lineNumber":212,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-20"},{"lineNumber":213,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":214,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addEventCheck(Storage dukeTaskText, String taskName, String at) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String formattedDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":216,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":217,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String date \u003d at.split(\" \")[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String time \u003d at.split(\" \")[2];","lastModifiedDate":"2021-09-19"},{"lineNumber":219,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            formattedDateTime \u003d date + \"T\" + time;","lastModifiedDate":"2021-09-19"},{"lineNumber":220,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The deadline is not stated correctly\");","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":224,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            dateTime \u003d LocalDateTime.parse(formattedDateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (DateTimeParseException formatIssue) {","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Deadline be in the format of: yyyy-mm-dd HH:mm\");","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (dukeTaskText.saveEvent(taskName, at) \u003d\u003d true) {","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.add(new Event(taskName, at));","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            numberOfTasks +\u003d 1;","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":236,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.get(numberOfTasks - 1).printAddingStatus(numberOfTasks - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":237,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":238,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Please enter a different description. Or I will destroy your computer!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":240,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":242,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":243,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Checks for formatting of command.","lastModifiedDate":"2021-09-20"},{"lineNumber":244,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":245,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param dukeTaskText","lastModifiedDate":"2021-09-20"},{"lineNumber":246,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskName","lastModifiedDate":"2021-09-20"},{"lineNumber":247,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param at","lastModifiedDate":"2021-09-20"},{"lineNumber":248,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws DukeException","lastModifiedDate":"2021-09-20"},{"lineNumber":249,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":250,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addEventCheckDescription(Storage dukeTaskText, String taskName, String at) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":251,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskName.equals(\"\") || at.equals(\"at \")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":252,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description and event time info of event cannot be empty.\");","lastModifiedDate":"2021-09-19"},{"lineNumber":253,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":254,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            addEventCheck(dukeTaskText, taskName, at);","lastModifiedDate":"2021-09-19"},{"lineNumber":255,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":256,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":257,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":258,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":259,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Prints the current list of task when the \"list\" command is","lastModifiedDate":"2021-09-19"},{"lineNumber":260,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * entered to the terminal.","lastModifiedDate":"2021-09-19"},{"lineNumber":261,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":262,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void printTaskList() {","lastModifiedDate":"2021-09-19"},{"lineNumber":263,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-19"},{"lineNumber":264,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i +\u003d 1) {","lastModifiedDate":"2021-09-19"},{"lineNumber":265,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.print(\"     \");","lastModifiedDate":"2021-09-19"},{"lineNumber":266,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.print((i + 1) + \".\");","lastModifiedDate":"2021-09-19"},{"lineNumber":267,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.get(i).printStatus();","lastModifiedDate":"2021-09-19"},{"lineNumber":268,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":269,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-19"},{"lineNumber":270,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":271,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":272,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":273,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":274,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Marks a certain task based on task number as finished.","lastModifiedDate":"2021-09-19"},{"lineNumber":275,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":276,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString which contains the \"done\" command along with the","lastModifiedDate":"2021-09-19"},{"lineNumber":277,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        finished task number.","lastModifiedDate":"2021-09-19"},{"lineNumber":278,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":279,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void finishTask(String userInputString, Storage dukeTaskText) throws DukeException, IOException {","lastModifiedDate":"2021-09-19"},{"lineNumber":280,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int taskNumber \u003d Integer.parseInt(userInputString.split(\" \")[1]);","lastModifiedDate":"2021-09-19"},{"lineNumber":281,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":282,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskNumber \u003c\u003d numberOfTasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":283,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2021-09-19"},{"lineNumber":284,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-19"},{"lineNumber":285,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Please Enter the Legit Task Number... Or I won\u0027t talk to you!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":286,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":287,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":288,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        dukeTaskText.saveFinishedTask(tasks.get(taskNumber - 1).toRawString());","lastModifiedDate":"2021-09-19"},{"lineNumber":289,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":291,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void findTask(String userInputString) throws DukeException {","lastModifiedDate":"2021-09-20"},{"lineNumber":292,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (userInputString.length() \u003c 6) {","lastModifiedDate":"2021-09-20"},{"lineNumber":293,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Please enter something to find :(\");","lastModifiedDate":"2021-09-20"},{"lineNumber":294,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":295,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":296,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String keyWord \u003d userInputString.split(\" \")[1];","lastModifiedDate":"2021-09-20"},{"lineNumber":297,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":298,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        ArrayList\u003cTask\u003e matchedTaskList \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-20"},{"lineNumber":299,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                            .filter(n -\u003e { return n.toString().contains(keyWord); })","lastModifiedDate":"2021-09-20"},{"lineNumber":300,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                            .collect(Collectors.toList());","lastModifiedDate":"2021-09-20"},{"lineNumber":301,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":302,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int sizeOfMatchedList \u003d matchedTaskList.size();","lastModifiedDate":"2021-09-20"},{"lineNumber":303,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":304,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-20"},{"lineNumber":305,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        for (int i \u003d 0; i \u003c sizeOfMatchedList; i +\u003d 1) {","lastModifiedDate":"2021-09-20"},{"lineNumber":306,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.print(\"     \");","lastModifiedDate":"2021-09-20"},{"lineNumber":307,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.print((i + 1) + \".\");","lastModifiedDate":"2021-09-20"},{"lineNumber":308,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            matchedTaskList.get(i).printStatus();","lastModifiedDate":"2021-09-20"},{"lineNumber":309,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":310,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-20"},{"lineNumber":311,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":312,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":312}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * Printing Welcome and Goodbye Text...","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.delay.Delay_ms;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.printTextFile.PrintTextFile;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Ui {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static PrintTextFile printHelloText \u003d new PrintTextFile(\"text-art/HelloText.txt\");","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static PrintTextFile printParrotText \u003d new PrintTextFile(\"text-art/ParrotText.txt\");","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static PrintTextFile printDukeyText \u003d new PrintTextFile(\"text-art/DukeyText.txt\");","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static PrintTextFile printByeText \u003d new PrintTextFile(\"text-art/ByeText.txt\");","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static PrintTextFile printShowHelp \u003d new PrintTextFile(\"text-art/HelpText.txt\");","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        Delay_ms delay \u003d new Delay_ms();","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        printDukeyText.printText();","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        delay.wait(500);","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        printParrotText.printText();","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        delay.wait(500);","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        printHelloText.printText();","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void showHelp() {","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        printShowHelp.printText();","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void showGoodBye() {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        printByeText.printText();","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":35}},{"path":"src/main/java/duke/commandHandler/SaveCommandHandling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.commandHandler;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This class takes in the command String from the duke.txt and","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * then check for the type of task.","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class SaveCommandHandling {","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private String commandString;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public SaveCommandHandling(String commandString) {","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isToDo() {","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\"-/-\")[0].equals(\"t\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isDeadline() {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\"-/-\")[0].equals(\"d\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isEvent() {","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\"-/-\")[0].equals(\"e\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":37}},{"path":"src/main/java/duke/delay/Delay_ms.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.delay;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This class lets the user specify the amount of time which the thread will","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * do \"sleep\" for a specified duration in ms and then return the control to the","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * caller.","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Delay_ms {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Causes a delay in execution of code for specified duration","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * before returning control back to the caller of this method.","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param ms The amount of millisecond to delay execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void wait(int ms) {","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            Thread.sleep(ms);","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (InterruptedException ex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":25}},{"path":"src/main/java/duke/exceptionHandler/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.exceptionHandler;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This is the DukeException Handler and is only targeted at Duke.java class.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String openingString \u003d \"     ☹ OOPS!!! \";","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * This calls the superclass Exception constructor and creates the exception","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * object with the error message.","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param errorMessage The error message string.","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Concatenates the openingString and errorMessage.","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printErrorMessage() {","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(openingString + this.getMessage());","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-09"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":30}},{"path":"src/main/java/duke/printTextFile/PrintTextFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.printTextFile;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This class allows printing of a text file in the specified directory. It creates","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * objects based on their fileDirectory.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class PrintTextFile {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private String fileDirectory;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * The constructor for PrintTextFile to create text printing objects.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param fileDirectory .","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public PrintTextFile(String fileDirectory) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.fileDirectory \u003d fileDirectory;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Reads a .txt file in ASCII format and then print every single character (converted","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * ASCII index to characters) inside that .txt file onto the terminal.","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws IOException Trying to read the .txt file which user do not have permission or a","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                     .txt file that does not exist.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printText() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            /**","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             * Note that the text file must be placed at the base java directory (when","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             * directory is not clearly specified), and the name of the text file is","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             * placed here!","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             */","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            FileReader readTextFile \u003d new FileReader(this.fileDirectory);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int singleCharacters;","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            while ((singleCharacters \u003d readTextFile.read()) !\u003d -1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                // Print each character individually.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                System.out.print((char) singleCharacters);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            readTextFile.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IOException except) {","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.println(\"IO EXCEPTION!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.println(\"Ensure that you have files in correct directory and named correctly!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            except.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":56}},{"path":"src/main/java/duke/taskOperations/StringToRemoveFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskOperations;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This class takes in the task description and date+time and converts it to the duke.txt","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * storage format for each type of task.","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class StringToRemoveFormat {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Format according to type of task, task done status and rawTaskDescription to","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * match with the duke.txt format.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param typeOfTask todo/event/deadline.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskIsDone X marks that the task is done.","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param  rawTaskDescription raw task description includes the \"at: \" or \"by: \"","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return the formatted string in duke.txt to be removed.","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String getStringToRemove(String typeOfTask, String taskIsDone, String rawTaskDescription) {","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (typeOfTask.equals(\"T\") \u003d\u003d true) {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d getStringToDoFormat(taskIsDone, rawTaskDescription);","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (typeOfTask.equals(\"E\") \u003d\u003d true) {","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskDescription \u003d rawTaskDescription.split(\"at: \")[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int indexOfDescriptionEnd \u003d taskDescription.length() - 2;","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            taskDescription \u003d taskDescription.substring(0, indexOfDescriptionEnd);","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskAt \u003d rawTaskDescription.split(\"at: \")[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int indexOfByEnd \u003d taskAt.length() - 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            taskAt \u003d taskAt.substring(0, indexOfByEnd);","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d getStringEventDeadlineFormat(taskIsDone, taskDescription, taskAt, \"e\", \" -/-/at\");","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskDescription \u003d rawTaskDescription.split(\"by: \")[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int indexOfDescriptionEnd \u003d taskDescription.length() - 2;","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            taskDescription \u003d taskDescription.substring(0, indexOfDescriptionEnd);","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskBy \u003d rawTaskDescription.split(\"by: \")[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int indexOfByEnd \u003d taskBy.length() - 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            taskBy \u003d taskBy.substring(0, indexOfByEnd);","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d getStringEventDeadlineFormat(taskIsDone, taskDescription, taskBy, \"d\", \" -/-/by\");","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Format for event and deadline in duke.txt for deletion","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param typeOfTask event/deadline.","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskIsDone X marks that the task is done.","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskAtBy Only contains the \"by\" and \"at\" description without \"at: \" or \"by: \".","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param separator Separator string \"-/-/by\" or \"-/-/at\"","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskDescription Only contains task description.","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return the formatted event/deadline string in duke.txt to be removed.","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String getStringEventDeadlineFormat(String taskIsDone, String taskDescription, String taskAtBy, String typeOfTask, String separator) {","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskIsDone.equals(\"X\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d typeOfTask + \"-/-1-/-\" + taskDescription + separator + taskAtBy;","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d typeOfTask + \"-/-0-/-\" + taskDescription + separator + taskAtBy;","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Format for todo task to match in duke.txt for deletion.","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param taskIsDone X marks that the task is done.","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param  rawTaskDescription raw task description includes the \"at: \" or \"by: \"","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return the formatted todo string in duke.txt to be removed.","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String getStringToDoFormat(String taskIsDone, String rawTaskDescription) {","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskIsDone.equals(\"X\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d \"t-/-1-/-\" + rawTaskDescription;","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d \"t-/-0-/-\" + rawTaskDescription;","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":84}},{"path":"src/main/java/duke/taskType/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskType;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * Deadline class which is a subclass of Task. It extends Task by providing","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * its own printing format, and it also has a time \"by\" parameter added.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Deadline constructor creating object with attribute of the event task\u0027s","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * description and the due date.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param by          Due date in the form of string.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printAddingStatus(int numberOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"      \" + this.toString() + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"    \" + \"Now you have \" + (numberOfTasks + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toRawString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by.substring(3) + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String by \u003d this.by.substring(3);","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String date \u003d by.split(\" \")[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String time \u003d by.split(\" \")[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String formattedDateTime \u003d date + \"T\" + time;","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        LocalDateTime dt \u003d LocalDateTime.parse(formattedDateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        DateTimeFormatter formatTimeNow \u003d DateTimeFormatter.ofPattern(\"HH:mm a\");","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String newBy \u003d dt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + dt.format(formatTimeNow);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + newBy + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printStatus() {","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":58}},{"path":"src/main/java/duke/taskType/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskType;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * Event class which is a subclass of Task. It extends Task by providing","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * its own printing format, and it also has a time \"at\" parameter added.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    protected String at;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Event constructor creating object with attribute of the event task\u0027s","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * description and the time of occurence.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param description which is the string of description about this todo task.","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param at          Time of occurrence in the form of string.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printAddingStatus(int numberOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"      \" + this.toString() + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"    \" + \"Now you have \" + (numberOfTasks + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toRawString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.at.substring(3) + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String at \u003d this.at.substring(3);","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String date \u003d at.split(\" \")[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String time \u003d at.split(\" \")[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String formattedDateTime \u003d date + \"T\" + time;","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        LocalDateTime dt \u003d LocalDateTime.parse(formattedDateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        DateTimeFormatter formatTimeNow \u003d DateTimeFormatter.ofPattern(\"HH:mm a\");","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String newAt \u003d dt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + dt.format(formatTimeNow);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + newAt + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printStatus() {","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":58}},{"path":"src/main/java/duke/taskType/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskType;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This class responsible for creating Task objects. It includes their","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * description and tracks if the task object \"isDone\". It is the superclass","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * of Event, Deadline and ToDo.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Task\u0027s constructor. It takes in the description of a task and initialize the","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * \"done\" status to false.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * This printing function is created in case if the object created has no","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * specified type of being \"todo\", \"event\" or \"dealine\".","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param numberOfTasks is the number of task...","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printAddingStatus(int numberOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Please specify the task... :(\");","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Returns the status of a particular task.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return String containing the status.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Sets a particular task to done.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.print(\"     \");","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.printStatus();","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void deletedSuccessfully(int numberOfTasksLeft) {","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.print(\"     \");","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.printStatus();","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"     \" + \"Now you have \" + numberOfTasksLeft + \" tasks in the list.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toRawString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Prints out the status of a task along with the description.","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":78,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":79,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":80,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":81,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":82}},{"path":"src/main/java/duke/taskType/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskType;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * ToDo class which is a subclass of Task. It extends Task by providing","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * its own printing format.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * ToDo constructor creating object with attribute of the todo task\u0027s","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * description.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param description which is the string of description about this todo","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                    task.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printAddingStatus(int numberOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"      \" + this.toString() + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"    \" + \"Now you have \" + (numberOfTasks + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toRawString() {","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":38}},{"path":"text-art/ByeText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            .-\u0027\u0027\u0027-.        .-\u0027\u0027\u0027-.                                                        ","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"           \u0027   _    \\     \u0027   _    \\ _______                                              ","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"         /   /` \u0027.   \\  /   /` \u0027.   \\\\  ___ `\u0027.   /|                       __.....__      ","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  .--./).   |     \\  \u0027 .   |     \\  \u0027 \u0027 |--.\\  \\  ||    .-.          .-.-\u0027\u0027         \u0027.    ","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" /.\u0027\u0027\\\\ |   \u0027      |  \u0027|   \u0027      |  \u0027| |    \\  \u0027 ||     \\ \\        / /     .-\u0027\u0027\"\u0027-.  `.  ","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"| |  | |\\    \\     / / \\    \\     / / | |     |  \u0027||  __  \\ \\      / /     /________\\   \\ ","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\`-\u0027 /  `.   ` ..\u0027 /   `.   ` ..\u0027 /  | |     |  |||/\u0027__ \u0027.\\ \\    / /|                  | ","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" /(\"\u0027`      \u0027-...-\u0027`       \u0027-...-\u0027`   | |     \u0027 .\u0027|:/`  \u0027. \u0027\\ \\  / / \\    .-------------\u0027 ","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\ \u0027---.                              | |___.\u0027 /\u0027 ||     | | \\ `  /   \\    \u0027-.____...---. ","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  /\u0027\"\"\u0027.\\                            /_______.\u0027/  ||\\    / \u0027  \\  /     `.             .\u0027  ","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ||     ||                           \\_______|/   |/\\\u0027..\u0027 /   / /        `\u0027\u0027-...... -\u0027    ","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\\u0027. __//                                         \u0027  `\u0027-\u0027`|`-\u0027 /                          ","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  `\u0027---\u0027                                                   \u0027..\u0027                           ","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Bye. Hope to not see you again soon! Me go sleep. Don\u0027t wake me!","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":19}},{"path":"text-art/DukeyText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ________  ___  ___  ___  __    _______       ___    ___ ","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"|\\   ___ \\|\\  \\|\\  \\|\\  \\|\\  \\ |\\  ___ \\     |\\  \\  /  /|","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"\\ \\  \\_|\\ \\ \\  \\\\\\  \\ \\  \\/  /|\\ \\   __/|    \\ \\  \\/  / /","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\ \\  \\ \\\\ \\ \\  \\\\\\  \\ \\   ___  \\ \\  \\_|/__   \\ \\    / / ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  \\ \\  \\_\\\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\   \\/  /  /  ","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"   \\ \\_______\\ \\_______\\ \\__\\\\ \\__\\ \\_______\\__/  / /    ","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    \\|_______|\\|_______|\\|__| \\|__|\\|_______|\\___/ /     ","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                            \\|___|/      ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":10}},{"path":"text-art/HelloText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Hello! I\u0027m Parrot Boi, What can I not do for you (I\u0027m Lazy)? ","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"c(＞ω＜)ゞ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"I\u0027m currently in parrot to-do mode!","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Give me something to remember and I will annoy you XD    ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":10}},{"path":"text-art/HelpText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"1) todo - Adds a todo type of Task","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Adds a todo task with the specified description (after “todo”) and a notification will be shown on the terminal to show its been successfully added. The task will also by default be marked as not “done”.","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: todo Play Apex and Valorant With Friends","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: Since “Play Apex and Valorant With Friends” is the description, it is shown on the notification below. And the Task is not “done” [ ]. It will also show the current number of task.","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      [T][ ] Play Apex and Valorant With Friends","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"2) event - Adds a event type of Task","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Adds a event task with the specified description and at DateTime. The format must strictly be in the form of: event /at .","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: event go school for CCA /at 2021-04-23 13:50","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: Since “go school for CCA” is the description, and that “2021-04-23 13:50” is the at DateTime. It will be shown as the following below with the description along with “MMM d yyyy HH:mm a” format of displaying DateTime. The task marked as not “done” by default [ ]. It is also of the type [E]. It will also show the current number of task.","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      [E][ ] go school for CCA (at: Apr 23 2021 13:50 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"3) deadline - Adds a deadline type of Task","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Adds a deadline task with the specified description and by DateTime. The format must strictly be in the form of: deadline /by .","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: deadline watch anime /by 2021-04-23 12:00","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: Since “watch anime” is the description, and that “2021-04-23 12:00” is the at DateTime. It will be shown as the following below with the description along with “MMM d yyyy HH:mm a” format of displaying DateTime. The task marked as not “done” by default [ ]. It is also of the type [D]. It will also show the current number of task.","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      [D][ ] watch anime (by: Apr 23 2021 12:00 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"4) list - List out all the current Task","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Shows the user the whole list of current Task and is numbered.","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: list","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: List out all the task and numbered from 1 to the last task number. It also have type and done status displated before the description of the task.","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     1.[T][ ] eat lunch ","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     2.[E][ ] dinner (at: Apr 23 1997 23:33 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     3.[T][X] Play Apex and Valorant With Friends","lastModifiedDate":"2021-09-20"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     4.[E][ ] go school for CCA (at: Apr 23 2021 13:50 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     5.[D][ ] watch anime (by: Apr 23 2021 12:00 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"5) done - Marks a particular Task as done","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Allows the user to mark a particular task as “done” via its index from the “list” display. It must strictly be in the format of: done","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: done 3","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: It will show a notification of the task being marked as done and this change will also be shown in the “list” command when it is entered.","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     [T][X] Play Apex and Valorant With Friends","lastModifiedDate":"2021-09-20"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"6) delete - Delete a particular Task","lastModifiedDate":"2021-09-20"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Allows the user to delete a particular task via its index from the “list” display.","lastModifiedDate":"2021-09-20"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: delete 5","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: It will show a notification of the task being deleted and the deletion will also take immediate effect. Calling “list” command will show that the task is no longer present. It will also show that the number of task have decreased to 4.","lastModifiedDate":"2021-09-20"},{"lineNumber":73,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     Noted. I\u0027ve removed this task: ","lastModifiedDate":"2021-09-20"},{"lineNumber":76,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     [D][X] watch anime (by: Apr 23 2021 12:00 PM)","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":80,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"7) find - Allows user to search for a Task","lastModifiedDate":"2021-09-20"},{"lineNumber":81,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Lets user choose a particular keyword they want to search in Task and return the list of matching numbered Task to the terminal.","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Example of usage: find [T]","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":85,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Expected outcome: Since the keyword is [T], the program will search for all todo type of Task and list it all out on the terminal like so. The rest of the Task will not be shown.","lastModifiedDate":"2021-09-20"},{"lineNumber":86,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     1.[T][ ] eat lunch ","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"\t 2.[T][X] do homework","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-20"},{"lineNumber":91,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"8) help - List out all the commands available","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"9) bye - Terminates the App.","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":94}},{"path":"text-art/ParrotText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            .------.","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"           /  ~ ~   \\,------.      ______","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"         ,\u0027  ~ ~ ~  /  (@)   \\   ,\u0027      \\","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"       ,\u0027          /`.    ~ ~ \\ /         \\","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     ,\u0027           | ,\u0027\\  ~ ~ ~ X     \\  \\  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"   ,\u0027  ,\u0027          V--\u003c       (       \\  \\  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ,\u0027  ,\u0027               (vv      \\/\\  \\  \\  |  |","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"(__,\u0027  ,\u0027   /         (vv   \"\"    \\  \\  | |  |","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  (__,\u0027    /   /       vv   \"\"\"    \\ |  / / /","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      \\__,\u0027   /  |     vv          / / / / /","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"          \\__/   / |  | \\         / /,\u0027,\u0027,\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             \\__/\\_^  |  \\       /,\u0027\u0027,\u0027,\u0027\\","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    `-^.__\u003e.____/  \u0027 ,\u0027   \\","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                            // //---\u0027      |","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"          \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(((((((\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                     | \\ \\  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                     / |  |  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                    / /  / \\  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                    `.     |   \\","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":19}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"t-/-0-/-Go To School","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"todo Go To School","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"todo watch anime","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"todo","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"done 3","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"done 4","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"done 7","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"invalidcommand","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline /by","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline lightnovel /by","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline /by 15Aug","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"event /at","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"event anime /at","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"event /at 6pm","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"delete 2","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"delete","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"delete 10","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"delete 0","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":3,"-":19}},{"path":"text-ui-test/text-art/ByeText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            .-\u0027\u0027\u0027-.        .-\u0027\u0027\u0027-.                                                        ","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"           \u0027   _    \\     \u0027   _    \\ _______                                              ","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"         /   /` \u0027.   \\  /   /` \u0027.   \\\\  ___ `\u0027.   /|                       __.....__      ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  .--./).   |     \\  \u0027 .   |     \\  \u0027 \u0027 |--.\\  \\  ||    .-.          .-.-\u0027\u0027         \u0027.    ","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" /.\u0027\u0027\\\\ |   \u0027      |  \u0027|   \u0027      |  \u0027| |    \\  \u0027 ||     \\ \\        / /     .-\u0027\u0027\"\u0027-.  `.  ","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"| |  | |\\    \\     / / \\    \\     / / | |     |  \u0027||  __  \\ \\      / /     /________\\   \\ ","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\`-\u0027 /  `.   ` ..\u0027 /   `.   ` ..\u0027 /  | |     |  |||/\u0027__ \u0027.\\ \\    / /|                  | ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" /(\"\u0027`      \u0027-...-\u0027`       \u0027-...-\u0027`   | |     \u0027 .\u0027|:/`  \u0027. \u0027\\ \\  / / \\    .-------------\u0027 ","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\ \u0027---.                              | |___.\u0027 /\u0027 ||     | | \\ `  /   \\    \u0027-.____...---. ","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  /\u0027\"\"\u0027.\\                            /_______.\u0027/  ||\\    / \u0027  \\  /     `.             .\u0027  ","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ||     ||                           \\_______|/   |/\\\u0027..\u0027 /   / /        `\u0027\u0027-...... -\u0027    ","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\\u0027. __//                                         \u0027  `\u0027-\u0027`|`-\u0027 /                          ","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  `\u0027---\u0027                                                   \u0027..\u0027                           ","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Bye. Hope to not see you again soon! Me go sleep. Don\u0027t wake me!","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":19}},{"path":"text-ui-test/text-art/DukeyText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ________  ___  ___  ___  __    _______       ___    ___ ","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"|\\   ___ \\|\\  \\|\\  \\|\\  \\|\\  \\ |\\  ___ \\     |\\  \\  /  /|","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"\\ \\  \\_|\\ \\ \\  \\\\\\  \\ \\  \\/  /|\\ \\   __/|    \\ \\  \\/  / /","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\ \\  \\ \\\\ \\ \\  \\\\\\  \\ \\   ___  \\ \\  \\_|/__   \\ \\    / / ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  \\ \\  \\_\\\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\   \\/  /  /  ","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"   \\ \\_______\\ \\_______\\ \\__\\\\ \\__\\ \\_______\\__/  / /    ","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    \\|_______|\\|_______|\\|__| \\|__|\\|_______|\\___/ /     ","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                            \\|___|/      ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":10}},{"path":"text-ui-test/text-art/HelloText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Hello! I\u0027m Parrot Boi, What can I not do for you (I\u0027m Lazy)? ","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"c(＞ω＜)ゞ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"I\u0027m currently in parrot to-do mode!","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Give me something to remember and I will annoy you XD    ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":10}},{"path":"text-ui-test/text-art/ParrotText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            .------.","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"           /  ~ ~   \\,------.      ______","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"         ,\u0027  ~ ~ ~  /  (@)   \\   ,\u0027      \\","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"       ,\u0027          /`.    ~ ~ \\ /         \\","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     ,\u0027           | ,\u0027\\  ~ ~ ~ X     \\  \\  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"   ,\u0027  ,\u0027          V--\u003c       (       \\  \\  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ,\u0027  ,\u0027               (vv      \\/\\  \\  \\  |  |","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"(__,\u0027  ,\u0027   /         (vv   \"\"    \\  \\  | |  |","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  (__,\u0027    /   /       vv   \"\"\"    \\ |  / / /","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      \\__,\u0027   /  |     vv          / / / / /","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"          \\__/   / |  | \\         / /,\u0027,\u0027,\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             \\__/\\_^  |  \\       /,\u0027\u0027,\u0027,\u0027\\","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    `-^.__\u003e.____/  \u0027 ,\u0027   \\","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                            // //---\u0027      |","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"          \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(((((((\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                     | \\ \\  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                     / |  |  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                    / /  / \\  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                    `.     |   \\","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":19}}]
