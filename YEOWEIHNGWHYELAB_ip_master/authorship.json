[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"t-/-0-/-1","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":1}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This is the main class of the chat-bot app that helps user remember their different","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * types of task and \"parrot\" the task back to them when they request.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.commandHandler.DukeCommandHandling;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.delay.Delay_ms;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.exceptionHandler.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.printTextFile.PrintTextFile;","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.save.SaveTaskListToText;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskOperations.StringToRemoveFormat;","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.ToDo;","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static int numberOfTasks \u003d 0; // Task Counter","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * These are text objects created that can print text file","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * specified into the terminal.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static PrintTextFile printHelloText \u003d new PrintTextFile(\"text-art/HelloText.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static PrintTextFile printByeText \u003d new PrintTextFile(\"text-art/ByeText.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static PrintTextFile printParrotText \u003d new PrintTextFile(\"text-art/ParrotText.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static PrintTextFile printDukeyText \u003d new PrintTextFile(\"text-art/DukeyText.txt\");","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static int getNumberOfTasks() {","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return numberOfTasks;","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Prints the current list of task when the \"list\" command is","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * entered to the terminal.","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void printTaskList() {","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i +\u003d 1) {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.print(\"     \");","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.print((i + 1) + \".\");","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.get(i).printStatus();","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void deleteTask(String userInputString, SaveTaskListToText dukeTaskText) throws DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int taskNumberToDelete \u003d Integer.parseInt(userInputString.split(\" \")[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String textToRemove;","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            boolean lastLine \u003d false;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (taskNumberToDelete \u003d\u003d numberOfTasks \u0026\u0026 numberOfTasks !\u003d 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                lastLine \u003d true;","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (taskNumberToDelete \u003c\u003d numberOfTasks) {","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.get(taskNumberToDelete - 1).deletedSuccessfully(numberOfTasks - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String typeOfTask \u003d tasks.get(taskNumberToDelete - 1).toString().substring(1,2);","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskIsDone \u003d tasks.get(taskNumberToDelete - 1).toString().substring(4,5);","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String rawTaskDescription \u003d tasks.get(taskNumberToDelete - 1).toString().substring(7);","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                textToRemove \u003d StringToRemoveFormat.getStringToRemove(typeOfTask, taskIsDone, rawTaskDescription);","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                dukeTaskText.removeLineFromFile(\"./data/duke.txt\", textToRemove, lastLine, taskNumberToDelete);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.remove(taskNumberToDelete - 1);","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasks -\u003d 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"Please Enter the Legit Task Number to Delete... Or I won\u0027t talk to you!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Please Enter the Legit Task Number to Delete... Or I won\u0027t talk to you!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Adds a new todo task with the description of task provided. Format is","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * strictly: todo \u003cdescription\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":91,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString which contains the \"todo\" command along with","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        the description of the todo task. No time","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        details is needed here.","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":95,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addToDo(String userInputString, SaveTaskListToText dukeTaskText) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskName \u003d userInputString.substring(5);","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":99,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (taskName.equals(\"\")) {","lastModifiedDate":"2021-09-09"},{"lineNumber":100,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-09"},{"lineNumber":101,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":103,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (dukeTaskText.saveToDo(taskName) \u003d\u003d true) {","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.add(new ToDo(taskName));","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasks +\u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.get(numberOfTasks - 1).printAddingStatus(numberOfTasks - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"Please enter a different description. Or I will destroy your computer!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":110,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":115,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":116,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Adds a new deadline task with the description of deadline task provided","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * along with the time which is due \"by\". The format of command is quite strict:","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * deadline \u003cdescription\u003e /by \u003ctime\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Trail and Leading space are compulsory for /by separator","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString which contains the \"deadline\" command along with","lastModifiedDate":"2021-09-01"},{"lineNumber":124,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        the description of the deadline task and followed","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        by a \"/\" to separate the due time \"by\".","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addDeadline(String userInputString, SaveTaskListToText dukeTaskText) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (userInputString.indexOf(\" /by \") \u003d\u003d -1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"Don\u0027t forget to add /by (must have trail and lead whitespace) to separate description and deadline\");","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            else {","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d userInputString.substring(9).split(\"/\")[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String by \u003d userInputString.substring(9).split(\"/\")[1];","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addDeadlineCheckDescription(dukeTaskText, taskName, by);","lastModifiedDate":"2021-09-16"},{"lineNumber":137,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":138,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-16"},{"lineNumber":139,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description and deadline info of deadline cannot be empty!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":140,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":141,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":142,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":143,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private static void addDeadlineCheck(SaveTaskListToText dukeTaskText, String taskName, String by) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":144,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (dukeTaskText.saveDeadline(taskName, by) \u003d\u003d true) {","lastModifiedDate":"2021-09-15"},{"lineNumber":145,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.add(new Deadline(taskName, by));","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            numberOfTasks +\u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":147,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":148,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.get(numberOfTasks - 1).printAddingStatus(numberOfTasks - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":149,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Please enter a different description. Or I will destroy your computer!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":151,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":154,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private static void addDeadlineCheckDescription(SaveTaskListToText dukeTaskText, String taskName, String by) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":155,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskName.equals(\"\") || by.equals(\"by \")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":156,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description and event time info of event cannot be empty.\");","lastModifiedDate":"2021-09-16"},{"lineNumber":157,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":158,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            addDeadlineCheck(dukeTaskText, taskName, by);","lastModifiedDate":"2021-09-16"},{"lineNumber":159,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":161,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":162,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":163,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Adds a new event task with the description of task provided and time","lastModifiedDate":"2021-09-01"},{"lineNumber":164,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * which it is happening \"at\". The format of command is quite strict:","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * event \u003cdescription\u003e /at \u003ctime\u003e","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Trail and Leading space are compulsory for /at separator","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString which contains the \"event\" command along with","lastModifiedDate":"2021-09-01"},{"lineNumber":170,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        the description of the event task followed by","lastModifiedDate":"2021-09-01"},{"lineNumber":171,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        a \"/\" to separate the happening time \"at\".","lastModifiedDate":"2021-09-01"},{"lineNumber":172,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":173,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void addEvent(String userInputString, SaveTaskListToText dukeTaskText) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":174,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (userInputString.indexOf(\" /at \") \u003d\u003d -1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                throw new DukeException(\"Don\u0027t forget to add /at (must have trail and lead whitespace) to separate description and event time\");","lastModifiedDate":"2021-09-06"},{"lineNumber":177,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d userInputString.substring(6).split(\"/\")[0];","lastModifiedDate":"2021-09-06"},{"lineNumber":179,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String at \u003d userInputString.substring(6).split(\"/\")[1];","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addEventCheckDescription(dukeTaskText, taskName, at);","lastModifiedDate":"2021-09-16"},{"lineNumber":182,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":183,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IndexOutOfBoundsException indexOutOfBound) {","lastModifiedDate":"2021-09-16"},{"lineNumber":184,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description and event time info of event cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":186,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":187,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":188,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private static void addEventCheck(SaveTaskListToText dukeTaskText, String taskName, String at) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":189,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (dukeTaskText.saveEvent(taskName, at) \u003d\u003d true) {","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.add(new Event(taskName, at));","lastModifiedDate":"2021-09-13"},{"lineNumber":191,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            numberOfTasks +\u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":192,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":193,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.get(numberOfTasks - 1).printAddingStatus(numberOfTasks - 1);","lastModifiedDate":"2021-09-13"},{"lineNumber":194,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Please enter a different description. Or I will destroy your computer!\");","lastModifiedDate":"2021-09-16"},{"lineNumber":196,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":197,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":198,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":199,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private static void addEventCheckDescription(SaveTaskListToText dukeTaskText, String taskName, String at) throws DukeException {","lastModifiedDate":"2021-09-16"},{"lineNumber":200,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskName.equals(\"\") || at.equals(\"at \")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":201,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"The description and event time info of event cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":202,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":203,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            addEventCheck(dukeTaskText, taskName, at);","lastModifiedDate":"2021-09-16"},{"lineNumber":204,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":205,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":206,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":207,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":208,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Marks a certain task based on task number as finished.","lastModifiedDate":"2021-08-24"},{"lineNumber":209,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":210,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param userInputString which contains the \"done\" command along with the","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                        finished task number.","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":213,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void finishTask(String userInputString, SaveTaskListToText dukeTaskText) throws DukeException, IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":214,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int taskNumber \u003d Integer.parseInt(userInputString.split(\" \")[1]);","lastModifiedDate":"2021-09-01"},{"lineNumber":215,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskNumber \u003c\u003d numberOfTasks) {","lastModifiedDate":"2021-08-24"},{"lineNumber":217,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            tasks.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":218,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":219,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            throw new DukeException(\"Please Enter the Legit Task Number... Or I won\u0027t talk to you!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":220,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":221,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":222,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        dukeTaskText.saveFinishedTask(tasks.get(taskNumber - 1).toString());","lastModifiedDate":"2021-09-13"},{"lineNumber":223,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":224,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":225,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":226,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String userInputString;","lastModifiedDate":"2021-08-24"},{"lineNumber":227,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":228,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":229,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        Delay_ms delay \u003d new Delay_ms();","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        printDukeyText.printText();","lastModifiedDate":"2021-09-01"},{"lineNumber":231,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        delay.wait(500);","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        printParrotText.printText();","lastModifiedDate":"2021-09-01"},{"lineNumber":233,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        delay.wait(500);","lastModifiedDate":"2021-09-15"},{"lineNumber":234,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        printHelloText.printText();","lastModifiedDate":"2021-09-01"},{"lineNumber":235,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":236,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        SaveTaskListToText dukeTaskText \u003d new SaveTaskListToText();","lastModifiedDate":"2021-09-13"},{"lineNumber":237,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        numberOfTasks \u003d dukeTaskText.loadTask(tasks);","lastModifiedDate":"2021-09-13"},{"lineNumber":238,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":239,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        while (true) {","lastModifiedDate":"2021-08-24"},{"lineNumber":240,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            userInputString \u003d userInput.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":241,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            DukeCommandHandling commandHandle \u003d new DukeCommandHandling(userInputString);","lastModifiedDate":"2021-09-13"},{"lineNumber":242,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":243,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (commandHandle.isBye()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":244,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":245,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                } else if (commandHandle.isList()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":246,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    printTaskList();","lastModifiedDate":"2021-08-24"},{"lineNumber":247,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    continue;","lastModifiedDate":"2021-08-24"},{"lineNumber":248,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                } else if (commandHandle.isDone()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":249,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    finishTask(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-13"},{"lineNumber":250,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    continue;","lastModifiedDate":"2021-09-01"},{"lineNumber":251,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                } else if (commandHandle.isDelete()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":252,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    deleteTask(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-15"},{"lineNumber":253,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                } else if (commandHandle.isToDo()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":254,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    addToDo(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-13"},{"lineNumber":255,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    continue;","lastModifiedDate":"2021-09-01"},{"lineNumber":256,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                } else if (commandHandle.isDeadline()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":257,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    addDeadline(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-13"},{"lineNumber":258,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    continue;","lastModifiedDate":"2021-09-01"},{"lineNumber":259,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                } else if (commandHandle.isEvent()) {","lastModifiedDate":"2021-09-01"},{"lineNumber":260,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    addEvent(userInputString, dukeTaskText);","lastModifiedDate":"2021-09-13"},{"lineNumber":261,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    continue;","lastModifiedDate":"2021-09-01"},{"lineNumber":262,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                } else {","lastModifiedDate":"2021-08-24"},{"lineNumber":263,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-06"},{"lineNumber":264,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":265,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } catch (DukeException dukeError) {","lastModifiedDate":"2021-09-06"},{"lineNumber":266,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                dukeError.printErrorMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":267,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":268,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":269,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":270,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        userInput.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":271,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        printByeText.printText();","lastModifiedDate":"2021-09-01"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":270,"-":3}},{"path":"src/main/java/duke/commandHandler/DukeCommandHandling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.commandHandler;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * CommandHandling class helps to check the type of command given.","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class DukeCommandHandling {","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private String commandString;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Constructor of CommandHandling class. Each object created","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * will consist of the attribute commandString which contain","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * the command string of the user input.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param commandString The raw user input command.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public DukeCommandHandling(String commandString) {","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isBye() {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.equals(\"bye\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isList() {","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.equals(\"list\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"done\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isDelete() {","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"delete\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isToDo() {","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"todo\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isDeadline() {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"deadline\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isEvent() {","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\" \")[0].equals(\"event\")) {","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":71}},{"path":"src/main/java/duke/commandHandler/SaveCommandHandling.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.commandHandler;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class SaveCommandHandling {","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private String commandString;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public SaveCommandHandling(String commandString) {","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.commandString \u003d commandString;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isToDo() {","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\"-/-\")[0].equals(\"t\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isDeadline() {","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\"-/-\")[0].equals(\"d\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public boolean isEvent() {","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (commandString.split(\"-/-\")[0].equals(\"e\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            return true;","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":30}},{"path":"src/main/java/duke/delay/Delay_ms.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.delay;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Delay_ms {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Causes a delay in execution of code for specified duration","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * before returning control back to the caller of this method.","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param ms The amount of millisecond to delay execution.","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void wait(int ms) {","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            Thread.sleep(ms);","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (InterruptedException ex) {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            Thread.currentThread().interrupt();","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":17}},{"path":"src/main/java/duke/exceptionHandler/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.exceptionHandler;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This is the DukeException Handler and is only targeted at Duke.java class.","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String openingString \u003d \"     ☹ OOPS!!! \";","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * This calls the superclass Exception constructor and creates the exception","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * object with the error message.","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param errorMessage The error message string.","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-09"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printErrorMessage() {","lastModifiedDate":"2021-09-09"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(openingString + this.getMessage());","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-09"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":28}},{"path":"src/main/java/duke/printTextFile/PrintTextFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.printTextFile;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This class allows printing of a text file in the specified directory. It creates","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * objects based on their fileDirectory.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class PrintTextFile {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private String fileDirectory;","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * The constructor for PrintTextFile to create text printing objects.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param fileDirectory .","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public PrintTextFile(String fileDirectory) {","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.fileDirectory \u003d fileDirectory;","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Reads a .txt file in ASCII format and then print every single character (converted","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * ASCII index to characters) inside that .txt file onto the terminal. It also looks for","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * exception and print it out if any.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @throws IOException Trying to read the .txt file which user do not have permission or a","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                     .txt file that does not exist.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printText() {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             * Note that the text file must be placed at the base java directory (when","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             * directory is not clearly specified), and the name of the text file is","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             * placed here!","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             */","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            FileReader readTextFile \u003d new FileReader(this.fileDirectory);","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int singleCharacters;","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            while ((singleCharacters \u003d readTextFile.read()) !\u003d -1) {","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                // Print each character individually.","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                System.out.print((char) singleCharacters);","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            readTextFile.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IOException except) {","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.println(\"IO EXCEPTION!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.println(\"Ensure that you have files in correct directory and named correctly!\");","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            except.printStackTrace();","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"\");","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":57}},{"path":"src/main/java/duke/save/SaveTaskListToText.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.save;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.commandHandler.SaveCommandHandling;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Deadline;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Event;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.Task;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import duke.taskType.ToDo;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.File;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-13"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-13"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class SaveTaskListToText {","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static File directoryOfTaskText \u003d new File(\"./data\");","lastModifiedDate":"2021-09-13"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static File dukeTaskText \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static int numberOfTasksAdded \u003d 0;","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    // Solution below adapted from","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    // https://stackoverflow.com/questions/1377279/find-a-line-in-a-file-and-remove-it","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void removeLineFromFile(String file, String lineToRemove, boolean lastLine, int taskNumberToDelete) {","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            File inFile \u003d new File(file);","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int count \u003d 0;","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (!inFile.isFile()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                System.out.println(\"Parameter is not an existing file\");","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                return;","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            // Construct the new file that will later be renamed to the original filename.","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            File tempFile \u003d new File(inFile.getAbsolutePath() + \".tmp\");","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileWriter(tempFile));","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String line \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            // Read from the original file and write to the new","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            // unless content matches data to be removed.","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            while ((line \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                count +\u003d 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (!line.trim().equals(lineToRemove)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    if (lastLine \u003d\u003d true \u0026\u0026 count \u003d\u003d taskNumberToDelete - 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                        pw.print(line); // No newline...","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                        pw.flush();","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                        pw.println(line);","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                        pw.flush();","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    }","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            pw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            br.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            // Delete the original file","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (!inFile.delete()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                System.out.println(\"Could not delete file\");","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                return;","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            // Rename the new file to the filename the original file had.","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (!tempFile.renameTo(inFile)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                System.out.println(\"Could not rename file\");","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (FileNotFoundException ex) {","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            ex.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    private static void fileTaskCopy(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        Scanner scanText \u003d new Scanner(dukeTaskText); // create a Scanner using the File as the source","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        while (scanText.hasNext()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String currentCommand \u003d scanText.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            SaveCommandHandling commandHandle \u003d new SaveCommandHandling(currentCommand);","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (commandHandle.isToDo()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":87,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                int done \u003d Integer.parseInt(currentCommand.split(\"-/-\")[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d currentCommand.split(\"-/-\")[2];","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.add(new ToDo(taskName));","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (done \u003d\u003d 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    tasks.get(numberOfTasksAdded).markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasksAdded +\u003d 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else if (commandHandle.isEvent()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                int done \u003d Integer.parseInt(currentCommand.split(\"-/-\")[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d currentCommand.split(\"-/-\")[2];","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String at \u003d currentCommand.split(\"-/-\")[3];","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.add(new Event(taskName, at));","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":104,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (done \u003d\u003d 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    tasks.get(numberOfTasksAdded).markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":106,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasksAdded +\u003d 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else if (commandHandle.isDeadline()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                int done \u003d Integer.parseInt(currentCommand.split(\"-/-\")[1]);","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String taskName \u003d currentCommand.split(\"-/-\")[2];","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String by \u003d currentCommand.split(\"-/-\")[3];","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":114,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                tasks.add(new Deadline(taskName, by));","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (done \u003d\u003d 1) {","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    tasks.get(numberOfTasksAdded).markAsDone();","lastModifiedDate":"2021-09-13"},{"lineNumber":118,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                numberOfTasksAdded +\u003d 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":121,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":122,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        scanText.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":125,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":126,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Checks if directory exist first. If it doesn\u0027t, it means the duke.txt is also missing.","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * In such a case, make directory and then create duke.txt file there. Then if directory","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * exist, but duke.txt is missing, add duke.txt.","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param tasks","lastModifiedDate":"2021-09-13"},{"lineNumber":133,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return","lastModifiedDate":"2021-09-13"},{"lineNumber":134,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":135,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static int loadTask(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":136,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (directoryOfTaskText.exists() \u003d\u003d false) {","lastModifiedDate":"2021-09-13"},{"lineNumber":137,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            directoryOfTaskText.mkdir();","lastModifiedDate":"2021-09-13"},{"lineNumber":138,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            dukeTaskText.createNewFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (dukeTaskText.exists() \u003d\u003d false) {","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            dukeTaskText.createNewFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":141,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":142,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            fileTaskCopy(tasks);","lastModifiedDate":"2021-09-13"},{"lineNumber":143,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":144,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":145,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return numberOfTasksAdded;","lastModifiedDate":"2021-09-13"},{"lineNumber":146,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":147,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":148,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    // Solution below adapted from","lastModifiedDate":"2021-09-17"},{"lineNumber":149,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    // https://stackoverflow.com/questions/5600422/method-to-find-string-inside-of-the-text-file-then-getting-the-following-lines","lastModifiedDate":"2021-09-17"},{"lineNumber":150,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static boolean checkLineExist(String stringToCheck) {","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        File file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":152,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":153,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":154,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-15"},{"lineNumber":155,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":156,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int lineNum \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":157,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":158,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":159,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String line \u003d scanner.nextLine();","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                lineNum++;","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":162,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (line.equals(stringToCheck)) {","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    scanner.close(); // Don\u0027t forget!","lastModifiedDate":"2021-09-16"},{"lineNumber":164,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    return true;","lastModifiedDate":"2021-09-15"},{"lineNumber":165,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":166,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":167,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            scanner.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":168,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch(FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":169,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2021-09-15"},{"lineNumber":170,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":171,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":172,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":173,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":174,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":175,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    // Solution below adapted from https://stackoverflow.com/questions/1625234/how-to-append-text-to-an-existing-file-in-java","lastModifiedDate":"2021-09-17"},{"lineNumber":176,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static boolean saveToDo(String taskName) {","lastModifiedDate":"2021-09-15"},{"lineNumber":177,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToWrite1 \u003d \"t-/-0-/-\" + taskName;","lastModifiedDate":"2021-09-15"},{"lineNumber":178,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToWrite2 \u003d \"t-/-1-/-\" + taskName;","lastModifiedDate":"2021-09-15"},{"lineNumber":179,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":180,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":181,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (checkLineExist(textToWrite1) \u003d\u003d false \u0026\u0026 checkLineExist(textToWrite2) \u003d\u003d false) {","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String dukeDirectory \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":183,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":184,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                File file \u003d new File(dukeDirectory);","lastModifiedDate":"2021-09-15"},{"lineNumber":185,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                boolean fileIsEmpty \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    fileIsEmpty \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                FileWriter addToDo \u003d new FileWriter(dukeDirectory, true); //the true will append the new data","lastModifiedDate":"2021-09-13"},{"lineNumber":192,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (fileIsEmpty \u003d\u003d false) {","lastModifiedDate":"2021-09-15"},{"lineNumber":193,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    addToDo.write(\"\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":194,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addToDo.write(textToWrite1);","lastModifiedDate":"2021-09-15"},{"lineNumber":196,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addToDo.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":197,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":198,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":199,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":200,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch(IOException ioe) {","lastModifiedDate":"2021-09-15"},{"lineNumber":201,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.err.println(\"IOException: \" + ioe.getMessage());","lastModifiedDate":"2021-09-13"},{"lineNumber":202,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":203,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return true;","lastModifiedDate":"2021-09-15"},{"lineNumber":205,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":206,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":207,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    // Solution below adapted from https://stackoverflow.com/questions/1625234/how-to-append-text-to-an-existing-file-in-java","lastModifiedDate":"2021-09-17"},{"lineNumber":208,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static boolean saveEvent(String taskName, String at) {","lastModifiedDate":"2021-09-15"},{"lineNumber":209,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String eventToWrite1 \u003d \"e-/-0-/-\" + taskName + \"-/-/at\" + at.substring(3);","lastModifiedDate":"2021-09-15"},{"lineNumber":210,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String eventToWrite2 \u003d \"e-/-1-/-\" + taskName + \"-/-/at\" + at.substring(3);","lastModifiedDate":"2021-09-15"},{"lineNumber":211,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":213,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (checkLineExist(eventToWrite1) \u003d\u003d false \u0026\u0026 checkLineExist(eventToWrite2) \u003d\u003d false) {","lastModifiedDate":"2021-09-15"},{"lineNumber":214,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String dukeDirectory \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":215,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                File file \u003d new File(dukeDirectory);","lastModifiedDate":"2021-09-15"},{"lineNumber":216,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                boolean fileIsEmpty \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":217,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":218,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":219,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    fileIsEmpty \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":220,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":221,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":222,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                FileWriter addToDo \u003d new FileWriter(dukeDirectory, true); //the true will append the new data","lastModifiedDate":"2021-09-13"},{"lineNumber":223,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (fileIsEmpty \u003d\u003d false) {","lastModifiedDate":"2021-09-15"},{"lineNumber":224,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    addToDo.write(\"\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":225,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addToDo.write(eventToWrite1);","lastModifiedDate":"2021-09-15"},{"lineNumber":227,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addToDo.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":228,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":229,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":230,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":231,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch(IOException ioe) {","lastModifiedDate":"2021-09-15"},{"lineNumber":232,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.err.println(\"IOException: \" + ioe.getMessage());","lastModifiedDate":"2021-09-13"},{"lineNumber":233,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":234,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return true;","lastModifiedDate":"2021-09-15"},{"lineNumber":235,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":236,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":237,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    // Solution below adapted from https://stackoverflow.com/questions/1625234/how-to-append-text-to-an-existing-file-in-java","lastModifiedDate":"2021-09-17"},{"lineNumber":238,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static boolean saveDeadline(String taskName, String by) {","lastModifiedDate":"2021-09-15"},{"lineNumber":239,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String deadlineToWrite1 \u003d \"d-/-0-/-\" + taskName + \"-/-/by\" + by.substring(3);","lastModifiedDate":"2021-09-15"},{"lineNumber":240,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String deadlineToWrite2 \u003d \"d-/-1-/-\" + taskName + \"-/-/by\" + by.substring(3);","lastModifiedDate":"2021-09-15"},{"lineNumber":241,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":242,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":243,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (checkLineExist(deadlineToWrite1) \u003d\u003d false \u0026\u0026 checkLineExist(deadlineToWrite2) \u003d\u003d false) {","lastModifiedDate":"2021-09-15"},{"lineNumber":244,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                String dukeDirectory \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":245,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                File file \u003d new File(dukeDirectory);","lastModifiedDate":"2021-09-15"},{"lineNumber":246,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                boolean fileIsEmpty \u003d false;","lastModifiedDate":"2021-09-15"},{"lineNumber":247,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":248,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (file.length() \u003d\u003d 0) {","lastModifiedDate":"2021-09-15"},{"lineNumber":249,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    fileIsEmpty \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":250,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":251,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":252,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                FileWriter addToDo \u003d new FileWriter(dukeDirectory, true); //the true will append the new data","lastModifiedDate":"2021-09-13"},{"lineNumber":253,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                if (fileIsEmpty \u003d\u003d false) {","lastModifiedDate":"2021-09-15"},{"lineNumber":254,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    addToDo.write(\"\\n\");","lastModifiedDate":"2021-09-17"},{"lineNumber":255,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":256,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addToDo.write(deadlineToWrite1);","lastModifiedDate":"2021-09-15"},{"lineNumber":257,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                addToDo.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":258,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":259,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                return false;","lastModifiedDate":"2021-09-15"},{"lineNumber":260,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":261,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } catch(IOException ioe) {","lastModifiedDate":"2021-09-15"},{"lineNumber":262,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            System.err.println(\"IOException: \" + ioe.getMessage());","lastModifiedDate":"2021-09-13"},{"lineNumber":263,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":264,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return true;","lastModifiedDate":"2021-09-15"},{"lineNumber":265,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":266,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":267,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    // Solution below adapted from https://stackoverflow.com/questions/20039980/java-replace-line-in-text-file","lastModifiedDate":"2021-09-17"},{"lineNumber":268,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void textFileTaskDoneMarker(String oldLine, Character taskType) throws IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":269,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2021-09-13"},{"lineNumber":270,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        Scanner sc \u003d new Scanner(new File(filePath));","lastModifiedDate":"2021-09-13"},{"lineNumber":271,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        StringBuffer buffer \u003d new StringBuffer();","lastModifiedDate":"2021-09-13"},{"lineNumber":272,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":273,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        while (sc.hasNextLine() \u003d\u003d true) {","lastModifiedDate":"2021-09-16"},{"lineNumber":274,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            buffer.append(sc.nextLine());","lastModifiedDate":"2021-09-16"},{"lineNumber":275,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            if (sc.hasNextLine() \u003d\u003d true) {","lastModifiedDate":"2021-09-16"},{"lineNumber":276,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                buffer.append(System.lineSeparator());","lastModifiedDate":"2021-09-16"},{"lineNumber":277,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":278,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":279,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":280,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String fileContents \u003d buffer.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":281,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":282,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String newLine \u003d \"\";","lastModifiedDate":"2021-09-13"},{"lineNumber":283,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskType \u003d\u003d \u0027t\u0027) {","lastModifiedDate":"2021-09-13"},{"lineNumber":284,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            newLine +\u003d \"t-/-1-/-\" + oldLine.substring(8);","lastModifiedDate":"2021-09-13"},{"lineNumber":285,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (taskType \u003d\u003d \u0027e\u0027) {","lastModifiedDate":"2021-09-13"},{"lineNumber":286,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            newLine +\u003d \"e-/-1-/-\" + oldLine.substring(8);","lastModifiedDate":"2021-09-13"},{"lineNumber":287,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":288,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            newLine +\u003d \"d-/-1-/-\" + oldLine.substring(8);","lastModifiedDate":"2021-09-13"},{"lineNumber":289,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":290,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":291,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        sc.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":292,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":293,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        fileContents \u003d fileContents.replaceAll(oldLine, newLine);","lastModifiedDate":"2021-09-13"},{"lineNumber":294,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":295,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        FileWriter writer \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-13"},{"lineNumber":296,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        writer.append(fileContents);","lastModifiedDate":"2021-09-13"},{"lineNumber":297,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        writer.flush();","lastModifiedDate":"2021-09-13"},{"lineNumber":298,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        writer.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":299,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":300,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":301,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String textToDoSaveFormatter(String rawTaskDescription) throws IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":302,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskDecription \u003d rawTaskDescription.substring(7);","lastModifiedDate":"2021-09-13"},{"lineNumber":303,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"t-/-0-/-\" + taskDecription;","lastModifiedDate":"2021-09-13"},{"lineNumber":304,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":305,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":306,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String textEventSaveFormatter(String rawTaskDescription) throws IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":307,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskFullDecription \u003d rawTaskDescription.substring(7);","lastModifiedDate":"2021-09-13"},{"lineNumber":308,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":309,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskDescription \u003d taskFullDecription.split(\"at: \")[0];","lastModifiedDate":"2021-09-13"},{"lineNumber":310,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int indexOfDescriptionEnd \u003d taskDescription.length() - 2;","lastModifiedDate":"2021-09-13"},{"lineNumber":311,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        taskDescription \u003d taskDescription.substring(0, indexOfDescriptionEnd);","lastModifiedDate":"2021-09-13"},{"lineNumber":312,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":313,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskAt \u003d taskFullDecription.split(\"at: \")[1];","lastModifiedDate":"2021-09-13"},{"lineNumber":314,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int indexOfByEnd \u003d taskAt.length() - 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":315,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        taskAt \u003d taskAt.substring(0, indexOfByEnd);","lastModifiedDate":"2021-09-13"},{"lineNumber":316,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":317,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"e-/-0-/-\" + taskDescription + \" -/-/at\" + taskAt;","lastModifiedDate":"2021-09-13"},{"lineNumber":318,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":319,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":320,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String textDeadlineSaveFormatter(String rawTaskDescription) throws IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":321,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskFullDecription \u003d rawTaskDescription.substring(7);","lastModifiedDate":"2021-09-13"},{"lineNumber":322,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":323,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskDescription \u003d taskFullDecription.split(\"by: \")[0];","lastModifiedDate":"2021-09-13"},{"lineNumber":324,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int indexOfDescriptionEnd \u003d taskDescription.length() - 2;","lastModifiedDate":"2021-09-13"},{"lineNumber":325,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        taskDescription \u003d taskDescription.substring(0, indexOfDescriptionEnd);","lastModifiedDate":"2021-09-13"},{"lineNumber":326,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":327,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String taskBy \u003d taskFullDecription.split(\"by: \")[1];","lastModifiedDate":"2021-09-13"},{"lineNumber":328,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        int indexOfByEnd \u003d taskBy.length() - 1;","lastModifiedDate":"2021-09-13"},{"lineNumber":329,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        taskBy \u003d taskBy.substring(0, indexOfByEnd);","lastModifiedDate":"2021-09-13"},{"lineNumber":330,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":331,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"d-/-0-/-\" + taskDescription + \" -/-/by\" + taskBy;","lastModifiedDate":"2021-09-13"},{"lineNumber":332,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":333,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":334,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static void saveFinishedTask(String rawTaskDescription) throws IOException {","lastModifiedDate":"2021-09-13"},{"lineNumber":335,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (rawTaskDescription.substring(1,2).equals(\"T\") \u003d\u003d true) {","lastModifiedDate":"2021-09-13"},{"lineNumber":336,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String formattedDescription \u003d textToDoSaveFormatter(rawTaskDescription);","lastModifiedDate":"2021-09-13"},{"lineNumber":337,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textFileTaskDoneMarker(formattedDescription, \u0027t\u0027);","lastModifiedDate":"2021-09-13"},{"lineNumber":338,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (rawTaskDescription.substring(1,2).equals(\"E\") \u003d\u003d true) {","lastModifiedDate":"2021-09-13"},{"lineNumber":339,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String formattedDescription \u003d textEventSaveFormatter(rawTaskDescription);","lastModifiedDate":"2021-09-13"},{"lineNumber":340,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textFileTaskDoneMarker(formattedDescription, \u0027e\u0027);","lastModifiedDate":"2021-09-13"},{"lineNumber":341,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-13"},{"lineNumber":342,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String formattedDescription \u003d textDeadlineSaveFormatter(rawTaskDescription);","lastModifiedDate":"2021-09-13"},{"lineNumber":343,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textFileTaskDoneMarker(formattedDescription, \u0027d\u0027);","lastModifiedDate":"2021-09-13"},{"lineNumber":344,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":345,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":346,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":346}},{"path":"src/main/java/duke/taskOperations/StringToRemoveFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskOperations;","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class StringToRemoveFormat {","lastModifiedDate":"2021-09-16"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String getStringToRemove(String typeOfTask, String taskIsDone, String rawTaskDescription) {","lastModifiedDate":"2021-09-16"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (typeOfTask.equals(\"T\") \u003d\u003d true) {","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d getStringToDoFormat(taskIsDone, rawTaskDescription);","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else if (typeOfTask.equals(\"E\") \u003d\u003d true) {","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskDescription \u003d rawTaskDescription.split(\"at: \")[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int indexOfDescriptionEnd \u003d taskDescription.length() - 2;","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            taskDescription \u003d taskDescription.substring(0, indexOfDescriptionEnd);","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskAt \u003d rawTaskDescription.split(\"at: \")[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int indexOfByEnd \u003d taskAt.length() - 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            taskAt \u003d taskAt.substring(0, indexOfByEnd);","lastModifiedDate":"2021-09-16"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d getStringEventDeadlineFormat(taskIsDone, taskDescription, taskAt, \"e\", \" -/-/at\");","lastModifiedDate":"2021-09-16"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskDescription \u003d rawTaskDescription.split(\"by: \")[0];","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int indexOfDescriptionEnd \u003d taskDescription.length() - 2;","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            taskDescription \u003d taskDescription.substring(0, indexOfDescriptionEnd);","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            String taskBy \u003d rawTaskDescription.split(\"by: \")[1];","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            int indexOfByEnd \u003d taskBy.length() - 1;","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            taskBy \u003d taskBy.substring(0, indexOfByEnd);","lastModifiedDate":"2021-09-16"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d getStringEventDeadlineFormat(taskIsDone, taskDescription, taskBy, \"d\", \" -/-/by\");","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String getStringEventDeadlineFormat(String taskIsDone, String taskDescription, String taskAtBy, String typeOfTask, String separator) {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskIsDone.equals(\"X\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d typeOfTask + \"-/-1-/-\" + taskDescription + separator + taskAtBy;","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d typeOfTask + \"-/-0-/-\" + taskDescription + separator + taskAtBy;","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public static String getStringToDoFormat(String taskIsDone, String rawTaskDescription) {","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        String textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        if (taskIsDone.equals(\"X\")) {","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d \"t-/-1-/-\" + rawTaskDescription;","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            textToRemove \u003d \"t-/-0-/-\" + rawTaskDescription;","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return textToRemove;","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":51}},{"path":"src/main/java/duke/taskType/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskType;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * Deadline class which is a subclass of Task. It extends Task by providing","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * its own printing format, and it also has a time \"by\" parameter added.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Deadline constructor creating object with attribute of the event task\u0027s","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * description and the due date.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param description Description of the event.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param by          Due date in the form of string.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printAddingStatus(int numberOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"      \" + this.toString() + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"    \" + \"Now you have \" + (numberOfTasks + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.substring(3) + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printStatus() {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":42}},{"path":"src/main/java/duke/taskType/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskType;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * Event class which is a subclass of Task. It extends Task by providing","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * its own printing format, and it also has a time \"at\" parameter added.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    protected String at;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Event constructor creating object with attribute of the event task\u0027s","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * description and the time of occurence.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param description which is the string of description about this todo","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                    task.","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param by          Time of occurrence in the form of string.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public Event(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.at \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printAddingStatus(int numberOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task: \\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"      \" + this.toString() + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"    \" + \"Now you have \" + (numberOfTasks + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + at.substring(3) + \")\";","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printStatus() {","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":43}},{"path":"src/main/java/duke/taskType/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskType;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * This class responsible for creating Task objects. It includes their","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * description and tracks if the task object \"isDone\". It is the superclass","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * of Event, Deadline and ToDo.","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Task\u0027s constructor. It takes in the description of a task and initialize the","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * \"done\" status to false.","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * This printing function is created in case if the object created has no","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * specified type of being \"todo\", \"event\" or \"dealine\".","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param numberOfTasks is the number of task...","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printAddingStatus(int numberOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Please specify the task... :(\");","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Returns the status of a particular task.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @return String containing the status.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Sets a particular task to done.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.print(\"     \");","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.printStatus();","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":56,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void deletedSuccessfully(int numberOfTasksLeft) {","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task: \");","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.print(\"     \");","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        this.printStatus();","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"     \" + \"Now you have \" + numberOfTasksLeft + \" tasks in the list.\");","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-31"},{"lineNumber":69,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":71,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * Prints out the status of a task along with the description.","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(this.toString());","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":77}},{"path":"src/main/java/duke/taskType/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"package duke.taskType;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"/**","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * ToDo class which is a subclass of Task. It extends Task by providing","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * its own printing format.","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" *","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" * @author YEOWEIHNGWHYELAB","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" */","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * ToDo constructor creating object with attribute of the todo task\u0027s","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * description.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     * @param description which is the string of description about this todo","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     *                    task.","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public void printAddingStatus(int numberOfTasks) {","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"      \" + this.toString() + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                \"    \" + \"Now you have \" + (numberOfTasks + 1) + \" tasks in the list.\");","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":34,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":34}},{"path":"text-art/ByeText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            .-\u0027\u0027\u0027-.        .-\u0027\u0027\u0027-.                                                        ","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"           \u0027   _    \\     \u0027   _    \\ _______                                              ","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"         /   /` \u0027.   \\  /   /` \u0027.   \\\\  ___ `\u0027.   /|                       __.....__      ","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  .--./).   |     \\  \u0027 .   |     \\  \u0027 \u0027 |--.\\  \\  ||    .-.          .-.-\u0027\u0027         \u0027.    ","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" /.\u0027\u0027\\\\ |   \u0027      |  \u0027|   \u0027      |  \u0027| |    \\  \u0027 ||     \\ \\        / /     .-\u0027\u0027\"\u0027-.  `.  ","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"| |  | |\\    \\     / / \\    \\     / / | |     |  \u0027||  __  \\ \\      / /     /________\\   \\ ","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\`-\u0027 /  `.   ` ..\u0027 /   `.   ` ..\u0027 /  | |     |  |||/\u0027__ \u0027.\\ \\    / /|                  | ","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" /(\"\u0027`      \u0027-...-\u0027`       \u0027-...-\u0027`   | |     \u0027 .\u0027|:/`  \u0027. \u0027\\ \\  / / \\    .-------------\u0027 ","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\ \u0027---.                              | |___.\u0027 /\u0027 ||     | | \\ `  /   \\    \u0027-.____...---. ","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  /\u0027\"\"\u0027.\\                            /_______.\u0027/  ||\\    / \u0027  \\  /     `.             .\u0027  ","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ||     ||                           \\_______|/   |/\\\u0027..\u0027 /   / /        `\u0027\u0027-...... -\u0027    ","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\\u0027. __//                                         \u0027  `\u0027-\u0027`|`-\u0027 /                          ","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  `\u0027---\u0027                                                   \u0027..\u0027                           ","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Bye. Hope to not see you again soon! Me go sleep. Don\u0027t wake me!","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":19}},{"path":"text-art/DukeyText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ________  ___  ___  ___  __    _______       ___    ___ ","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"|\\   ___ \\|\\  \\|\\  \\|\\  \\|\\  \\ |\\  ___ \\     |\\  \\  /  /|","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"\\ \\  \\_|\\ \\ \\  \\\\\\  \\ \\  \\/  /|\\ \\   __/|    \\ \\  \\/  / /","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\ \\  \\ \\\\ \\ \\  \\\\\\  \\ \\   ___  \\ \\  \\_|/__   \\ \\    / / ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  \\ \\  \\_\\\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\   \\/  /  /  ","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"   \\ \\_______\\ \\_______\\ \\__\\\\ \\__\\ \\_______\\__/  / /    ","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    \\|_______|\\|_______|\\|__| \\|__|\\|_______|\\___/ /     ","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                            \\|___|/      ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":10}},{"path":"text-art/HelloText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Hello! I\u0027m Parrot Boi, What can I not do for you (I\u0027m Lazy)? ","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"c(＞ω＜)ゞ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"I\u0027m currently in parrot to-do mode!","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Give me something to remember and I will annoy you XD    ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":10}},{"path":"text-art/ParrotText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            .------.","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"           /  ~ ~   \\,------.      ______","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"         ,\u0027  ~ ~ ~  /  (@)   \\   ,\u0027      \\","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"       ,\u0027          /`.    ~ ~ \\ /         \\","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     ,\u0027           | ,\u0027\\  ~ ~ ~ X     \\  \\  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"   ,\u0027  ,\u0027          V--\u003c       (       \\  \\  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ,\u0027  ,\u0027               (vv      \\/\\  \\  \\  |  |","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"(__,\u0027  ,\u0027   /         (vv   \"\"    \\  \\  | |  |","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  (__,\u0027    /   /       vv   \"\"\"    \\ |  / / /","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      \\__,\u0027   /  |     vv          / / / / /","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"          \\__/   / |  | \\         / /,\u0027,\u0027,\u0027","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             \\__/\\_^  |  \\       /,\u0027\u0027,\u0027,\u0027\\","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    `-^.__\u003e.____/  \u0027 ,\u0027   \\","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                            // //---\u0027      |","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"          \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(((((((\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                     | \\ \\  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                     / |  |  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                    / /  / \\  \\","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                    `.     |   \\","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"todo Go To School","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"todo watch anime","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"todo","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"done 3","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"done 4","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"done 7","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"invalidcommand","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline /by","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline lightnovel /by","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"deadline /by 15Aug","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"event /at","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"event anime /at","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"event /at 6pm","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"delete 2","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"delete","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"delete 10","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"delete 0","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":3,"-":19}},{"path":"text-ui-test/text-art/ByeText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            .-\u0027\u0027\u0027-.        .-\u0027\u0027\u0027-.                                                        ","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"           \u0027   _    \\     \u0027   _    \\ _______                                              ","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"         /   /` \u0027.   \\  /   /` \u0027.   \\\\  ___ `\u0027.   /|                       __.....__      ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  .--./).   |     \\  \u0027 .   |     \\  \u0027 \u0027 |--.\\  \\  ||    .-.          .-.-\u0027\u0027         \u0027.    ","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" /.\u0027\u0027\\\\ |   \u0027      |  \u0027|   \u0027      |  \u0027| |    \\  \u0027 ||     \\ \\        / /     .-\u0027\u0027\"\u0027-.  `.  ","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"| |  | |\\    \\     / / \\    \\     / / | |     |  \u0027||  __  \\ \\      / /     /________\\   \\ ","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\`-\u0027 /  `.   ` ..\u0027 /   `.   ` ..\u0027 /  | |     |  |||/\u0027__ \u0027.\\ \\    / /|                  | ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" /(\"\u0027`      \u0027-...-\u0027`       \u0027-...-\u0027`   | |     \u0027 .\u0027|:/`  \u0027. \u0027\\ \\  / / \\    .-------------\u0027 ","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\ \u0027---.                              | |___.\u0027 /\u0027 ||     | | \\ `  /   \\    \u0027-.____...---. ","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  /\u0027\"\"\u0027.\\                            /_______.\u0027/  ||\\    / \u0027  \\  /     `.             .\u0027  ","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ||     ||                           \\_______|/   |/\\\u0027..\u0027 /   / /        `\u0027\u0027-...... -\u0027    ","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\\u0027. __//                                         \u0027  `\u0027-\u0027`|`-\u0027 /                          ","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  `\u0027---\u0027                                                   \u0027..\u0027                           ","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Bye. Hope to not see you again soon! Me go sleep. Don\u0027t wake me!","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":19}},{"path":"text-ui-test/text-art/DukeyText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ________  ___  ___  ___  __    _______       ___    ___ ","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"|\\   ___ \\|\\  \\|\\  \\|\\  \\|\\  \\ |\\  ___ \\     |\\  \\  /  /|","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"\\ \\  \\_|\\ \\ \\  \\\\\\  \\ \\  \\/  /|\\ \\   __/|    \\ \\  \\/  / /","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" \\ \\  \\ \\\\ \\ \\  \\\\\\  \\ \\   ___  \\ \\  \\_|/__   \\ \\    / / ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  \\ \\  \\_\\\\ \\ \\  \\\\\\  \\ \\  \\\\ \\  \\ \\  \\_|\\ \\   \\/  /  /  ","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"   \\ \\_______\\ \\_______\\ \\__\\\\ \\__\\ \\_______\\__/  / /    ","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"    \\|_______|\\|_______|\\|__| \\|__|\\|_______|\\___/ /     ","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                            \\|___|/      ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":10}},{"path":"text-ui-test/text-art/HelloText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Hello! I\u0027m Parrot Boi, What can I not do for you (I\u0027m Lazy)? ","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"c(＞ω＜)ゞ","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"I\u0027m currently in parrot to-do mode!","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"Give me something to remember and I will annoy you XD    ","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":10}},{"path":"text-ui-test/text-art/ParrotText.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"            .------.","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"           /  ~ ~   \\,------.      ______","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"         ,\u0027  ~ ~ ~  /  (@)   \\   ,\u0027      \\","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"       ,\u0027          /`.    ~ ~ \\ /         \\","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"     ,\u0027           | ,\u0027\\  ~ ~ ~ X     \\  \\  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"   ,\u0027  ,\u0027          V--\u003c       (       \\  \\  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":" ,\u0027  ,\u0027               (vv      \\/\\  \\  \\  |  |","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"(__,\u0027  ,\u0027   /         (vv   \"\"    \\  \\  | |  |","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"  (__,\u0027    /   /       vv   \"\"\"    \\ |  / / /","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"      \\__,\u0027   /  |     vv          / / / / /","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"          \\__/   / |  | \\         / /,\u0027,\u0027,\u0027","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"             \\__/\\_^  |  \\       /,\u0027\u0027,\u0027,\u0027\\","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                    `-^.__\u003e.____/  \u0027 ,\u0027   \\","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                            // //---\u0027      |","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"          \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d(((((((\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                     | \\ \\  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                     / |  |  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                    / /  / \\  \\","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"YEOWEIHNGWHYELAB"},"content":"                                    `.     |   \\","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"YEOWEIHNGWHYELAB":19}}]
