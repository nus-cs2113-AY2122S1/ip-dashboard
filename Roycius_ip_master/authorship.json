[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"     * Constants for user input Commands","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"    private static final String COMMAND_LIST_TASKS \u003d \"list\";","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"    private static final String COMMAND_MARK_AS_DONE \u003d \"done\";","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"    private static final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    private static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"    private static final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"    private static final String COMMAND_DELETE_TASK \u003d \"delete\";","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"    private static final String COMMAND_UPCOMING_TASKS \u003d \"upcoming\";","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"     * The input scanner for the program","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"    public static final Scanner SCANNER_INPUT \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"     * Stores the most recent input from the user in String format","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"    public static String strInput \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Roycius"},"content":"     * \"false\" by default. \"true\" when session with duke is to be ended.","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Roycius"},"content":"    public static boolean isSessionEnding \u003d false;","lastModifiedDate":"2021-09-04"},{"lineNumber":38,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"Roycius"},"content":"    private static Ui ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Roycius"},"content":"    private static Parser parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Roycius"},"content":"    private static TaskList taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"Roycius"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Roycius"},"content":"        initDuke();","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"Roycius"},"content":"        ui.printGreetingMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Roycius"},"content":"        runMainLoop();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":49,"author":{"gitId":"Roycius"},"content":"    private static void runMainLoop() {","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Roycius"},"content":"        while (!isSessionEnding) {","lastModifiedDate":"2021-09-04"},{"lineNumber":51,"author":{"gitId":"Roycius"},"content":"            strInput \u003d SCANNER_INPUT.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Roycius"},"content":"            String command \u003d parser.extractCommand(strInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Roycius"},"content":"            switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Roycius"},"content":"            case COMMAND_EXIT:","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Roycius"},"content":"                isSessionEnding \u003d true;","lastModifiedDate":"2021-09-04"},{"lineNumber":56,"author":{"gitId":"Roycius"},"content":"                ui.printGoodbyeMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":58,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"Roycius"},"content":"            case COMMAND_LIST_TASKS:","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Roycius"},"content":"                taskList.showTaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":62,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":63,"author":{"gitId":"Roycius"},"content":"            case COMMAND_MARK_AS_DONE:","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Roycius"},"content":"                taskList.markTaskAsDone(strInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"Roycius"},"content":"            case COMMAND_ADD_TODO:","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Roycius"},"content":"                taskList.addTodo(strInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":71,"author":{"gitId":"Roycius"},"content":"            case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Roycius"},"content":"                taskList.addDeadline(strInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Roycius"},"content":"            case COMMAND_ADD_EVENT:","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Roycius"},"content":"                taskList.addEvent(strInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":78,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":79,"author":{"gitId":"Roycius"},"content":"            case COMMAND_DELETE_TASK:","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"Roycius"},"content":"                taskList.deleteTask(strInput);","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"Roycius"},"content":"            case COMMAND_UPCOMING_TASKS:","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"Roycius"},"content":"                taskList.showUpcoming(strInput);","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"Roycius"},"content":"            default:","lastModifiedDate":"2021-08-20"},{"lineNumber":88,"author":{"gitId":"Roycius"},"content":"                ui.printInvalidCommand();","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"Roycius"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":91,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":92,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":93,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":94,"author":{"gitId":"Roycius"},"content":"    private static void initDuke() {","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"Roycius"},"content":"        taskList \u003d new TaskList();","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"Roycius"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"Roycius"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"Roycius"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"Roycius"},"content":"        //load storage data into the task list","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"Roycius"},"content":"        taskList.updateTaskList(storage.loadFile());","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Roycius":103,"-":2}},{"path":"src/main/java/duke/exception/CorruptedDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.exception;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"public class CorruptedDataException extends Exception {","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"    //empty","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"Roycius":5}},{"path":"src/main/java/duke/exception/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":" * To be used when no arguments were given after the command","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"public class EmptyArgumentException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"    //empty","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Roycius":8}},{"path":"src/main/java/duke/exception/EmptyParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":" * To be used when there is a missing parameter in the input string","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"public class EmptyParameterException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"    //empty","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Roycius":8}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import duke.exception.EmptyArgumentException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import duke.exception.EmptyParameterException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"import duke.task.TaskTimeManager;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":" * Methods that deal with making sense of the user input.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":" * Note: The \"command\" is the first word of the input. The \"content\" is everything","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":" * beyond the first word.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"    private static final TaskTimeManager taskTimeManager \u003d new TaskTimeManager();","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"     * Extracts the date from the content of an event input (everything after \"/at\")","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"     * @param content the content of the event input","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"     * @return the date of the event","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"     * @throws EmptyParameterException when there is no date given for the event","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"    public LocalDateTime extractAtFromEvent(String content) throws EmptyParameterException {","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"        int positionOfSeparator \u003d content.trim().indexOf(\"/at\");","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"        if ((positionOfSeparator + 3) \u003e\u003d content.length()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"            throw new EmptyParameterException();","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"        return taskTimeManager.parseDateTime(content.substring(positionOfSeparator + 3).trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Roycius"},"content":"     * Extracts the description from the content of an event input (everything before \"/at\")","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Roycius"},"content":"     * @param content the content of the event input","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Roycius"},"content":"     * @return the description of the event","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Roycius"},"content":"     * @throws EmptyParameterException when there is no description for the event","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Roycius"},"content":"    public String extractDescriptionFromEvent(String content) throws EmptyParameterException, DateTimeParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Roycius"},"content":"        int positionOfSeparator \u003d content.trim().indexOf(\"/at\");","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Roycius"},"content":"        if (positionOfSeparator \u003c\u003d 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Roycius"},"content":"            throw new EmptyParameterException();","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Roycius"},"content":"        return content.substring(0, positionOfSeparator - 1).trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Roycius"},"content":"     * Extracts the deadline from the content of a deadline input (everything after \"/by\")","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Roycius"},"content":"     * @param content the content of the deadline input","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Roycius"},"content":"     * @return the deadline of the deadline","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Roycius"},"content":"     * @throws EmptyParameterException when there is no date given for the deadline","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Roycius"},"content":"    public LocalDateTime extractByFromDeadline(String content) throws EmptyParameterException, DateTimeParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Roycius"},"content":"        int positionOfSeparator \u003d content.trim().indexOf(\"/by\");","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Roycius"},"content":"        if ((positionOfSeparator + 3) \u003e\u003d content.length()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Roycius"},"content":"            throw new EmptyParameterException();","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Roycius"},"content":"        return taskTimeManager.parseDateTime(content.substring(positionOfSeparator + 3).trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Roycius"},"content":"     * Extracts the description from the content of a deadline input (everything before \"/by\")","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"Roycius"},"content":"     * @param content the content of the deadline input","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Roycius"},"content":"     * @return the description of the deadline","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Roycius"},"content":"     * @throws EmptyParameterException when there is no description for the deadline","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"Roycius"},"content":"    public String extractDescriptionFromDeadline(String content) throws EmptyParameterException {","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Roycius"},"content":"        int positionOfSeparator \u003d content.trim().indexOf(\"/by\");","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Roycius"},"content":"        if (positionOfSeparator \u003c\u003d 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"Roycius"},"content":"            throw new EmptyParameterException();","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Roycius"},"content":"        return content.substring(0, positionOfSeparator - 1).trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"Roycius"},"content":"     * Extracts the content from the input string","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"Roycius"},"content":"     * @return the content of the input stream","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"Roycius"},"content":"     * @throws EmptyArgumentException when the content of the input is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"Roycius"},"content":"    public String extractContent(String input) throws EmptyArgumentException {","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"Roycius"},"content":"        int firstSpacePosition \u003d input.trim().indexOf(\" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"Roycius"},"content":"        if (firstSpacePosition \u003c 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"Roycius"},"content":"            throw new EmptyArgumentException();","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"Roycius"},"content":"        return input.substring(firstSpacePosition + 1).trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"Roycius"},"content":"     * Extracts the command from the input string (the first word)","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"Roycius"},"content":"     * @return the command of the input string","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"Roycius"},"content":"    public String extractCommand(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"Roycius"},"content":"        String[] words \u003d input.trim().split(\" \");","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"Roycius"},"content":"        return words[0].trim();","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"Roycius"},"content":"     * Extracts the integer from the input string and then deducts 1 from it to","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"Roycius"},"content":"     * represent its index in an array. Then returns this said index.","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"Roycius"},"content":"     * @param input the input string given","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"Roycius"},"content":"     * @return the index in an array in which the number in the input represents","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"Roycius"},"content":"     * @throws NumberFormatException when the content of the input is not a number","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"Roycius"},"content":"     * @throws EmptyArgumentException when the content of the input is empty","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"Roycius"},"content":"    public int extractIndex(String input) throws NumberFormatException, EmptyArgumentException {","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"Roycius"},"content":"        String content \u003d extractContent(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"Roycius"},"content":"        return Integer.parseInt(content) - 1;","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"Roycius"},"content":"     * Extracts the integer from the input string and returns it","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"Roycius"},"content":"     * @param input the input string given","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"Roycius"},"content":"     * @return the integer in the input string","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"Roycius"},"content":"     * @throws NumberFormatException when the content of the input is not a number","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"Roycius"},"content":"     * @throws EmptyArgumentException when the content of the input is empty","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"Roycius"},"content":"    public int extractNumber(String input) throws NumberFormatException, EmptyArgumentException {","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"Roycius"},"content":"        String content \u003d extractContent(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"Roycius"},"content":"        return Integer.parseInt(content);","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Roycius":131}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import duke.exception.CorruptedDataException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"import duke.task.TaskTimeManager;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"import java.io.File;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"public class Storage {","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    private static final String TASK_DATA_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"    private static final TaskTimeManager taskTimeManager \u003d new TaskTimeManager();","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"     * Returns a Task ArrayList based on data read from the data storage file. Creates the","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"     * data storage folder if there is no existing one.","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"     * @return an ArrayList of Tasks corresponding to the data storage file","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"    public ArrayList\u003cTask\u003e loadFile() {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"        File dataFile \u003d new File(\"data\");","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"        dataFile.mkdir();","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"            decodeFileContent(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Previous data loaded successfully\");","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Roycius"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"No existing data\");","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Roycius"},"content":"        } catch (CorruptedDataException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Data file corrupted...\");","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Roycius"},"content":"        return taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Roycius"},"content":"     * Reads and parses the data storage file. Then writes the decoded content into the","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Roycius"},"content":"     * given Task ArrayList.","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Roycius"},"content":"     * @param taskList the ArrayList to be written into","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Roycius"},"content":"     * @throws FileNotFoundException  when no existing data file is found","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Roycius"},"content":"     * @throws CorruptedDataException when the existing data file has corrupted data","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Roycius"},"content":"    public void decodeFileContent(ArrayList\u003cTask\u003e taskList) throws FileNotFoundException, CorruptedDataException {","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Roycius"},"content":"        File f \u003d new File(TASK_DATA_PATH);","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Roycius"},"content":"        Scanner dataScanner \u003d new Scanner(f);","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Roycius"},"content":"        while (dataScanner.hasNext()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Roycius"},"content":"            String[] data \u003d dataScanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Roycius"},"content":"            boolean isTaskDone \u003d data[1].equals(\"1\");","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Roycius"},"content":"            switch (data[0]) {","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Roycius"},"content":"            case Todo.SYMBOL:","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Roycius"},"content":"                taskList.add(new Todo(data[2]));","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Roycius"},"content":"                if (isTaskDone) {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Roycius"},"content":"                    taskList.get(Task.getTotalTasks() - 1).setDone(true);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Roycius"},"content":"            case Deadline.SYMBOL:","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Roycius"},"content":"                taskList.add(new Deadline(data[2], taskTimeManager.parseDateTime(data[3])));","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Roycius"},"content":"                if (isTaskDone) {","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Roycius"},"content":"                    taskList.get(Task.getTotalTasks() - 1).setDone(true);","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Roycius"},"content":"            case Event.SYMBOL:","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Roycius"},"content":"                taskList.add(new Event(data[2], taskTimeManager.parseDateTime(data[3])));","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"Roycius"},"content":"                if (isTaskDone) {","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"Roycius"},"content":"                    taskList.get(Task.getTotalTasks() - 1).setDone(true);","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"Roycius"},"content":"            default:","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"Roycius"},"content":"                throw new CorruptedDataException();","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Roycius"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"Roycius"},"content":"     * Updates the data storage file to that of the given Task ArrayList","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"Roycius"},"content":"     * @param taskList the Task ArrayList that needs to be written into the data storage file","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"Roycius"},"content":"    public void updateDataFile(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"Roycius"},"content":"            FileWriter fw \u003d new FileWriter(TASK_DATA_PATH);","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"Roycius"},"content":"            //clear data file before write","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"Roycius"},"content":"            fw.write(\"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"Roycius"},"content":"            fw.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"Roycius"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"Roycius"},"content":"                task.writeToFile(TASK_DATA_PATH);","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"Roycius"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"Roycius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Failed to update data file\");","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"Roycius"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Roycius":105}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"    public static final String SYMBOL \u003d \"D\";","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"    private TaskTimeManager taskTimeManager \u003d new TaskTimeManager();","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"        super(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"        return by;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"    public void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"        fw.write(SYMBOL + \" | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"                + taskTimeManager.getWriteToFileFormat(by) + System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"        fw.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"        return \"[\" + SYMBOL + \"]\" + super.toString() + \" (by: \" + taskTimeManager.getDisplayFormat(by) + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":33}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"    public static final String SYMBOL \u003d \"E\";","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"    private TaskTimeManager taskTimeManager \u003d new TaskTimeManager();","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"        super(description);","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"    public LocalDateTime getAt() {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"        return at;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"    public void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"        fw.write(SYMBOL + \" | \" + (isDone ? 1 : 0) + \" | \" + description + \" | \"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"                + taskTimeManager.getWriteToFileFormat(at) + System.lineSeparator());","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"        fw.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"        return \"[\" + SYMBOL + \"]\" + super.toString() + \" (at: \" + taskTimeManager.getDisplayFormat(at) + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":33}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"     * The description of the Task","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"    protected String description;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"     * The done status of the Task","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"     * The total number of Tasks added","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"    private static int totalTasks \u003d 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"        totalTasks++;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"    public abstract void writeToFile(String filePath) throws IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"     * Set the Task object isDone value to the given boolean","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"     * @param doneStatus boolean representing the isDone status to be set to","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Roycius"},"content":"    public void setDone(boolean doneStatus) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Roycius"},"content":"        isDone \u003d doneStatus;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Roycius"},"content":"     * Returns the total number of Tasks added","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Roycius"},"content":"     * @return the current value of totalTasks","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Roycius"},"content":"    public static int getTotalTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Roycius"},"content":"        return totalTasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Roycius"},"content":"     * Returns an icon representing the done status of the Task object","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Roycius"},"content":"     * @return \"[X]\" if isDone is true, \"[ ]\" otherwise","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Roycius"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Roycius"},"content":"        //icon \"[X]\" as done and \"[ ]\" as not done","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Roycius"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":58,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Roycius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Roycius"},"content":"        return getStatusIcon() + \" \" + description;","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":63,"author":{"gitId":"Roycius"},"content":"    public static void decreaseTotalTasks() {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"Roycius"},"content":"        if (totalTasks \u003e 0) {","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"Roycius"},"content":"            totalTasks--;","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Roycius":69}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import duke.exception.EmptyArgumentException;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import duke.exception.EmptyParameterException;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"public class TaskList {","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"    private static final Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"    private static final Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"    private static final Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    public void updateTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"     * Adds a new Event type task to the taskList","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"    public void addEvent(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"            String content \u003d parser.extractContent(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"            String descr \u003d parser.extractDescriptionFromEvent(content);","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"            LocalDateTime at \u003d parser.extractAtFromEvent(content);","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"            taskList.add(new Event(descr, at));","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Roycius"},"content":"            storage.updateDataFile(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Roycius"},"content":"            ui.printTaskAddedMessage(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"event [description] /at [date]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyParameterException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Roycius"},"content":"            ui.printMissingParameter(\"Event\");","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"event [description] /at [date]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Roycius"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Roycius"},"content":"            ui.printWrongDateTimeFormat();","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Roycius"},"content":"     * Adds a new Deadline type task to the taskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Roycius"},"content":"    public void addDeadline(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Roycius"},"content":"            String content \u003d parser.extractContent(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Roycius"},"content":"            String descr \u003d parser.extractDescriptionFromDeadline(content);","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Roycius"},"content":"            LocalDateTime by \u003d parser.extractByFromDeadline(content);","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"Roycius"},"content":"            taskList.add(new Deadline(descr, by));","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Roycius"},"content":"            storage.updateDataFile(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Roycius"},"content":"            ui.printTaskAddedMessage(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"deadline [description] /by [date]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyParameterException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Roycius"},"content":"            ui.printMissingParameter(\"Deadline\");","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"deadline [description] /by [date]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Roycius"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"Roycius"},"content":"            ui.printWrongDateTimeFormat();","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"Roycius"},"content":"     * Adds a new Todo type task to the taskList.","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"Roycius"},"content":"    public void addTodo(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Roycius"},"content":"            String content \u003d parser.extractContent(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Roycius"},"content":"            taskList.add(new Todo(content));","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"Roycius"},"content":"            storage.updateDataFile(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"Roycius"},"content":"            ui.printTaskAddedMessage(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"todo [description]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"Roycius"},"content":"     * Marks the task of the given ranking as done.","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"Roycius"},"content":"     * @param input numerical ranking (as a string) of the task to be marked as done","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"Roycius"},"content":"    public void markTaskAsDone(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"Roycius"},"content":"        //to store the array index of the task","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"Roycius"},"content":"        int index;","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"Roycius"},"content":"            index \u003d parser.extractIndex(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"Roycius"},"content":"            taskList.get(index).setDone(true);","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"Roycius"},"content":"            storage.updateDataFile(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"Roycius"},"content":"            ui.printMarkTaskAsDone(taskList, index, true);","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"Roycius"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"Roycius"},"content":"            ui.printMarkTaskAsDone(taskList, 0, false);","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"Roycius"},"content":"        } catch (NumberFormatException e) { //not a number","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"Roycius"},"content":"            ui.printInvalidNumber();","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"done [task index]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"done [task index]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"Roycius"},"content":"     * Deletes the task of the given ranking.","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"Roycius"},"content":"     * @param input numerical ranking (as a string) of the task to be marked as done","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"Roycius"},"content":"    public void deleteTask(String input) {","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"Roycius"},"content":"        int index; //to store the array index of the task","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"Roycius"},"content":"        Task removedTask \u003d null; //to temporarily store the removed task","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"Roycius"},"content":"            index \u003d parser.extractIndex(input);","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"Roycius"},"content":"            removedTask \u003d taskList.remove(index);","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"Roycius"},"content":"            Task.decreaseTotalTasks();","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"Roycius"},"content":"            storage.updateDataFile(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"Roycius"},"content":"            ui.printDeleteTask(removedTask, index, true);","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"Roycius"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"Roycius"},"content":"            ui.printDeleteTask(removedTask, 0, false);","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"Roycius"},"content":"        } catch (NumberFormatException e) { //not a number","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"Roycius"},"content":"            ui.printInvalidNumber();","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"delete [task index]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"delete [task index]\");","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"Roycius"},"content":"     * Displays all the tasks for the user in a list format.","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"Roycius"},"content":"    public void showTaskList() {","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"Roycius"},"content":"        ui.printTaskList(taskList);","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"Roycius"},"content":"    public void showUpcoming(String input) {","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"Roycius"},"content":"            int days \u003d parser.extractNumber(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"Roycius"},"content":"            ui.printUpcomingDeadlines(taskList, days);","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"Roycius"},"content":"            ui.printUpcomingEvents(taskList, days);","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"Roycius"},"content":"        } catch (NumberFormatException e) { //not a number","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"Roycius"},"content":"            ui.printInvalidNumber();","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"upcoming [days]\");","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"Roycius"},"content":"            ui.printCommandGuide(\"upcoming [days]\");","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Roycius":152}},{"path":"src/main/java/duke/task/TaskTimeManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":" * Deals with time related functions such as time parsing and comparing. Time class","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":" * used is LocalDateTime.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"public class TaskTimeManager {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"    //The format for date and time to be read from the input string","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"    //Example of the format: 2021-09-18 16:00","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"    private static final String readFormat \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"    //The format for date and time to be printed","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    //Example of the format: 5 Oct 2021 16:00","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"    public static final String printFormat \u003d \"d MMM yyyy HH:mm\";","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"    public LocalDateTime parseDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"        //The formatter to parse a string representing DateTime into LocalDateTime type","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(readFormat);","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"    public String getWriteToFileFormat(LocalDateTime dateTime) {","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(readFormat));","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"    public String getDisplayFormat(LocalDateTime dateTime) {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(printFormat));","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"Roycius"},"content":"    public LocalDateTime getCurrentTime() {","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"Roycius"},"content":"        return LocalDateTime.now();","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"Roycius"},"content":"     * Returns \"true\" if the DateTime given on the left is earlier than the right,","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Roycius"},"content":"     * otherwise returns \"false\"","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"Roycius"},"content":"     * @param left DateTime on the left","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"Roycius"},"content":"     * @param right DateTime on the right","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"Roycius"},"content":"     * @return the result of whether left is earlier than right","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"Roycius"},"content":"    public boolean isEarlierThan(LocalDateTime left, LocalDateTime right) {","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"Roycius"},"content":"        return left.isBefore(right);","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"Roycius"},"content":"    public LocalDateTime addDaysToDateTime(LocalDateTime originalTime, int days) {","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"Roycius"},"content":"        return originalTime.plus(days, ChronoUnit.DAYS);","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"Roycius":55}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"    public static final String SYMBOL \u003d \"T\";","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"    public void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"        fw.write(SYMBOL + \" | \" + (isDone ? 1 : 0) + \" | \" + description + System.lineSeparator());","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"        fw.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"        return \"[\" + SYMBOL + \"]\" + super.toString();","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":24}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"import duke.task.TaskTimeManager;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"    public static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"    private static final TaskTimeManager taskTimeManager \u003d new TaskTimeManager();","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"     * Prints the greeting message of Duke","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    public void printGreetingMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Hello! I am Duke, here to manage your tasks!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"     * Prints the farewell message of Duke","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"Roycius"},"content":"     * Prints the error message for an invalid command","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"Roycius"},"content":"    public void printInvalidCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Command not recognized!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"try the following: \\\"list\\\", \\\"done\\\", \\\"todo\\\", \\\"deadline\\\", \\\"event\\\", \\\"bye\\\"\");","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"\\\"delete\\\", \\\"upcoming\\\"\");","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"Roycius"},"content":"     * Prints the prompt for user to give a numerical number.","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"Roycius"},"content":"    public void printInvalidNumber() {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Please give a number!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"Roycius"},"content":"     * Prints out the instruction for the correct usage of the command.","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"Roycius"},"content":"     * @param commandUsageMethod a string representing the command usage format","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"Roycius"},"content":"    public void printCommandGuide(String commandUsageMethod) {","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Instructions for the command: \" + commandUsageMethod);","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"Roycius"},"content":"     * Prints out a list of all tasks in the task ArrayList","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"Roycius"},"content":"     * @param taskList the task ArrayList with all the tasks to be printed","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"Roycius"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":71,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"Roycius"},"content":"        if (Task.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"There are no tasks!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"Roycius"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":75,"author":{"gitId":"Roycius"},"content":"            return;","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"Roycius"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"Roycius"},"content":"            System.out.println((i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"Roycius"},"content":"     * Prints out the success or fail message for the marking of a task as done","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"Roycius"},"content":"     * @param taskList the array list the task is in","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"Roycius"},"content":"     * @param taskIndex the array index of the task that was marked as done","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"Roycius"},"content":"     * @param isSuccessful the result of the task marking","lastModifiedDate":"2021-09-17"},{"lineNumber":90,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":91,"author":{"gitId":"Roycius"},"content":"    public void printMarkTaskAsDone(ArrayList\u003cTask\u003e taskList, int taskIndex, boolean isSuccessful) {","lastModifiedDate":"2021-09-17"},{"lineNumber":92,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"Roycius"},"content":"        if (isSuccessful) {","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Nice! I\u0027ve marked task number \" + (taskIndex + 1) + \" as done:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":95,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"  \" + taskList.get(taskIndex));","lastModifiedDate":"2021-09-17"},{"lineNumber":96,"author":{"gitId":"Roycius"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":97,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"The given task number does not exist!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":98,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"You have \" + Task.getTotalTasks() + \" tasks in total.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":99,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":100,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":101,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":102,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":103,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":104,"author":{"gitId":"Roycius"},"content":"     * Prints out the success or fail message for the deleting of a task","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"Roycius"},"content":"     * @param removedTask the Task that was removed","lastModifiedDate":"2021-09-17"},{"lineNumber":107,"author":{"gitId":"Roycius"},"content":"     * @param taskIndex the array index of the task that was deleted","lastModifiedDate":"2021-09-17"},{"lineNumber":108,"author":{"gitId":"Roycius"},"content":"     * @param isSuccessful the result of the task deletion","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":110,"author":{"gitId":"Roycius"},"content":"    public void printDeleteTask(Task removedTask, int taskIndex, boolean isSuccessful) {","lastModifiedDate":"2021-09-17"},{"lineNumber":111,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":112,"author":{"gitId":"Roycius"},"content":"        if (isSuccessful) {","lastModifiedDate":"2021-09-17"},{"lineNumber":113,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Noted. I\u0027ve removed task number \" + (taskIndex + 1) + \":\");","lastModifiedDate":"2021-09-17"},{"lineNumber":114,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"  \" + removedTask);","lastModifiedDate":"2021-09-17"},{"lineNumber":115,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Now you have \" + Task.getTotalTasks() + \" tasks in the list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":116,"author":{"gitId":"Roycius"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":117,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"The given task number does not exist!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":118,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"You have \" + Task.getTotalTasks() + \" tasks in total.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":119,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":120,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":121,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":122,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":123,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":124,"author":{"gitId":"Roycius"},"content":"     * Prints out the prompt for the user to specify a description and/or date for the","lastModifiedDate":"2021-09-17"},{"lineNumber":125,"author":{"gitId":"Roycius"},"content":"     * task.","lastModifiedDate":"2021-09-17"},{"lineNumber":126,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":127,"author":{"gitId":"Roycius"},"content":"     * @param taskType a string describing the task type","lastModifiedDate":"2021-09-17"},{"lineNumber":128,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":129,"author":{"gitId":"Roycius"},"content":"    public void printMissingParameter(String taskType) {","lastModifiedDate":"2021-09-17"},{"lineNumber":130,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":131,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Please specify the \" + taskType + \" description and/or date!\");","lastModifiedDate":"2021-09-17"},{"lineNumber":132,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":133,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":134,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":135,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":136,"author":{"gitId":"Roycius"},"content":"     * Prints the success message for the most recently added task","lastModifiedDate":"2021-09-17"},{"lineNumber":137,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":138,"author":{"gitId":"Roycius"},"content":"    public void printTaskAddedMessage(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-17"},{"lineNumber":139,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":140,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-17"},{"lineNumber":141,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"  \" + taskList.get(Task.getTotalTasks() - 1));","lastModifiedDate":"2021-09-17"},{"lineNumber":142,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Now you have \" + Task.getTotalTasks() + \" tasks in the list.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":143,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-17"},{"lineNumber":144,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":145,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":146,"author":{"gitId":"Roycius"},"content":"    public void printWrongDateTimeFormat() {","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Wrong Date-Time format given!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Accepted Format: YYYY-MM-DD HH:MM\");","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Example: 2021-09-18 16:00\");","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"Roycius"},"content":"    public void printUpcomingDeadlines(ArrayList\u003cTask\u003e taskList, int days) {","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"Roycius"},"content":"        //gets the Date-Time to print deadlines up to","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"Roycius"},"content":"        LocalDateTime due \u003d taskTimeManager.addDaysToDateTime(taskTimeManager.getCurrentTime(), days);","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Here are the tasks due within the next \" + days + \" days:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"Roycius"},"content":"        int printCount \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"Roycius"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"Roycius"},"content":"            if (taskList.get(i) instanceof Deadline) {","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"Roycius"},"content":"                Deadline deadlineTask \u003d (Deadline)taskList.get(i);","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"Roycius"},"content":"                if (taskTimeManager.isEarlierThan(deadlineTask.getBy(), due)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"Roycius"},"content":"                    System.out.println((printCount + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"Roycius"},"content":"                    printCount++;","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"Roycius"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"Roycius"},"content":"        if (printCount \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"You have no deadlines within the next \" + days + \" days!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"Roycius"},"content":"    public void printUpcomingEvents(ArrayList\u003cTask\u003e taskList, int days) {","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"Roycius"},"content":"        //gets the Date-Time to print events up to","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"Roycius"},"content":"        LocalDateTime due \u003d taskTimeManager.addDaysToDateTime(taskTimeManager.getCurrentTime(), days);","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Here are the upcoming events within the next \" + days + \" days:\");","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"Roycius"},"content":"        int printCount \u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"Roycius"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"Roycius"},"content":"            if (taskList.get(i) instanceof Event) {","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"Roycius"},"content":"                Event eventTask \u003d (Event)taskList.get(i);","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"Roycius"},"content":"                if (taskTimeManager.isEarlierThan(eventTask.getAt(), due)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"Roycius"},"content":"                    System.out.println((printCount + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"Roycius"},"content":"                    printCount++;","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"Roycius"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"Roycius"},"content":"        if (printCount \u003d\u003d 0) {","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"You have no events within the next \" + days + \" days!\");","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"Roycius"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"Roycius":196}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"gibberish","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"todo","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"todo exercise","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"deadline","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"deadline /by","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"deadline assignment /by","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"deadline assignment /by today","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"event","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"event /at","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"event cca meeting /at","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"event cca meeting /at Monday","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"list","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"done","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"done gibberish","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"done 5","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"done 3","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"delete","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"delete gibberish","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"delete 1","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"delete 5","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"bye","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":25}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"if exist data del data","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"pause","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":4,"-":19}}]
