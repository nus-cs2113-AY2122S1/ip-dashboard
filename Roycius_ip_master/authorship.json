[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import duke.exception.CorruptedDataException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import duke.exception.EmptyArgumentException;","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"import duke.exception.EmptyParameterException;","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-10"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"import java.io.File;","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"     * The input scanner for the program","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"    public static final Scanner SCANNER_INPUT \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-13"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"     * An array that stores all the tasks","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"    public static ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-10"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"     * Stores the most recent input from the user in String format","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"    public static String strInput \u003d \"\";","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Roycius"},"content":"     * \"false\" by default. \"true\" when session with duke is to be ended.","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"Roycius"},"content":"    public static boolean isSessionEnding \u003d false;","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Roycius"},"content":"    public static String taskDataPath;","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"Roycius"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Roycius"},"content":"        initDuke();","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"Roycius"},"content":"        printGreetingMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":46,"author":{"gitId":"Roycius"},"content":"        //Main loop","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"Roycius"},"content":"        while (!isSessionEnding) {","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Roycius"},"content":"            strInput \u003d SCANNER_INPUT.nextLine();","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Roycius"},"content":"            String command \u003d extractCommand(strInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Roycius"},"content":"            switch (command) {","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Roycius"},"content":"            case \"bye\":","lastModifiedDate":"2021-08-20"},{"lineNumber":52,"author":{"gitId":"Roycius"},"content":"                isSessionEnding \u003d true;","lastModifiedDate":"2021-09-04"},{"lineNumber":53,"author":{"gitId":"Roycius"},"content":"                printGoodbyeMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":55,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"Roycius"},"content":"            case \"list\":","lastModifiedDate":"2021-08-20"},{"lineNumber":57,"author":{"gitId":"Roycius"},"content":"                printTaskList();","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":60,"author":{"gitId":"Roycius"},"content":"            case \"done\":","lastModifiedDate":"2021-08-20"},{"lineNumber":61,"author":{"gitId":"Roycius"},"content":"                try {","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Roycius"},"content":"                    markTaskAsDone(extractContent(strInput));","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"Roycius"},"content":"                } catch (NumberFormatException e) { //not a number","lastModifiedDate":"2021-09-04"},{"lineNumber":64,"author":{"gitId":"Roycius"},"content":"                    printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":65,"author":{"gitId":"Roycius"},"content":"                    System.out.println(\"Not a number!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":66,"author":{"gitId":"Roycius"},"content":"                    printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":67,"author":{"gitId":"Roycius"},"content":"                } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":68,"author":{"gitId":"Roycius"},"content":"                    printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":69,"author":{"gitId":"Roycius"},"content":"                    System.out.println(\"Please specify the index of the task to be marked as done!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":70,"author":{"gitId":"Roycius"},"content":"                    System.out.println(\"use: done [task index]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":71,"author":{"gitId":"Roycius"},"content":"                    printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":72,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-04"},{"lineNumber":73,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":75,"author":{"gitId":"Roycius"},"content":"            case \"todo\":","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"Roycius"},"content":"                addTodo(strInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"Roycius"},"content":"            case \"deadline\":","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"Roycius"},"content":"                addDeadline(strInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-28"},{"lineNumber":82,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":83,"author":{"gitId":"Roycius"},"content":"            case \"event\":","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"Roycius"},"content":"                addEvent(strInput);","lastModifiedDate":"2021-08-28"},{"lineNumber":85,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":86,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":87,"author":{"gitId":"Roycius"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"Roycius"},"content":"                try {","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"Roycius"},"content":"                    deleteTask(extractContent(strInput));","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"Roycius"},"content":"                } catch (NumberFormatException e) { //not a number","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"Roycius"},"content":"                    printBorder();","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"Roycius"},"content":"                    System.out.println(\"Not a number!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"Roycius"},"content":"                    printBorder();","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"Roycius"},"content":"                } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"Roycius"},"content":"                    printBorder();","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"Roycius"},"content":"                    System.out.println(\"Please specify the index of the task to be marked as done!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"Roycius"},"content":"                    System.out.println(\"use: delete [task index]\");","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"Roycius"},"content":"                    printBorder();","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"Roycius"},"content":"            default:","lastModifiedDate":"2021-08-20"},{"lineNumber":103,"author":{"gitId":"Roycius"},"content":"                printInvalidCommand();","lastModifiedDate":"2021-08-28"},{"lineNumber":104,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-08-20"},{"lineNumber":105,"author":{"gitId":"Roycius"},"content":"            }","lastModifiedDate":"2021-08-20"},{"lineNumber":106,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":107,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":108,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":109,"author":{"gitId":"Roycius"},"content":"    /*","lastModifiedDate":"2021-08-28"},{"lineNumber":110,"author":{"gitId":"Roycius"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-28"},{"lineNumber":111,"author":{"gitId":"Roycius"},"content":"     *           Task class related functions","lastModifiedDate":"2021-08-28"},{"lineNumber":112,"author":{"gitId":"Roycius"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-28"},{"lineNumber":113,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":114,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":115,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":116,"author":{"gitId":"Roycius"},"content":"     * Adds a new Event type task to the taskList","lastModifiedDate":"2021-08-28"},{"lineNumber":117,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-08-28"},{"lineNumber":119,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":120,"author":{"gitId":"Roycius"},"content":"    private static void addEvent(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":121,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":123,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":124,"author":{"gitId":"Roycius"},"content":"            String content \u003d extractContent(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"Roycius"},"content":"            String descr \u003d extractDescrFromEvent(content);","lastModifiedDate":"2021-09-04"},{"lineNumber":126,"author":{"gitId":"Roycius"},"content":"            String at \u003d extractAtFromEvent(content);","lastModifiedDate":"2021-09-04"},{"lineNumber":127,"author":{"gitId":"Roycius"},"content":"            taskList.add(new Event(descr, at));","lastModifiedDate":"2021-09-10"},{"lineNumber":128,"author":{"gitId":"Roycius"},"content":"            updateDataFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":129,"author":{"gitId":"Roycius"},"content":"            printTaskAddedMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":130,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":131,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Please specify the event details!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":132,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"use: event [description] /at [date]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":133,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyParameterException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":134,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"use: event [description] /at [date]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":135,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":136,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":137,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":138,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":139,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":140,"author":{"gitId":"Roycius"},"content":"     * Adds a new Deadline type task to the taskList","lastModifiedDate":"2021-08-28"},{"lineNumber":141,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-08-28"},{"lineNumber":143,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":144,"author":{"gitId":"Roycius"},"content":"    private static void addDeadline(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":145,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":146,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":147,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":148,"author":{"gitId":"Roycius"},"content":"            String content \u003d extractContent(input);","lastModifiedDate":"2021-08-28"},{"lineNumber":149,"author":{"gitId":"Roycius"},"content":"            String descr \u003d extractDescrFromDeadline(content);","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"Roycius"},"content":"            String by \u003d extractByFromDeadline(content);","lastModifiedDate":"2021-09-04"},{"lineNumber":151,"author":{"gitId":"Roycius"},"content":"            taskList.add(new Deadline(descr, by));","lastModifiedDate":"2021-09-10"},{"lineNumber":152,"author":{"gitId":"Roycius"},"content":"            updateDataFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"Roycius"},"content":"            printTaskAddedMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":154,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":155,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Please specify the deadline details!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":156,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"use: deadline [description] /by [date]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":157,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyParameterException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":158,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"use: deadline [description] /by [date]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":159,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":160,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":161,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":164,"author":{"gitId":"Roycius"},"content":"     * Adds a new Todo type task to the taskList","lastModifiedDate":"2021-08-28"},{"lineNumber":165,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":166,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-08-28"},{"lineNumber":167,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":168,"author":{"gitId":"Roycius"},"content":"    private static void addTodo(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":169,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":170,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":171,"author":{"gitId":"Roycius"},"content":"            String content \u003d extractContent(input);","lastModifiedDate":"2021-09-04"},{"lineNumber":172,"author":{"gitId":"Roycius"},"content":"            taskList.add(new Todo(content));","lastModifiedDate":"2021-09-10"},{"lineNumber":173,"author":{"gitId":"Roycius"},"content":"            updateDataFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":174,"author":{"gitId":"Roycius"},"content":"            printTaskAddedMessage();","lastModifiedDate":"2021-08-28"},{"lineNumber":175,"author":{"gitId":"Roycius"},"content":"        } catch (EmptyArgumentException e) {","lastModifiedDate":"2021-09-04"},{"lineNumber":176,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Please specify the todo description!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":177,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"use: todo [description]\");","lastModifiedDate":"2021-09-04"},{"lineNumber":178,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":179,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":180,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":181,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":182,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":183,"author":{"gitId":"Roycius"},"content":"     * Prints the success message for the most recently added task","lastModifiedDate":"2021-08-28"},{"lineNumber":184,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":185,"author":{"gitId":"Roycius"},"content":"    private static void printTaskAddedMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":186,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":187,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"  \" + taskList.get(Task.getTotalTasks() - 1));","lastModifiedDate":"2021-09-10"},{"lineNumber":188,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Now you have \" + Task.getTotalTasks() + \" tasks in the list.\");","lastModifiedDate":"2021-08-28"},{"lineNumber":189,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":190,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":191,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":192,"author":{"gitId":"Roycius"},"content":"     * Extracts the date from the content of an event input (everything after \"/at\")","lastModifiedDate":"2021-08-28"},{"lineNumber":193,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":194,"author":{"gitId":"Roycius"},"content":"     * @param input content of the event input","lastModifiedDate":"2021-08-28"},{"lineNumber":195,"author":{"gitId":"Roycius"},"content":"     * @return the date of the event","lastModifiedDate":"2021-08-28"},{"lineNumber":196,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":197,"author":{"gitId":"Roycius"},"content":"    private static String extractAtFromEvent(String input) throws EmptyParameterException {","lastModifiedDate":"2021-09-04"},{"lineNumber":198,"author":{"gitId":"Roycius"},"content":"        int positionOfSeparator \u003d input.trim().indexOf(\"/at\");","lastModifiedDate":"2021-08-28"},{"lineNumber":199,"author":{"gitId":"Roycius"},"content":"        if ((positionOfSeparator + 3) \u003e\u003d input.length()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":200,"author":{"gitId":"Roycius"},"content":"            throw new EmptyParameterException(\"event date\");","lastModifiedDate":"2021-09-04"},{"lineNumber":201,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":202,"author":{"gitId":"Roycius"},"content":"        return input.substring(positionOfSeparator + 3).trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":203,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":204,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":205,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":206,"author":{"gitId":"Roycius"},"content":"     * Extracts the description from the content of an event input (everything before \"/at\")","lastModifiedDate":"2021-08-28"},{"lineNumber":207,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":208,"author":{"gitId":"Roycius"},"content":"     * @param input content of the event input","lastModifiedDate":"2021-08-28"},{"lineNumber":209,"author":{"gitId":"Roycius"},"content":"     * @return the description of the event","lastModifiedDate":"2021-08-28"},{"lineNumber":210,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":211,"author":{"gitId":"Roycius"},"content":"    private static String extractDescrFromEvent(String input) throws EmptyParameterException {","lastModifiedDate":"2021-09-04"},{"lineNumber":212,"author":{"gitId":"Roycius"},"content":"        int positionOfSeparator \u003d input.trim().indexOf(\"/at\");","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"Roycius"},"content":"        if (positionOfSeparator \u003c\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":214,"author":{"gitId":"Roycius"},"content":"            throw new EmptyParameterException(\"event description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":215,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":216,"author":{"gitId":"Roycius"},"content":"        return input.substring(0, positionOfSeparator - 1).trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":217,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":218,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":219,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":220,"author":{"gitId":"Roycius"},"content":"     * Extracts the deadline from the content of a deadline input (everything after \"/by\")","lastModifiedDate":"2021-08-28"},{"lineNumber":221,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"Roycius"},"content":"     * @param input content of the deadline input","lastModifiedDate":"2021-08-28"},{"lineNumber":223,"author":{"gitId":"Roycius"},"content":"     * @return the deadline of the deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":224,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":225,"author":{"gitId":"Roycius"},"content":"    private static String extractByFromDeadline(String input) throws EmptyParameterException {","lastModifiedDate":"2021-09-04"},{"lineNumber":226,"author":{"gitId":"Roycius"},"content":"        int positionOfSeparator \u003d input.trim().indexOf(\"/by\");","lastModifiedDate":"2021-08-28"},{"lineNumber":227,"author":{"gitId":"Roycius"},"content":"        if ((positionOfSeparator + 3) \u003e\u003d input.length()) {","lastModifiedDate":"2021-09-04"},{"lineNumber":228,"author":{"gitId":"Roycius"},"content":"            throw new EmptyParameterException(\"deadline date\");","lastModifiedDate":"2021-09-04"},{"lineNumber":229,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":230,"author":{"gitId":"Roycius"},"content":"        return input.substring(positionOfSeparator + 3).trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":231,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":232,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":233,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":234,"author":{"gitId":"Roycius"},"content":"     * Extracts the description from the content of a deadline input (everything before \"/by\")","lastModifiedDate":"2021-08-28"},{"lineNumber":235,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":236,"author":{"gitId":"Roycius"},"content":"     * @param input content of the deadline input","lastModifiedDate":"2021-08-28"},{"lineNumber":237,"author":{"gitId":"Roycius"},"content":"     * @return the description of the deadline","lastModifiedDate":"2021-08-28"},{"lineNumber":238,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":239,"author":{"gitId":"Roycius"},"content":"    private static String extractDescrFromDeadline(String input) throws EmptyParameterException {","lastModifiedDate":"2021-09-04"},{"lineNumber":240,"author":{"gitId":"Roycius"},"content":"        int positionOfSeparator \u003d input.trim().indexOf(\"/by\");","lastModifiedDate":"2021-08-28"},{"lineNumber":241,"author":{"gitId":"Roycius"},"content":"        if (positionOfSeparator \u003c\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":242,"author":{"gitId":"Roycius"},"content":"            throw new EmptyParameterException(\"deadline description\");","lastModifiedDate":"2021-09-04"},{"lineNumber":243,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":244,"author":{"gitId":"Roycius"},"content":"        return input.substring(0, positionOfSeparator - 1).trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":245,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":246,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":247,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":248,"author":{"gitId":"Roycius"},"content":"     * Extracts the content from an input string (everything except the first word)","lastModifiedDate":"2021-08-28"},{"lineNumber":249,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":250,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-08-28"},{"lineNumber":251,"author":{"gitId":"Roycius"},"content":"     * @return the input string with the first word excluded","lastModifiedDate":"2021-08-28"},{"lineNumber":252,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":253,"author":{"gitId":"Roycius"},"content":"    private static String extractContent(String input) throws EmptyArgumentException {","lastModifiedDate":"2021-09-04"},{"lineNumber":254,"author":{"gitId":"Roycius"},"content":"        int firstSpacePosition \u003d input.trim().indexOf(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":255,"author":{"gitId":"Roycius"},"content":"        if (firstSpacePosition \u003c 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":256,"author":{"gitId":"Roycius"},"content":"            throw new EmptyArgumentException();","lastModifiedDate":"2021-09-04"},{"lineNumber":257,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":258,"author":{"gitId":"Roycius"},"content":"        return input.substring(firstSpacePosition + 1).trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":259,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":260,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":261,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":262,"author":{"gitId":"Roycius"},"content":"     * Extracts the command from an input string (the first word)","lastModifiedDate":"2021-08-28"},{"lineNumber":263,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":264,"author":{"gitId":"Roycius"},"content":"     * @param input the input string","lastModifiedDate":"2021-08-28"},{"lineNumber":265,"author":{"gitId":"Roycius"},"content":"     * @return first word of the input string","lastModifiedDate":"2021-08-28"},{"lineNumber":266,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":267,"author":{"gitId":"Roycius"},"content":"    private static String extractCommand(String input) {","lastModifiedDate":"2021-08-28"},{"lineNumber":268,"author":{"gitId":"Roycius"},"content":"        String[] words \u003d input.trim().split(\" \");","lastModifiedDate":"2021-08-28"},{"lineNumber":269,"author":{"gitId":"Roycius"},"content":"        return words[0].trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":270,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":271,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":272,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":273,"author":{"gitId":"Roycius"},"content":"     * Marks the task of the given ranking as done","lastModifiedDate":"2021-08-28"},{"lineNumber":274,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":275,"author":{"gitId":"Roycius"},"content":"     * @param taskNumber numerical ranking (as a string) of the task to be marked as done","lastModifiedDate":"2021-09-04"},{"lineNumber":276,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":277,"author":{"gitId":"Roycius"},"content":"    private static void markTaskAsDone(String taskNumber) {","lastModifiedDate":"2021-09-04"},{"lineNumber":278,"author":{"gitId":"Roycius"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1; //get the index of the task in the taskList array","lastModifiedDate":"2021-09-04"},{"lineNumber":279,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":280,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-04"},{"lineNumber":281,"author":{"gitId":"Roycius"},"content":"            taskList.get(taskIndex).setDone(true);","lastModifiedDate":"2021-09-10"},{"lineNumber":282,"author":{"gitId":"Roycius"},"content":"            updateDataFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":283,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":284,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"  \" + taskList.get(taskIndex));","lastModifiedDate":"2021-09-10"},{"lineNumber":285,"author":{"gitId":"Roycius"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-10"},{"lineNumber":286,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Task number \" + (taskIndex + 1) + \" does not exist!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":287,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":288,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-09-04"},{"lineNumber":289,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":290,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":291,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":292,"author":{"gitId":"Roycius"},"content":"     * Deletes the task of the given ranking from the list","lastModifiedDate":"2021-09-11"},{"lineNumber":293,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":294,"author":{"gitId":"Roycius"},"content":"     * @param taskNumber numerical ranking (as a string) of the task to be deleted","lastModifiedDate":"2021-09-11"},{"lineNumber":295,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":296,"author":{"gitId":"Roycius"},"content":"    private static void deleteTask(String taskNumber) {","lastModifiedDate":"2021-09-11"},{"lineNumber":297,"author":{"gitId":"Roycius"},"content":"        int taskIndex \u003d Integer.parseInt(taskNumber) - 1; //get the index of the task in the taskList array","lastModifiedDate":"2021-09-11"},{"lineNumber":298,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-09-11"},{"lineNumber":299,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":300,"author":{"gitId":"Roycius"},"content":"            Task removedTask \u003d taskList.remove(taskIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":301,"author":{"gitId":"Roycius"},"content":"            Task.decreaseTotalTasks();","lastModifiedDate":"2021-09-11"},{"lineNumber":302,"author":{"gitId":"Roycius"},"content":"            updateDataFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":303,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":304,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"  \" + removedTask);","lastModifiedDate":"2021-09-11"},{"lineNumber":305,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Now you have \" + Task.getTotalTasks() + \" tasks in the list.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":306,"author":{"gitId":"Roycius"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":307,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Task number \" + (taskIndex + 1) + \" does not exist!\");","lastModifiedDate":"2021-09-11"},{"lineNumber":308,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":309,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-09-11"},{"lineNumber":310,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":311,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":312,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":313,"author":{"gitId":"Roycius"},"content":"     * Prints out the list of tasks and their current status","lastModifiedDate":"2021-08-28"},{"lineNumber":314,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":315,"author":{"gitId":"Roycius"},"content":"    private static void printTaskList() {","lastModifiedDate":"2021-08-28"},{"lineNumber":316,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":317,"author":{"gitId":"Roycius"},"content":"        if (Task.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2021-08-28"},{"lineNumber":318,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"There are no tasks!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":319,"author":{"gitId":"Roycius"},"content":"            printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":320,"author":{"gitId":"Roycius"},"content":"            return;","lastModifiedDate":"2021-08-28"},{"lineNumber":321,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":322,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-28"},{"lineNumber":323,"author":{"gitId":"Roycius"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2021-08-28"},{"lineNumber":324,"author":{"gitId":"Roycius"},"content":"            System.out.println((i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2021-09-10"},{"lineNumber":325,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":326,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":328,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":329,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":330,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":331,"author":{"gitId":"Roycius"},"content":"    /*","lastModifiedDate":"2021-08-28"},{"lineNumber":332,"author":{"gitId":"Roycius"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-28"},{"lineNumber":333,"author":{"gitId":"Roycius"},"content":"     *         Basic message printing functions","lastModifiedDate":"2021-08-28"},{"lineNumber":334,"author":{"gitId":"Roycius"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-08-28"},{"lineNumber":335,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":336,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":337,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":338,"author":{"gitId":"Roycius"},"content":"     * Prints a border made of \"_\" characters","lastModifiedDate":"2021-08-28"},{"lineNumber":339,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":340,"author":{"gitId":"Roycius"},"content":"    private static void printBorder() {","lastModifiedDate":"2021-08-28"},{"lineNumber":341,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-28"},{"lineNumber":342,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":343,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":344,"author":{"gitId":"Roycius"},"content":"    private static void printGreetingMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":345,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":346,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2021-08-28"},{"lineNumber":347,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2021-08-28"},{"lineNumber":348,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":349,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":350,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":351,"author":{"gitId":"Roycius"},"content":"    private static void printGoodbyeMessage() {","lastModifiedDate":"2021-08-28"},{"lineNumber":352,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":353,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-28"},{"lineNumber":354,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":355,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":356,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":357,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":358,"author":{"gitId":"Roycius"},"content":"     * Prints the error message for an invalid command","lastModifiedDate":"2021-08-28"},{"lineNumber":359,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":360,"author":{"gitId":"Roycius"},"content":"    private static void printInvalidCommand() {","lastModifiedDate":"2021-08-28"},{"lineNumber":361,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":362,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"Command not recognized!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":363,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"try the following: \\\"list\\\", \\\"done\\\", \\\"todo\\\", \\\"deadline\\\", \\\"event\\\", \\\"bye\\\"\");","lastModifiedDate":"2021-09-04"},{"lineNumber":364,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"\\\"delete\\\"\");","lastModifiedDate":"2021-09-11"},{"lineNumber":365,"author":{"gitId":"Roycius"},"content":"        printBorder();","lastModifiedDate":"2021-08-28"},{"lineNumber":366,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":367,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":368,"author":{"gitId":"Roycius"},"content":"    /*","lastModifiedDate":"2021-09-11"},{"lineNumber":369,"author":{"gitId":"Roycius"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-11"},{"lineNumber":370,"author":{"gitId":"Roycius"},"content":"     *            Miscellaneous Functions","lastModifiedDate":"2021-09-11"},{"lineNumber":371,"author":{"gitId":"Roycius"},"content":"     * \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-11"},{"lineNumber":372,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":373,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":374,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":375,"author":{"gitId":"Roycius"},"content":"     * Initialize Duke and generate taskList","lastModifiedDate":"2021-09-11"},{"lineNumber":376,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":377,"author":{"gitId":"Roycius"},"content":"    private static void initDuke() {","lastModifiedDate":"2021-09-11"},{"lineNumber":378,"author":{"gitId":"Roycius"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":379,"author":{"gitId":"Roycius"},"content":"        File dataFile \u003d new File(\"data\");","lastModifiedDate":"2021-09-11"},{"lineNumber":380,"author":{"gitId":"Roycius"},"content":"        dataFile.mkdir(); //create \"data\" folder if it does not exist","lastModifiedDate":"2021-09-11"},{"lineNumber":381,"author":{"gitId":"Roycius"},"content":"        taskDataPath \u003d \"data/tasks.txt\";","lastModifiedDate":"2021-09-11"},{"lineNumber":382,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":383,"author":{"gitId":"Roycius"},"content":"            loadFileContents(taskDataPath);","lastModifiedDate":"2021-09-11"},{"lineNumber":384,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Previous data loaded successfully\");","lastModifiedDate":"2021-09-11"},{"lineNumber":385,"author":{"gitId":"Roycius"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":386,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"No existing data\");","lastModifiedDate":"2021-09-11"},{"lineNumber":387,"author":{"gitId":"Roycius"},"content":"        } catch (CorruptedDataException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":388,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Data file corrupted...\");","lastModifiedDate":"2021-09-11"},{"lineNumber":389,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":390,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":391,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":392,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":393,"author":{"gitId":"Roycius"},"content":"     * Tries to load an existing task data file","lastModifiedDate":"2021-09-11"},{"lineNumber":394,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":395,"author":{"gitId":"Roycius"},"content":"     * @param filePath String representing the path of the data file","lastModifiedDate":"2021-09-11"},{"lineNumber":396,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":397,"author":{"gitId":"Roycius"},"content":"    private static void loadFileContents(String filePath) throws FileNotFoundException, CorruptedDataException {","lastModifiedDate":"2021-09-11"},{"lineNumber":398,"author":{"gitId":"Roycius"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2021-09-11"},{"lineNumber":399,"author":{"gitId":"Roycius"},"content":"        Scanner dataScanner \u003d new Scanner(f);","lastModifiedDate":"2021-09-11"},{"lineNumber":400,"author":{"gitId":"Roycius"},"content":"        while (dataScanner.hasNext()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":401,"author":{"gitId":"Roycius"},"content":"            String[] data \u003d dataScanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2021-09-11"},{"lineNumber":402,"author":{"gitId":"Roycius"},"content":"            switch (data[0]) {","lastModifiedDate":"2021-09-11"},{"lineNumber":403,"author":{"gitId":"Roycius"},"content":"            case \"T\":","lastModifiedDate":"2021-09-11"},{"lineNumber":404,"author":{"gitId":"Roycius"},"content":"                taskList.add(new Todo(data[2]));","lastModifiedDate":"2021-09-11"},{"lineNumber":405,"author":{"gitId":"Roycius"},"content":"                if (data[1].equals(\"1\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":406,"author":{"gitId":"Roycius"},"content":"                    taskList.get(Task.getTotalTasks() - 1).setDone(true);","lastModifiedDate":"2021-09-11"},{"lineNumber":407,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-11"},{"lineNumber":408,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-09-11"},{"lineNumber":409,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":410,"author":{"gitId":"Roycius"},"content":"            case \"D\":","lastModifiedDate":"2021-09-11"},{"lineNumber":411,"author":{"gitId":"Roycius"},"content":"                taskList.add(new Deadline(data[2], data[3]));","lastModifiedDate":"2021-09-11"},{"lineNumber":412,"author":{"gitId":"Roycius"},"content":"                if (data[1].equals(\"1\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":413,"author":{"gitId":"Roycius"},"content":"                    taskList.get(Task.getTotalTasks() - 1).setDone(true);","lastModifiedDate":"2021-09-11"},{"lineNumber":414,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-11"},{"lineNumber":415,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-09-11"},{"lineNumber":416,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":417,"author":{"gitId":"Roycius"},"content":"            case \"E\":","lastModifiedDate":"2021-09-11"},{"lineNumber":418,"author":{"gitId":"Roycius"},"content":"                taskList.add(new Event(data[2], data[3]));","lastModifiedDate":"2021-09-11"},{"lineNumber":419,"author":{"gitId":"Roycius"},"content":"                if (data[1].equals(\"1\")) {","lastModifiedDate":"2021-09-11"},{"lineNumber":420,"author":{"gitId":"Roycius"},"content":"                    taskList.get(Task.getTotalTasks() - 1).setDone(true);","lastModifiedDate":"2021-09-11"},{"lineNumber":421,"author":{"gitId":"Roycius"},"content":"                }","lastModifiedDate":"2021-09-11"},{"lineNumber":422,"author":{"gitId":"Roycius"},"content":"                break;","lastModifiedDate":"2021-09-11"},{"lineNumber":423,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":424,"author":{"gitId":"Roycius"},"content":"            default:","lastModifiedDate":"2021-09-11"},{"lineNumber":425,"author":{"gitId":"Roycius"},"content":"                throw new CorruptedDataException();","lastModifiedDate":"2021-09-11"},{"lineNumber":426,"author":{"gitId":"Roycius"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":427,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":428,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":429,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":430,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":431,"author":{"gitId":"Roycius"},"content":"     * Updates the data file to the current state of the task list","lastModifiedDate":"2021-09-11"},{"lineNumber":432,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":433,"author":{"gitId":"Roycius"},"content":"    private static void updateDataFile() {","lastModifiedDate":"2021-09-11"},{"lineNumber":434,"author":{"gitId":"Roycius"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":435,"author":{"gitId":"Roycius"},"content":"            FileWriter fw \u003d new FileWriter(taskDataPath);","lastModifiedDate":"2021-09-11"},{"lineNumber":436,"author":{"gitId":"Roycius"},"content":"            fw.write(\"\"); //clear data file before write","lastModifiedDate":"2021-09-11"},{"lineNumber":437,"author":{"gitId":"Roycius"},"content":"            fw.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":438,"author":{"gitId":"Roycius"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-09-11"},{"lineNumber":439,"author":{"gitId":"Roycius"},"content":"                task.writeToFile(taskDataPath);","lastModifiedDate":"2021-09-11"},{"lineNumber":440,"author":{"gitId":"Roycius"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":441,"author":{"gitId":"Roycius"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":442,"author":{"gitId":"Roycius"},"content":"            System.out.println(\"Failed to update data file\");","lastModifiedDate":"2021-09-11"},{"lineNumber":443,"author":{"gitId":"Roycius"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-11"},{"lineNumber":444,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":445,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":446,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Roycius":444,"-":2}},{"path":"src/main/java/duke/exception/CorruptedDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.exception;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":" * To be used when the data file to be read from is corrupted","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"public class CorruptedDataException extends Exception {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"    //empty","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"Roycius":9}},{"path":"src/main/java/duke/exception/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":" * To be used when no arguments were given after the command","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"public class EmptyArgumentException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"    //empty","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Roycius":8}},{"path":"src/main/java/duke/exception/EmptyParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.exception;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"/**","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":" * To be used when there is a missing parameter in the input string","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":" */","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"public class EmptyParameterException extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"    public EmptyParameterException(String parameterName) {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"        System.out.println(\"The field for \" + parameterName + \" cannot be empty!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"Roycius":12}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"    protected String by;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"    public Deadline(String descr, String by) {","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"        super(descr);","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"    public void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"        fw.write(\"D\" + \" | \" + (isDone ? 1 : 0) + \" | \" + descr + \" | \" + by + System.lineSeparator());","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"        fw.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"    protected String at;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"    public Event(String descr, String at) {","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"        super(descr);","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"    public void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"        fw.write(\"E\" + \" | \" + (isDone ? 1 : 0) + \" | \" + descr + \" | \" + at + System.lineSeparator());","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"        fw.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":25}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"     * The description of the Task","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"    protected String descr; //descr as an abbreviation for description","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"     * The done status of the Task","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"     * The total number of Tasks added","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"    private static int totalTasks \u003d 0;","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"    public Task(String descr) {","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"        this.descr \u003d descr;","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"        totalTasks++;","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"Roycius"},"content":"    public abstract void writeToFile(String filePath) throws IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":31,"author":{"gitId":"Roycius"},"content":"     * Set the Task object isDone value to the given boolean","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"Roycius"},"content":"     * @param doneStatus boolean representing the isDone status to be set to","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"Roycius"},"content":"    public void setDone(boolean doneStatus) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"Roycius"},"content":"        isDone \u003d doneStatus;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":40,"author":{"gitId":"Roycius"},"content":"     * Returns the total number of Tasks added","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":42,"author":{"gitId":"Roycius"},"content":"     * @return the current value of totalTasks","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"Roycius"},"content":"    public static int getTotalTasks() {","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"Roycius"},"content":"        return totalTasks;","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":47,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":48,"author":{"gitId":"Roycius"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"Roycius"},"content":"     * Returns an icon representing the done status of the Task object","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"Roycius"},"content":"     *","lastModifiedDate":"2021-08-28"},{"lineNumber":51,"author":{"gitId":"Roycius"},"content":"     * @return \"[X]\" if isDone is true, \"[ ]\" otherwise","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"Roycius"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"Roycius"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"Roycius"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); //icon \"[X]\" as done and \"[ ]\" as not done","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":56,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":57,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"Roycius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"Roycius"},"content":"        return getStatusIcon() + \" \" + descr;","lastModifiedDate":"2021-08-28"},{"lineNumber":60,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":61,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":62,"author":{"gitId":"Roycius"},"content":"    public static void decreaseTotalTasks() {","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"Roycius"},"content":"        if (totalTasks \u003e 0) {","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"Roycius"},"content":"            totalTasks--;","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"Roycius"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"Roycius":68}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"package duke.task;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"        super(description);","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"    public void writeToFile(String filePath) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"        fw.write(\"T\" + \" | \" + (isDone ? 1 : 0) + \" | \" + descr + System.lineSeparator());","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"        fw.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"    @Override","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"    public String toString() {","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Roycius"},"content":"gibberish","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"Roycius"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"Roycius"},"content":"todo","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"Roycius"},"content":"todo exercise","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Roycius"},"content":"deadline","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Roycius"},"content":"deadline /by","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Roycius"},"content":"deadline assignment /by","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"deadline assignment /by today","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Roycius"},"content":"event","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Roycius"},"content":"event /at","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"event cca meeting /at","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Roycius"},"content":"event cca meeting /at Monday","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Roycius"},"content":"list","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"Roycius"},"content":"done","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"Roycius"},"content":"done gibberish","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"Roycius"},"content":"done 5","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"Roycius"},"content":"done 1","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"Roycius"},"content":"done 3","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"list","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"Roycius"},"content":"delete","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"Roycius"},"content":"delete gibberish","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"Roycius"},"content":"delete 1","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"delete 5","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"Roycius"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"Roycius"},"content":"bye","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"Roycius"},"content":"","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"Roycius"},"content":"if exist data del data","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"Roycius"},"content":"javac -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Roycius"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Roycius"},"content":"pause","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"Roycius":4,"-":19}}]
