[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"**Duke** is a Command Line Interface (CLI) app which helps you **manage tasks and keep track ","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"of events and deadlines**. It is a personalised **chatbox** that offers customised feedback ","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"and helps you stay ahead of the curve.","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"-------------------------------------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"## Quick start","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"1. Ensure that you have `Java 11` installed on your computer.","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"2. Download the latest `ip.jar` file from ","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"[here](https://github.com/mayankp291/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"3. Copy the file to the folder you want to use as the home folder for `Duke`.","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"4. Open the terminal (such as `powershell`) in this folder and launch by typing `java -jar ip.jar`.","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"6. A welcome message should be displayed like the one below:","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"Howdy there! I\u0027m Fluke","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"What can I do for you today master?","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"7. Refer to Features for proper usage instructions and commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"-------------------------------------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"## Features","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"### Note","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"- Words in `\u003cUPPER_CASE\u003e` are parameters given by the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"### Help: `help`","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"Displays all the commands and appropriate usage.","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"### Add Todo Task: `todo`","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"Adds a todo task for DUKE to keep track.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"### Add Event Task: `event`","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"Adds an event with a specific date and time for DUKE to keep track.","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"### Add Deadline Task: `deadline`","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"Adds a deadline with a specific date and time for DUKE to keep track.","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"### List all tasks: `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"Lists all the tasks added to Duke","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"### Mark a Task as Done: `done`","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"Marks a task that DUKE is tracking as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"### Delete a Task: `delete`","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"Delete the task from Duke and duketasks.txt","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"### Find a Task: `find`","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"Finds tasks with a `\u003cSEARCH_STRING\u003e` that contains the string inputted by the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"### End the Program: `bye`","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"Duke bids farewell and closes the application.","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"-------------------------------------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"## Command Summary","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"Action | Command Format | Example","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"--- | --- | --- | ","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"List all valid commands and usage | `help` | `help`","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"Add todo task| `todo \u003cTASK_DESCRIPTION\u003e` | `todo do cs2113 homework`","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"Add deadline task | `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:MM\u003e` | `deadline submit ip jar /by 2021-10-02 22:20`","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"Add event task| `event \u003cTASK_DESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:MM\u003e` | `event graduation party /at 2021-11-01 18:10`","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"List all the tasks| `list` | `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"Mark a task done | `done \u003cTASK_INDEX\u003e` | `done 2`","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"Delete a task| `delete \u003cTASK_INDEX\u003e` | `delete 3`","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"Find matching tasks| `find \u003cSEARCH_STRING\u003e` | `find homework`","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"Exit duke | `bye` | `bye`","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"mayankp291":61,"-":9}},{"path":"duketasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"T | 1 | hw","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"T | 0 | homework","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"E | 0 | get home |  sunday","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"mayankp291":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import duke.manager.TaskManager;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"/**","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":" * TODO : Better Documentation","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":" *        Add more constants","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":" *        Update Tests","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":" *        Create more exceptions","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":" *        Add checkstyle","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":" */","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"    private final static String WELCOME_GREETING \u003d \"Howdy there! I\u0027m Fluke\";","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"    private final static String WELCOME_ASK \u003d \"What can I do for you today master?\";","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"    private final static String BYE_MESSAGE \u003d \"Bye. Hope to serve you again master!\";","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"        welcomeMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"        TaskManager.processInput();","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"        byeMessage();","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"     * Prints a welcome message on the console","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"    private static void welcomeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"        TaskManager.printLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"        System.out.println(WELCOME_GREETING);","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"        System.out.println(WELCOME_ASK);","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"        TaskManager.printLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"     * Prints a bye message on the console","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"    private static void byeMessage() {","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"        TaskManager.printLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"        System.out.println(BYE_MESSAGE);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"        TaskManager.printLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mayankp291":42,"-":1}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"        super(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"mayankp291":7}},{"path":"src/main/java/duke/manager/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.manager;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"public class FileManager {","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"    public static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"    private static final String FILE_PATH \u003d \"duketasks.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"     * Initial function for getting stored tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"     * in the duketasks.txt file","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"     * @param tasks Arraylist of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    public static void getStoredData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"            loadTasksFromFile(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"            createFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Error in opening duketasks.txt\");","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"     * Loads tasks from","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"     * duketasks.txt file","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"     * @param tasks Arraylist of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"    private static void loadTasksFromFile(ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"        File storedTasks \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"        Scanner scanner \u003d new Scanner(storedTasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"            loadStoredTasks(scanner.nextLine(), tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"     * Creates a file","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"     * duketasks.txt if it does","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"     * not already exist","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"    private static void createFile() {","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"            File newFile \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"            newFile.createNewFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"            ioException.printStackTrace();","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Cannot create file\");","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"     * Loads a task as an object in the program","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"    private static void loadStoredTasks(String input, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"        String[] splitArr \u003d input.split(\"\\\\|\");","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"mayankp291"},"content":"        String taskType \u003d splitArr[0].trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"mayankp291"},"content":"        String taskIsDone \u003d splitArr[1].trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"mayankp291"},"content":"        String taskDescription \u003d splitArr[2].trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"mayankp291"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"mayankp291"},"content":"        case \"T\":","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"mayankp291"},"content":"            tasks.add(new Todo(taskDescription));","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"mayankp291"},"content":"        case \"D\":","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"mayankp291"},"content":"            LocalDateTime deadlineBy \u003d LocalDateTime.parse(splitArr[3].strip(), formatter);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"mayankp291"},"content":"            tasks.add(new Deadline(taskDescription, deadlineBy, splitArr[3]));","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"mayankp291"},"content":"        case \"E\":","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"mayankp291"},"content":"            LocalDateTime eventAt \u003d LocalDateTime.parse(splitArr[3].strip(), formatter);","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"mayankp291"},"content":"            tasks.add(new Event(taskDescription, eventAt, splitArr[3]));","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"mayankp291"},"content":"        default:","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"mayankp291"},"content":"        if (taskIsDone.equals(\"1\")) {","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"mayankp291"},"content":"            tasks.get(tasks.size() - 1).markDone();","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"mayankp291"},"content":"     * Saves tasks from program to duketasks.txt file","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"mayankp291"},"content":"     * @param tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"mayankp291"},"content":"    public static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"mayankp291"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"mayankp291"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"mayankp291"},"content":"                String toAdd \u003d task.fileDescription() + \"\\n\";","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"mayankp291"},"content":"                fileWriter.write(toAdd);","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"mayankp291"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"mayankp291"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"mayankp291"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Cannot save data to \" + FILE_PATH);","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"mayankp291":112}},{"path":"src/main/java/duke/manager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.manager;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"public class TaskManager {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"    public static final String TASK_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"    public static final String TASK_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"    public static final String TASK_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"    public static final String TASK_ERROR \u003d \"I really cannot understand what you wrote\";","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"    public static DateTimeFormatter stringFormatter \u003d DateTimeFormatter.ofPattern(\"EEEE, MMMM dd, uuuu hh:mm a\");","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"     * Prints a line on the console","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"    public static void printLine() {","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"     * Determines the task type,","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"     * assuming it is the first","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"     * word in the message and","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"     * returns it","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"     * @param message The input by the user.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"     * @return The first word of the string.","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"    private static String taskType(String message) {","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"        String[] type \u003d message.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"        return type[0];","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"     * The function adds the task input by the user","lastModifiedDate":"2021-09-10"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"    private static void addTask(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"        switch (taskType(message)) {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"        case TASK_TODO:","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"            addTodo(tasks, message);","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"        case TASK_DEADLINE:","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"            addDeadline(tasks, message);","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"        case TASK_EVENT:","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"            addEvent(tasks, message);","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"            taskError();","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":72,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":73,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":74,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"mayankp291"},"content":"     * Error for wrong task type","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"mayankp291"},"content":"    private static void taskError() {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"mayankp291"},"content":"        System.out.println(TASK_ERROR);","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"mayankp291"},"content":"     * The function prints the recently added task","lastModifiedDate":"2021-09-10"},{"lineNumber":85,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":86,"author":{"gitId":"mayankp291"},"content":"    private static void printAddedTask(Task task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":88,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":89,"author":{"gitId":"mayankp291"},"content":"        System.out.println(task.getDescription());","lastModifiedDate":"2021-09-01"},{"lineNumber":90,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":92,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":93,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":94,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"mayankp291"},"content":"     * The function prints the recently added task","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"mayankp291"},"content":"    private static void printDeletedTask(Task task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-12"},{"lineNumber":100,"author":{"gitId":"mayankp291"},"content":"        System.out.println(task.getDescription());","lastModifiedDate":"2021-09-12"},{"lineNumber":101,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-12"},{"lineNumber":102,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":103,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":104,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":105,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":106,"author":{"gitId":"mayankp291"},"content":"     * The function adds the todo task input by the user","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"mayankp291"},"content":"    private static void addEvent(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":113,"author":{"gitId":"mayankp291"},"content":"            message \u003d message.substring(6);","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"mayankp291"},"content":"            String[] eventData \u003d message.split(\"/\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":115,"author":{"gitId":"mayankp291"},"content":"            tasks.add(new Event(eventData[0], processDateAndTime(eventData[1].substring(3)), eventData[1].substring(3)));","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"mayankp291"},"content":"            printAddedTask(tasks.get(tasks.size() - 1), tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"mayankp291"},"content":"            FileManager.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"mayankp291"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":119,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"YOU IDIOT !!??!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":121,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"mayankp291"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":123,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"YOU IDIOT !!??!! The input format should be : \");","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"event description /on date or time\");","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"mayankp291"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Please enter both date and time in the format\");","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"YYYY-MM-DD HH:MM\");","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":135,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"mayankp291"},"content":"     * Returns the LocalDateTime object after processing","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"mayankp291"},"content":"     * the input string","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"mayankp291"},"content":"     * @param message input string containing the date and time","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"mayankp291"},"content":"     * @return LocalDateTime object \"yyyy-MM-dd HH:mm\"","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"mayankp291"},"content":"    private static LocalDateTime processDateAndTime(String message) throws DateTimeParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"mayankp291"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"mayankp291"},"content":"        LocalDateTime info \u003d LocalDateTime.parse(message.strip(), formatter);","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"mayankp291"},"content":"        return info;","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":149,"author":{"gitId":"mayankp291"},"content":"     * The function adds the deadline task input by the user","lastModifiedDate":"2021-09-10"},{"lineNumber":150,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":151,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":152,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-01"},{"lineNumber":153,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":154,"author":{"gitId":"mayankp291"},"content":"    private static void addDeadline(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":155,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":156,"author":{"gitId":"mayankp291"},"content":"            message \u003d message.substring(9);","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"mayankp291"},"content":"            String[] deadlineData \u003d message.split(\"/\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"mayankp291"},"content":"            tasks.add(new Deadline(deadlineData[0], processDateAndTime(deadlineData[1].substring(3)), deadlineData[1].substring(3)));","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"mayankp291"},"content":"            printAddedTask(tasks.get(tasks.size() - 1), tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"mayankp291"},"content":"            FileManager.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"mayankp291"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":162,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"YOU IDIOT !!??!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":164,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":165,"author":{"gitId":"mayankp291"},"content":"        } catch (ArrayIndexOutOfBoundsException d) {","lastModifiedDate":"2021-09-07"},{"lineNumber":166,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":167,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"YOU IDIOT !!??!! The input format should be : \");","lastModifiedDate":"2021-09-07"},{"lineNumber":168,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"deadline description /by date or time\");","lastModifiedDate":"2021-09-07"},{"lineNumber":169,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":170,"author":{"gitId":"mayankp291"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Please enter both date and time in the format\");","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"YYYY-MM-DD HH:MM\");","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":176,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":177,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":178,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":179,"author":{"gitId":"mayankp291"},"content":"     * The function adds the event input by the user","lastModifiedDate":"2021-09-10"},{"lineNumber":180,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":181,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":182,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-01"},{"lineNumber":183,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":184,"author":{"gitId":"mayankp291"},"content":"    private static void addTodo(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":185,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":186,"author":{"gitId":"mayankp291"},"content":"            tasks.add(new Todo(message.substring(5)));","lastModifiedDate":"2021-09-12"},{"lineNumber":187,"author":{"gitId":"mayankp291"},"content":"            printAddedTask(tasks.get(tasks.size() - 1), tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"mayankp291"},"content":"            FileManager.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"mayankp291"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":190,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":191,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":192,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":193,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":194,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":195,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":196,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":197,"author":{"gitId":"mayankp291"},"content":"     * Prints all the tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":198,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":199,"author":{"gitId":"mayankp291"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":200,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":201,"author":{"gitId":"mayankp291"},"content":"    private static void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":202,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":203,"author":{"gitId":"mayankp291"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-12"},{"lineNumber":204,"author":{"gitId":"mayankp291"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i).getDescription());","lastModifiedDate":"2021-09-12"},{"lineNumber":205,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":206,"author":{"gitId":"mayankp291"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-12"},{"lineNumber":207,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Smartass, you need to add tasks before listing them !!!\");","lastModifiedDate":"2021-09-07"},{"lineNumber":208,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":209,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":210,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":211,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":212,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":213,"author":{"gitId":"mayankp291"},"content":"     * Marks the task done based","lastModifiedDate":"2021-09-01"},{"lineNumber":214,"author":{"gitId":"mayankp291"},"content":"     * on the integer value provided","lastModifiedDate":"2021-09-01"},{"lineNumber":215,"author":{"gitId":"mayankp291"},"content":"     * by the user in the String message.","lastModifiedDate":"2021-09-01"},{"lineNumber":216,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":217,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":218,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-01"},{"lineNumber":219,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":220,"author":{"gitId":"mayankp291"},"content":"    private static void markDone(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":221,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":222,"author":{"gitId":"mayankp291"},"content":"            String[] arrOfStr \u003d message.split(\" \");","lastModifiedDate":"2021-09-01"},{"lineNumber":223,"author":{"gitId":"mayankp291"},"content":"            int index \u003d Integer.parseInt(arrOfStr[arrOfStr.length - 1]) - 1;","lastModifiedDate":"2021-09-01"},{"lineNumber":224,"author":{"gitId":"mayankp291"},"content":"            tasks.get(index).isDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":225,"author":{"gitId":"mayankp291"},"content":"            FileManager.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"mayankp291"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":227,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":228,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"OH MY GOD, can you maybe type a task that exists ?\");","lastModifiedDate":"2021-09-07"},{"lineNumber":229,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-07"},{"lineNumber":230,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":231,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":232,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":233,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":234,"author":{"gitId":"mayankp291"},"content":"     * The function processes the inputs","lastModifiedDate":"2021-09-10"},{"lineNumber":235,"author":{"gitId":"mayankp291"},"content":"     * by the user and calls the necessary","lastModifiedDate":"2021-09-01"},{"lineNumber":236,"author":{"gitId":"mayankp291"},"content":"     * functions to add, print and manipulate","lastModifiedDate":"2021-09-01"},{"lineNumber":237,"author":{"gitId":"mayankp291"},"content":"     * tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":238,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":239,"author":{"gitId":"mayankp291"},"content":"    public static void processInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":240,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":241,"author":{"gitId":"mayankp291"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":242,"author":{"gitId":"mayankp291"},"content":"        FileManager.getStoredData(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":243,"author":{"gitId":"mayankp291"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":244,"author":{"gitId":"mayankp291"},"content":"        String message \u003d scanner.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":245,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":246,"author":{"gitId":"mayankp291"},"content":"        while (!message.equals(COMMAND_BYE)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"mayankp291"},"content":"            if (message.equals(COMMAND_LIST)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"mayankp291"},"content":"                printTasks(tasks);","lastModifiedDate":"2021-09-01"},{"lineNumber":249,"author":{"gitId":"mayankp291"},"content":"            } else if (message.contains(COMMAND_FIND)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":250,"author":{"gitId":"mayankp291"},"content":"                findTask(tasks, message);","lastModifiedDate":"2021-09-25"},{"lineNumber":251,"author":{"gitId":"mayankp291"},"content":"            } else if (message.contains(COMMAND_DONE)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":252,"author":{"gitId":"mayankp291"},"content":"                markDone(tasks, message);","lastModifiedDate":"2021-09-01"},{"lineNumber":253,"author":{"gitId":"mayankp291"},"content":"            } else if (message.contains(COMMAND_DELETE)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":254,"author":{"gitId":"mayankp291"},"content":"                deleteTask(tasks, message);","lastModifiedDate":"2021-09-12"},{"lineNumber":255,"author":{"gitId":"mayankp291"},"content":"            } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":256,"author":{"gitId":"mayankp291"},"content":"                addTask(tasks, message);","lastModifiedDate":"2021-09-01"},{"lineNumber":257,"author":{"gitId":"mayankp291"},"content":"            }","lastModifiedDate":"2021-09-01"},{"lineNumber":258,"author":{"gitId":"mayankp291"},"content":"            message \u003d scanner.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":259,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":260,"author":{"gitId":"mayankp291"},"content":"        scanner.close();","lastModifiedDate":"2021-09-01"},{"lineNumber":261,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":262,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":263,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-25"},{"lineNumber":264,"author":{"gitId":"mayankp291"},"content":"     * Finds the matching tasks according to string","lastModifiedDate":"2021-09-25"},{"lineNumber":265,"author":{"gitId":"mayankp291"},"content":"     * input by the user","lastModifiedDate":"2021-09-25"},{"lineNumber":266,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-25"},{"lineNumber":267,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-25"},{"lineNumber":268,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string","lastModifiedDate":"2021-09-25"},{"lineNumber":269,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-25"},{"lineNumber":270,"author":{"gitId":"mayankp291"},"content":"    private static void findTask(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-25"},{"lineNumber":271,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":272,"author":{"gitId":"mayankp291"},"content":"            String filter \u003d message.substring(5);","lastModifiedDate":"2021-09-25"},{"lineNumber":273,"author":{"gitId":"mayankp291"},"content":"            ArrayList\u003cTask\u003e filteredTasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-25"},{"lineNumber":274,"author":{"gitId":"mayankp291"},"content":"                    .filter((t) -\u003e t.getDescription().contains(filter)).collect(Collectors.toList());","lastModifiedDate":"2021-09-25"},{"lineNumber":275,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":276,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-25"},{"lineNumber":277,"author":{"gitId":"mayankp291"},"content":"            for (Task task : filteredTasks) {","lastModifiedDate":"2021-09-25"},{"lineNumber":278,"author":{"gitId":"mayankp291"},"content":"                System.out.println(task.getDescription());","lastModifiedDate":"2021-09-25"},{"lineNumber":279,"author":{"gitId":"mayankp291"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":280,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":281,"author":{"gitId":"mayankp291"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":282,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":283,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"No tasks added yet\");","lastModifiedDate":"2021-09-25"},{"lineNumber":284,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":285,"author":{"gitId":"mayankp291"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":286,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":287,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"find cannot be empty\");","lastModifiedDate":"2021-09-25"},{"lineNumber":288,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":289,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":290,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":291,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":292,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":293,"author":{"gitId":"mayankp291"},"content":"     * Deletes the task of the provided index","lastModifiedDate":"2021-09-15"},{"lineNumber":294,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":295,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-15"},{"lineNumber":296,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string","lastModifiedDate":"2021-09-25"},{"lineNumber":297,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":298,"author":{"gitId":"mayankp291"},"content":"    private static void deleteTask(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":299,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-12"},{"lineNumber":300,"author":{"gitId":"mayankp291"},"content":"            String[] arrOfStr \u003d message.strip().split(\" \");","lastModifiedDate":"2021-09-12"},{"lineNumber":301,"author":{"gitId":"mayankp291"},"content":"            int index \u003d Integer.parseInt(arrOfStr[1]);","lastModifiedDate":"2021-09-12"},{"lineNumber":302,"author":{"gitId":"mayankp291"},"content":"            printDeletedTask(tasks.get(index - 1), tasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":303,"author":{"gitId":"mayankp291"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2021-09-12"},{"lineNumber":304,"author":{"gitId":"mayankp291"},"content":"            FileManager.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-15"},{"lineNumber":305,"author":{"gitId":"mayankp291"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":306,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":307,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"OH MY GOD, can you maybe type things properly ?\");","lastModifiedDate":"2021-09-12"},{"lineNumber":308,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Its delete {index}\");","lastModifiedDate":"2021-09-12"},{"lineNumber":309,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":310,"author":{"gitId":"mayankp291"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-12"},{"lineNumber":311,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":312,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Dude there\u0027s no task at that index\");","lastModifiedDate":"2021-09-12"},{"lineNumber":313,"author":{"gitId":"mayankp291"},"content":"            printLine();","lastModifiedDate":"2021-09-12"},{"lineNumber":314,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":315,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":316,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":316}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import duke.manager.TaskManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"    protected String byString;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"     * Constructor to initialise the description","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"     * and the deadline of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"     * @param description string with the task","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"     *                    description","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"     * @param by          deadline for the task in LocalDateTime","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"     * @param byString    deadline for the task in String","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    public Deadline(String description, LocalDateTime by, String byString) {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"        this.byString \u003d byString;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the deadline task description","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"        return \"[D]\" + super.getDescription() + \" (by: \" + TaskManager.stringFormatter.format(by) + \")\";","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"    public String fileDescription() {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"        return \"D | \" + super.fileDescription() + \" | \" + byString;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import duke.manager.TaskManager;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"    protected LocalDateTime on;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"    protected String onString;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"     * Constructor to initialise the description","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"     * and the date/time of the event.","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"     * @param description string with the event","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"     *                    description","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"     * @param on          date and time for the event in LocalDateTime","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"     * @param onString    date and time for the task in String","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    public Event(String description, LocalDateTime on, String onString) {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"        this.on \u003d on;","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"        this.onString \u003d onString;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the event.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the event description","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"        return \"[E]\" + super.getDescription() + \" (on: \" + TaskManager.stringFormatter.format(on) + \")\";","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"    public String fileDescription() {","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"        return \"E | \" + super.fileDescription() + \" | \" + onString;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"     * Constructor to initialise Task description","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"     * and make isDone false","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"     * @param description string with the task","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"     *                    description","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"     * Returns a string based on","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"     * the boolean isDone.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"     * @return \"X\" if task is done and \" \" if task not done","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the task description","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the task for saving in a file.","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the task description","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"    public String fileDescription() {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"        String isDone \u003d Objects.equals(getStatusIcon(), \"X\") ? \"1\" : \"0\";","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"        return isDone + \" | \" + this.description;","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"     * Makes the boolean isDone true,","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"     * indicating that the task is done","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"     * and prints the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"    public void isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"\\n____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"        System.out.println(this.getDescription());","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"     * Makes the boolean isDone true,","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"     * indicating that the task is done","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"    public void markDone() {","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mayankp291":70}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"     * Constructor to initialise Todo description","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"     * and make isDone false","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"     * @param description string with the task","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"     *                    description","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the task description","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"        return \"[T]\" + super.getDescription();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    public String fileDescription() {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"        return \"T | \" + super.fileDescription();","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":31}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"todo eat lunch","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"deadline do homework /by September 10th","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"todo get supper","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"done 4","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"done 3","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"bye","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"java -classpath ..\\bin\\ duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mayankp291":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mayankp291":1,"-":37}}]
