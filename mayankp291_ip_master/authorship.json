[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"**Duke** is a Command Line Interface (CLI) app which helps you **manage tasks and keep track ","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"of events and deadlines**. It is a personalised **chatbox** that offers customised feedback ","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"and helps you stay ahead of the curve.","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"## Table of Contents","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"    - [Help `help`](#help-help)","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"    - [Add Todo Task `todo`](#add-todo-task-todo)","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"    - [Add Event Task `event`](#add-event-task-event)","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"    - [Add Deadline Task `deadline`](#add-deadline-task-deadline)","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"    - [List All Tasks `list`](#list-all-tasks-list)","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"    - [Mark a Task as Done `done`](#mark-a-task-as-done-done)","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"    - [Delete a Task `delete`](#delete-a-task-delete)","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"    - [Find a Task `find`](#find-a-task-find)","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"    - [End the Program `bye`](#end-the-program-bye)","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"    - [Save Tasks to File](#save-tasks-to-file)","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"-------------------------------------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"## Quick start","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"1. Ensure that you have `Java 11` installed on your computer.","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"2. Download the latest `ip.jar` file from ","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"[here](https://github.com/mayankp291/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"3. Copy the file to the folder you want to use as the home folder for `Duke`.","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"4. Open the terminal (such as `powershell`) in this folder and launch by typing `java -jar ip.jar`.","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"6. A welcome message should be displayed like the one below:","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"Howdy there! I\u0027m Fluke","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"What can I do for you today master?","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"7. Refer to Features for proper usage instructions and commands.","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"-------------------------------------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"## Features","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"### Note","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"- Words in `\u003cUPPER_CASE\u003e` are parameters given by the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"### Help: `help`","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"Displays all the commands and appropriate usage.","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"Format: `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"### Add Todo Task: `todo`","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"Adds a todo task for DUKE to keep track.","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"Format: `todo \u003cTASK_DESCRIPTION\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"Example: `todo finish eating lunch`","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"todo finish eating lunch","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"[T][ ] finish eating lunch","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"### Add Event Task: `event`","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"Adds an event with a specific date and time for DUKE to keep track.","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"mayankp291"},"content":"Format: `event \u003cTASK_DESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:MM\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"mayankp291"},"content":"Example: `event Attend CG2027 lecture /at 2021-10-12 15:21`","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"mayankp291"},"content":"event Attend CG2027 lecture /at 2021-10-12 15:21","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"mayankp291"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"mayankp291"},"content":"[E][ ] Attend CG2027 lecture  (on: Tuesday, October 12, 2021 03:21 PM)","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"mayankp291"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"mayankp291"},"content":"### Add Deadline Task: `deadline`","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"mayankp291"},"content":"Adds a deadline with a specific date and time for DUKE to keep track.","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"mayankp291"},"content":"Format: `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:MM\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"mayankp291"},"content":"Example: `deadline Submit CS2113 HW /by 2021-09-31 23:59`","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"mayankp291"},"content":"deadline Submit CS2113 HW /by 2021-09-31 23:59","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"mayankp291"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"mayankp291"},"content":"[D][ ] Submit CS2113 HW  (by: Thursday, September 30, 2021 11:59 PM)","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"mayankp291"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"mayankp291"},"content":"### List all tasks: `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"mayankp291"},"content":"Lists all the tasks added to Duke","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"mayankp291"},"content":"Format: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"mayankp291"},"content":"Example: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"mayankp291"},"content":"list","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"mayankp291"},"content":"1. [T][ ] finish eating lunch","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"mayankp291"},"content":"2. [E][ ] Attend CG2027 lecture  (on: Tuesday, October 12, 2021 03:21 PM)","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"mayankp291"},"content":"3. [D][ ] Submit CS2113 HW  (by: Thursday, September 30, 2021 11:59 PM)","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"mayankp291"},"content":"### Mark a Task as Done: `done`","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"mayankp291"},"content":"Marks a task that DUKE is tracking as done.","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"mayankp291"},"content":"Format: `done \u003cTASK_INDEX\u003e` ","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"mayankp291"},"content":"Example: `done 2`","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":125,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"mayankp291"},"content":"done 2","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"mayankp291"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"mayankp291"},"content":"[E][X] Attend CG2027 lecture  (on: Tuesday, October 12, 2021 03:21 PM)","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"mayankp291"},"content":"### Delete a Task: `delete`","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"mayankp291"},"content":"Delete the task from Duke and duketasks.txt","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"mayankp291"},"content":"Format: `delete \u003cTASK_INDEX\u003e` ","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"mayankp291"},"content":"Example: `delete 1`","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"mayankp291"},"content":"delete 1","lastModifiedDate":"2021-09-27"},{"lineNumber":143,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"mayankp291"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"mayankp291"},"content":"[T][ ] finish eating lunch","lastModifiedDate":"2021-09-27"},{"lineNumber":146,"author":{"gitId":"mayankp291"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"mayankp291"},"content":"### Find a Task: `find`","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"mayankp291"},"content":"Finds tasks with a `\u003cSEARCH_STRING\u003e` that contains the string inputted by the user.","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"mayankp291"},"content":"Format: `find \u003cSEARCH_STRING\u003e`","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":155,"author":{"gitId":"mayankp291"},"content":"Example: `find lecture`","lastModifiedDate":"2021-09-27"},{"lineNumber":156,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":157,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":158,"author":{"gitId":"mayankp291"},"content":"find lecture","lastModifiedDate":"2021-09-27"},{"lineNumber":159,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":160,"author":{"gitId":"mayankp291"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-27"},{"lineNumber":161,"author":{"gitId":"mayankp291"},"content":"[E][X] Attend CG2027 lecture  (on: Tuesday, October 12, 2021 03:21 PM)","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":163,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":164,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":165,"author":{"gitId":"mayankp291"},"content":"### End the Program: `bye`","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"mayankp291"},"content":"Duke bids farewell and closes the application.","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"mayankp291"},"content":"Format: `bye`","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"mayankp291"},"content":"Example: `bye`","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"mayankp291"},"content":"bye","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"mayankp291"},"content":"Bye. Hope to serve you again master!","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"mayankp291"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"mayankp291"},"content":"```","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":179,"author":{"gitId":"mayankp291"},"content":"### Save Tasks to File:","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"mayankp291"},"content":"All the tasks added to duke is automatically added to a local","lastModifiedDate":"2021-09-27"},{"lineNumber":181,"author":{"gitId":"mayankp291"},"content":"file called `duketasks.txt` in the local directory. The file ","lastModifiedDate":"2021-09-27"},{"lineNumber":182,"author":{"gitId":"mayankp291"},"content":"is automatically updated if any changes are made.","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":184,"author":{"gitId":"mayankp291"},"content":"-------------------------------------------------","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"mayankp291"},"content":"## Command Summary","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"mayankp291"},"content":"Action | Command Format | Example","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"mayankp291"},"content":"--- | --- | --- | ","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"mayankp291"},"content":"List all valid commands and usage | `help` | `help`","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"mayankp291"},"content":"Add todo task| `todo \u003cTASK_DESCRIPTION\u003e` | `todo do cs2113 homework`","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"mayankp291"},"content":"Add deadline task | `deadline \u003cTASK_DESCRIPTION\u003e /by \u003cYYYY-MM-DD HH:MM\u003e` | `deadline submit ip jar /by 2021-10-02 22:20`","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"mayankp291"},"content":"Add event task| `event \u003cTASK_DESCRIPTION\u003e /at \u003cYYYY-MM-DD HH:MM\u003e` | `event graduation party /at 2021-11-01 18:10`","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"mayankp291"},"content":"List all the tasks| `list` | `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"mayankp291"},"content":"Mark a task done | `done \u003cTASK_INDEX\u003e` | `done 2`","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"mayankp291"},"content":"Delete a task| `delete \u003cTASK_INDEX\u003e` | `delete 3`","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"mayankp291"},"content":"Find matching tasks| `find \u003cSEARCH_STRING\u003e` | `find homework`","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"mayankp291"},"content":"Exit duke | `bye` | `bye`","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"mayankp291":188,"-":9}},{"path":"duketasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"T | 1 | hw","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"T | 0 | homework","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"E | 0 | get home |  sunday","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"mayankp291":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import duke.manager.TaskManager;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"/**","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":" * TODO : Better Documentation","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":" *        Update Tests","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":" *        Add checkstyle","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":" */","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"        Ui.welcomeMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"        TaskManager.processInput();","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"        Ui.byeMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mayankp291":18,"-":1}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import duke.manager.TaskManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"        super(message);","lastModifiedDate":"2021-09-08"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"    public static void stringIndexDeadlineError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"YOU IDIOT !!??!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"    public static void arrayIndexDeadlineError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"YOU IDIOT !!??!! The input format should be : \");","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"deadline description /by date or time\");","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"     * Error for wrong task type","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    public static void taskError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"        System.out.println(TaskManager.TASK_ERROR);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"    public static void dateTimeParseError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Please enter both date and time in the format\");","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"YYYY-MM-DD HH:MM\");","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"    public static void stringIndexTodoError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"    public static void nullPointerDoneError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"OH MY GOD, can you maybe type a task that exists ?\");","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"    public static void nullPointerFindError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"No tasks added yet\");","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"    public static void stringIndexFindError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"find cannot be empty\");","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"    public static void indexBoundDeleteError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Dude there\u0027s no task at that index\");","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"    public static void nullPointerDeleteError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"OH MY GOD, can you maybe type things properly ?\");","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Its delete {index}\");","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"mayankp291"},"content":"    public static void stringIndexEventError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"YOU IDIOT !!??!! The description of an event cannot be empty.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"mayankp291"},"content":"    public static void arrayIndexEventError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"YOU IDIOT !!??!! The input format should be : \");","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"event description /on date or time\");","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"mayankp291"},"content":"        Ui.printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"mayankp291":89}},{"path":"src/main/java/duke/manager/DateAndTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.manager;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"public class DateAndTimeParser {","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"    public static final String DATE_FORMAT_OUTPUT \u003d \"EEEE, MMMM dd, uuuu hh:mm a\";","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"    private static final String DATE_FORMAT_INPUT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"    public static DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT_INPUT);","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"    public static DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(DATE_FORMAT_OUTPUT);","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"     * Returns the LocalDateTime object after processing","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"     * the input string","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"     * @param message input string containing the date and time","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"     * @return LocalDateTime object \"yyyy-MM-dd HH:mm\"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    static LocalDateTime processDateAndTime(String message) throws DateTimeParseException {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(message.strip(), inputFormatter);","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"        return dateTime;","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"mayankp291":25}},{"path":"src/main/java/duke/manager/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.manager;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"public class Parser {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"    public static final int INDEX_FIND \u003d 5;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"    public static final int INDEX_DESCRIPTION_TODO \u003d 5;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"    public static final String DELIMITER_SPACE \u003d \" \";","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    public static final String DELIMITER_EVENT \u003d \"/at\";","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"    public static final String DELIMITER_DEADLINE \u003d \"/by\";","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"    public static final int DESCRIPTION_INDEX_EVENT \u003d 6;","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"    public static final int INDEX_TASKTYPE \u003d 0;","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"    public static final int INDEX_DESCRIPTION_DEADLINE \u003d 9;","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"     * Determines the task type,","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"     * assuming it is the first","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"     * word in the message and","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"     * returns it","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"     * @param message The input by the user.","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"     * @return The first word of the string.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"    static String taskType(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"        String[] type \u003d message.split(DELIMITER_SPACE);","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"        return type[INDEX_TASKTYPE];","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"     * The function adds the todo task input by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"    static void addEvent(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"            tasks.add(createEvent(message));","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"            Ui.printAddedTask(getLatestTask(tasks), tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"            Storage.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"            DukeException.stringIndexEventError();","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"            DukeException.arrayIndexEventError();","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"            DukeException.dateTimeParseError();","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"    private static Event createEvent(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"        String eventString \u003d getEventString(message);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"        String[] eventData \u003d splitString(eventString, DELIMITER_EVENT);","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"        String eventDescription \u003d eventData[INDEX_TASKTYPE].strip();","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"        LocalDateTime eventDateTime \u003d DateAndTimeParser.processDateAndTime(eventData[1]);","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"        String eventDateTimeString \u003d eventData[1].strip();","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"        return new Event(eventDescription, eventDateTime, eventDateTimeString);","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"    static String[] splitString(String eventString, String delimiter) {","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"mayankp291"},"content":"        return eventString.split(delimiter, 2);","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"mayankp291"},"content":"    private static String getEventString(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"mayankp291"},"content":"        return message.substring(DESCRIPTION_INDEX_EVENT);","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"mayankp291"},"content":"    static Task getLatestTask(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"mayankp291"},"content":"        return tasks.get(taskSize(tasks));","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"mayankp291"},"content":"    private static int taskSize(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"mayankp291"},"content":"        return tasks.size() - 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"mayankp291"},"content":"     * The function adds the deadline task input by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"mayankp291"},"content":"    static void addDeadline(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"mayankp291"},"content":"            tasks.add(createDeadline(message));","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"mayankp291"},"content":"            Ui.printAddedTask(getLatestTask(tasks), tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"mayankp291"},"content":"            Storage.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"mayankp291"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"mayankp291"},"content":"            DukeException.stringIndexDeadlineError();","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"mayankp291"},"content":"        } catch (ArrayIndexOutOfBoundsException d) {","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"mayankp291"},"content":"            DukeException.arrayIndexDeadlineError();","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"mayankp291"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"mayankp291"},"content":"            DukeException.dateTimeParseError();","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"mayankp291"},"content":"    private static Deadline createDeadline(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"mayankp291"},"content":"        String deadlineString \u003d getDeadlineString(message);","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"mayankp291"},"content":"        String[] deadlineData \u003d splitString(deadlineString, DELIMITER_DEADLINE);","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"mayankp291"},"content":"        String deadlineDescription \u003d deadlineData[0].strip();","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"mayankp291"},"content":"        LocalDateTime deadlineDateTime \u003d DateAndTimeParser.processDateAndTime(deadlineData[1]);","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"mayankp291"},"content":"        String deadlineDateTimeString \u003d deadlineData[1].strip();","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"mayankp291"},"content":"        return new Deadline(deadlineDescription, deadlineDateTime, deadlineDateTimeString);","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"mayankp291"},"content":"    private static String getDeadlineString(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"mayankp291"},"content":"        return message.substring(INDEX_DESCRIPTION_DEADLINE);","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"mayankp291"},"content":"     * The function adds the event input by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"mayankp291"},"content":"    static void addTodo(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"mayankp291"},"content":"            tasks.add(new Todo(message.substring(INDEX_DESCRIPTION_TODO)));","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"mayankp291"},"content":"            Ui.printAddedTask(getLatestTask(tasks), tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"mayankp291"},"content":"            Storage.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"mayankp291"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"mayankp291"},"content":"            DukeException.stringIndexTodoError();","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"mayankp291"},"content":"     * Marks the task done based","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"mayankp291"},"content":"     * on the integer value provided","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"mayankp291"},"content":"     * by the user in the String message.","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"mayankp291"},"content":"    static void markDone(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"mayankp291"},"content":"            String[] arrOfStr \u003d message.split(DELIMITER_SPACE);","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"mayankp291"},"content":"            int index \u003d getIndex(arrOfStr);","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"mayankp291"},"content":"            tasks.get(index).isDone();","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"mayankp291"},"content":"            Storage.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"mayankp291"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"mayankp291"},"content":"            DukeException.nullPointerDoneError();","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"mayankp291"},"content":"    private static int getIndex(String[] arrOfStr) {","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"mayankp291"},"content":"        int lastElementIndex \u003d arrOfStr.length - 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"mayankp291"},"content":"        return Integer.parseInt(arrOfStr[lastElementIndex]) - 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"mayankp291"},"content":"     * Finds the matching tasks according to string","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"mayankp291"},"content":"     * input by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"mayankp291"},"content":"    static void findTask(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"mayankp291"},"content":"            String filter \u003d message.substring(INDEX_FIND);","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"mayankp291"},"content":"            ArrayList\u003cTask\u003e filteredTasks \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-28"},{"lineNumber":170,"author":{"gitId":"mayankp291"},"content":"                    .filter((t) -\u003e t.getDescription().contains(filter)).collect(Collectors.toList());","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"mayankp291"},"content":"            Ui.printMatchingTasks(filteredTasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"mayankp291"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"mayankp291"},"content":"            DukeException.nullPointerFindError();","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"mayankp291"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"mayankp291"},"content":"            DukeException.stringIndexFindError();","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"mayankp291"},"content":"     * Deletes the task of the provided index","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":183,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string","lastModifiedDate":"2021-09-28"},{"lineNumber":184,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"mayankp291"},"content":"    static void deleteTask(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"mayankp291"},"content":"            String[] arrOfStr \u003d message.strip().split(DELIMITER_SPACE);","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"mayankp291"},"content":"            int index \u003d Integer.parseInt(arrOfStr[1]);","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"mayankp291"},"content":"            Ui.printDeletedTask(tasks.get(index - 1), tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"mayankp291"},"content":"            tasks.remove(index - 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"mayankp291"},"content":"            Storage.saveTasksToFile(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":192,"author":{"gitId":"mayankp291"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":193,"author":{"gitId":"mayankp291"},"content":"            DukeException.nullPointerDeleteError();","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"mayankp291"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"mayankp291"},"content":"            DukeException.indexBoundDeleteError();","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":197,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":198,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"mayankp291":198}},{"path":"src/main/java/duke/manager/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.manager;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import java.io.File;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"public class Storage {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"    private static final String FILE_PATH \u003d \"duketasks.txt\";","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"    private static final String TASK_TODO \u003d \"T\";","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"    private static final String TASK_DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    private static final String TASK_EVENT \u003d \"E\";","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"    private static final String TASK_DONE \u003d \"1\";","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"    private static final String DELIMITER_STORAGE \u003d \"\\\\|\";","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"    private static final String NEWLINE \u003d \"\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"    private static final int INDEX_TASKTYPE \u003d 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"    private static final int INDEX_TASKISDONE \u003d 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    private static final int INDEX_TASKDESCRIPTION \u003d 2;","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"    private static final int INDEX_TASKDATETIME \u003d 3;","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"     * Initial function for getting stored tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"     * in the duketasks.txt file","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"     * @param tasks Arraylist of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"    public static void getStoredData(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"            loadTasksFromFile(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"            createFile();","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"            printStorageError();","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"    private static void printStorageError() {","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Error in opening duketasks.txt\");","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"     * Loads tasks from","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"     * duketasks.txt file","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"     * @param tasks Arraylist of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"    private static void loadTasksFromFile(ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"        File storedTasks \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"        Scanner scanner \u003d new Scanner(storedTasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"        while (scanner.hasNext()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"            loadStoredTasks(scanner.nextLine(), tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"     * Creates a file","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"     * duketasks.txt if it does","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"     * not already exist","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"    private static void createFile() {","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"mayankp291"},"content":"            File newFile \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"mayankp291"},"content":"            newFile.createNewFile();","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"mayankp291"},"content":"        } catch (IOException ioException) {","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"mayankp291"},"content":"            createFileError(ioException);","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"mayankp291"},"content":"    private static void createFileError(IOException ioException) {","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"mayankp291"},"content":"        ioException.printStackTrace();","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Cannot create file\");","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"mayankp291"},"content":"     * Loads a task as an object in the program","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"mayankp291"},"content":"    private static void loadStoredTasks(String fileInput, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"mayankp291"},"content":"        String taskType \u003d computeTaskType(fileInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"mayankp291"},"content":"        String taskIsDone \u003d computeTaskIsDone(fileInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"mayankp291"},"content":"        String taskDescription \u003d computeTaskDescription(fileInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"mayankp291"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"mayankp291"},"content":"        case TASK_TODO:","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"mayankp291"},"content":"            createTodoObject(tasks, taskDescription);","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"mayankp291"},"content":"        case TASK_DEADLINE:","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"mayankp291"},"content":"            createDeadlineObject(tasks, taskDateTime(fileInput), taskDescription);","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"mayankp291"},"content":"        case TASK_EVENT:","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"mayankp291"},"content":"            createEventObject(tasks, taskDateTime(fileInput), taskDescription);","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"mayankp291"},"content":"        default:","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"mayankp291"},"content":"        markTaskAsDone(tasks, taskIsDone);","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"mayankp291"},"content":"    private static String taskDateTime(String input) {","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"mayankp291"},"content":"        String[] splitString \u003d input.split(DELIMITER_STORAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"mayankp291"},"content":"        return splitString[INDEX_TASKDATETIME].trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"mayankp291"},"content":"    private static void markTaskAsDone(ArrayList\u003cTask\u003e tasks, String taskIsDone) {","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"mayankp291"},"content":"        if (taskIsDone.equals(TASK_DONE)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"mayankp291"},"content":"            tasks.get(size(tasks)).markDone();","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"mayankp291"},"content":"    private static int size(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"mayankp291"},"content":"        return tasks.size() - 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"mayankp291"},"content":"    private static String computeTaskType(String input) {","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"mayankp291"},"content":"        String[] splitString \u003d input.split(DELIMITER_STORAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"mayankp291"},"content":"        return splitString[INDEX_TASKTYPE].trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"mayankp291"},"content":"    private static String computeTaskIsDone(String input) {","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"mayankp291"},"content":"        String[] splitString \u003d input.split(DELIMITER_STORAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"mayankp291"},"content":"        return splitString[INDEX_TASKISDONE].trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"mayankp291"},"content":"    private static String computeTaskDescription(String input) {","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"mayankp291"},"content":"        String[] splitString \u003d input.split(DELIMITER_STORAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"mayankp291"},"content":"        return splitString[INDEX_TASKDESCRIPTION].trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"mayankp291"},"content":"    private static void createEventObject(ArrayList\u003cTask\u003e tasks, String dateTime, String eventDescription) {","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"mayankp291"},"content":"        LocalDateTime eventAt \u003d LocalDateTime.parse(dateTime.strip(), DateAndTimeParser.inputFormatter);","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"mayankp291"},"content":"        tasks.add(new Event(eventDescription, eventAt, dateTime));","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"mayankp291"},"content":"    private static void createDeadlineObject(ArrayList\u003cTask\u003e tasks, String dateTime, String deadlineDescription) {","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"mayankp291"},"content":"        LocalDateTime deadlineBy \u003d LocalDateTime.parse(dateTime.strip(), DateAndTimeParser.inputFormatter);","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"mayankp291"},"content":"        tasks.add(new Deadline(deadlineDescription, deadlineBy, dateTime));","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"mayankp291"},"content":"    private static void createTodoObject(ArrayList\u003cTask\u003e tasks, String todoDescription) {","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"mayankp291"},"content":"        tasks.add(new Todo(todoDescription));","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"mayankp291"},"content":"     * Saves tasks from program to duketasks.txt file","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"mayankp291"},"content":"     * @param tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"mayankp291"},"content":"    public static void saveTasksToFile(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"mayankp291"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"mayankp291"},"content":"            FileWriter fileWriter \u003d new FileWriter(FILE_PATH);","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"mayankp291"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"mayankp291"},"content":"                String toAdd \u003d task.fileDescription() + NEWLINE;","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"mayankp291"},"content":"                fileWriter.write(toAdd);","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"mayankp291"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"mayankp291"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"mayankp291"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Cannot save data to \" + FILE_PATH);","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"mayankp291":168}},{"path":"src/main/java/duke/manager/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.manager;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"public class TaskManager {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"    public static final String TASK_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"    public static final String TASK_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"    public static final String TASK_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"    public static final String TASK_ERROR \u003d \"I really cannot understand what you wrote\";","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_FIND \u003d \"find\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_DONE \u003d \"done\";","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"     * The function adds the task input by the user","lastModifiedDate":"2021-09-10"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"     * @param tasks   the array of tasks","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"     * @param message the input string containing","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"    private static void addTask(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"        switch (Parser.taskType(message)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"        case TASK_TODO:","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"            Parser.addTodo(tasks, message);","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"        case TASK_DEADLINE:","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"            Parser.addDeadline(tasks, message);","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"        case TASK_EVENT:","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"            Parser.addEvent(tasks, message);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"            DukeException.taskError();","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"     * The function processes the inputs","lastModifiedDate":"2021-09-10"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"     * by the user and calls the necessary","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"     * functions to add, print and manipulate","lastModifiedDate":"2021-09-01"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"     * tasks.","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"    public static void processInput() {","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"        Storage.getStoredData(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"        String message \u003d scanner.nextLine();","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"        while (isNotCommandBye(message)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"            processMessage(tasks, message);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"            message \u003d scanner.nextLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"        scanner.close();","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"     * The function processes the inputs","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"     * by the user and calls the necessary","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"     * functions to add, print and manipulate","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"     * tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"mayankp291"},"content":"    public static void processMessage(ArrayList\u003cTask\u003e tasks, String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"mayankp291"},"content":"        if (isCommandList(message)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"mayankp291"},"content":"            Ui.printTasks(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"mayankp291"},"content":"        } else if (isCommandFind(message)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"mayankp291"},"content":"            Parser.findTask(tasks, message);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"mayankp291"},"content":"        } else if (isCommandDone(message)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"mayankp291"},"content":"            Parser.markDone(tasks, message);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"mayankp291"},"content":"        } else if (isCommandDelete(message)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"mayankp291"},"content":"            Parser.deleteTask(tasks, message);","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"mayankp291"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"mayankp291"},"content":"            addTask(tasks, message);","lastModifiedDate":"2021-09-01"},{"lineNumber":83,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":84,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":85,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"mayankp291"},"content":"    public static boolean isCommandDelete(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"mayankp291"},"content":"        return message.contains(COMMAND_DELETE);","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"mayankp291"},"content":"    public static boolean isCommandDone(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"mayankp291"},"content":"        return message.contains(COMMAND_DONE);","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"mayankp291"},"content":"    public static boolean isCommandFind(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"mayankp291"},"content":"        return message.contains(COMMAND_FIND);","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"mayankp291"},"content":"    public static boolean isCommandList(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"mayankp291"},"content":"        return message.equals(COMMAND_LIST);","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"mayankp291"},"content":"    public static boolean isNotCommandBye(String message) {","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"mayankp291"},"content":"        return !message.equals(COMMAND_BYE);","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":106}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import duke.manager.DateAndTimeParser;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"    protected String byString;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"     * Constructor to initialise the description","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"     * and the deadline of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"     * @param description string with the task","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"     *                    description","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"     * @param by          deadline for the task in LocalDateTime","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"     * @param byString    deadline for the task in String","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"    public Deadline(String description, LocalDateTime by, String byString) {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"        this.byString \u003d byString;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the deadline task description","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"        return \"[D]\" + super.getDescription() + \" (by: \" + DateAndTimeParser.outputFormatter.format(by) + \")\";","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"    public String fileDescription() {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"        return \"D | \" + super.fileDescription() + \" | \" + byString;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import duke.manager.DateAndTimeParser;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"    protected LocalDateTime on;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"    protected String onString;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"     * Constructor to initialise the description","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"     * and the date/time of the event.","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"     * @param description string with the event","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"     *                    description","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"     * @param on          date and time for the event in LocalDateTime","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"     * @param onString    date and time for the task in String","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"    public Event(String description, LocalDateTime on, String onString) {","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"        this.on \u003d on;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"        this.onString \u003d onString;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the event.","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the event description","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"        return \"[E]\" + super.getDescription() + \" (on: \" + DateAndTimeParser.outputFormatter.format(on) + \")\";","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"    public String fileDescription() {","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"        return \"E | \" + super.fileDescription() + \" | \" + onString;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"     * Constructor to initialise Task description","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"     * and make isDone false","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"     * @param description string with the task","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"     *                    description","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"     * Returns a string based on","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"     * the boolean isDone.","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"     * @return \"X\" if task is done and \" \" if task not done","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the task description","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the task for saving in a file.","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the task description","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"    public String fileDescription() {","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"        String isDone \u003d Objects.equals(getStatusIcon(), \"X\") ? \"1\" : \"0\";","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"        return isDone + \" | \" + this.description;","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"     * Makes the boolean isDone true,","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"     * indicating that the task is done","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"     * and prints the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"    public void isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"\\n____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-24"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"        System.out.println(this.getDescription());","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"     * Makes the boolean isDone true,","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"     * indicating that the task is done","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"    public void markDone() {","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"mayankp291":70}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"     * Constructor to initialise Todo description","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"     * and make isDone false","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"     * @param description string with the task","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"     *                    description","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"        super(description);","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"     * Returns the formatted Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"     * @return returns a String with the task description","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"        return \"[T]\" + super.getDescription();","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"    public String fileDescription() {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"        return \"T | \" + super.fileDescription();","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":31}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"package duke.ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"public class Ui {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"    private static final String WELCOME_GREETING \u003d \"Howdy there! I\u0027m Fluke\";","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"    private static final String WELCOME_ASK \u003d \"What can I do for you today master?\";","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"    private static final String BYE_MESSAGE \u003d \"Bye. Hope to serve you again master!\";","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"    public static final String SEPERATOR_STRING \u003d \". \";","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"     * Prints a welcome message on the console","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"    public static void welcomeMessage() {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"mayankp291"},"content":"        System.out.println(WELCOME_GREETING);","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"mayankp291"},"content":"        System.out.println(WELCOME_ASK);","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"mayankp291"},"content":"     * Prints a bye message on the console","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"mayankp291"},"content":"    public static void byeMessage() {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"mayankp291"},"content":"        System.out.println(BYE_MESSAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"mayankp291"},"content":"     * Prints a line on the console","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"mayankp291"},"content":"    public static void printLine() {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"mayankp291"},"content":"     * The function prints the recently added task","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"mayankp291"},"content":"    public static void printAddedTask(Task task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"mayankp291"},"content":"        System.out.println(task.getDescription());","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"mayankp291"},"content":"     * The function prints the recently added task","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"mayankp291"},"content":"    public static void printDeletedTask(Task task, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"mayankp291"},"content":"        System.out.println(task.getDescription());","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Now you have \" + (tasks.size() - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"mayankp291"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"mayankp291"},"content":"     * Prints all the tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"mayankp291"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"mayankp291"},"content":"     * @param tasks the array of tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"mayankp291"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"mayankp291"},"content":"    public static void printTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"mayankp291"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"mayankp291"},"content":"            System.out.println((i + 1) + SEPERATOR_STRING + tasks.get(i).getDescription());","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"mayankp291"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"mayankp291"},"content":"            System.out.println(\"Smartass, you need to add tasks before listing them !!!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"mayankp291"},"content":"    public static void printMatchingTasks(ArrayList\u003cTask\u003e filteredTasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"mayankp291"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"mayankp291"},"content":"        for (Task task : filteredTasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"mayankp291"},"content":"            System.out.println(task.getDescription());","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"mayankp291"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"mayankp291"},"content":"        printLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"mayankp291"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"mayankp291"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"mayankp291":87}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mayankp291"},"content":"todo eat lunch","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"mayankp291"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"mayankp291"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"mayankp291"},"content":"deadline do homework /by September 10th","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"mayankp291"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"mayankp291"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"mayankp291"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"mayankp291"},"content":"todo get supper","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"mayankp291"},"content":"done 4","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"done 3","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"mayankp291"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"mayankp291"},"content":"bye","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"mayankp291"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"mayankp291":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"mayankp291"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"mayankp291"},"content":"java -classpath ..\\bin\\ duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mayankp291":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"mayankp291"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"mayankp291":1,"-":37}}]
