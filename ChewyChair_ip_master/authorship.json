[{"path":"src/main/java/Shika.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"public class Shika {","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"    public static String line \u003d \"______________________________________________________\\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"     * Main function that displays Shika logo and greeting message, then calls scan() to run Shika.","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"        String logo \u003d \"  _________.__    .__ __            \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"                + \" /   _____/|  |__ |__|  | _______   \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"                + \" \\\\_____  \\\\ |  |  \\\\|  |  |/ /\\\\__  \\\\  \\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"                + \" /        \\\\|   Y  \\\\  |    \u003c  / __ \\\\_\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"                + \"/_______  /|___|  /__|__|_ \\\\(____  /\\n\"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"                + \"        \\\\/      \\\\/        \\\\/     \\\\/ \\n\";","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(logo + \"\\nHello, friend! Shika at your service!\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"        Task[] taskList \u003d new Task[100];","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"        Task.count \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"        scan(taskList);","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"     * Function that input is an integer. It checks if value can be parsed by parseInt() without throwing an exception.","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"     * @param input String to be parsed.","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"     * @return Returns false if parseInt() throws an exception, returns true otherwise.","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"    public static boolean isInteger(String input) {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"            return true;","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"        } catch (final NumberFormatException e) {","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"            return false;","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"     * Function that waits for user input, then executes user command.","lastModifiedDate":"2021-08-17"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"     * \"bye\" will exit the program.","lastModifiedDate":"2021-08-17"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"     * \"list\" will list all current tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"     * \"done x\" will mark task x as done, where x is the number of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"     * Any other string will add it to the taskList as a task.","lastModifiedDate":"2021-08-17"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"     * Aside from \"bye\", scan() will call itself again after command is executed.","lastModifiedDate":"2021-08-17"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"     * @param taskList Array containing all recorded tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"    public static void scan(Task[] taskList) {","lastModifiedDate":"2021-08-17"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-17"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"        String text;","lastModifiedDate":"2021-08-17"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"        text \u003d in.nextLine().trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"        if (text.equals(\"bye\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":52,"author":{"gitId":"ChewyChair"},"content":"            System.out.println(line + \"\u003e Bye friend!\\n\u003e See you again! :3\\n\" + line);","lastModifiedDate":"2021-08-17"},{"lineNumber":53,"author":{"gitId":"ChewyChair"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":54,"author":{"gitId":"ChewyChair"},"content":"        } else if (text.equals(\"list\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":55,"author":{"gitId":"ChewyChair"},"content":"            printTasks(taskList);","lastModifiedDate":"2021-08-17"},{"lineNumber":56,"author":{"gitId":"ChewyChair"},"content":"        } else if (text.startsWith(\"done\")) {","lastModifiedDate":"2021-08-17"},{"lineNumber":57,"author":{"gitId":"ChewyChair"},"content":"            executeDoneCommand(taskList, text);","lastModifiedDate":"2021-08-17"},{"lineNumber":58,"author":{"gitId":"ChewyChair"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":59,"author":{"gitId":"ChewyChair"},"content":"            taskList[Task.count] \u003d new Task(text, Task.count);","lastModifiedDate":"2021-08-17"},{"lineNumber":60,"author":{"gitId":"ChewyChair"},"content":"            System.out.print(line + \"\u003e Added: \" + text + \"!\\n\" + line);","lastModifiedDate":"2021-08-17"},{"lineNumber":61,"author":{"gitId":"ChewyChair"},"content":"            Task.count +\u003d 1;","lastModifiedDate":"2021-08-17"},{"lineNumber":62,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":63,"author":{"gitId":"ChewyChair"},"content":"        scan(taskList);","lastModifiedDate":"2021-08-17"},{"lineNumber":64,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":65,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":67,"author":{"gitId":"ChewyChair"},"content":"     * Function that marks the given task number as done. If the String given is not a number or is out of bounds,","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"ChewyChair"},"content":"     * it will print an error message.","lastModifiedDate":"2021-08-17"},{"lineNumber":69,"author":{"gitId":"ChewyChair"},"content":"     * @param taskList Array containing all recorded tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":70,"author":{"gitId":"ChewyChair"},"content":"     * @param text String that is supposed to be the number of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":71,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":72,"author":{"gitId":"ChewyChair"},"content":"    public static void executeDoneCommand (Task[] taskList, String text) {","lastModifiedDate":"2021-08-17"},{"lineNumber":73,"author":{"gitId":"ChewyChair"},"content":"        String str \u003d text.substring(text.indexOf(\"done\") + 4).trim();","lastModifiedDate":"2021-08-17"},{"lineNumber":74,"author":{"gitId":"ChewyChair"},"content":"        if (!isInteger(str)) {","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"ChewyChair"},"content":"            System.out.print(line + \"\u003e Please key in a number :/\\n\" + line);","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"ChewyChair"},"content":"            return;","lastModifiedDate":"2021-08-17"},{"lineNumber":77,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":78,"author":{"gitId":"ChewyChair"},"content":"        int index \u003d Integer.parseInt(str);","lastModifiedDate":"2021-08-17"},{"lineNumber":79,"author":{"gitId":"ChewyChair"},"content":"        if (index \u003e Task.count) {","lastModifiedDate":"2021-08-17"},{"lineNumber":80,"author":{"gitId":"ChewyChair"},"content":"            System.out.print(line + \"\u003e Oopsie! That task does not exist... yet!\\n\" + line);","lastModifiedDate":"2021-08-17"},{"lineNumber":81,"author":{"gitId":"ChewyChair"},"content":"        } else if (index \u003c 1) {","lastModifiedDate":"2021-08-17"},{"lineNumber":82,"author":{"gitId":"ChewyChair"},"content":"            System.out.print(line + \"\u003e ...Stop trying to break me :\u003c\\n\" + line);","lastModifiedDate":"2021-08-17"},{"lineNumber":83,"author":{"gitId":"ChewyChair"},"content":"        } else {","lastModifiedDate":"2021-08-17"},{"lineNumber":84,"author":{"gitId":"ChewyChair"},"content":"            taskList[index - 1].markAsDone();","lastModifiedDate":"2021-08-17"},{"lineNumber":85,"author":{"gitId":"ChewyChair"},"content":"            System.out.println(line + \"\u003e Otsukare! You\u0027ve done:\");","lastModifiedDate":"2021-08-17"},{"lineNumber":86,"author":{"gitId":"ChewyChair"},"content":"            taskList[index - 1].printTask();","lastModifiedDate":"2021-08-17"},{"lineNumber":87,"author":{"gitId":"ChewyChair"},"content":"            System.out.print(line);","lastModifiedDate":"2021-08-17"},{"lineNumber":88,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":89,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":90,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"ChewyChair"},"content":"     * Function to print all tasks in taskList.","lastModifiedDate":"2021-08-17"},{"lineNumber":93,"author":{"gitId":"ChewyChair"},"content":"     * @param taskList Array containing all recorded tasks.","lastModifiedDate":"2021-08-17"},{"lineNumber":94,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":95,"author":{"gitId":"ChewyChair"},"content":"    public static void printTasks(Task[] taskList) {","lastModifiedDate":"2021-08-17"},{"lineNumber":96,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(line + \"\u003e Here is your list of tasks:\") ;","lastModifiedDate":"2021-08-17"},{"lineNumber":97,"author":{"gitId":"ChewyChair"},"content":"        for (int i \u003d 0; i \u003c Task.count; i++) {","lastModifiedDate":"2021-08-17"},{"lineNumber":98,"author":{"gitId":"ChewyChair"},"content":"            taskList[i].printTask();","lastModifiedDate":"2021-08-17"},{"lineNumber":99,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":100,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(line);","lastModifiedDate":"2021-08-17"},{"lineNumber":101,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":102,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":103,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":104,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ChewyChair":104}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"public class Task {","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"    /** Number of tasks recorded. */","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"    public static int count \u003d 0;","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"    private String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    private int id;","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"     * Constructor for Task. Initialises an instance of Task with the input values.","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"     * @param name Name of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"     * @param id Number of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"    public Task(String name, int id) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"    public String status() {","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"     * Prints out the task. Displays its id, status and name.","lastModifiedDate":"2021-08-17"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"    public void printTask() {","lastModifiedDate":"2021-08-17"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(\"\\t\" + (id + 1) + \".[\" + status() + \"] \" + name);","lastModifiedDate":"2021-08-17"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ChewyChair":35}}]
