[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"# User Guide","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"Shika is a simple Command Line Interface (CLI) app for managing tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"## Table of Contents","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"* Features","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"   1. [Exit](#bye-exits-shika-a-name--byea)","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"   2. Add","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"      * [Todo](#todo---add-todo)","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"      * [Deadline](#deadline---add-deadline)","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"      * [Event](#event---add-event)","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"   3. [Done](#done---mark-task-as-done)","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"   4. [List](#list---list-all-tasks)","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"   5. [Find](#find---finds-task)","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"## Features","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"### `bye` Exits Shika \u003ca name \u003d \"bye\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"Exits Shika.","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"`bye`","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"Shika will print an exit message and exit.","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"\u003e Bye friend!","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"\u003e See you again! :)","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"### `todo` - Add Todo","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"Adds a todo to the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"Format: `todo TASKNAME`","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"* `TASKNAME` has to be filled in.","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"`todo IP`","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"ChewyChair"},"content":"Shika will add the todo to the task list and print a message.","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"ChewyChair"},"content":"\u003e Added: ","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][ ] IP ","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"ChewyChair"},"content":"\u003e You have 1 task on your list. -w-","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"ChewyChair"},"content":"### `deadline` - Add Deadline","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"ChewyChair"},"content":"Adds a deadline to the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"ChewyChair"},"content":"Format: `deadline TASKNAME /at DATE`","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"ChewyChair"},"content":"* Date has to follow `ddMMyyyy`, `dd/MM/yyyy` or `dd-MM-yyyy` formats.","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"ChewyChair"},"content":"* Both `TASKNAME` and `DATE` have to be filled in.","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"ChewyChair"},"content":"* `deadline Submit IP /by 01102021`","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"ChewyChair"},"content":"* `deadline Submit IP /by 01/10/2021`","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"ChewyChair"},"content":"* `deadline Submit IP /by 01-10-2021`","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"ChewyChair"},"content":"Shika will add the deadline to the task list and print a message.","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"ChewyChair"},"content":"\u003e Added: ","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"ChewyChair"},"content":"\t1. [D][ ] Submit IP  (by: Oct 1 2021)","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"ChewyChair"},"content":"\u003e You have 2 tasks on your list. -w-","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"ChewyChair"},"content":"### `event` - Add Event","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"ChewyChair"},"content":"Adds an event to the task list.","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"ChewyChair"},"content":"Format: `event TASKNAME /at DATE`","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"ChewyChair"},"content":"* Date has to follow `ddMMyyyy`, `dd/MM/yyyy` or `dd-MM-yyyy` formats.","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"ChewyChair"},"content":"* Both `TASKNAME` and `DATE` have to be filled in.","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"ChewyChair"},"content":"* `event Tales of Arise /at 10092021`","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"ChewyChair"},"content":"* `event Tales of Arise /at 10-09-2021`","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"ChewyChair"},"content":"* `event Tales of Arise /at 10/09/2021`","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"ChewyChair"},"content":"Shika will add the event to the task list and print a message.","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"ChewyChair"},"content":"\u003e Added: ","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"ChewyChair"},"content":"\t3. [E][ ] Tales of Arise  (at: Sep 10 2021)","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"ChewyChair"},"content":"\u003e You have 3 tasks on your list. -w-","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"ChewyChair"},"content":"### `delete` - Delete Task","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"ChewyChair"},"content":"Deletes the task with the given `INDEX`. `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"ChewyChair"},"content":"Format:","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"ChewyChair"},"content":"`delete INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"ChewyChair"},"content":"* `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"ChewyChair"},"content":"* `delete 1`","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"ChewyChair"},"content":"Shika will delete the task and print a message.","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"ChewyChair"},"content":"\u003e You\u0027ve removed: ","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][ ] IP ","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"ChewyChair"},"content":"### `done` - Mark Task as Done","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"ChewyChair"},"content":"Marks the task with the given `INDEX` as done. `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"ChewyChair"},"content":"Format:","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"ChewyChair"},"content":"`done INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"ChewyChair"},"content":"* `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"ChewyChair"},"content":"* `done 1`","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"ChewyChair"},"content":"Shika will mark the task as done and print a message.","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"ChewyChair"},"content":"\u003e You\u0027ve done: ","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][X] IP ","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"ChewyChair"},"content":"### `list` - List all Tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"ChewyChair"},"content":"Lists all tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"ChewyChair"},"content":"`list`","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"ChewyChair"},"content":"Shika will list all tasks.","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"ChewyChair"},"content":"\u003e Here is your list of tasks: ","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][X] IP ","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"ChewyChair"},"content":"\t2. [D][ ] Submit IP  (by: Oct 1 2021)","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"ChewyChair"},"content":"\t3. [E][ ] Tales of Arise  (at: Sep 10 2021)","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"ChewyChair"},"content":"\u003e You have 3 tasks on your list. -w-","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"ChewyChair"},"content":"### `find` - Finds Task","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"ChewyChair"},"content":"Lists all tasks that contain the search term.","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"ChewyChair"},"content":"Example of usage: `find rise`","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"ChewyChair"},"content":"* Search is case-insensitive.","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"ChewyChair"},"content":"* Lists all tasks that contain the search term.","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"ChewyChair"},"content":"\u003e Here are the matching tasks I\u0027ve found: ","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"ChewyChair"},"content":"\t3. [E][ ] Tales of Arise  (at: Sep 10 2021)","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"ChewyChair"},"content":"* `find ip`","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"ChewyChair"},"content":"* `find IP`","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":214,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"ChewyChair"},"content":"\u003e Here are the matching tasks I\u0027ve found: ","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][X] IP ","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"ChewyChair"},"content":"\t2. [D][ ] Submit IP  (by: Oct 1 2021)","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":220,"author":{"gitId":"ChewyChair"},"content":"### `done` - Mark Task as Done","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"ChewyChair"},"content":"Marks the task with the given `INDEX` as done. `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-26"},{"lineNumber":223,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":224,"author":{"gitId":"ChewyChair"},"content":"Format:","lastModifiedDate":"2021-09-26"},{"lineNumber":225,"author":{"gitId":"ChewyChair"},"content":"`done INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":226,"author":{"gitId":"ChewyChair"},"content":"* `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-26"},{"lineNumber":227,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":228,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-26"},{"lineNumber":229,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":230,"author":{"gitId":"ChewyChair"},"content":"* `done 1`","lastModifiedDate":"2021-09-26"},{"lineNumber":231,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":232,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-26"},{"lineNumber":233,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":234,"author":{"gitId":"ChewyChair"},"content":"Shika will mark the task as done and print a message.","lastModifiedDate":"2021-09-26"},{"lineNumber":235,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":236,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":237,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":238,"author":{"gitId":"ChewyChair"},"content":"\u003e You\u0027ve done: ","lastModifiedDate":"2021-09-26"},{"lineNumber":239,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][X] IP ","lastModifiedDate":"2021-09-26"},{"lineNumber":240,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-26"},{"lineNumber":241,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-26"},{"lineNumber":242,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":243,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":244,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":245,"author":{"gitId":"ChewyChair"},"content":"## Command Summary","lastModifiedDate":"2021-09-26"},{"lineNumber":246,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":247,"author":{"gitId":"ChewyChair"},"content":"Command | Format, Examples","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"ChewyChair"},"content":"------------ | -------------","lastModifiedDate":"2021-09-26"},{"lineNumber":249,"author":{"gitId":"ChewyChair"},"content":"Exit | `bye`","lastModifiedDate":"2021-09-26"},{"lineNumber":250,"author":{"gitId":"ChewyChair"},"content":"Add | `todo TASKNAME`, `deadline TASKNAME /by DATE`, `event TASKNAME /at DATE`","lastModifiedDate":"2021-09-26"},{"lineNumber":251,"author":{"gitId":"ChewyChair"},"content":"Delete | `delete INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":252,"author":{"gitId":"ChewyChair"},"content":"Done | `done INDEX`","lastModifiedDate":"2021-09-26"},{"lineNumber":253,"author":{"gitId":"ChewyChair"},"content":"List | `list`","lastModifiedDate":"2021-09-26"},{"lineNumber":254,"author":{"gitId":"ChewyChair"},"content":"Find | `find SEARCHTERM`","lastModifiedDate":"2021-09-26"},{"lineNumber":255,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":256,"author":{"gitId":"ChewyChair"},"content":"## References and Acknowledgements","lastModifiedDate":"2021-09-26"},{"lineNumber":257,"author":{"gitId":"ChewyChair"},"content":"- [Text to ASCII Art Generator](https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dShika%0A)","lastModifiedDate":"2021-09-26"},{"lineNumber":258,"author":{"gitId":"ChewyChair"},"content":"- [OOP Structure: Referenced from AddressBook](https://github.com/se-edu/addressbook-level2)","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"ChewyChair":252,"-":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"Shika is a simple Command Line Interface (CLI) app for managing tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"## Table of Contents","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"* Features","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    1. [Exit](#bye-exits-shika-a-name--byea)","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"    2. Add","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"        * [Todo](#todo---add-todo)","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"        * [Deadline](#deadline---add-deadline)","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"        * [Event](#event---add-event)","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"    3. [Done](#done---mark-task-as-done)","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"    4. [List](#list---list-all-tasks)","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"    5. [Find](#find---finds-task)","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"* [Command Summary](#command-summary)","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"## Features","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"### `bye` Exits Shika \u003ca name \u003d \"bye\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"Exits Shika.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"`bye`","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"Shika will print an exit message and exit.","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"\u003e Bye friend!","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"\u003e See you again! :)","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"### `todo` - Add Todo","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"Adds a todo to the task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"Format: `todo TASKNAME`","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"* `TASKNAME` has to be filled in.","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"`todo IP`","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"ChewyChair"},"content":"Shika will add the todo to the task list and print a message.","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"ChewyChair"},"content":"\u003e Added: ","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][ ] IP ","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"ChewyChair"},"content":"\u003e You have 1 task on your list. -w-","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"ChewyChair"},"content":"### `deadline` - Add Deadline","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"ChewyChair"},"content":"Adds a deadline to the task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"ChewyChair"},"content":"Format: `deadline TASKNAME /at DATE`","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"ChewyChair"},"content":"* Date has to follow `ddMMyyyy`, `dd/MM/yyyy` or `dd-MM-yyyy` formats.","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"ChewyChair"},"content":"* Both `TASKNAME` and `DATE` have to be filled in.","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"ChewyChair"},"content":"* `deadline Submit IP /by 01102021`","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"ChewyChair"},"content":"* `deadline Submit IP /by 01/10/2021`","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"ChewyChair"},"content":"* `deadline Submit IP /by 01-10-2021`","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"ChewyChair"},"content":"Shika will add the deadline to the task list and print a message.","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"ChewyChair"},"content":"\u003e Added: ","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"ChewyChair"},"content":"\t1. [D][ ] Submit IP  (by: Oct 1 2021)","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"ChewyChair"},"content":"\u003e You have 2 tasks on your list. -w-","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"ChewyChair"},"content":"### `event` - Add Event","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"ChewyChair"},"content":"Adds an event to the task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"ChewyChair"},"content":"Format: `event TASKNAME /at DATE`","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"ChewyChair"},"content":"* Date has to follow `ddMMyyyy`, `dd/MM/yyyy` or `dd-MM-yyyy` formats.","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"ChewyChair"},"content":"* Both `TASKNAME` and `DATE` have to be filled in.","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":101,"author":{"gitId":"ChewyChair"},"content":"* `event Tales of Arise /at 10092021`","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"ChewyChair"},"content":"* `event Tales of Arise /at 10-09-2021`","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"ChewyChair"},"content":"* `event Tales of Arise /at 10/09/2021`","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":107,"author":{"gitId":"ChewyChair"},"content":"Shika will add the event to the task list and print a message.","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":110,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"ChewyChair"},"content":"\u003e Added: ","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"ChewyChair"},"content":"\t3. [E][ ] Tales of Arise  (at: Sep 10 2021)","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"ChewyChair"},"content":"\u003e You have 3 tasks on your list. -w-","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":116,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"ChewyChair"},"content":"### `delete` - Delete Task","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"ChewyChair"},"content":"Deletes the task with the given `INDEX`. `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"ChewyChair"},"content":"Format:","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"ChewyChair"},"content":"`delete INDEX`","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"ChewyChair"},"content":"* `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"ChewyChair"},"content":"* `delete 1`","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"ChewyChair"},"content":"Shika will delete the task and print a message.","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"ChewyChair"},"content":"\u003e You\u0027ve removed: ","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][ ] IP ","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"ChewyChair"},"content":"### `done` - Mark Task as Done","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"ChewyChair"},"content":"Marks the task with the given `INDEX` as done. `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"ChewyChair"},"content":"Format:","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"ChewyChair"},"content":"`done INDEX`","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"ChewyChair"},"content":"* `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"ChewyChair"},"content":"* `done 1`","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"ChewyChair"},"content":"Shika will mark the task as done and print a message.","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"ChewyChair"},"content":"\u003e You\u0027ve done: ","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][X] IP ","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"ChewyChair"},"content":"### `list` - List all Tasks","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"ChewyChair"},"content":"Lists all tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"ChewyChair"},"content":"`list`","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"ChewyChair"},"content":"Shika will list all tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"ChewyChair"},"content":"\u003e Here is your list of tasks: ","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][X] IP ","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"ChewyChair"},"content":"\t2. [D][ ] Submit IP  (by: Oct 1 2021)","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"ChewyChair"},"content":"\t3. [E][ ] Tales of Arise  (at: Sep 10 2021)","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"ChewyChair"},"content":"\u003e You have 3 tasks on your list. -w-","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"ChewyChair"},"content":"### `find` - Finds Task","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"ChewyChair"},"content":"Lists all tasks that contain the search term.","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"ChewyChair"},"content":"Example of usage: `find rise`","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"ChewyChair"},"content":"* Search is case-insensitive.","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"ChewyChair"},"content":"* Lists all tasks that contain the search term.","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"ChewyChair"},"content":"\u003e Here are the matching tasks I\u0027ve found: ","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"ChewyChair"},"content":"\t3. [E][ ] Tales of Arise  (at: Sep 10 2021)","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"ChewyChair"},"content":"* `find ip`","lastModifiedDate":"2021-09-19"},{"lineNumber":208,"author":{"gitId":"ChewyChair"},"content":"* `find IP`","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":212,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":213,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":214,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"ChewyChair"},"content":"\u003e Here are the matching tasks I\u0027ve found: ","lastModifiedDate":"2021-09-19"},{"lineNumber":216,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][X] IP ","lastModifiedDate":"2021-09-19"},{"lineNumber":217,"author":{"gitId":"ChewyChair"},"content":"\t2. [D][ ] Submit IP  (by: Oct 1 2021)","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":219,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":220,"author":{"gitId":"ChewyChair"},"content":"### `done` - Mark Task as Done","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"ChewyChair"},"content":"Marks the task with the given `INDEX` as done. `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":224,"author":{"gitId":"ChewyChair"},"content":"Format:","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"ChewyChair"},"content":"`done INDEX`","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"ChewyChair"},"content":"* `INDEX` has to be positive and refer to a valid task.","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"ChewyChair"},"content":"Example of usage:","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"ChewyChair"},"content":"* `done 1`","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"ChewyChair"},"content":"Expected outcome:","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"ChewyChair"},"content":"Shika will mark the task as done and print a message.","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":236,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":237,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":238,"author":{"gitId":"ChewyChair"},"content":"\u003e You\u0027ve done: ","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"ChewyChair"},"content":"\t1. [T][X] IP ","lastModifiedDate":"2021-09-19"},{"lineNumber":240,"author":{"gitId":"ChewyChair"},"content":"____________________________________________________________________________","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"ChewyChair"},"content":"```","lastModifiedDate":"2021-09-19"},{"lineNumber":242,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":243,"author":{"gitId":"ChewyChair"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-19"},{"lineNumber":244,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":245,"author":{"gitId":"ChewyChair"},"content":"## Command Summary","lastModifiedDate":"2021-09-19"},{"lineNumber":246,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":247,"author":{"gitId":"ChewyChair"},"content":"Command | Format, Examples","lastModifiedDate":"2021-09-19"},{"lineNumber":248,"author":{"gitId":"ChewyChair"},"content":"------------ | -------------","lastModifiedDate":"2021-09-19"},{"lineNumber":249,"author":{"gitId":"ChewyChair"},"content":"Exit | `bye`","lastModifiedDate":"2021-09-19"},{"lineNumber":250,"author":{"gitId":"ChewyChair"},"content":"Add | `todo TASKNAME`, `deadline TASKNAME /by DATE`, `event TASKNAME /at DATE`","lastModifiedDate":"2021-09-19"},{"lineNumber":251,"author":{"gitId":"ChewyChair"},"content":"Delete | `delete INDEX`","lastModifiedDate":"2021-09-19"},{"lineNumber":252,"author":{"gitId":"ChewyChair"},"content":"Done | `done INDEX`","lastModifiedDate":"2021-09-19"},{"lineNumber":253,"author":{"gitId":"ChewyChair"},"content":"List | `list`","lastModifiedDate":"2021-09-19"},{"lineNumber":254,"author":{"gitId":"ChewyChair"},"content":"Find | `find SEARCHTERM`","lastModifiedDate":"2021-09-19"},{"lineNumber":255,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":256,"author":{"gitId":"ChewyChair"},"content":"## References and Acknowledgements","lastModifiedDate":"2021-09-26"},{"lineNumber":257,"author":{"gitId":"ChewyChair"},"content":"- [Text to ASCII Art Generator](https://patorjk.com/software/taag/#p\u003ddisplay\u0026f\u003dGraffiti\u0026t\u003dShika%0A)","lastModifiedDate":"2021-09-26"},{"lineNumber":258,"author":{"gitId":"ChewyChair"},"content":"- [OOP Structure: Referenced from AddressBook](https://github.com/se-edu/addressbook-level2)","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"-":21,"ChewyChair":237}},{"path":"src/main/java/Shika.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"import shikabot.parser.Parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"import shikabot.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"import shikabot.ui.TextUi;","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"import shikabot.storage.Storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"public class Shika {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"    public static String path \u003d \"data/ShikaTasks.txt\";","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"    public static Parser parser \u003d new Parser();","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"    public Storage storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"    public TaskList taskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"        new Shika().run();","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"     * Function that calls other functions to run Shika.","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"    private void run() {","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"            setupShika();","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printFileErrorMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"        runShikaLoop();","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"     * Function that attempts to load tasks from ShikaTasks.txt. If the file or parent directories do not exist,","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"     * it creates them.","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"     * @throws FileNotFoundException when ShikaTasks.txt is not found.","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"    private void setupShika() throws FileNotFoundException {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"        TextUi.printLogo();","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"        this.storage \u003d new Storage(path);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"        TextUi.printWelcomeMessage(checkForSave());","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"        taskList \u003d storage.loadTasks();","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"     * Function that checks if a save file exists, and creates one if it does not.","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"     * @return true if save does not exist, false otherwise","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"ChewyChair"},"content":"    private boolean checkForSave() {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"ChewyChair"},"content":"        boolean hasSave \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"ChewyChair"},"content":"            hasSave \u003d storage.setupSave();","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"ChewyChair"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printSecurityErrorMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"ChewyChair"},"content":"        } catch (Storage.FileErrorException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printFileErrorMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":62,"author":{"gitId":"ChewyChair"},"content":"        return hasSave;","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":66,"author":{"gitId":"ChewyChair"},"content":"     * Function that calls getCommand() in a loop to run Shika. Loop can be exited by inputting \"bye\".","lastModifiedDate":"2021-08-29"},{"lineNumber":67,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":68,"author":{"gitId":"ChewyChair"},"content":"    private void runShikaLoop() {","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"ChewyChair"},"content":"        Command command;","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"ChewyChair"},"content":"        do {","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"ChewyChair"},"content":"            command \u003d parser.parseCommand(TextUi.getCommand());","lastModifiedDate":"2021-09-20"},{"lineNumber":72,"author":{"gitId":"ChewyChair"},"content":"            executeCommand(command);","lastModifiedDate":"2021-08-29"},{"lineNumber":73,"author":{"gitId":"ChewyChair"},"content":"        } while (!command.isExit());","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":75,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":76,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"ChewyChair"},"content":"     * Function that executes the command that is passed in.","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"ChewyChair"},"content":"     * @param command to be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"ChewyChair"},"content":"    private void executeCommand(Command command) {","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-24"},{"lineNumber":82,"author":{"gitId":"ChewyChair"},"content":"            command.setData(taskList);","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"ChewyChair"},"content":"            command.execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"ChewyChair"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"ChewyChair"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":86,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printSaveErrorMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":88,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":89,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":90,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-17"},{"lineNumber":91,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":92,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ChewyChair":92}},{"path":"src/main/java/shikabot/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.task.Deadline;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"import shikabot.task.Event;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"import shikabot.task.Todo;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"import shikabot.ui.TextUi;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"    private final char type;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"    private final String name;","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"    private final LocalDate atBy;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    public AddCommand(char type, String name, LocalDate atBy) {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"        this.atBy \u003d atBy;","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"     * Function that adds a new task to the tasklist.","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"        switch (type) {","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"            taskList.addTask(new Todo(name));","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"            taskList.addTask(new Deadline(name, atBy));","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"            taskList.addTask(new Event(name, atBy));","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"        TextUi.printAddTaskMessage(taskList, taskList.getSize() - 1);","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"        TextUi.printTaskCount(taskList.getSize());","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ChewyChair":43}},{"path":"src/main/java/shikabot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"public abstract class Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    protected TaskList taskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"    public Command() {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"    public abstract void execute();","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"    public void setData(TaskList taskList) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"        return this instanceof ExitCommand;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ChewyChair":22}},{"path":"src/main/java/shikabot/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.ui.TextUi;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    private final int index;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"     * Function that deletes the specified task from tasklist.","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printDeleteTaskMessage(taskList, index);","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"            taskList.removeTask(index);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printTaskCount(taskList.getSize());","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printInvalidTaskMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ChewyChair":25}},{"path":"src/main/java/shikabot/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.ui.TextUi;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    private final int index;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"     * Function that marks the specified task as done.","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"            taskList.getTask(index).markAsDone();","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printDoneTaskMessage(taskList, index);","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printInvalidTaskMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ChewyChair":24}},{"path":"src/main/java/shikabot/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.ui.TextUi;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"     * Function that prints the exit message. This function does not exit Shika, that","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"     * is handled by the run loop itself in Shika.","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"        TextUi.printExitMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ChewyChair":18}},{"path":"src/main/java/shikabot/command/FailedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.ui.TextUi;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"import static shikabot.parser.Parser.EMPTY_FIELD;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"import static shikabot.parser.Parser.INVALID_DATE_SYNTAX;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"import static shikabot.parser.Parser.INVALID_DEADLINE_SYNTAX;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"import static shikabot.parser.Parser.INVALID_EVENT_SYNTAX;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"import static shikabot.parser.Parser.INVALID_TASK;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"import static shikabot.parser.Parser.NEGATIVE_INDEX_ERROR;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"import static shikabot.parser.Parser.NUMBER_FORMAT_ERROR;","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"public class FailedCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"    private final int errorCode;","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"    public FailedCommand(int errorCode) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"        this.errorCode \u003d errorCode;","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"     * Function that prints an error message based on the type of failed command it is.","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"        switch (errorCode) {","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"        case (INVALID_DEADLINE_SYNTAX):","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printDeadlineSyntaxMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"        case (INVALID_EVENT_SYNTAX):","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printEventSyntaxMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"        case (NUMBER_FORMAT_ERROR):","lastModifiedDate":"2021-08-29"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printNumberFormatMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"        case (NEGATIVE_INDEX_ERROR):","lastModifiedDate":"2021-08-29"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printNegativeIndexMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"        case (INVALID_TASK):","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printInvalidTaskMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"        case (INVALID_DATE_SYNTAX):","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printInvalidDateMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"        case (EMPTY_FIELD):","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"            TextUi.printEmptyFieldMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"        default:","lastModifiedDate":"2021-08-29"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-29"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ChewyChair":51}},{"path":"src/main/java/shikabot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.command;","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.ui.TextUi;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    private final String SEARCHTERM;","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"    public FindCommand(String str) {","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"        this.SEARCHTERM \u003d str;","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"    public void execute() {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"        TextUi.printMatchingTasks(taskList, SEARCHTERM);","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ChewyChair":17}},{"path":"src/main/java/shikabot/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.ui.TextUi;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"     * Function that prints invalid command message.","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"        TextUi.printUnknownCommandMessage();","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ChewyChair":13}},{"path":"src/main/java/shikabot/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.command;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.ui.TextUi;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    public ListCommand() {","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"     * Function that prints the list of all tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"    public void execute() {","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"        TextUi.printTasks(taskList);","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ChewyChair":16}},{"path":"src/main/java/shikabot/parser/EmptyFieldException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.parser;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"public class EmptyFieldException extends Exception {","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"ChewyChair":4}},{"path":"src/main/java/shikabot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.parser;","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.AddCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.Command;","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.DeleteCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.DoneCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.ExitCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.FailedCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.FindCommand;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.InvalidCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"import shikabot.command.ListCommand;","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"import shikabot.task.Task;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"public class Parser {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"    public static final int INVALID_DEADLINE_SYNTAX \u003d 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"    public static final int INVALID_EVENT_SYNTAX \u003d 2;","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"    public static final int NUMBER_FORMAT_ERROR \u003d 3;","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"    public static final int NEGATIVE_INDEX_ERROR \u003d 4;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"    public static final int INVALID_TASK \u003d 5;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"    public static final int INVALID_DATE_SYNTAX \u003d 6;","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"    public static final int EMPTY_FIELD \u003d 7;","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"    private static final DateTimeFormatter TIME_PARSER \u003d","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"            DateTimeFormatter.ofPattern(\"[ddMMyyyy][dd/MM/yyyy][dd-MM-yyyy]\");","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"    private static final int FIND_LENGTH \u003d 4;","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"    private static final int DONE_LENGTH \u003d 4;","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"    private static final int TODO_LENGTH \u003d 4;","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"    private static final int DEADLINE_LENGTH \u003d 8;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"    private static final int EVENT_LENGTH \u003d 5;","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"    private static final int DELETE_LENGTH \u003d 6;","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"    private static final int DIVIDER_LENGTH \u003d 3;","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"    private static final String NOTHING \u003d \"\";","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"    private static final String DIVIDER \u003d \"/\";","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"    private static final String AT \u003d \"/at\";","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"    private static final String BY \u003d \"/by\";","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"     * Function that checks if the string entered is an add command.","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"     * @param text String to be parsed.","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"     * @return true if String starts with todo, deadline or event. False otherwise.","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"ChewyChair"},"content":"    public boolean isAddCommand(String text) {","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"ChewyChair"},"content":"        text \u003d text.toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"ChewyChair"},"content":"        return text.startsWith(\"todo\") || text.startsWith(\"deadline\") || text.startsWith(\"event\");","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":57,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"ChewyChair"},"content":"     * Function that parses the command. Calls other functions in order to parse or execute the actual command.","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"ChewyChair"},"content":"     * @param text String to be parsed.","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"ChewyChair"},"content":"     * @return command to be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"ChewyChair"},"content":"    public Command parseCommand(String text) {","lastModifiedDate":"2021-08-29"},{"lineNumber":63,"author":{"gitId":"ChewyChair"},"content":"        Command command;","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"ChewyChair"},"content":"        text \u003d text.trim();","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"ChewyChair"},"content":"        String lowerCaseText \u003d text.toLowerCase();","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"ChewyChair"},"content":"        if (text.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"ChewyChair"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":68,"author":{"gitId":"ChewyChair"},"content":"        } else if (text.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"ChewyChair"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"ChewyChair"},"content":"        } else if (lowerCaseText.startsWith(\"done\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"ChewyChair"},"content":"            command \u003d parseDoneCommand(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"ChewyChair"},"content":"        } else if (lowerCaseText.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"ChewyChair"},"content":"            command \u003d parseDeleteCommand(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":74,"author":{"gitId":"ChewyChair"},"content":"        } else if (lowerCaseText.startsWith(\"find\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"ChewyChair"},"content":"            command \u003d parseFindCommand(text);","lastModifiedDate":"2021-08-31"},{"lineNumber":76,"author":{"gitId":"ChewyChair"},"content":"        } else if (isAddCommand(text)) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"ChewyChair"},"content":"            command \u003d parseAddCommand(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"ChewyChair"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"ChewyChair"},"content":"            command \u003d new InvalidCommand();","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":81,"author":{"gitId":"ChewyChair"},"content":"        return command;","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"ChewyChair"},"content":"     * This function assumes that the input command is a done command and attempts to parse it. Will return","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"ChewyChair"},"content":"     * a DoneCommand if command is correct, otherwise it will return a FailedCommand.","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"ChewyChair"},"content":"     * @param text String to be parsed.","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"ChewyChair"},"content":"     * @return command to be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"ChewyChair"},"content":"    private Command parseDoneCommand(String text) {","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"ChewyChair"},"content":"        String str \u003d text.substring(DONE_LENGTH).trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"ChewyChair"},"content":"        int index;","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"ChewyChair"},"content":"            index \u003d Integer.parseInt(str) - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"ChewyChair"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"ChewyChair"},"content":"            return new FailedCommand(NUMBER_FORMAT_ERROR);","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"ChewyChair"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"ChewyChair"},"content":"            return new FailedCommand(NEGATIVE_INDEX_ERROR);","lastModifiedDate":"2021-08-29"},{"lineNumber":100,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":101,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":102,"author":{"gitId":"ChewyChair"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":103,"author":{"gitId":"ChewyChair"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":104,"author":{"gitId":"ChewyChair"},"content":"            return new FailedCommand(INVALID_TASK);","lastModifiedDate":"2021-08-29"},{"lineNumber":105,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":108,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"ChewyChair"},"content":"     * This function assumes that the input command is a delete command and attempts to parse it. Will return","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"ChewyChair"},"content":"     * a DeleteCommand if command is correct, otherwise it will return a FailedCommand.","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"ChewyChair"},"content":"     * @param text String to be parsed.","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"ChewyChair"},"content":"     * @return command to be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"ChewyChair"},"content":"    private Command parseDeleteCommand(String text) {","lastModifiedDate":"2021-08-29"},{"lineNumber":115,"author":{"gitId":"ChewyChair"},"content":"        String str \u003d text.substring(DELETE_LENGTH).trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"ChewyChair"},"content":"        int index;","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"ChewyChair"},"content":"            index \u003d Integer.parseInt(str) - 1;","lastModifiedDate":"2021-08-29"},{"lineNumber":119,"author":{"gitId":"ChewyChair"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":120,"author":{"gitId":"ChewyChair"},"content":"            return new FailedCommand(NUMBER_FORMAT_ERROR);","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"ChewyChair"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"ChewyChair"},"content":"            return new FailedCommand(NEGATIVE_INDEX_ERROR);","lastModifiedDate":"2021-08-29"},{"lineNumber":124,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"ChewyChair"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2021-08-29"},{"lineNumber":127,"author":{"gitId":"ChewyChair"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":128,"author":{"gitId":"ChewyChair"},"content":"            return new FailedCommand(INVALID_TASK);","lastModifiedDate":"2021-08-29"},{"lineNumber":129,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":130,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":131,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":132,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"ChewyChair"},"content":"     * This function assumes that the input command is a find command and attempts to parse it. Will return","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"ChewyChair"},"content":"     * a FindCommand.","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"ChewyChair"},"content":"     * @param text String to search for.","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"ChewyChair"},"content":"     * @return command to be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"ChewyChair"},"content":"    private Command parseFindCommand(String text) {","lastModifiedDate":"2021-08-31"},{"lineNumber":139,"author":{"gitId":"ChewyChair"},"content":"        String str \u003d text.substring(FIND_LENGTH).trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"ChewyChair"},"content":"        return new FindCommand(str);","lastModifiedDate":"2021-08-31"},{"lineNumber":141,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":142,"author":{"gitId":"ChewyChair"},"content":"  ","lastModifiedDate":"2021-08-31"},{"lineNumber":143,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"ChewyChair"},"content":"     * This function assumes that the input command is an add command and attempts to parse it. Will return","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"ChewyChair"},"content":"     * an AddCommand if command is correct, otherwise it will return a FailedCommand.","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"ChewyChair"},"content":"     * @param text String to be parsed.","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"ChewyChair"},"content":"     * @return command to be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"ChewyChair"},"content":"    private Command parseAddCommand(String text) {","lastModifiedDate":"2021-08-29"},{"lineNumber":150,"author":{"gitId":"ChewyChair"},"content":"        Command command;","lastModifiedDate":"2021-08-29"},{"lineNumber":151,"author":{"gitId":"ChewyChair"},"content":"        if (text.toLowerCase().startsWith(TODO)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":152,"author":{"gitId":"ChewyChair"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"ChewyChair"},"content":"                command \u003d parseAddTodoCommand(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"ChewyChair"},"content":"            } catch (EmptyFieldException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"ChewyChair"},"content":"                return new FailedCommand(EMPTY_FIELD);","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"ChewyChair"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"ChewyChair"},"content":"        } else if (text.toLowerCase().startsWith(DEADLINE)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":158,"author":{"gitId":"ChewyChair"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"ChewyChair"},"content":"                command \u003d parseAddDeadlineCommand(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"ChewyChair"},"content":"            } catch (Task.InvalidTaskException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"ChewyChair"},"content":"                return new FailedCommand(INVALID_DEADLINE_SYNTAX);","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"ChewyChair"},"content":"            } catch (InvalidDateException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":163,"author":{"gitId":"ChewyChair"},"content":"                return new FailedCommand(INVALID_DATE_SYNTAX);","lastModifiedDate":"2021-08-30"},{"lineNumber":164,"author":{"gitId":"ChewyChair"},"content":"            } catch (EmptyFieldException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"ChewyChair"},"content":"                return new FailedCommand(EMPTY_FIELD);","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"ChewyChair"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"ChewyChair"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"ChewyChair"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"ChewyChair"},"content":"                command \u003d parseAddEventCommand(text);","lastModifiedDate":"2021-08-29"},{"lineNumber":170,"author":{"gitId":"ChewyChair"},"content":"            } catch (Task.InvalidTaskException e) {","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"ChewyChair"},"content":"                return new FailedCommand(INVALID_EVENT_SYNTAX);","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"ChewyChair"},"content":"            } catch (InvalidDateException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":173,"author":{"gitId":"ChewyChair"},"content":"                return new FailedCommand(INVALID_DATE_SYNTAX);","lastModifiedDate":"2021-08-30"},{"lineNumber":174,"author":{"gitId":"ChewyChair"},"content":"            } catch (EmptyFieldException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"ChewyChair"},"content":"                return new FailedCommand(EMPTY_FIELD);","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"ChewyChair"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":177,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"ChewyChair"},"content":"        return command;","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"ChewyChair"},"content":"     * This function assumes that the input command is an add todo command and attempts to parse it. Will return","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"ChewyChair"},"content":"     * an AddCommand if command is correct.","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"ChewyChair"},"content":"     * @return command to be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"ChewyChair"},"content":"     * @throws EmptyFieldException if any fields are left empty.","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"ChewyChair"},"content":"    private Command parseAddTodoCommand(String text) throws EmptyFieldException {","lastModifiedDate":"2021-09-06"},{"lineNumber":188,"author":{"gitId":"ChewyChair"},"content":"        String name \u003d text.substring(TODO_LENGTH).trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"ChewyChair"},"content":"        if (name.equals(NOTHING)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":190,"author":{"gitId":"ChewyChair"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2021-09-20"},{"lineNumber":191,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":192,"author":{"gitId":"ChewyChair"},"content":"        return new AddCommand(\u0027T\u0027, name, null);","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":194,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":195,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"ChewyChair"},"content":"     * This function assumes that the input command is an add deadline command and attempts to parse it. Will return","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"ChewyChair"},"content":"     * an AddCommand if command is correct.","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"ChewyChair"},"content":"     * @param text String to be parsed.","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"ChewyChair"},"content":"     * @return command to be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"ChewyChair"},"content":"     * @throws EmptyFieldException if any fields are left empty.","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"ChewyChair"},"content":"     * @throws Task.InvalidTaskException if syntax is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"ChewyChair"},"content":"     * @throws InvalidDateException if date is in invalid format.","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"ChewyChair"},"content":"    private Command parseAddDeadlineCommand(String text) throws EmptyFieldException, Task.InvalidTaskException, InvalidDateException {","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"ChewyChair"},"content":"        if (!text.toLowerCase().contains(BY)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":206,"author":{"gitId":"ChewyChair"},"content":"            throw new Task.InvalidTaskException();","lastModifiedDate":"2021-08-29"},{"lineNumber":207,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":208,"author":{"gitId":"ChewyChair"},"content":"        String name \u003d text.substring(DEADLINE_LENGTH, text.indexOf(DIVIDER)).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":209,"author":{"gitId":"ChewyChair"},"content":"        String date \u003d text.substring(text.toLowerCase().indexOf(BY) + DIVIDER_LENGTH).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":210,"author":{"gitId":"ChewyChair"},"content":"        if (name.equals(NOTHING) || date.equals(NOTHING)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":211,"author":{"gitId":"ChewyChair"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2021-09-20"},{"lineNumber":212,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":213,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":214,"author":{"gitId":"ChewyChair"},"content":"            LocalDate by \u003d LocalDate.parse(date, TIME_PARSER);","lastModifiedDate":"2021-08-31"},{"lineNumber":215,"author":{"gitId":"ChewyChair"},"content":"            return new AddCommand(\u0027D\u0027, name, by);","lastModifiedDate":"2021-08-29"},{"lineNumber":216,"author":{"gitId":"ChewyChair"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":217,"author":{"gitId":"ChewyChair"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-08-30"},{"lineNumber":218,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":219,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":220,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":221,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"ChewyChair"},"content":"     * This function assumes that the input command is an add event command and attempts to parse it. Will return","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"ChewyChair"},"content":"     * an AddCommand if command is correct.","lastModifiedDate":"2021-09-19"},{"lineNumber":224,"author":{"gitId":"ChewyChair"},"content":"     * @param text String to be parsed.","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"ChewyChair"},"content":"     * @return command to be executed.","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"ChewyChair"},"content":"     * @throws EmptyFieldException if any fields are left empty.","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"ChewyChair"},"content":"     * @throws Task.InvalidTaskException if syntax is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"ChewyChair"},"content":"     * @throws InvalidDateException if date is in invalid format.","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"ChewyChair"},"content":"    private Command parseAddEventCommand(String text) throws EmptyFieldException, Task.InvalidTaskException, InvalidDateException {","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"ChewyChair"},"content":"        if (!text.toLowerCase().contains(AT)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":232,"author":{"gitId":"ChewyChair"},"content":"            throw new Task.InvalidTaskException();","lastModifiedDate":"2021-08-29"},{"lineNumber":233,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":234,"author":{"gitId":"ChewyChair"},"content":"        String name \u003d text.substring(EVENT_LENGTH, text.indexOf(DIVIDER)).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":235,"author":{"gitId":"ChewyChair"},"content":"        String date \u003d text.substring(text.toLowerCase().indexOf(AT) + DIVIDER_LENGTH).trim();","lastModifiedDate":"2021-09-20"},{"lineNumber":236,"author":{"gitId":"ChewyChair"},"content":"        if (name.equals(NOTHING) || date.equals(NOTHING)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":237,"author":{"gitId":"ChewyChair"},"content":"            throw new EmptyFieldException();","lastModifiedDate":"2021-09-20"},{"lineNumber":238,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":239,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":240,"author":{"gitId":"ChewyChair"},"content":"            LocalDate at \u003d LocalDate.parse(date,TIME_PARSER);","lastModifiedDate":"2021-08-31"},{"lineNumber":241,"author":{"gitId":"ChewyChair"},"content":"            return new AddCommand(\u0027E\u0027, name, at);","lastModifiedDate":"2021-08-29"},{"lineNumber":242,"author":{"gitId":"ChewyChair"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":243,"author":{"gitId":"ChewyChair"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2021-08-30"},{"lineNumber":244,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":245,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":246,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":247,"author":{"gitId":"ChewyChair"},"content":"    private static class InvalidDateException extends Throwable {","lastModifiedDate":"2021-08-31"},{"lineNumber":248,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":249,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"ChewyChair":249}},{"path":"src/main/java/shikabot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.storage;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.task.Task;","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"import shikabot.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"import java.io.File;","lastModifiedDate":"2021-08-28"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-08-28"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"import java.io.IOException;","lastModifiedDate":"2021-08-28"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-28"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"public class Storage {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"    private final String path;","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"    private final File file;","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"        this.file \u003d new File(path);","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"     * This function attempts to create the save file at the given path if it does not already exist.","lastModifiedDate":"2021-08-28"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"     * @return true if file is created, false otherwise","lastModifiedDate":"2021-08-28"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"    public boolean setupSave() throws FileErrorException {","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-28"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"            if (!file.exists()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"                file.getParentFile().mkdirs();","lastModifiedDate":"2021-08-28"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"                return true;","lastModifiedDate":"2021-08-28"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"            throw new FileErrorException();","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"            throw new SecurityException();","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"        return false;","lastModifiedDate":"2021-08-28"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"     * Function that loads tasks from the given filepath.","lastModifiedDate":"2021-08-28"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"     * @throws FileNotFoundException if filepath is invalid","lastModifiedDate":"2021-08-28"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"    public TaskList loadTasks() throws FileNotFoundException {","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"        Scanner s \u003d new Scanner(file);","lastModifiedDate":"2021-08-28"},{"lineNumber":52,"author":{"gitId":"ChewyChair"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-08-28"},{"lineNumber":53,"author":{"gitId":"ChewyChair"},"content":"            loadTask(s.nextLine());","lastModifiedDate":"2021-08-28"},{"lineNumber":54,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"ChewyChair"},"content":"        return taskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":57,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":59,"author":{"gitId":"ChewyChair"},"content":"     * Function that loads tasks by parsing the String inputted, then calling addSavedTask to add it to","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"ChewyChair"},"content":"     * taskList.","lastModifiedDate":"2021-08-28"},{"lineNumber":61,"author":{"gitId":"ChewyChair"},"content":"     * @param s String to be parsed.","lastModifiedDate":"2021-08-28"},{"lineNumber":62,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":63,"author":{"gitId":"ChewyChair"},"content":"    private void loadTask(String s) {","lastModifiedDate":"2021-08-28"},{"lineNumber":64,"author":{"gitId":"ChewyChair"},"content":"        int firstDiv \u003d s.indexOf(\"|\") + 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":65,"author":{"gitId":"ChewyChair"},"content":"        int secondDiv \u003d s.indexOf(\"|\", firstDiv) + 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":66,"author":{"gitId":"ChewyChair"},"content":"        int thirdDiv \u003d s.indexOf(\"|\", secondDiv) + 1;","lastModifiedDate":"2021-08-28"},{"lineNumber":67,"author":{"gitId":"ChewyChair"},"content":"        char type \u003d s.charAt(0);","lastModifiedDate":"2021-08-28"},{"lineNumber":68,"author":{"gitId":"ChewyChair"},"content":"        String date \u003d s.substring(firstDiv, secondDiv - 1).trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"ChewyChair"},"content":"        LocalDate atBy;","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"ChewyChair"},"content":"        try {","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"ChewyChair"},"content":"            atBy \u003d LocalDate.parse(date);","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"ChewyChair"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"ChewyChair"},"content":"            atBy \u003d null;","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"ChewyChair"},"content":"        String name \u003d s.substring(secondDiv, thirdDiv - 1).trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":76,"author":{"gitId":"ChewyChair"},"content":"        String done \u003d s.substring(thirdDiv).trim();","lastModifiedDate":"2021-08-28"},{"lineNumber":77,"author":{"gitId":"ChewyChair"},"content":"        taskList.addSavedTask(type, atBy, name, done);","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":79,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":80,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-28"},{"lineNumber":81,"author":{"gitId":"ChewyChair"},"content":"     * Function that saves tasks to data/ShikaTasks.txt. It rewrites the txt from scratch.","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"ChewyChair"},"content":"     * @throws IOException if saving operation is interrupted.","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-28"},{"lineNumber":84,"author":{"gitId":"ChewyChair"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"ChewyChair"},"content":"        FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2021-08-28"},{"lineNumber":86,"author":{"gitId":"ChewyChair"},"content":"        fw.close();","lastModifiedDate":"2021-08-28"},{"lineNumber":87,"author":{"gitId":"ChewyChair"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"ChewyChair"},"content":"            try {","lastModifiedDate":"2021-08-28"},{"lineNumber":89,"author":{"gitId":"ChewyChair"},"content":"                saveTask(taskList.getTask(i));","lastModifiedDate":"2021-09-20"},{"lineNumber":90,"author":{"gitId":"ChewyChair"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-08-28"},{"lineNumber":91,"author":{"gitId":"ChewyChair"},"content":"                throw new IOException();","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"ChewyChair"},"content":"            }","lastModifiedDate":"2021-08-28"},{"lineNumber":93,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-28"},{"lineNumber":94,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-28"},{"lineNumber":95,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":96,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"ChewyChair"},"content":"     * Function that saves the individual task by appending it to the end of the current save file.","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"ChewyChair"},"content":"     * @param task task to be saved.","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"ChewyChair"},"content":"     * @throws IOException if saving operation is interrupted.","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"ChewyChair"},"content":"    public void saveTask(Task task) throws IOException {","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"ChewyChair"},"content":"        FileWriter fw \u003d new FileWriter(path, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"ChewyChair"},"content":"        fw.write(encodeTask(task));","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"ChewyChair"},"content":"        fw.close();","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"ChewyChair"},"content":"     * Function that returns the String for a task to be encoded into the save file.","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"ChewyChair"},"content":"     * @param task task to be encoded.","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"ChewyChair"},"content":"     * @return String to be written into the save file.","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"ChewyChair"},"content":"    public String encodeTask(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":113,"author":{"gitId":"ChewyChair"},"content":"        String divider \u003d \" | \";","lastModifiedDate":"2021-08-30"},{"lineNumber":114,"author":{"gitId":"ChewyChair"},"content":"        return task.getType() +","lastModifiedDate":"2021-08-30"},{"lineNumber":115,"author":{"gitId":"ChewyChair"},"content":"                divider +","lastModifiedDate":"2021-08-30"},{"lineNumber":116,"author":{"gitId":"ChewyChair"},"content":"                task.getAtBy() +","lastModifiedDate":"2021-08-30"},{"lineNumber":117,"author":{"gitId":"ChewyChair"},"content":"                divider +","lastModifiedDate":"2021-08-30"},{"lineNumber":118,"author":{"gitId":"ChewyChair"},"content":"                task.getName() +","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"ChewyChair"},"content":"                divider +","lastModifiedDate":"2021-08-30"},{"lineNumber":120,"author":{"gitId":"ChewyChair"},"content":"                (task.isDone() ? \"true\" : \"false\") +","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"ChewyChair"},"content":"                \"\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"ChewyChair"},"content":"    public static class FileErrorException extends Exception {","lastModifiedDate":"2021-08-29"},{"lineNumber":125,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":126,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"ChewyChair":126}},{"path":"src/main/java/shikabot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"    private LocalDate by;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"    public Deadline(String name, LocalDate by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"    public String getType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"        return \"D\";","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"    public LocalDate getAtBy() {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"        return by;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ChewyChair":29}},{"path":"src/main/java/shikabot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"    private LocalDate at;","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"    public Event(String name, LocalDate at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"        return \"[E]\" + super.toString() + \" (at: \"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"    public String getType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"        return \"E\";","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"    public LocalDate getAtBy() {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"        return at;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ChewyChair":29}},{"path":"src/main/java/shikabot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"import java.util.Locale;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"public abstract class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"    protected String name;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"     * Constructor for Task. Initialises an instance of Task with the input values.","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"     * @param name Name of the task.","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"    public Task(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-08-17"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"    public String getStatus() {","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"        return \"[\" + getStatus() + \"] \" + name + \" \";","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"    public abstract String getType();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"    public abstract LocalDate getAtBy();","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"    public String getName() {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"        return name;","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"        return isDone;","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"    public boolean isMatchingTask(String searchTerm) {","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"        return name.toLowerCase().contains(searchTerm.toLowerCase());","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"    public static class InvalidTaskException extends Exception {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ChewyChair":53}},{"path":"src/main/java/shikabot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.task;","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"public class TaskList {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"     * This function directly adds a task to tasks without printing any messages. Used for loading saved tasks.","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"     * @param type type of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"     * @param atBy at/by of task, if applicable.","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"     * @param name name of task.","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"     * @param done if the task is done or not.","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"    public void addSavedTask(char type, LocalDate atBy, String name, String done) {","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"        switch(type) {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"            taskList.add(new Todo(name));","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"            taskList.add(new Deadline(name, atBy));","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"            taskList.add(new Event(name, atBy));","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"        default:","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"            return;","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"        if (done.equals(\"true\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"ChewyChair"},"content":"            taskList.get(taskList.size() - 1).markAsDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"ChewyChair":55}},{"path":"src/main/java/shikabot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.task;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"    public Todo(String name) {","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"        super(name);","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"    @Override","lastModifiedDate":"2021-08-17"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"    public String toString() {","lastModifiedDate":"2021-08-17"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-17"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    public String getType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"        return \"T\";","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"    public LocalDate getAtBy() {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"        return null;","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ChewyChair":24}},{"path":"src/main/java/shikabot/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"package shikabot.ui;","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"import shikabot.task.TaskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"public class TextUi {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"    public static Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"    public static final String LINE \u003d \"____________________________________________________________________________\\n\";","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"     * Function that prints Shika logo.","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"    public static void printLogo() {","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"        String logo \u003d \"  _________.__    .__ __            \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"                + \" /   _____/|  |__ |__|  | _______   \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"                + \" \\\\_____  \\\\ |  |  \\\\|  |  |/ /\\\\__  \\\\  \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"                + \" /        \\\\|   Y  \\\\  |    \u003c  / __ \\\\_\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"                + \"/_______  /|___|  /__|__|_ \\\\(____  /\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"                + \"        \\\\/      \\\\/        \\\\/     \\\\/ \\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"    public static void printWelcomeMessage(boolean isFirstTime) {","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"        String greeting \u003d (isFirstTime) ? \"Hello, friend! \" : \"Welcome back, friend! \";","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(greeting + \"Shika at your service! ^-^\\n\");","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"ChewyChair"},"content":"    public static String getCommand() {","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"ChewyChair"},"content":"        return in.nextLine();","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"ChewyChair"},"content":"    public static void printFileErrorMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":36,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(\"Something went wrong during file creation :/\");","lastModifiedDate":"2021-08-27"},{"lineNumber":37,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":39,"author":{"gitId":"ChewyChair"},"content":"    public static void printSecurityErrorMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(\"Shika isn\u0027t allowed to write in this location :\u003c\");","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":43,"author":{"gitId":"ChewyChair"},"content":"    public static void printSaveErrorMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(\"Problem occurred when saving T.T\");","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"ChewyChair"},"content":"    public static void printExitMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":48,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE + \"\u003e Bye friend!\\n\u003e See you again! :)\\n\" + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"ChewyChair"},"content":"    public static void printUnknownCommandMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE + \"\u003e Sorry friend, I don\u0027t know what that means. :/\\n\" + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":53,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":54,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"ChewyChair"},"content":"    public static void printDeleteTaskMessage(TaskList taskList, int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(LINE + \"\u003e You\u0027ve removed: \" + \"\\n\\t\"","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"ChewyChair"},"content":"                + (index + 1) + \". \" + taskList.getTask(index).toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":58,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":59,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"ChewyChair"},"content":"     * Function that prints the current task count.","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"ChewyChair"},"content":"    public static void printTaskCount(int count) {","lastModifiedDate":"2021-09-20"},{"lineNumber":64,"author":{"gitId":"ChewyChair"},"content":"        String taskForm \u003d (count \u003d\u003d 1) ? \"task\" : \"tasks\";","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(\"\u003e You have \" + count + \" \" + taskForm + \" on your list. -w-\");","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":67,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"ChewyChair"},"content":"    public static void printNumberFormatMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":70,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE + \"\u003e Please key in a number.\\n\" + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":71,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"ChewyChair"},"content":"    public static void printInvalidTaskMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE + \"\u003e Oops! That task does not exist.\\n\" + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":75,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":76,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":77,"author":{"gitId":"ChewyChair"},"content":"    public static void printInvalidDateMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":78,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE + \"\u003e Oops! Please enter a valid date format! (day-month-year)\\n\" + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":79,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"ChewyChair"},"content":"    public static void printDeadlineSyntaxMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":82,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE + \"\u003e Please follow the format [NAME] /by [DEADLINE]. \" +","lastModifiedDate":"2021-09-20"},{"lineNumber":83,"author":{"gitId":"ChewyChair"},"content":"                \"Thank you!\\n\" + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":84,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":86,"author":{"gitId":"ChewyChair"},"content":"    public static void printEventSyntaxMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":87,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE + \"\u003e Please follow the format [NAME] /at [DURATION]. \" +","lastModifiedDate":"2021-09-20"},{"lineNumber":88,"author":{"gitId":"ChewyChair"},"content":"                \"Thank you!\\n\" + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":89,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":90,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"ChewyChair"},"content":"    public static void printAddTaskMessage(TaskList taskList, int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":92,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(LINE + \"\u003e Added: \" + \"\\n\\t\"","lastModifiedDate":"2021-09-20"},{"lineNumber":93,"author":{"gitId":"ChewyChair"},"content":"                + (index + 1) + \". \" + taskList.getTask(index).toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":94,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"ChewyChair"},"content":"    public static void printNegativeIndexMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":97,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE + \"\u003e ...Stop trying to break me...\\n\" + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"ChewyChair"},"content":"    public static void printDoneTaskMessage(TaskList taskList, int index) {","lastModifiedDate":"2021-09-20"},{"lineNumber":101,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(LINE + \"\u003e You\u0027ve done: \" + \"\\n\\t\"","lastModifiedDate":"2021-09-20"},{"lineNumber":102,"author":{"gitId":"ChewyChair"},"content":"                + (index + 1) + \". \" + taskList.getTask(index).toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":104,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"ChewyChair"},"content":"    public static void printEmptyFieldMessage() {","lastModifiedDate":"2021-09-20"},{"lineNumber":107,"author":{"gitId":"ChewyChair"},"content":"        System.out.print(LINE + \"\u003e Please fill in all fields. \u0027w\u0027\\n\" + LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":108,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":110,"author":{"gitId":"ChewyChair"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"ChewyChair"},"content":"     * Function to print all tasks in tasks.","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"ChewyChair"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"ChewyChair"},"content":"    public static void printTasks(TaskList taskList) {","lastModifiedDate":"2021-09-20"},{"lineNumber":114,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(LINE + \"\u003e Here is your list of tasks: \") ;","lastModifiedDate":"2021-09-20"},{"lineNumber":115,"author":{"gitId":"ChewyChair"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":116,"author":{"gitId":"ChewyChair"},"content":"            System.out.println(\"\\t\" + (i + 1) + \". \" + taskList.getTask(i).toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":117,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"ChewyChair"},"content":"        printTaskCount(taskList.getSize());","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"ChewyChair"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":121,"author":{"gitId":"ChewyChair"},"content":"    public static void printMatchingTasks(TaskList taskList, String searchterm) {","lastModifiedDate":"2021-09-20"},{"lineNumber":122,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(LINE + \"\u003e Here are the matching tasks I\u0027ve found: \");","lastModifiedDate":"2021-09-20"},{"lineNumber":123,"author":{"gitId":"ChewyChair"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2021-09-20"},{"lineNumber":124,"author":{"gitId":"ChewyChair"},"content":"            if (taskList.getTask(i).isMatchingTask(searchterm)) {","lastModifiedDate":"2021-09-20"},{"lineNumber":125,"author":{"gitId":"ChewyChair"},"content":"                System.out.println(\"\\t\" + (i + 1) + \". \" + taskList.getTask(i).toString());","lastModifiedDate":"2021-09-20"},{"lineNumber":126,"author":{"gitId":"ChewyChair"},"content":"            }","lastModifiedDate":"2021-08-31"},{"lineNumber":127,"author":{"gitId":"ChewyChair"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":128,"author":{"gitId":"ChewyChair"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"ChewyChair"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":130,"author":{"gitId":"ChewyChair"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"ChewyChair":130}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"hello","lastModifiedDate":"2021-08-17"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"todo hello","lastModifiedDate":"2021-08-17"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"done 0","lastModifiedDate":"2021-08-17"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"done abc","lastModifiedDate":"2021-08-17"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"deadline hello","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"ChewyChair"},"content":"deadline hello /by 08-02-1999","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"ChewyChair"},"content":"deadline hello /by 08021999","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ChewyChair"},"content":"deadline hello /by 08/02/1999","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ChewyChair"},"content":"deadline hello /by 1999-02-08","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"ChewyChair"},"content":"deadline hello /at 08021999","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"event hello","lastModifiedDate":"2021-08-17"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"event hello /by 08021999","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"event hello /at 08021999","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"done 1","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"ChewyChair"},"content":"done 2","lastModifiedDate":"2021-08-17"},{"lineNumber":22,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":23,"author":{"gitId":"ChewyChair"},"content":"done       3","lastModifiedDate":"2021-08-17"},{"lineNumber":24,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":25,"author":{"gitId":"ChewyChair"},"content":"todo       hello","lastModifiedDate":"2021-08-17"},{"lineNumber":26,"author":{"gitId":"ChewyChair"},"content":"deadline    hello    /by    08021999","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"event    hello    /at     08021999","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-17"},{"lineNumber":29,"author":{"gitId":"ChewyChair"},"content":"bye","lastModifiedDate":"2021-08-17"},{"lineNumber":30,"author":{"gitId":"ChewyChair"},"content":"hello","lastModifiedDate":"2021-08-17"}],"authorContributionMap":{"ChewyChair":30}},{"path":"text-ui-test/input_2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"ChewyChair"},"content":"todo hello","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"ChewyChair"},"content":"delete 1","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"ChewyChair"},"content":"delete 5","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"ChewyChair"},"content":"list","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"ChewyChair"},"content":"delete 10","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"bye","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"ChewyChair":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"ChewyChair"},"content":"if exist data\\ShikaTasks.txt del data\\ShikaTasks.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ChewyChair"},"content":"java -classpath ..\\bin Shika \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"ChewyChair"},"content":"java -classpath ..\\bin Shika \u003c input_2.txt \u003e\u003e  ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"ChewyChair":3}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ChewyChair"},"content":"if [ -e \"./data/ShikaTasks.txt\" ]","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"ChewyChair"},"content":"then","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"ChewyChair"},"content":"  rm ./data/ShikaTasks.txt","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"ChewyChair"},"content":"fi","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"ChewyChair"},"content":"java -classpath ../bin Shika \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-08-17"},{"lineNumber":28,"author":{"gitId":"ChewyChair"},"content":"java -classpath ../bin Shika \u003c input_2.txt \u003e\u003e ACTUAL.TXT","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"ChewyChair":6}}]
