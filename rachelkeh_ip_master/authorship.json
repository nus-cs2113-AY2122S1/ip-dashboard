[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"D | true | 123 | 456","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"E | false | 123 | 456","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rachelkeh":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rachelkeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rachelkeh"},"content":" * Parses user input.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rachelkeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rachelkeh"},"content":"public class Parser {","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rachelkeh"},"content":"     * Parses user input into the respective important fields of the command for execution.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rachelkeh"},"content":"     * @param fullCommand The entire string command entered in by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rachelkeh"},"content":"     * @return The parsed command that can be fed into the TaskList functions.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rachelkeh"},"content":"     * @throws ArrayIndexOutOfBoundsException If the command is in the wrong format.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rachelkeh"},"content":"    public static String[] parse(String fullCommand) throws ArrayIndexOutOfBoundsException {","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rachelkeh"},"content":"        String[] words \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rachelkeh"},"content":"        String commandWord \u003d words[0].toLowerCase();","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rachelkeh"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rachelkeh"},"content":"        case \"list\":","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rachelkeh"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rachelkeh"},"content":"            return words;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rachelkeh"},"content":"        case \"done\":","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rachelkeh"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rachelkeh"},"content":"            String[] parsedFullCommand \u003d fullCommand.split(\" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rachelkeh"},"content":"            return parsedFullCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rachelkeh"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rachelkeh"},"content":"            String description \u003d words[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rachelkeh"},"content":"            return new String[]{commandWord, description};","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rachelkeh"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rachelkeh"},"content":"            description \u003d words[1].split(\" /by \")[0];","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rachelkeh"},"content":"            String by \u003d words[1].split(\" /by \")[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rachelkeh"},"content":"            return new String[]{commandWord, description, by};","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rachelkeh"},"content":"        case \"event\":","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rachelkeh"},"content":"            description \u003d words[1].split(\" /at \")[0];","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rachelkeh"},"content":"            String at \u003d words[1].split(\" /at \")[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rachelkeh"},"content":"            return new String[]{commandWord, description, at};","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rachelkeh"},"content":"        case \"find\":","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rachelkeh"},"content":"            String keyword \u003d words[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rachelkeh"},"content":"            return new String[]{commandWord, keyword};","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rachelkeh"},"content":"        default:","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rachelkeh"},"content":"            return new String[]{\"wrong\", \"input\"};","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rachelkeh"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rachelkeh":45}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"package duke;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rachelkeh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rachelkeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rachelkeh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rachelkeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rachelkeh"},"content":" * Text UI of the application that deals with interactions with the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rachelkeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rachelkeh"},"content":"public class Ui {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rachelkeh"},"content":"    private Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rachelkeh"},"content":"     * Prints the divider line.","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rachelkeh"},"content":"    public static void printDividerLine() {","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t_____________________________________________________________________________\");","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rachelkeh"},"content":"     * Prints the welcome message at the start of the application.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rachelkeh"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rachelkeh"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rachelkeh"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rachelkeh"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rachelkeh"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rachelkeh"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke!\\n\\tWhat can I do for you?\");","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\tHere are the performable actions:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t 1. Add a new To Do by typing \\\"todo {content of your to do}\\\".\");","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t 2. Add a new Deadline by typing \\\"deadline {content of your deadline} /by {date of deadline}\\\".\");","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t 3. Add a new Event by typing \\\"event {content of your event} /at {date of event}\\\".\");","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t 4. Mark a task as done by typing in \\\"done\\\" and the index of the task on the list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t 5. Check all the tasks you have added by typing in \\\"list\\\". Done tasks will be marked with an X.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t 6. Delete a task by typing in \\\"delete\\\" and the index of the task on the list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t 7. Find a task with a particular keyword by typing in \\\"find {keyword}\\\". \" +","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rachelkeh"},"content":"                \"Tasks with that keyword will be listed.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t 8. End the program by typing in \\\"bye\\\".\");","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rachelkeh"},"content":"     * Prints the bye message at the end of a session of the application.","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rachelkeh"},"content":"    public static void showBye() {","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rachelkeh"},"content":"     * Reads in and returns the command entered in by the user in the terminal.","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rachelkeh"},"content":"     * @return The command entered by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rachelkeh"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rachelkeh"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rachelkeh"},"content":"     * Prints the specific error message of an exception.","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"rachelkeh"},"content":"     * @param e Exception to the error.","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"rachelkeh"},"content":"    public void showLoadingError(Exception e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t OOPS!!! There was an error: \" + e.getMessage() +","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rachelkeh"},"content":"                \"\\n\\t Please make sure your input is in the correct format!\");","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rachelkeh"},"content":"     * Prints a general error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"rachelkeh"},"content":"    public void showLoadingError() {","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t OOPS!!! There was an error, please make sure your input is valid!\");","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"rachelkeh"},"content":"     * Prints the task that is marked as done to the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"rachelkeh"},"content":"     * @param tasks List of all the tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"rachelkeh"},"content":"     * @param indexInteger Index of the task that is marked as done by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rachelkeh"},"content":"    public void printMarkAsDone(ArrayList\u003cTask\u003e tasks, int indexInteger) {","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t  \" + tasks.get(indexInteger - 1));","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"rachelkeh"},"content":"     * Prints the task that is added by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"rachelkeh"},"content":"     * @param tasks List of all the tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"rachelkeh"},"content":"     * @param numberOfTasks Total number of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"rachelkeh"},"content":"    public void printAddedTasked(ArrayList\u003cTask\u003e tasks, int numberOfTasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t   \" + tasks.get(numberOfTasks - 1));","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t Now you have \" + numberOfTasks + \" tasks in the list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"rachelkeh"},"content":"     * Prints the entire list of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"rachelkeh"},"content":"     * @param tasks List of all the tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"rachelkeh"},"content":"     * @param numberOfTasks Total number of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"rachelkeh"},"content":"    public void listAllTasks(ArrayList\u003cTask\u003e tasks, int numberOfTasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t Here are the tasks in your list:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"rachelkeh"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"rachelkeh"},"content":"            System.out.println(\"      \" + (i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"rachelkeh"},"content":"     * Prints the task that is deleted by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"rachelkeh"},"content":"     * @param description Description field of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"rachelkeh"},"content":"     * @param numberOfTasks Total number of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"rachelkeh"},"content":"    public void showDeletedTask(String description, int numberOfTasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t  \" + description);","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t Now you have \" + numberOfTasks + \" tasks in the list.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"rachelkeh"},"content":"     * Prints the list of tasks with the keyword specified by the user in the find command.","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"rachelkeh"},"content":"     * @param filteredList The list of tasks with the keyword specified by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"rachelkeh"},"content":"    public void listMatchingTasks(ArrayList\u003cTask\u003e filteredList) {","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"rachelkeh"},"content":"        for (int i \u003d 0; i \u003c filteredList.size(); i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"rachelkeh"},"content":"            System.out.println(\"      \" + (i + 1) + \".\" + filteredList.get(i));","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"rachelkeh"},"content":"    public void listMatchingTasks(ArrayList\u003cTask\u003e filteredList) {","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"rachelkeh"},"content":"        System.out.println(\"\\t Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"rachelkeh"},"content":"        for (int i \u003d 0; i \u003c filteredList.size(); i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"rachelkeh"},"content":"            System.out.println(\"      \" + (i + 1) + \".\" + filteredList.get(i));","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"rachelkeh"},"content":"        printDividerLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"rachelkeh"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rachelkeh":167}},{"path":"src/main/java/duke/command/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"package duke.command;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"rachelkeh"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rachelkeh"},"content":"import duke.Parser;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rachelkeh"},"content":"import duke.task.Storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rachelkeh"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"rachelkeh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rachelkeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rachelkeh"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rachelkeh"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rachelkeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"rachelkeh"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rachelkeh"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rachelkeh"},"content":"    TaskList taskList;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":20,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rachelkeh"},"content":"     * Constructor to initialise the program.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rachelkeh"},"content":"     * @param filePath The path of the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rachelkeh"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rachelkeh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rachelkeh"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rachelkeh"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rachelkeh"},"content":"            taskList \u003d new TaskList(storage.load(), storage);","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rachelkeh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rachelkeh"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":33,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rachelkeh"},"content":"     * Runs the program until termination.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rachelkeh"},"content":"    public void run() {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rachelkeh"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rachelkeh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rachelkeh"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rachelkeh"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rachelkeh"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rachelkeh"},"content":"                String[] parsedFullCommand \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rachelkeh"},"content":"                execute(taskList, parsedFullCommand);","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rachelkeh"},"content":"                isExit \u003d checkIsExit(parsedFullCommand[0]);","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rachelkeh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rachelkeh"},"content":"                ui.showLoadingError(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rachelkeh"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":50,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"rachelkeh"},"content":"        ui.showBye();","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rachelkeh"},"content":"     * Checks whether the command is bye and changes the exit condition correspondingly.","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rachelkeh"},"content":"     * @param commandWord Command word of the input by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rachelkeh"},"content":"     * @return Exit status of the application.","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rachelkeh"},"content":"    public boolean checkIsExit(String commandWord) {","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rachelkeh"},"content":"        if (commandWord.equals(\"bye\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rachelkeh"},"content":"            return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rachelkeh"},"content":"        } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rachelkeh"},"content":"            return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rachelkeh"},"content":"     * Executes the corresponding command to the input with the correct format by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"rachelkeh"},"content":"     * @param taskList Task list that manages all the tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rachelkeh"},"content":"     * @param parsedFullCommand The parsed command that can be fed into the TaskList functions.","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"rachelkeh"},"content":"    public void execute(TaskList taskList, String[] parsedFullCommand) {","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"rachelkeh"},"content":"        String commandWord \u003d parsedFullCommand[0];","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rachelkeh"},"content":"        switch (commandWord) {","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rachelkeh"},"content":"        case \"list\":","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rachelkeh"},"content":"            if (parsedFullCommand.length \u003d\u003d 1) {","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rachelkeh"},"content":"                taskList.listAllTasks();","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rachelkeh"},"content":"            } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":81,"author":{"gitId":"rachelkeh"},"content":"                ui.showLoadingError();","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rachelkeh"},"content":"            }","lastModifiedDate":"2021-09-09"},{"lineNumber":83,"author":{"gitId":"rachelkeh"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rachelkeh"},"content":"        case \"done\":","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"rachelkeh"},"content":"            if (parsedFullCommand.length \u003d\u003d 2) {","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"rachelkeh"},"content":"                String indexToBeMarkedDone \u003d parsedFullCommand[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"rachelkeh"},"content":"                taskList.markAsDone(indexToBeMarkedDone);","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"rachelkeh"},"content":"            } else {","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"rachelkeh"},"content":"                ui.showLoadingError();","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"rachelkeh"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"rachelkeh"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"rachelkeh"},"content":"        case \"todo\":","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"rachelkeh"},"content":"        case \"deadline\":","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"rachelkeh"},"content":"        case \"event\":","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rachelkeh"},"content":"            taskList.addTask(parsedFullCommand);","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rachelkeh"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rachelkeh"},"content":"        case \"delete\":","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"rachelkeh"},"content":"            if (parsedFullCommand.length \u003d\u003d 2) {","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"rachelkeh"},"content":"                String indexToBeDeleted \u003d parsedFullCommand[1];","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"rachelkeh"},"content":"                taskList.deleteTask(indexToBeDeleted);","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rachelkeh"},"content":"            } else {","lastModifiedDate":"2021-09-09"},{"lineNumber":102,"author":{"gitId":"rachelkeh"},"content":"                ui.showLoadingError();","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"rachelkeh"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"rachelkeh"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"rachelkeh"},"content":"        case \"find\":","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"rachelkeh"},"content":"            taskList.filterTasksByString(parsedFullCommand[1]);","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"rachelkeh"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"rachelkeh"},"content":"        case \"bye\":","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"rachelkeh"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"rachelkeh"},"content":"        default:","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"rachelkeh"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"rachelkeh"},"content":"            break;","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":114,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":115,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"rachelkeh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"rachelkeh"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"rachelkeh":116,"-":3}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rachelkeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rachelkeh"},"content":" * One of the three types of tasks creatable by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rachelkeh"},"content":" * Has an additional by field that indicates by when the task should be completed.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rachelkeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rachelkeh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rachelkeh"},"content":"    protected String by;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rachelkeh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rachelkeh"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rachelkeh"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rachelkeh"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rachelkeh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rachelkeh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rachelkeh"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"rachelkeh"},"content":"        return by;","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":25,"author":{"gitId":"rachelkeh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"rachelkeh":25}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rachelkeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rachelkeh"},"content":" * One of the three types of tasks creatable by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rachelkeh"},"content":" * Has an additional at field that indicates when the task starts and ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rachelkeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rachelkeh"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rachelkeh"},"content":"    protected String at;","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rachelkeh"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rachelkeh"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rachelkeh"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rachelkeh"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rachelkeh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"rachelkeh"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":20,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":21,"author":{"gitId":"rachelkeh"},"content":"    public String getAt() {","lastModifiedDate":"2021-09-16"},{"lineNumber":22,"author":{"gitId":"rachelkeh"},"content":"        return at;","lastModifiedDate":"2021-09-16"},{"lineNumber":23,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":24,"author":{"gitId":"rachelkeh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"rachelkeh":24}},{"path":"src/main/java/duke/task/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"package duke.task;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rachelkeh"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rachelkeh"},"content":"import java.io.File;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rachelkeh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rachelkeh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rachelkeh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rachelkeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rachelkeh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rachelkeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rachelkeh"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rachelkeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rachelkeh"},"content":"public class Storage {","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rachelkeh"},"content":"    static final String SEPARATOR_FOR_LOAD \u003d \" \\\\| \";","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rachelkeh"},"content":"    static final String SEPARATOR_FOR_SAVE \u003d \" | \";","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rachelkeh"},"content":"    private String filePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rachelkeh"},"content":"    private File f;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rachelkeh"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rachelkeh"},"content":"     * Constructor for a new storage object that stores the data of the file with the specified file path.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rachelkeh"},"content":"     * @param filePath The path of the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rachelkeh"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rachelkeh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rachelkeh"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rachelkeh"},"content":"        f \u003d new File(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rachelkeh"},"content":"     * Loads the content of the storage file into an ArrayList of strings to","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rachelkeh"},"content":"     * feed into the creation of a new task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rachelkeh"},"content":"     * @return ArrayList of strings of the content in the storage file in the correct format.","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rachelkeh"},"content":"     * @throws IOException If there is an error in the reading in of the file.","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rachelkeh"},"content":"    public ArrayList\u003cString\u003e load() throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rachelkeh"},"content":"        ArrayList\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rachelkeh"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rachelkeh"},"content":"            Scanner s \u003d new Scanner(f);","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rachelkeh"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rachelkeh"},"content":"                String line \u003d s.nextLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rachelkeh"},"content":"                String[] wordsInOneLine \u003d line.split(SEPARATOR_FOR_LOAD);","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rachelkeh"},"content":"                for (int i \u003d 0; i \u003c wordsInOneLine.length; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rachelkeh"},"content":"                    data.add(wordsInOneLine[i]);","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rachelkeh"},"content":"                }","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rachelkeh"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rachelkeh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rachelkeh"},"content":"            File f \u003d new File(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rachelkeh"},"content":"            f.getParentFile().mkdirs();","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rachelkeh"},"content":"            f.createNewFile();","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rachelkeh"},"content":"        } finally {","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rachelkeh"},"content":"            return data;","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rachelkeh"},"content":"     * Writes the current TaskList running in the application into the file","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rachelkeh"},"content":"     * in the specified file path in a certain format for storage.","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rachelkeh"},"content":"     * @param tasks List of all the tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rachelkeh"},"content":"     * @param numberOfTasks Total number of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rachelkeh"},"content":"     * @throws IOException If there is an error in writing to the file.","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rachelkeh"},"content":"    public void writeToFile(ArrayList\u003cTask\u003e tasks, int numberOfTasks) throws IOException {","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"rachelkeh"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"rachelkeh"},"content":"        for (int i \u003d 0; i \u003c numberOfTasks; i++) {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rachelkeh"},"content":"            if (tasks.get(i) instanceof Todo) {","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"rachelkeh"},"content":"                fw.write(\"T\" + SEPARATOR_FOR_SAVE + tasks.get(i).getisDone()","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"rachelkeh"},"content":"                        + SEPARATOR_FOR_SAVE + tasks.get(i).getDescription());","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"rachelkeh"},"content":"            } else if (tasks.get(i) instanceof Deadline) {","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rachelkeh"},"content":"                fw.write(\"D\" + SEPARATOR_FOR_SAVE + tasks.get(i).getisDone() +","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rachelkeh"},"content":"                        SEPARATOR_FOR_SAVE + tasks.get(i).getDescription()","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rachelkeh"},"content":"                        + SEPARATOR_FOR_SAVE + ((Deadline) tasks.get(i)).getBy());","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rachelkeh"},"content":"            } else { //the final Task type can only be an event","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rachelkeh"},"content":"                fw.write(\"E\" + SEPARATOR_FOR_SAVE + tasks.get(i).getisDone() +","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rachelkeh"},"content":"                        SEPARATOR_FOR_SAVE + tasks.get(i).getDescription()","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rachelkeh"},"content":"                        + SEPARATOR_FOR_SAVE + ((Event) tasks.get(i)).getAt());","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"rachelkeh"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rachelkeh"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"rachelkeh"},"content":"        fw.close();","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"rachelkeh"},"content":"     * Saves the data of the current TaskList running in the application into the file","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"rachelkeh"},"content":"     * in the specified file path.","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"rachelkeh"},"content":"     * @param tasks List of all the tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"rachelkeh"},"content":"     * @param numberOfTasks Total number of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rachelkeh"},"content":"    public void save(ArrayList\u003cTask\u003e tasks, int numberOfTasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rachelkeh"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"rachelkeh"},"content":"            writeToFile(tasks, numberOfTasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"rachelkeh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"rachelkeh"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rachelkeh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"rachelkeh"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"rachelkeh"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rachelkeh":106}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rachelkeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rachelkeh"},"content":" * Superclass of the three types of tasks creatable by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rachelkeh"},"content":" * Contains functions common to Todo, Deadline and Event.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rachelkeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rachelkeh"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"rachelkeh"},"content":"    private String description;","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rachelkeh"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rachelkeh"},"content":"     * Creates a task.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rachelkeh"},"content":"     * @param description The Description of the task specified by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rachelkeh"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":19,"author":{"gitId":"rachelkeh"},"content":"        isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"rachelkeh"},"content":"        setDescription(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":21,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rachelkeh"},"content":"     * Returns a status icon string depending on whether the task is done or not.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rachelkeh"},"content":"     * @return The status icon corresponding to whether the task is done or not.","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rachelkeh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"rachelkeh"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":32,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rachelkeh"},"content":"     * Overrides the initial method in the Object class that prints class name @ hash code","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rachelkeh"},"content":"     * to print another string when system print is called.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rachelkeh"},"content":"     * @return The default string when system print is called.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rachelkeh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":39,"author":{"gitId":"rachelkeh"},"content":"        return getStatusIcon() + \" \" + getDescription();","lastModifiedDate":"2021-09-02"},{"lineNumber":40,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":41,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":42,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rachelkeh"},"content":"     * Sets the private member description of the task","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rachelkeh"},"content":"     * @param description Description field of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rachelkeh"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"rachelkeh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-02"},{"lineNumber":49,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rachelkeh"},"content":"     * Gets the private member isDone of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rachelkeh"},"content":"     * @return The value of the private member isDone.","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rachelkeh"},"content":"    public boolean getisDone() {","lastModifiedDate":"2021-09-09"},{"lineNumber":57,"author":{"gitId":"rachelkeh"},"content":"        return isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":58,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":60,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rachelkeh"},"content":"     * Sets the private member isDone of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rachelkeh"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"rachelkeh"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":66,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":67,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rachelkeh"},"content":"     * Gets the private member description of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rachelkeh"},"content":"     * @return Description field of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"rachelkeh"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-02"},{"lineNumber":72,"author":{"gitId":"rachelkeh"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":73,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":74,"author":{"gitId":"rachelkeh"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"rachelkeh":74}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"package duke.task;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"rachelkeh"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rachelkeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rachelkeh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"rachelkeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"rachelkeh"},"content":" * A tasklist for all the tasks in the application.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"rachelkeh"},"content":" * Manages all the tasks in the application through its various functions.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"rachelkeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"rachelkeh"},"content":"public class TaskList {","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"rachelkeh"},"content":"    static final int INDEX_OF_COMMAND_WORD \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"rachelkeh"},"content":"    static final int INDEX_OF_DESCRIPTION \u003d 1;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"rachelkeh"},"content":"    static final int INDEX_OF_TIME \u003d 2;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"rachelkeh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"rachelkeh"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"rachelkeh"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"rachelkeh"},"content":"    private int numberOfTasks;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"rachelkeh"},"content":"     * Constructor to make a new TaskList from the data in the file","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"rachelkeh"},"content":"     * in the specified filepath.","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"rachelkeh"},"content":"     * @param data The data from the file in the specified filepath.","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"rachelkeh"},"content":"     * @param storage To initialise the same storage of the application in the class.","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"rachelkeh"},"content":"    public TaskList(ArrayList\u003cString\u003e data, Storage storage) {","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"rachelkeh"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"rachelkeh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"rachelkeh"},"content":"        numberOfTasks \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"rachelkeh"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"rachelkeh"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"rachelkeh"},"content":"        while (i \u003c data.size()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"rachelkeh"},"content":"            numberOfTasks++;","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"rachelkeh"},"content":"            switch (data.get(i)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"rachelkeh"},"content":"            case \"T\":","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"rachelkeh"},"content":"                tasks.add(new Todo(data.get(i + 2)));","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"rachelkeh"},"content":"                if (data.get(i + 1).equals(\"true\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"rachelkeh"},"content":"                    tasks.get(numberOfTasks - 1).setDone(); //else leave isDone as false","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"rachelkeh"},"content":"                }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"rachelkeh"},"content":"                i +\u003d 3;","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"rachelkeh"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"rachelkeh"},"content":"            case \"D\":","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"rachelkeh"},"content":"                tasks.add(new Deadline(data.get(i + 2), data.get(i + 3)));","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"rachelkeh"},"content":"                if (data.get(i + 1).equals(\"true\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"rachelkeh"},"content":"                    tasks.get(numberOfTasks - 1).setDone(); //else leave isDone as false","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"rachelkeh"},"content":"                }","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"rachelkeh"},"content":"                i +\u003d 4;","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"rachelkeh"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"rachelkeh"},"content":"            case \"E\":","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"rachelkeh"},"content":"                tasks.add(new Event(data.get(i + 2), data.get(i + 3)));","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"rachelkeh"},"content":"                if (data.get(i + 1).equals(\"true\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"rachelkeh"},"content":"                    tasks.get(numberOfTasks - 1).setDone(); //else leave isDone as false","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"rachelkeh"},"content":"                }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"rachelkeh"},"content":"                i +\u003d 4;","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"rachelkeh"},"content":"                break;","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"rachelkeh"},"content":"            //no default case here because the file follows a certain structure which will","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"rachelkeh"},"content":"            //go into all the 3 cases above","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"rachelkeh"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"rachelkeh"},"content":"     * Adds a new task into the tasklist and prints it out.","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"rachelkeh"},"content":"     * Saves the edited tasklist into the file in the specified filepath.","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"rachelkeh"},"content":"     * @param parsedFullCommand String array containing the parsed command in the correct format","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"rachelkeh"},"content":"     *                          after going through the Parser.","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"rachelkeh"},"content":"    public void addTask(String[] parsedFullCommand) {","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"rachelkeh"},"content":"        if (parsedFullCommand[INDEX_OF_COMMAND_WORD].equals(\"todo\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"rachelkeh"},"content":"            tasks.add(new Todo(parsedFullCommand[1]));","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"rachelkeh"},"content":"        } else if (parsedFullCommand[INDEX_OF_COMMAND_WORD].equals(\"deadline\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"rachelkeh"},"content":"            tasks.add(new Deadline(parsedFullCommand[INDEX_OF_DESCRIPTION],","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"rachelkeh"},"content":"                    parsedFullCommand[INDEX_OF_TIME]));","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"rachelkeh"},"content":"        } else if (parsedFullCommand[INDEX_OF_COMMAND_WORD].equalsIgnoreCase(\"event\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"rachelkeh"},"content":"            tasks.add(new Event(parsedFullCommand[INDEX_OF_DESCRIPTION],","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"rachelkeh"},"content":"                    parsedFullCommand[INDEX_OF_TIME]));","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"rachelkeh"},"content":"        numberOfTasks++;","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"rachelkeh"},"content":"        ui.printAddedTasked(tasks, numberOfTasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"rachelkeh"},"content":"        storage.save(tasks, numberOfTasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"rachelkeh"},"content":"     * Intermediate function to call the listAllTasks function in the Ui class.","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"rachelkeh"},"content":"    public void listAllTasks() {","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"rachelkeh"},"content":"        ui.listAllTasks(tasks, numberOfTasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"rachelkeh"},"content":"     * Marks the task at the index specified by the user as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"rachelkeh"},"content":"     * Saves the edited tasklist into the file in the specified filepath.","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"rachelkeh"},"content":"     * @param index Index of the task specified by the user to be marked as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"rachelkeh"},"content":"    public void markAsDone(String index) {","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"rachelkeh"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"rachelkeh"},"content":"            int indexInteger \u003d Integer.parseInt(index);","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"rachelkeh"},"content":"            tasks.get(indexInteger - 1).setDone();","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"rachelkeh"},"content":"            ui.printMarkAsDone(tasks, indexInteger);","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"rachelkeh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"rachelkeh"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"rachelkeh"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"rachelkeh"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"rachelkeh"},"content":"        storage.save(tasks, numberOfTasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"rachelkeh"},"content":"     * Deletes the task at the index specified by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"rachelkeh"},"content":"     * Saves the edited tasklist into the file in the specified filepath.","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"rachelkeh"},"content":"     * @param index Index of the task specified by the user to be deleted.","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"rachelkeh"},"content":"    public void deleteTask(String index) {","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"rachelkeh"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"rachelkeh"},"content":"            int indexInteger \u003d Integer.parseInt(index);","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"rachelkeh"},"content":"            String description \u003d tasks.get(indexInteger - 1).toString();","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"rachelkeh"},"content":"            tasks.remove(indexInteger - 1);","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"rachelkeh"},"content":"            numberOfTasks--;","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"rachelkeh"},"content":"            ui.showDeletedTask(description, numberOfTasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"rachelkeh"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"rachelkeh"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"rachelkeh"},"content":"        } catch (NullPointerException | IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"rachelkeh"},"content":"            ui.showLoadingError(e);","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"rachelkeh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"rachelkeh"},"content":"        storage.save(tasks, numberOfTasks);","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"rachelkeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"rachelkeh"},"content":"     * Filters out the tasks with the keyword in their description","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"rachelkeh"},"content":"     * specified by the user and lists them out.","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"rachelkeh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"rachelkeh"},"content":"     * @param filterWord The keyword specified by the user to filter","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"rachelkeh"},"content":"     *                   the description of the tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"rachelkeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"rachelkeh"},"content":"    public void filterTasksByString(String filterWord) {","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"rachelkeh"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"rachelkeh"},"content":"                .filter((t) -\u003e t.getDescription().toLowerCase().contains(filterWord.toLowerCase()))","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"rachelkeh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"rachelkeh"},"content":"        ui.listMatchingTasks(filteredList);","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"rachelkeh"},"content":"    public void filterTasksByString(String filterWord) {","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"rachelkeh"},"content":"        ArrayList\u003cTask\u003e filteredList \u003d (ArrayList\u003cTask\u003e) tasks.stream()","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"rachelkeh"},"content":"                .filter((t) -\u003e t.getDescription().toLowerCase().contains(filterWord.toLowerCase()))","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"rachelkeh"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"rachelkeh"},"content":"        ui.listMatchingTasks(filteredList);","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"rachelkeh"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"rachelkeh":155}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"rachelkeh"},"content":"package duke.task;","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"rachelkeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"rachelkeh"},"content":" * One of the three types of tasks creatable by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"rachelkeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"rachelkeh"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-02"},{"lineNumber":8,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":9,"author":{"gitId":"rachelkeh"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-02"},{"lineNumber":10,"author":{"gitId":"rachelkeh"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":11,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":12,"author":{"gitId":"rachelkeh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":13,"author":{"gitId":"rachelkeh"},"content":"    @Override","lastModifiedDate":"2021-09-02"},{"lineNumber":14,"author":{"gitId":"rachelkeh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"rachelkeh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"rachelkeh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":17,"author":{"gitId":"rachelkeh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"rachelkeh":17}}]
