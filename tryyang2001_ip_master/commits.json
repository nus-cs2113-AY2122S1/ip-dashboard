{"authorDailyContributionsMap":{"tryyang2001":[{"date":"2021-08-25","commitResults":[{"hash":"1a5d9435117ce60fd8586d71e1fef457e610d0a6","messageTitle":"Level 0 - Greet: - print some messages for displaying","messageBody":"","tags":["Level-0"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":0}}},{"hash":"2348813fc3db7adf3e37897fdce946455ab30266","messageTitle":"Level 1 - Greet, Echo, Exit - draw the logo of the bot and print the greeting messages - implement the echo function","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":9}}}]},{"date":"2021-08-26","commitResults":[{"hash":"a61cd25519fc780b58aec3af4c3e16f1f6f7d78c","messageTitle":"Level 2 - Add, List - remove the code for echo function - implement the \u0027add\u0027 and \u0027list\u0027 functions - create printList method to print the list with frames whenever required - additionally implement the printPersonality method to print some nice pictures and introduction of the bot - add documentation for each method used - create an additional class ProfilePicture to store all the pictures strings used as constant string","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":229,"deletions":11}}},{"hash":"243ff7ed45b15986412104ff75810c53857a7425","messageTitle":"Level 3 - Mark as done - create a class called Task to store the tasks and the progression status (done/undone) - implement the code to mark the task as done","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":33}}},{"hash":"309239ec4c02289b9925b09fbec75af99bd7b54b","messageTitle":"Level 3 - Mark as done - modify the output format of the pictures shown in the printPersonality method - change the variable name \u0027cmd\u0027 to \u0027command\u0027 - add if statement to check if the user does not provide task number when marking tasks as done - change some documentation descriptions and comments","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":20}}}]},{"date":"2021-08-27","commitResults":[{"hash":"c7d1419c36da69f5359afcb3d8ae0f492e8437ed","messageTitle":"A - Coding Standard - edit the format of the codes to follow the java coding standard - add the missing tag for A-CodingStandard","messageBody":"","tags":["A-CodingStandard"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":6}}}]},{"date":"2021-08-29","commitResults":[{"hash":"f8b92e7dcfa37cb90a892afb0e790533ce08da51","messageTitle":"Code Refactoring - extract methods to increase the readability of the code - introduce constants to increase the code readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":86}}},{"hash":"6bd482af64396776f4f8cdd326cbff50a7eca101","messageTitle":"Code refactoring 2.0: - further extract the readCommand() method to improve the readability in the main method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":5}}}]},{"date":"2021-09-02","commitResults":[{"hash":"c1caaf23cecfb47a459967579508d52f586294fc","messageTitle":"Level 4 - ToDo, Event, Deadline - add new classes ToDo, Event and Deadline - implement the inheritance and polymorphism in java - further refactor the code, extract methods such as isCorrectToDo(), isCorrectDeadline(), and isCorrectEvent() - improve readability and adding appropriate documentation and comments","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":523,"deletions":243}}},{"hash":"68b5346d8e6d0f0285b927908fab6fff2f236ee4","messageTitle":"Automated Test UI Testing - conduct the test by putting the expected output in the EXPECTED.TXT and inputs into the input.txt","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0},"java":{"insertions":9,"deletions":5}}},{"hash":"fdb6b285738b6ad824808b86cf58aad4f9d5f889","messageTitle":"Code refactoring: - add appropriate comments and edit some documentations to improve readability of the code","messageBody":"","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":62,"deletions":63}}}]},{"date":"2021-09-03","commitResults":[{"hash":"7c6314624c45dee61eec4dcb04e6f99644d5c354","messageTitle":"UI testing - update the expected output in EXPECTED.txt","messageBody":"","fileTypesAndContributionMap":{"sh":{"insertions":5,"deletions":5}}}]},{"date":"2021-09-08","commitResults":[{"hash":"d9434c78d9f2ec4dd4843001d05141e9277031bd","messageTitle":"Code Refactoring: - rename the class ProfilePicture as Design - move some methods from Duke to Design - extract method drawUpperFrame and drawLowerFrame and printTasks to improve code readability in the method printToDoList - create exception class DukeException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":201,"deletions":146}}},{"hash":"7b97149ff661d834feae0bad54dc999a270b3bcc","messageTitle":"Create the method printHelpMenu() in Design class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":258,"deletions":233}}}]},{"date":"2021-09-09","commitResults":[{"hash":"e7c264281ebaf4d22d019a57ea0d124412bc4269","messageTitle":"Re-design printHelpMenu() method Do code refactoring to improve the readability of the code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":20}}},{"hash":"c6e073c12d03b5dad22c9e484eac1cce6dbb4dee","messageTitle":"Try create package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"c74bb55a85a5769a82285120af24ce9932a5b4db","messageTitle":"move all classes to the package name \"duke\"","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":0}}},{"hash":"b617642521f123d43e73958735bb3c1e1bf69fdc","messageTitle":"Create more packages including command, task, design, and exception Move some design to the design package Change the class name Design to Default (so that it only prints default design) Move all the boolean method for checking valid command to command package Move all the classes for superclass tasks and its subclasses to package task","messageBody":"","tags":["A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":209,"deletions":196}}},{"hash":"d77a1ed767a90e886a1bb5ec6db6e46bee8ed5db","messageTitle":"Java Coding Standard: - format all the line using CTRL + ALT + L - move constants to the top and method","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":113}}},{"hash":"b280ebd96afcdc46bd33e8ff73f1561339fa0d08","messageTitle":"Commit for branch-A-Packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"0e83517d7188e4910e9cd9a3d577944be00f21a6","messageTitle":"Add comment for constant in Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2021-09-12","commitResults":[{"hash":"7da108c5303612a238cc26a16cce656081d1fa95","messageTitle":"Create isCommandHelp() method in Command class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":1}}},{"hash":"747d3a2f478d63678b326d21b3af6d5be8a9455a","messageTitle":"Change the Task array to array list Implement the delete function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":38}}}]},{"date":"2021-09-14","commitResults":[{"hash":"a9f4e7bd228d8a754a8d149ab375207a85823245","messageTitle":"Level 6: Implement the delete command - allow user to delete multiple tasks in one command, or delete a single task, or delete all tasks","messageBody":"","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":119,"deletions":27}}},{"hash":"d2247c5574db2ff4e28d15d41b97645b13c74b08","messageTitle":"Revert \"Create isCommandHelp() method in Command class\"","messageBody":"This reverts commit 7da108c5303612a238cc26a16cce656081d1fa95.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":11}}},{"hash":"f4439d78f4282cf66af9260b9d1984d1c7c9a355","messageTitle":"Code out the save function but haven\u0027t tested","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":39}}}]},{"date":"2021-09-15","commitResults":[{"hash":"20f34e6cf2f416109d78d869f5631dbc5e6bc588","messageTitle":"Level-7 Save Implementation implement the save functionality","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":10,"deletions":0},"java":{"insertions":106,"deletions":56}}},{"hash":"00ba4953ad05692e4d4fc8cfec5c25bd2002971e","messageTitle":"create handleStorageError to handle the error when the data from storage is invalid Code refactoring: 1. add documentations for all methods created (mostly in Storage) 2. add appropriate comments 3. make sure that all codes\u0027 indentation is correct","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0},"java":{"insertions":492,"deletions":365}}},{"hash":"d5839aa47f7e265efbd91762b687923b9cd7ec9f","messageTitle":"change version description and add descriptions to help menu change the expected.txt and input.txt for ui test ensure code indentation","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":3},"java":{"insertions":12,"deletions":7}}},{"hash":"5dbdb689afd4d1de3d1d496002473a0ad1d5bc26","messageTitle":"Create JAR file move the storage file shimaStorage.txt to the current working directory of the user","messageBody":"","tags":["Level-7","A-Jar"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":2},"java":{"insertions":2,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"tryyang2001":{"java":1173,"md":0,"fxml":0,"sh":5,"bat":0,"gradle":0,"txt":17}},"authorContributionVariance":{"tryyang2001":14068.49},"authorDisplayNameMap":{"tryyang2001":"CS2113T-F14-2 TAN ..YANG"}}
