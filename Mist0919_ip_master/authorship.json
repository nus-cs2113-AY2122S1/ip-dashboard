[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"### 1. Add tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":" Add three types of tasks to the list (todo, deadline,event)","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"### 2. List tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":" Display all the tasks in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"### 3. Delete task","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":" Delete a task from the list with a given index","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"### 4. Mark task as done","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":" Mark a task as done with a given index","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"### 5. Find task","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":" Find a task in the list with a given key word","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"### 6. clear all the tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":" Clear all the tasks in the list","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"### 1. `todo` - add a simple task to the list","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"Format: `todo DESCRIPTION`","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"`todo do the online quiz`","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"Got it. I have added the task to your list.","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"[T][ ] do the online quiz","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"You have added the task to the list successfully.","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"### 2. `deadline` - add a deadline to the list","lastModifiedDate":"2021-10-01"},{"lineNumber":46,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"Format: `deadline DESCRIPTION /by TIME`","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"Mist0919"},"content":"Example of usage:","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"Mist0919"},"content":"`deadline submit individual project /by 1 Oct 23:59`","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"Mist0919"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"Mist0919"},"content":"Got it. I have added the task to your list.","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"Mist0919"},"content":"[D][ ] submit individual project (by: 1 Oct 23:59)","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"Mist0919"},"content":"You have added the deadline to the list successfully.","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"Mist0919"},"content":"### 3. `event` - add a event to the list","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"Mist0919"},"content":"Format: `event DESCRIPTION /at TIME`","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"Mist0919"},"content":"Example of usage:","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"Mist0919"},"content":"`event online programming workshop /at Tuesday`","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"Mist0919"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":71,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"Mist0919"},"content":"Got it. I have added the task to your list.","lastModifiedDate":"2021-10-01"},{"lineNumber":74,"author":{"gitId":"Mist0919"},"content":"[E][ ] online programming workshop (by: Tuesday)","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"Mist0919"},"content":"You have added the event to the list successfully.","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"Mist0919"},"content":"### 4. `list` - list all the tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"Mist0919"},"content":"Format: `list`","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"Mist0919"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"Mist0919"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"Mist0919"},"content":"1. [T][ ] read books","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"Mist0919"},"content":"2. [E][X] online meeting (at: 30 Sept 22:00)","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"Mist0919"},"content":"### 5. `done` - mark a task as done","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"Mist0919"},"content":"Format: `done TARGET_INDEX`","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"Mist0919"},"content":"Example of usage:","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"Mist0919"},"content":"`done 1`","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"Mist0919"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"Mist0919"},"content":"Nice, I have marked this task as done:","lastModifiedDate":"2021-10-01"},{"lineNumber":103,"author":{"gitId":"Mist0919"},"content":"[T][X] read books","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"Mist0919"},"content":"The first task in the list has been marked as done","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"Mist0919"},"content":"### 6. `delete` - delete a task from the list","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"Mist0919"},"content":"Format: `delete TARGET_INDEX`","lastModifiedDate":"2021-10-01"},{"lineNumber":110,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"Mist0919"},"content":"Example of usage:","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"Mist0919"},"content":"`delete 2`","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":117,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":118,"author":{"gitId":"Mist0919"},"content":"Got it. I have deleted the tasks in your list!","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"Mist0919"},"content":"[E][X] online meeting (at: 30 Sept 22:00)","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":121,"author":{"gitId":"Mist0919"},"content":"The second task in the list has been deleted","lastModifiedDate":"2021-10-01"},{"lineNumber":122,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"Mist0919"},"content":"### 7. `clear` - clear all the tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":124,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"Mist0919"},"content":"Format: `clear`","lastModifiedDate":"2021-10-01"},{"lineNumber":126,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"Mist0919"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":128,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":129,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"Mist0919"},"content":"The tasks in your list have been cleared.","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"Mist0919"},"content":"The list is empty now","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":134,"author":{"gitId":"Mist0919"},"content":"### 8. `find` - find a task containing the given key word(s)","lastModifiedDate":"2021-10-01"},{"lineNumber":135,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":136,"author":{"gitId":"Mist0919"},"content":"Format: `find TARGET`","lastModifiedDate":"2021-10-01"},{"lineNumber":137,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":138,"author":{"gitId":"Mist0919"},"content":"Example of usage:","lastModifiedDate":"2021-10-01"},{"lineNumber":139,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":140,"author":{"gitId":"Mist0919"},"content":"`find read`","lastModifiedDate":"2021-10-01"},{"lineNumber":141,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":142,"author":{"gitId":"Mist0919"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":144,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":145,"author":{"gitId":"Mist0919"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-10-01"},{"lineNumber":146,"author":{"gitId":"Mist0919"},"content":"[T][ ] read books","lastModifiedDate":"2021-10-01"},{"lineNumber":147,"author":{"gitId":"Mist0919"},"content":"[D][X] read lab manual (by: today 22:00)","lastModifiedDate":"2021-10-01"},{"lineNumber":148,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":149,"author":{"gitId":"Mist0919"},"content":"All the tasks containing the key word have been displayed","lastModifiedDate":"2021-10-01"},{"lineNumber":150,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":151,"author":{"gitId":"Mist0919"},"content":"### 9. `help` - show help information","lastModifiedDate":"2021-10-01"},{"lineNumber":152,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":153,"author":{"gitId":"Mist0919"},"content":"Format: `help`","lastModifiedDate":"2021-10-01"},{"lineNumber":154,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":155,"author":{"gitId":"Mist0919"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":156,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":157,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":158,"author":{"gitId":"Mist0919"},"content":"Here are the usage of all commands:","lastModifiedDate":"2021-10-01"},{"lineNumber":159,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"Mist0919"},"content":"deadline: add a deadline task to the current list.","lastModifiedDate":"2021-10-01"},{"lineNumber":161,"author":{"gitId":"Mist0919"},"content":" Parameters: DESCRIPTION, BY_TIME","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"Mist0919"},"content":" Example: deadline take the quiz /by Tuesday","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":164,"author":{"gitId":"Mist0919"},"content":"...(omitted)","lastModifiedDate":"2021-10-01"},{"lineNumber":165,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"Mist0919"},"content":"list: display all tasks in the current list.","lastModifiedDate":"2021-10-01"},{"lineNumber":167,"author":{"gitId":"Mist0919"},"content":" Example: list","lastModifiedDate":"2021-10-01"},{"lineNumber":168,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":169,"author":{"gitId":"Mist0919"},"content":"The usages of all commands have been displayed","lastModifiedDate":"2021-10-01"},{"lineNumber":170,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":171,"author":{"gitId":"Mist0919"},"content":"### 10. `bye` - exit the program","lastModifiedDate":"2021-10-01"},{"lineNumber":172,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":173,"author":{"gitId":"Mist0919"},"content":"Format: `bye`","lastModifiedDate":"2021-10-01"},{"lineNumber":174,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":175,"author":{"gitId":"Mist0919"},"content":"Expected outcome:","lastModifiedDate":"2021-10-01"},{"lineNumber":176,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":177,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":178,"author":{"gitId":"Mist0919"},"content":"Bye. Hope to see you soon~","lastModifiedDate":"2021-10-01"},{"lineNumber":179,"author":{"gitId":"Mist0919"},"content":"```","lastModifiedDate":"2021-10-01"},{"lineNumber":180,"author":{"gitId":"Mist0919"},"content":"The program have been terminated, and the changes in each step have been saved, so you can","lastModifiedDate":"2021-10-01"},{"lineNumber":181,"author":{"gitId":"Mist0919"},"content":"load the task list record when you start the program next time : )","lastModifiedDate":"2021-10-01"},{"lineNumber":182,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"Mist0919":159,"-":23}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"    public String by;","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"        super(description);","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    public String toString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.by","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"                + \")\";","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Mist0919":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Parser.Parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Command.*;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-09"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"     * Run the program.","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"    public void run() {","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"            try {","lastModifiedDate":"2021-09-16"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"            } finally {","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"        new Duke(\".\\\\tasks.txt\").run();","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"Mist0919":46,"-":3}},{"path":"src/main/java/Duke/Command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    private final String description;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    private final String by;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"            + \": add a deadline task to the current list.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"            + \" Parameters: DESCRIPTION, BY_TIME\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD + \" take the quiz /by Tuesday\";","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"    public AddDeadlineCommand(String description, String by) {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"     * Execute the add deadline command by adding a new deadline task to TaskList","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"        ui.printAddTaskMessage(new Deadline(this.description, this.by));","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"        tasks.addDeadline(this.description, this.by);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"        ui.printNumOfTasks(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Mist0919":37}},{"path":"src/main/java/Duke/Command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    private final String description;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    private final String at;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"            + \": add an event task to the current list.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"            + \" Parameters: DESCRIPTION, AT_TIME\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD + \"attend CS2113 lecture /at Dec 4\";","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     * Execute the add event command by adding a new event task to TaskList","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"    public AddEventCommand(String description, String at) {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"        ui.printAddTaskMessage(new Event(this.description, this.at));","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"        tasks.addEvent(this.description, this.at);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"        ui.printNumOfTasks(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Mist0919":37}},{"path":"src/main/java/Duke/Command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    private final String description;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"            + \": add a todo task to the current list.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"            + \" Parameters: DESCRIPTION\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD + \" complete the assessment\";","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"     * Execute the add todo command by adding a new todo task to TaskList","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"        ui.printAddTaskMessage(new Todo(this.description));","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"        tasks.addTodo(this.description);","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"        ui.printNumOfTasks(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Mist0919":35}},{"path":"src/main/java/Duke/Command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"            + \": clear all tasks in the current list.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"     * Execute the clear command by clearing the tasks in TaskList","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"        ui.printClearMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"        tasks.clearTasks();","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Mist0919":26}},{"path":"src/main/java/Duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"        return false;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Mist0919":14}},{"path":"src/main/java/Duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"            + \": Delete the task identified by the index number used in the current list.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"            + \" Parameters: INDEX\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"    private final int index;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"     * Execute the delete command by deleting a task from TaskList","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"        ui.printDeleteMessage(tasks.deleteTask(this.index));","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"        ui.printNumOfTasks(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Mist0919":35}},{"path":"src/main/java/Duke/Command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    private final int index;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"            + \": mark a task in the list as done.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"            + \" Parameters: INDEX\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"     * Execute the done command by setting a task as done and showing it","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"        ui.printDoneMessage(tasks.setDone(this.index));","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"        storage.save(tasks.getTasks());","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Mist0919":32}},{"path":"src/main/java/Duke/Command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"            + \": exit the programme.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"     * Execute the exit command by showing the closing messagee","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"        ui.showByeMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"     * Set the flag isExit to true to terminate the program","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"     * @return boolean Flag IsExit set to be true","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"        return true;","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Mist0919":34}},{"path":"src/main/java/Duke/Command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"            + \": find a task in the list by key word.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"            + \" Parameters: DESCRIPTION\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD + \" read\";","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"    private final String target;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     * Executes the find command by looking for and showing tasks in TaskList that contain the key word","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"    public FindCommand(String target) {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"        this.target \u003d target;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"        if (tasks.find(this.target).size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"            ui.printNoMatchingTaskMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"            ui.printFindMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"            for (Task task : tasks.find(this.target)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"                System.out.println(task.toString());","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Mist0919":40}},{"path":"src/main/java/Duke/Command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"            + \": show help message for the programme.\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"     * Execute the help command by showing the usage of all the commands","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"        ui.showHelpMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Mist0919":24}},{"path":"src/main/java/Duke/Command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"    public InvalidCommand() {","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"     * Execute the invalid command by showing invalid command message","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"        ui.printInvalidCommandMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Mist0919":23}},{"path":"src/main/java/Duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Command;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static final String COMMAND_DESCRIPTION \u003d COMMAND_WORD","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"            + \": display all tasks in the current list.\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"            + \" Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"     * Execute the list command by showing the TaskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"     * @param tasks TaskList the command to be executed on.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"     * @param ui Ui used for execution","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     * @param storage Storage which the command may make change on.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"        if (!tasks.isEmpty()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"            ui.printListMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"            tasks.printTasks();","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"            ui.printListEmptyMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Mist0919":29}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Parser.Parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Command.*;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"public class Duke {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    private TaskList tasks;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"            ui.showLoadingError();","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"    public void run() {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"            } finally {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"        new Duke(\".\\\\tasks.txt\").run();","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Mist0919":47}},{"path":"src/main/java/Duke/DukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.DukeException;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    private final String message;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"        super(message);","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"        this.message \u003d message;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    public String getMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"        return this.message;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Mist0919":14}},{"path":"src/main/java/Duke/DukeException/IndexMissingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"public class IndexMissingException extends Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    public static final String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"    public static final String message \u003d line","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"            + \"Please tell me the index for the operation.:-(\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"            + line;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public final void printMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"        System.out.println(this.message);","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Mist0919":12}},{"path":"src/main/java/Duke/DukeException/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    public static final String line \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"    public static final String message \u003d line","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"            + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"            + \"Please give me a valid command.\\n\" + line;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public final void printMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"        System.out.println(this.message);","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Mist0919":12}},{"path":"src/main/java/Duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Command.*;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"public class Parser {","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"    public static final int TODO_POS \u003d 5;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"    public static final int BY_POS \u003d 4;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    public static final int DEADLINE_POS \u003d 9;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    public static final int AT_POS \u003d 4;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    public static final int EVENT_POS \u003d 6;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public static final int FIND_POS \u003d 5;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    public Parser() {","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     * Parses the input and get the command with required variables","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"     * @param input Input string from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"     * @return Command Command class parsed from the input","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"    public static Command parse(String inputString) throws DukeException {","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"        String input \u003d inputString.trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"        String findCommand \u003d input.split(\" \")[0];","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"        if (input.trim().equals(\"bye\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"        } else if (input.trim().equals(\"list\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"        } else if (input.trim().equals(\"clear\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"        } else if (input.trim().equals(\"help\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"            return new HelpCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"        } else if (findCommand.equals(\"done\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"            return prepareDone(input);","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"        } else if (findCommand.equals(\"delete\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"            return prepareDelete(input);","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"        } else if (findCommand.equals(\"find\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"            return prepareFind(input);","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"        } else if (findCommand.equals(\"todo\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"            return prepareTodo(input);","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"        } else if (findCommand.equals(\"deadline\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"            return prepareDeadline(input);","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"        } else if (findCommand.equals(\"event\")) {","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"            return prepareEvent(input);","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"            return new InvalidCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Mist0919"},"content":"     * Prepares the done command by extracting the index","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"Mist0919"},"content":"     * @param input Input string from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"Mist0919"},"content":"     * @return DoneCommand DoneCommand got from the input","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"Mist0919"},"content":"     * @throws DukeException if the input is in an incorrect format","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"Mist0919"},"content":"    public static DoneCommand prepareDone(String input) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"        int index;","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"Mist0919"},"content":"            index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"Mist0919"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give a numerical index for \u0027done\u0027 command :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give an index for \u0027done\u0027 command :-(\");","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"Mist0919"},"content":"        return new DoneCommand(index);","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"Mist0919"},"content":"     * Prepares the delete command by extracting the index","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"Mist0919"},"content":"     * @param input Input string from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"Mist0919"},"content":"     * @return DeleteCommand DeleteCommand got from the input","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"Mist0919"},"content":"    public static DeleteCommand prepareDelete(String input) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"Mist0919"},"content":"        int index;","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"Mist0919"},"content":"            index \u003d Integer.parseInt(input.split(\" \")[1]) - 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"Mist0919"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give a numerical index for \u0027delete\u0027 command :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give an index for \u0027delete\u0027 command :-(\");","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"Mist0919"},"content":"        return new DeleteCommand(index);","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"Mist0919"},"content":"     * Prepares the find command by extracting the description","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"Mist0919"},"content":"     * @param input Input string from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"Mist0919"},"content":"     * @return FindCommand FindCommand got from the input","lastModifiedDate":"2021-10-01"},{"lineNumber":95,"author":{"gitId":"Mist0919"},"content":"     * @throws DukeException if the input is in an incorrect format","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"Mist0919"},"content":"    public static FindCommand prepareFind(String input) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"Mist0919"},"content":"        String description;","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"Mist0919"},"content":"            description \u003d input.substring(FIND_POS);","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"Mist0919"},"content":"        } catch (NumberFormatException n) {","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give a numerical index for \u0027done\u0027 command :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2021-10-01"},{"lineNumber":104,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give a key word for \u0027find\u0027 command :-(\");","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"Mist0919"},"content":"        return new FindCommand(description);","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"Mist0919"},"content":"     * Prepares the add todo command by extracting the description","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"Mist0919"},"content":"     * @param input Input string from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"Mist0919"},"content":"     * @return AddTodoCommand AddTodoCommand got from the input","lastModifiedDate":"2021-10-01"},{"lineNumber":115,"author":{"gitId":"Mist0919"},"content":"     * @throws DukeException if the input is in an incorrect format","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"Mist0919"},"content":"    public static AddTodoCommand prepareTodo(String input) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"Mist0919"},"content":"        String description;","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"Mist0919"},"content":"            description \u003d input.substring(TODO_POS);","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give me a description for the task :-(\");","lastModifiedDate":"2021-10-01"},{"lineNumber":123,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"Mist0919"},"content":"        return new AddTodoCommand(description);","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"Mist0919"},"content":"     * Prepares the add deadline command by extracting the description and by time","lastModifiedDate":"2021-10-01"},{"lineNumber":130,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"Mist0919"},"content":"     * @param input Input string from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"Mist0919"},"content":"     * @return AddDeadlineCommand AddDeadlineCommand got from the input","lastModifiedDate":"2021-10-01"},{"lineNumber":133,"author":{"gitId":"Mist0919"},"content":"     * @throws DukeException if the input is in an incorrect format","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"Mist0919"},"content":"    public static AddDeadlineCommand prepareDeadline(String input) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"Mist0919"},"content":"        int indexOfBy \u003d input.indexOf(\"/by\");","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"Mist0919"},"content":"        if (indexOfBy \u003d\u003d -1) {","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please tell me when the deadline is by :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"Mist0919"},"content":"        String by;","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"Mist0919"},"content":"            by \u003d input.substring(indexOfBy + BY_POS);","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i){","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give me a time for the deadline :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"Mist0919"},"content":"        String description;","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"Mist0919"},"content":"            description \u003d input.substring(DEADLINE_POS, indexOfBy - 1);","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give me a description for the deadline :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":155,"author":{"gitId":"Mist0919"},"content":"        return new AddDeadlineCommand(description, by);","lastModifiedDate":"2021-09-29"},{"lineNumber":156,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"Mist0919"},"content":"     * Prepares the add event command by extracting the description and by time","lastModifiedDate":"2021-10-01"},{"lineNumber":160,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"Mist0919"},"content":"     * @param input Input string from the user","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"Mist0919"},"content":"     * @return AddEventCommand AddEventCommand got from the input","lastModifiedDate":"2021-10-01"},{"lineNumber":163,"author":{"gitId":"Mist0919"},"content":"     * @throws DukeException if the input is in an incorrect format","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"Mist0919"},"content":"    public static AddEventCommand prepareEvent(String input) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"Mist0919"},"content":"        int indexOfAt \u003d input.indexOf(\"/at\");","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"Mist0919"},"content":"        if (indexOfAt \u003d\u003d -1) {","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please tell me when the event is at :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"Mist0919"},"content":"        String at;","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"Mist0919"},"content":"            at \u003d input.substring(indexOfAt + AT_POS);","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i){","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give me a time for the event :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"Mist0919"},"content":"        String description;","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"Mist0919"},"content":"            description \u003d input.substring(EVENT_POS, indexOfAt - 1);","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"Please give me a description for the event :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"Mist0919"},"content":"        return new AddEventCommand(description, at);","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Mist0919":187}},{"path":"src/main/java/Duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Storage;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Deadline;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Event;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Todo;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"import Duke.Ui.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"import java.io.*;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"public class Storage {","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    private final String path;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    private static final int TYPE_POS \u003d 4;","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"    private static final int TASK_POS \u003d 10;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"    public Storage(String path) {","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"        this.path \u003d path;","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"     * Load the task record and copy it into current TaskList.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"     * @throws DukeException If file does not exist.","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"        if (!file.exists()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"No file can be loaded.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"        BufferedReader reader \u003d null;","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"            FileInputStream fileInputStream \u003d new FileInputStream(path);","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"            InputStreamReader inputStreamReader \u003d new InputStreamReader(fileInputStream, \"UTF-8\");","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"            reader \u003d new BufferedReader(inputStreamReader);","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"            String tempString \u003d \"\";","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"            Task task \u003d new Task(\"null\");","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"            while ((tempString \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"                if (tempString.charAt(TYPE_POS) \u003d\u003d \u0027T\u0027) {","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"                    task \u003d (new Todo(tempString.substring(TASK_POS)));","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"                } else if (tempString.charAt(TYPE_POS) \u003d\u003d \u0027E\u0027) {","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Mist0919"},"content":"                    String event \u003d tempString.substring(TASK_POS,","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"                            tempString.indexOf(\"(\") - 1);","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"Mist0919"},"content":"                    String at \u003d tempString.substring(tempString.indexOf(\":\") + 2,","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"Mist0919"},"content":"                            tempString.indexOf(\")\"));","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"Mist0919"},"content":"                    task \u003d (new Event(event, at));","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Mist0919"},"content":"                } else if (tempString.charAt(TYPE_POS) \u003d\u003d \u0027D\u0027) {","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Mist0919"},"content":"                    String deadline \u003d tempString.substring(TASK_POS,","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"Mist0919"},"content":"                            tempString.indexOf(\"(\") - 1);","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"Mist0919"},"content":"                    String by \u003d tempString.substring(tempString.indexOf(\":\") + 2,","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"Mist0919"},"content":"                            tempString.indexOf(\")\"));","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"Mist0919"},"content":"                    task \u003d (new Deadline(deadline, by));","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"                if (tempString.charAt(7) \u003d\u003d \u0027X\u0027) {","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"Mist0919"},"content":"                    task.markedAsDone();","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"Mist0919"},"content":"                tasks.add(task);","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"Mist0919"},"content":"            reader.close();","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"Mist0919"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"Mist0919"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"Mist0919"},"content":"        } finally {","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"Mist0919"},"content":"            if (reader !\u003d null) {","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"Mist0919"},"content":"                try {","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"Mist0919"},"content":"                    reader.close();","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"Mist0919"},"content":"                } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"Mist0919"},"content":"                    e.printStackTrace();","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"Mist0919"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"Mist0919"},"content":"            ui.printSuccessfulLoading();","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"Mist0919"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"Mist0919"},"content":"            ui.printListEmptyMessage();","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"Mist0919"},"content":"            ui.showLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"Mist0919"},"content":"        return tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"Mist0919"},"content":"     * Save the content of current task list to the txt file.","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"Mist0919"},"content":"     * @param tasks Tasklist to be saved.","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"Mist0919"},"content":"    public final void save(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"Mist0919"},"content":"        BufferedWriter writer \u003d null;","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"Mist0919"},"content":"        File file \u003d new File(this.path);","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"Mist0919"},"content":"        if(!file.exists()) {","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"Mist0919"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"Mist0919"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"Mist0919"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"Mist0919"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"Mist0919"},"content":"            writer \u003d new BufferedWriter(new OutputStreamWriter(new FileOutputStream(file,false), \"UTF-8\"));","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"Mist0919"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"Mist0919"},"content":"                int i \u003d 0;","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"Mist0919"},"content":"                writer.write(i + 1 + \". \" + task.toString());","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"Mist0919"},"content":"                i++;","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"Mist0919"},"content":"                writer.write(\"\\n\");","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"Mist0919"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"Mist0919"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"Mist0919"},"content":"        } finally {","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"Mist0919"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"Mist0919"},"content":"                if(writer !\u003d null){","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"Mist0919"},"content":"                    writer.close();","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"Mist0919"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"Mist0919"},"content":"                e.printStackTrace();","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Mist0919":122}},{"path":"src/main/java/Duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    public String by;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"     * Create a Deadline class with given description and by time.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"     * @param by By time of the deadline task.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"        super(description);","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     * Present deadline in string of prescribed format.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"     * @return String presented deadline description format.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"    public String toString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"                + \")\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Mist0919":27}},{"path":"src/main/java/Duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    public String at;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"     * Create a Event class with given description and by time.","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"     * @param by At time of the event task.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"        super(description);","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     * Present event in string of prescribed format.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"     * @return String presented event description format.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"    public String toString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.at","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"                + \")\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Mist0919":27}},{"path":"src/main/java/Duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"public class Task {","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    protected String description;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"    protected String isDone;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"     * Create a Task class with given description.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"        this.isDone \u003d \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     * Get the description of the task.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"     * @return description Description of the task","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"    public final String getDescription() {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"        return this.description;","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"     * Mark the task as done.","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"    public final void markedAsDone() {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"        this.isDone \u003d \"X\";","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"     * Present event in string of prescribed format.","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"     * @return String presented event description format.","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"    public String toString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"        String status;","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"        return \"[\" + isDone + \"] \" + this.description;","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Mist0919":44}},{"path":"src/main/java/Duke/Tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.*;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.DukeException.DukeException;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"public class TaskList {","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    private static ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"     * Create a TaskList class with the given list of tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"     * @param tasks List of recorded tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"     * Create a TaskList class of an empty list","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"     * Return the tasks in the TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"     * @return tasks Tasks in the TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"    public final ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"        return this.tasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"     * Tell whether the TaskList is empty","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"     * @return isEmpty Status of whether the TaskList is empty","lastModifiedDate":"2021-10-01"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"    public final boolean isEmpty() {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"        return this.tasks.size() \u003d\u003d 0;","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"     * Get the number of tasks in the TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"Mist0919"},"content":"     * @return size Size of the TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Mist0919"},"content":"    public final int getNumOfSize() {","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Mist0919"},"content":"        return this.tasks.size();","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"Mist0919"},"content":"     * Print the tasks in the TaskList","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"    public final void printTasks() {","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"Mist0919"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"Mist0919"},"content":"            System.out.println(\"The current list is empty!\\n\");","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"Mist0919"},"content":"            int index \u003d 1;","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"Mist0919"},"content":"            for (Task task : this.tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"Mist0919"},"content":"                System.out.println(index++ + \". \" + task.toString());","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"Mist0919"},"content":"     * Clears the tasks in the Tasklist","lastModifiedDate":"2021-10-01"},{"lineNumber":72,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"Mist0919"},"content":"    public final void clearTasks() {","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"Mist0919"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e ();","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"Mist0919"},"content":"    public final Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"Mist0919"},"content":"        Task deletedTask;","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"Mist0919"},"content":"            deletedTask \u003d this.tasks.get(index);","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"Mist0919"},"content":"            this.tasks.remove(index);","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"The index is out of range, please enter a valid index :-(\");","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"Mist0919"},"content":"        return deletedTask;","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"Mist0919"},"content":"     * Sets a task in the TaskList of certain index as done","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"Mist0919"},"content":"     * @param index Index of the task to be set as done","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"Mist0919"},"content":"     * @throws DukeException If the index is out of range","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"Mist0919"},"content":"    public final Task setDone(int index) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"Mist0919"},"content":"        try {","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"Mist0919"},"content":"            this.tasks.get(index).markedAsDone();","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"Mist0919"},"content":"            return this.tasks.get(index);","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"Mist0919"},"content":"        } catch (IndexOutOfBoundsException i) {","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"Mist0919"},"content":"            throw new DukeException(\"The index is out of range, please enter a valid index :-(\");","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"Mist0919"},"content":"     * Finds a task in the TaskList with key word","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"Mist0919"},"content":"     * @param target Target key word for the matching task","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"Mist0919"},"content":"    public final ArrayList\u003cTask\u003e find(String target) {","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"Mist0919"},"content":"        ArrayList foundTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"Mist0919"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"Mist0919"},"content":"            if (task.getDescription().contains(target)) {","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"Mist0919"},"content":"                foundTasks.add(task);","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"Mist0919"},"content":"        return foundTasks;","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"Mist0919"},"content":"    public final void addTodo(String description) {","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"Mist0919"},"content":"        this.tasks.add(new Todo(description));","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"Mist0919"},"content":"    public final void addDeadline(String description, String by) {","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"Mist0919"},"content":"        this.tasks.add(new Deadline(description, by));","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"Mist0919"},"content":"    public final void addEvent(String description, String at) {","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"Mist0919"},"content":"        this.tasks.add(new Event(description, at));","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Mist0919":130}},{"path":"src/main/java/Duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Tasks;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"     * Create a Todo class with given description.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"        super(description);","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"     * Present todo in string of prescribed format.","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"     * @return String presented todo description format.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"    public String toString() {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Mist0919":25}},{"path":"src/main/java/Duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"package Duke.Ui;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.TaskList;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"import Duke.Command.*;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"public class Ui {","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    public Ui() {","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    public static final String readCommand() {","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"        return input.nextLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"    public static final void showWelcome() {","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"        showLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"                + \"What can I do for you?\\n\");","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"        showLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"    public static final void showLine() {","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\" * . * . * . * . * . * . * . * . * . * . * . * . * . * . * . * . *\\n\");","lastModifiedDate":"2021-10-01"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"    public static final void printSuccessfulLoading() {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Tasks have been loaded.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"    public static final void printListEmptyMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"The current list is empty~\");","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"    public static final void printListMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"Mist0919"},"content":"    public static final void printClearMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"The tasks in your list have been cleared. \");","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"Mist0919"},"content":"    public static final void printDoneMessage(Task taskDone) {","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Nice, I have marked this task as done: \\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"Mist0919"},"content":"                + taskDone.toString());","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"Mist0919"},"content":"    public static final void printFindMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"Mist0919"},"content":"    public static final void printNoMatchingTaskMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"There is no matching task in your list :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"Mist0919"},"content":"    public static final void printDeleteMessage(Task taskDeleted) {","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Got it. I have deleted the task in your list! \\n\"","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"Mist0919"},"content":"                + taskDeleted.toString());","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"Mist0919"},"content":"    public static final void printInvalidCommandMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"Mist0919"},"content":"                + \"Please give me a valid command.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"Mist0919"},"content":"    public static final void printAddTaskMessage(Task task) {","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Got it. I have added the task to your list.\\n\"","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"Mist0919"},"content":"                + task.toString());","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"Mist0919"},"content":"    public static final void printNumOfTasks(TaskList tasks) {","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Now you have \" + tasks.getNumOfSize() + \" task(s) in your list.\");","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"Mist0919"},"content":"    public static final void showHelpMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Here are the usages of all commands:\"","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + AddDeadlineCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2021-10-01"},{"lineNumber":88,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + AddEventCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + AddTodoCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + ClearCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + DeleteCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + DoneCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + ExitCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + FindCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + HelpCommand.COMMAND_DESCRIPTION","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"Mist0919"},"content":"                + \"\\n\\n\" + ListCommand.COMMAND_DESCRIPTION);","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"Mist0919"},"content":"    public static final void showLoadingError() {","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"Mist0919"},"content":"        showLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"No task list can be loaded.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"Mist0919"},"content":"        showLine();","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"Mist0919"},"content":"    public static final void showError(String message) {","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"Mist0919"},"content":"        System.out.println(message);","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"Mist0919"},"content":"    public static final void showByeMessage() {","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"Bye. Hope to see you soon~\");","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Mist0919":112}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"    public DukeException() {","lastModifiedDate":"2021-09-10"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"        super();","lastModifiedDate":"2021-09-10"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"        super(message);","lastModifiedDate":"2021-09-10"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Mist0919":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"    public String at;","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"        super(description);","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    public String toString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.at","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"                + \")\";","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Mist0919":14}},{"path":"src/main/java/List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"public class List {","lastModifiedDate":"2021-08-26"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"    private static String[] currentList \u003d new String[100];","lastModifiedDate":"2021-08-26"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"    public static int listSize \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    private static int[] isDone \u003d new int[100];","lastModifiedDate":"2021-08-26"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"    public static void addToList(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"        currentList[listSize] \u003d  input;","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"        listSize++;","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"                + \"Added: \" + input + \"\\n\"","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"                + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    public static void printItems() {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"            System.out.println(\"The list is empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"            for (int i \u003d 1; i \u003c\u003d listSize; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"                System.out.print(i + \". \" );","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"                System.out.print(\"[\");","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"                if (isDone[i-1] \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"                    System.out.print(\"X\");","lastModifiedDate":"2021-08-26"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"                } else {","lastModifiedDate":"2021-08-26"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"                    System.out.print(\" \");","lastModifiedDate":"2021-08-26"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"                }","lastModifiedDate":"2021-08-26"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"                System.out.print(\"] \" + currentList[i-1] + \"\\n\");","lastModifiedDate":"2021-08-26"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"    public static void mark(int number) {","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"        isDone[number-1] \u003d 1;","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"    public static void markedItems() {","lastModifiedDate":"2021-08-26"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"        for (int i \u003d 0; i \u003c isDone.length; i++) {","lastModifiedDate":"2021-08-26"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"            if (isDone[i] \u003d\u003d 1) {","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"                System.out.println(\"[X] \" + currentList[i]);","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Mist0919":42}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"public class Task {","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"    protected String description;","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"    protected String isDone;","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"        this.isDone \u003d \" \";","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    public final void markedAsDone() {","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"        this.isDone \u003d \"X\";","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"    public String toString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"        String status;","lastModifiedDate":"2021-09-09"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"        return \"[\" + isDone + \"] \" + this.description;","lastModifiedDate":"2021-09-09"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Mist0919":19}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"public class Todo extends Task{","lastModifiedDate":"2021-09-09"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"        super(description);","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"    @Override","lastModifiedDate":"2021-09-09"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"    public String toString() {","lastModifiedDate":"2021-09-09"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Mist0919":11}},{"path":"src/main/java/list.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"public class list {","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"Mist0919"},"content":"    private static String[] l \u003d new String[100];","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"Mist0919"},"content":"    public static int listSize \u003d 0;","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Mist0919"},"content":"    private static String[] isDone \u003d new String[100];","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"Mist0919"},"content":"    private static String[] type \u003d new String[100];","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"Mist0919"},"content":"    public static void initializing() {","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"Mist0919"},"content":"        for (int i \u003d 0; i \u003c 100; i++) {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"Mist0919"},"content":"            isDone[i] \u003d \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"Mist0919"},"content":"            type[i] \u003d \" \";","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Mist0919"},"content":"    public static void addToList(String input) {","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Mist0919"},"content":"        if (input.contains(\"todo\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"Mist0919"},"content":"            l[listSize] \u003d input.substring(5);","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"Mist0919"},"content":"            type[listSize] \u003d \"T\";","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"Mist0919"},"content":"        } else if (input.contains(\"deadline\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"Mist0919"},"content":"            String by \u003d input.substring(input.indexOf(\"/\") + 4);","lastModifiedDate":"2021-09-04"},{"lineNumber":20,"author":{"gitId":"Mist0919"},"content":"            l[listSize] \u003d input.substring(9, input.indexOf(\"/\")) + \" (by: \" + by","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"Mist0919"},"content":"                    + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":22,"author":{"gitId":"Mist0919"},"content":"            type[listSize] \u003d \"D\";","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"Mist0919"},"content":"        } else if (input.contains(\"event\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":24,"author":{"gitId":"Mist0919"},"content":"            String at \u003d input.substring(input.indexOf(\"/\") + 4);","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"Mist0919"},"content":"            l[listSize] \u003d input.substring(6, input.indexOf(\"/\")) + \"(at: \" + at","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"Mist0919"},"content":"                    + \")\";","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"Mist0919"},"content":"            type[listSize] \u003d \"E\";","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"Mist0919"},"content":"        listSize++;","lastModifiedDate":"2021-08-26"},{"lineNumber":30,"author":{"gitId":"Mist0919"},"content":"        System.out.println(\"____________________________________________________________\\n\"","lastModifiedDate":"2021-09-02"},{"lineNumber":31,"author":{"gitId":"Mist0919"},"content":"                + \"Got it. I\u0027ve added this task: \\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":32,"author":{"gitId":"Mist0919"},"content":"                + \"  [\" + type[listSize - 1] + \"]\"","lastModifiedDate":"2021-09-04"},{"lineNumber":33,"author":{"gitId":"Mist0919"},"content":"                + \"[\" + isDone[listSize - 1] + \"]\"","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"Mist0919"},"content":"                + l[listSize - 1] + \"\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"Mist0919"},"content":"                + \"Now you have \" + listSize + \" tasks in the list.\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":36,"author":{"gitId":"Mist0919"},"content":"                + \"____________________________________________________________\\n\");","lastModifiedDate":"2021-09-02"},{"lineNumber":37,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":38,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":39,"author":{"gitId":"Mist0919"},"content":"    public static void printItems(){","lastModifiedDate":"2021-08-26"},{"lineNumber":40,"author":{"gitId":"Mist0919"},"content":"        if (listSize \u003d\u003d 0) {","lastModifiedDate":"2021-08-26"},{"lineNumber":41,"author":{"gitId":"Mist0919"},"content":"            System.out.println(\"The list is empty.\");","lastModifiedDate":"2021-08-26"},{"lineNumber":42,"author":{"gitId":"Mist0919"},"content":"            System.out.println(\"The list is empty.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"Mist0919"},"content":"            return;","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"Mist0919"},"content":"        } else {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"Mist0919"},"content":"            for (int i \u003d 1; i \u003c\u003d listSize; i++){","lastModifiedDate":"2021-08-26"},{"lineNumber":46,"author":{"gitId":"Mist0919"},"content":"                System.out.print(i + \". \" );","lastModifiedDate":"2021-08-26"},{"lineNumber":47,"author":{"gitId":"Mist0919"},"content":"                System.out.print(\"[\" + type[i - 1] + \"]\" + \"[\"","lastModifiedDate":"2021-09-04"},{"lineNumber":48,"author":{"gitId":"Mist0919"},"content":"                        + isDone[i - 1] + \"] \" + l[i-1] + \"\\n\");","lastModifiedDate":"2021-09-04"},{"lineNumber":49,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":50,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":51,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":52,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":53,"author":{"gitId":"Mist0919"},"content":"    public static void mark(int number){","lastModifiedDate":"2021-08-26"},{"lineNumber":54,"author":{"gitId":"Mist0919"},"content":"        isDone[number-1] \u003d \"X\";","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":56,"author":{"gitId":"Mist0919"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":57,"author":{"gitId":"Mist0919"},"content":"    public static void printMarkedItems(){","lastModifiedDate":"2021-09-04"},{"lineNumber":58,"author":{"gitId":"Mist0919"},"content":"        for (int i\u003d0;i\u003cisDone.length;i++){","lastModifiedDate":"2021-08-26"},{"lineNumber":59,"author":{"gitId":"Mist0919"},"content":"            if (isDone[i] \u003d\u003d \"X\") {","lastModifiedDate":"2021-09-04"},{"lineNumber":60,"author":{"gitId":"Mist0919"},"content":"                System.out.println(\"[\" + type[i] + \"]\"","lastModifiedDate":"2021-09-04"},{"lineNumber":61,"author":{"gitId":"Mist0919"},"content":"                    + \"[\" + isDone[i] + \"] \" + l[i]);","lastModifiedDate":"2021-09-04"},{"lineNumber":62,"author":{"gitId":"Mist0919"},"content":"            }","lastModifiedDate":"2021-08-26"},{"lineNumber":63,"author":{"gitId":"Mist0919"},"content":"        }","lastModifiedDate":"2021-08-26"},{"lineNumber":64,"author":{"gitId":"Mist0919"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":65,"author":{"gitId":"Mist0919"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Mist0919":65}},{"path":"src/main/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Mist0919"},"content":"1. [D][X] have lunch (by: tomorrow)","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Mist0919":1}}]
