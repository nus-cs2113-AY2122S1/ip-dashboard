{"authorDailyContributionsMap":{"APZH":[{"date":"2021-08-13","commitResults":[{"hash":"5504ab05cc8d88b87eb9aa93b3b8da8def2464fc","messageTitle":"Implement Level 0. Greet: - Add introductory message - Add exit message","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}}]},{"date":"2021-08-17","commitResults":[{"hash":"5f06155f38c4ec97db0190f1011159467be61972","messageTitle":"Update UI design + Add display UI method to \"Duke\" class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":28,"deletions":14}}},{"hash":"140af8f5b8082d00028ca679a3651f789dd29647","messageTitle":"Revert \"Update UI design + Add display UI method to \"Duke\" class\"","messageBody":"This reverts commit 5f06155f38c4ec97db0190f1011159467be61972.\n","fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":28}}},{"hash":"13e66d954f47bde72b2fdc0b0d93befbd7865666","messageTitle":"Update UI design + Add display UI method to \"Duke\" class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":14}}}]},{"date":"2021-08-21","commitResults":[{"hash":"5f01a37c57c2bb1dfdd1930d0d9fd0f256865dbb","messageTitle":"Create class \"DukeInterface\" to handle UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":35,"deletions":22}}},{"hash":"d103ad069cc21bfd527e00065157d497c2f791b4","messageTitle":"Implement Level 1. Greet, Echo, Exit","messageBody":"DukeInterface.java:\n- Add scanner object to read user input\n- Add method \"readInput\" to read user input in command line\n- Add method \"echoInput\" to echo user input from \"readinput\" method\n\nDuke.java\n- Updated Duke.java to use do-while loop to allow for multiple user inputs in single program execution (invokes \"readInput\" method from DukeInterface.java)\n- Terminates Duke.java when user inputs \"bye\"\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":4}}}]},{"date":"2021-08-22","commitResults":[{"hash":"cfc4926f6a08503b5a3f22a484dfcb97bc92af34","messageTitle":"Implement Level 2. Add, List","messageBody":"User can now add tasks to Duke + print all tasks added\n\nAdd Task.java class\n- To describe each Task as an object\n- Add method \"getTaskDescription\" to return Task description\n\nAdd TaskManager.java class\n- To manage multiple Task objects\n- Add method \"addTask\" to add on new Task object to Duke\u0027s Tasklist\n- Add method \"printTasks\" to print all added Task objects to Duke\u0027s Tasklist\n\nUpdate Duke.java\n- Add TaskManager object\n- Change do-while loop to while loop + modified loop condition\n\nGeneral Update\n- Polish user interface + Duke\u0027s personality\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":22}}},{"hash":"224568d7122df669361cc657eb825658fdbbc5ba","messageTitle":"Implement Level 3. Mark as Done + Tweak code to comply with coding standards","messageBody":"Duke.java\n- Revert back to do-while loop for program execution\n- Use if-else instead of switch statement to process user command\n- Add additional if-else condition to check command contains \"done \" + invoke method \"setTaskComplete\" via TaskManager object\n\nDukeInterface.java\n- Modify various UI messages\n- Add more functions to print various UI formats (includes emojis)\n\nTask.java\n- Add \"getStatusIcon\" method to mark task as done\n\nTaskManager\n- Use DukeInterface customised print methods instead of System.out.println method to display text/messages\n- Tidy up code\n","tags":["Level-3","A-CodingStandard","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":107,"deletions":38}}}]},{"date":"2021-08-30","commitResults":[{"hash":"8b20144b3b0c2107f5739240ef74294f2076cdf7","messageTitle":"Implement Level 4. ToDos, Events, Deadlines + Improve Code Abstraction + Clean-up UI + TextUiTesting","messageBody":"Duke.java\n- Tokenise user input instead of manipulating user input string directly\n- Revert back to switch instead of if-else to process user input\n- Moved readInput() method from DukeInterface.java to Duke.java (Abstraction Improvement)\n- Add ability to detect new command \u0027help\u0027 to print a list of all commands and its input format (print method located in DukeInterface.java)\n- Add a simple check to tell user if their input is invalid and does not adhere to the fixed input format required\n\nDukeInterface.java\n- Removed readInput() method (Abstraction Improvement)\n- Add new UI messages (HELP_MSG, ERROR_MSG) and their relevant print methods\n- Add new method printCursor() to print arrow when pending user input\n- Removed redundent print methods, such as \"printLoadingMsg()\" and \"printSystemMsg()\"\n- Tidy-up UI messages in general\n\nTask.java\n- Updated getTaskDescription() method to include the status icon as well when returning the String\n\nTaskManager.java (Main Bulk of Changes)\n- Update addTask() method to check type of task (todo, deadline or event) to create the respective objects + print number of tasks currently in tasklist after adding a task\n- Update printTasks() method to tell user if the list is empty\n- Update setTaskComplete() method to tell user if a certain task has already been set to complete/done + print how many \"tasks completed / total tasks\" after setting a task complete\n- Shorten all UI messages to neaten user experience + reformat how messages are displayed (in tandem with DukeInterface.java print methods)\n- Add new UI messages GENERFIC_PROMPT_MSG\n\nToDo.java\n- Newly added class that is a subclass of the class Task.java\n- Add override of the method getTaskDescription of superclass Task.java to include \"[T]\" in addition to printing the status icon and task description\n\nDeadline.java\n- Newly added class that is a subclass of the class Task.java\n- Add override of the method getTaskDescription of superclass Task.java to include \"[D]\" in addition to printing the status icon and task description and \"(by: \u003cdate/time\u003e)\"\n\nEvent.java\n- Newly added class that is a subclass of the class Task.java\n- Add override of the method getTaskDescription of superclass Task.java to include \"[E]\" in addition to printing the status icon and task description and \"(at: \u003cdate/time\u003e)\"\n\ninput.txt\n- Add user-input to test UI\n\nEXPECTED.TXT\n- Add expected output after executing commands in input.txt\n","tags":["Level-4","A-TextUiTesting","A-CodeQuality"],"fileTypesAndContributionMap":{"txt":{"insertions":18,"deletions":0},"java":{"insertions":216,"deletions":84}}}]},{"date":"2021-09-05","commitResults":[{"hash":"09379401ab6916cf17b794ebc2d3778e863b6398","messageTitle":"Edit user input processing method + Abstracted addTask() method into 3 methods to cater to each task type","messageBody":"Duke.java\n- Delete splitInput() method\n- Add String constants of each command type (used for switch statement case checking)\n- Modified logic of processing user input (No longer split user input into individual tokens)\n\nDukeInterface.java\n- Updated HELP_MSG string\n\nTaskManager.java\n- Create 3 new methods addToDo(), addDeadline(), addEvent()\n- Delete general addTask() method as it\u0027s functionality is represented in the 3 newly methods created above\n","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":74}}}]},{"date":"2021-09-06","commitResults":[{"hash":"8ae899922d7fdc4ee88a9070779bd8327a49f5ca","messageTitle":"Add exception handling for the following cases: - Invalid user input/command - Empty task description argument for todo/deadline/event command - Empty task id argument for done command","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":34}}},{"hash":"c0157f9308daeb0c12b1692b34d0d632ea96343a","messageTitle":"Moved all constant strings from TaskManager.java to DukeInterface.java","messageBody":"- Created relevant methods to print all previous messages found in TaskManager.java in DukeInterface.java\n  - Purpose is to create better abstraction of DukeInterface.java class as the class handling all UI display messages\n","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":42}}},{"hash":"cfe12f6188811d9cd707e4aa34f78e85af983874","messageTitle":"Add exception handling \"done\" command (setTaskComplete() method)","messageBody":"- Create InvalidCommandException.java class to handle invalid commands\n- Create InvalidTaskIdException.java class to handle invalid task ids not found in tasklist\n- Handle other task id exceptions for \u0027\"done\" command such as ensuring it is an integer\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":37}}},{"hash":"c86c4e1720df3180d4b8de7b1b4d21367927187e","messageTitle":"Add user-defined exceptions and its exception classes + reorganised UI messages","messageBody":"Exception Classes added:\n- TodoFormatException: To check if user input satisfies todo command format\n- DeadlineFormatException: To check if user input satisfies deadline command format\n- EventFormatException: To check if user input satisfies event command format\n- DoneFormatException: To check if user input satisfies done command format\n- InvalidTaskIdException: To check if taskid input is within the range of the current tasklist\n- TaskAlreadyDoneException: To check if the task the user wants to complete has already been marked as done\n- EmptyTasklistException: To check if the tasklist is empty\n","fileTypesAndContributionMap":{"java":{"insertions":202,"deletions":160}}},{"hash":"a810f4f30e544ff3f1eb5f2d29f89b4bb92ba775","messageTitle":"Revert \"Add user-defined exceptions and its exception classes + reorganised UI messages\"","messageBody":"This reverts commit c86c4e1720df3180d4b8de7b1b4d21367927187e.\n","fileTypesAndContributionMap":{"java":{"insertions":160,"deletions":202}}},{"hash":"1fca3613d582654526fa4c58814ad98ff0194b61","messageTitle":"Add user-defined exceptions and its exception classes + reorganised UI messages (Recommit due to merge issue)","messageBody":"Exception Classes added:\n- TodoFormatException: To check if user input satisfies todo command format\n- DeadlineFormatException: To check if user input satisfies deadline command format\n- EventFormatException: To check if user input satisfies event command format\n- DoneFormatException: To check if user input satisfies done command format\n- InvalidTaskIdException: To check if taskid input is within the range of the current tasklist\n- TaskAlreadyDoneException: To check if the task the user wants to complete has already been marked as done\n- EmptyTasklistException: To check if the tasklist is empty\n","fileTypesAndContributionMap":{"java":{"insertions":202,"deletions":160}}},{"hash":"071c78f38315964be573f48aec05bc703ca077a8","messageTitle":"Create package \u0027duke\u0027 and move all current java files into it","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":0}}},{"hash":"cee00b94045a7e6e50d7596bba56cb40362ff070","messageTitle":"Create child packages (exception, task, ui) in duke package and move relevant java classes to it\u0027s appropriate packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":14}}}]},{"date":"2021-09-13","commitResults":[{"hash":"068332f77a0babe8aa6fee2a7c66ed2614a5c8d3","messageTitle":"Add deleteTask() method in TaskManager.java","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":2}}},{"hash":"4b1491d0c6572ee894e0f5f151604f82b234709f","messageTitle":"Add exception handling for deleteTask() method + Tidy up code","messageBody":"- Add constant final strings to store the regex used to check the format of the commands\n- Add DeleteFormatException class\n- Update help msg displayed by help command to include the delete command\n","fileTypesAndContributionMap":{"txt":{"insertions":15,"deletions":0},"java":{"insertions":44,"deletions":7}}},{"hash":"10a6697a7396dbf51bfcbebc9b2b8282d1fe013d","messageTitle":"add directory \"[project_root]/data\" + add duke.txt with pre-loaded tasks","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0}}},{"hash":"e7f47751657c719a088ac3c80656c571d7543393","messageTitle":"add DataManager.java class to handle file access and place it in duke.local package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":55,"deletions":2}}}]},{"date":"2021-09-14","commitResults":[{"hash":"663cf8e14b6397d8fc243c8bd0d878f8b718927e","messageTitle":"add loadDataFromFile(), writeToFile(), getTaskFileFormat() + fix alot of bugs","messageBody":"DataManager.java:\nloadDataFromFile() - loads task data from data/duke.txt into the duke\u0027s program tasklist instance\nwriteToFile() - writes duke\u0027s program tasklist instance into data/duke.txt\n\nTask/ToDo/Deadline/Event.java:\ngetTaskFileFormat - Converts info of a particular task to be formatted and later written into data/duke.txt\n\nTaskManager.java:\nnumTasks and numComplete became obselete, modified to use Arraylist to obtain values directly instead\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1},"java":{"insertions":180,"deletions":47}}},{"hash":"f1b34e9996bad060b1edee6df2e146d2a7cb433a","messageTitle":"Create JAR + Fix minor bugs after merging branches Level-6 and Level-7","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}}]}]},"authorFileTypeContributionMap":{"APZH":{"java":763,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":0,"txt":37}},"authorContributionVariance":{"APZH":10370.515},"authorDisplayNameMap":{"APZH":"CS2113T-W13-3 PEH ..AMOS"}}
