[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2021-09-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"## Duke Overview","lastModifiedDate":"2021-09-16"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"Project Duke is a educational software project designed to take you through the steps of building a small software incrementally, while applying as many Java and SE techniques as possible along the way.","lastModifiedDate":"2021-09-16"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"**The project aims to build a product named Duke, a Personal Assistant Chatbot that helps a person to keep track of various things.** The name Duke was chosen as a placeholder name, in honor of [Duke, the Java Mascot](https://www.oracle.com/java/duke.html). You may give it any other name and personality you wish.","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"\u003e 🥳 [**User Guide**](https://yuxinn-j.github.io/ip/)","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"3. After that, locate the `src/main/java/duke.data.Duke.java` file, right-click it, and choose `Run duke.data.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"## Duke Learning objectives","lastModifiedDate":"2021-09-16"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"- Java","lastModifiedDate":"2021-09-16"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"- OOP","lastModifiedDate":"2021-09-16"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"- IDEs","lastModifiedDate":"2021-09-16"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"- Git and GitHub","lastModifiedDate":"2021-09-16"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"- Project automation tools","lastModifiedDate":"2021-09-16"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"- Code quality","lastModifiedDate":"2021-09-16"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"##  Duke Sample interaction","lastModifiedDate":"2021-09-16"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":" ","lastModifiedDate":"2021-09-16"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":" ```bash","lastModifiedDate":"2021-09-16"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"   ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"      ____        _        ","lastModifiedDate":"2021-09-16"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"     |  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-16"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"     | | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-16"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"     | |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-16"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"     |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-16"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"     Hello! I\u0027m Duke","lastModifiedDate":"2021-09-16"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"     What can I do for you?","lastModifiedDate":"2021-09-16"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"list","lastModifiedDate":"2021-09-16"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"     Here are the tasks in your list:","lastModifiedDate":"2021-09-16"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"     1.[T][X] read book","lastModifiedDate":"2021-09-16"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"     2.[D][ ] return book (by: June 6th)","lastModifiedDate":"2021-09-16"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"     3.[E][ ] project meeting (at: Aug 6th 2-4pm)","lastModifiedDate":"2021-09-16"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"     4.[T][X] join sports club","lastModifiedDate":"2021-09-16"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"todo borrow book","lastModifiedDate":"2021-09-16"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-16"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"       [T][ ] borrow book","lastModifiedDate":"2021-09-16"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"     Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":74,"author":{"gitId":"Yuxinn-J"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-09-16"},{"lineNumber":75,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":76,"author":{"gitId":"Yuxinn-J"},"content":"     Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-16"},{"lineNumber":77,"author":{"gitId":"Yuxinn-J"},"content":"       [D][ ] return book (by: Sunday)","lastModifiedDate":"2021-09-16"},{"lineNumber":78,"author":{"gitId":"Yuxinn-J"},"content":"     Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-16"},{"lineNumber":79,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":80,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":81,"author":{"gitId":"Yuxinn-J"},"content":"done 2","lastModifiedDate":"2021-09-16"},{"lineNumber":82,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":83,"author":{"gitId":"Yuxinn-J"},"content":"     Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2021-09-16"},{"lineNumber":84,"author":{"gitId":"Yuxinn-J"},"content":"       [D][X] return book (by: June 6th)","lastModifiedDate":"2021-09-16"},{"lineNumber":85,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":86,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":87,"author":{"gitId":"Yuxinn-J"},"content":"blah","lastModifiedDate":"2021-09-16"},{"lineNumber":88,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":89,"author":{"gitId":"Yuxinn-J"},"content":"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(","lastModifiedDate":"2021-09-16"},{"lineNumber":90,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":91,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":92,"author":{"gitId":"Yuxinn-J"},"content":"bye","lastModifiedDate":"2021-09-16"},{"lineNumber":93,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":94,"author":{"gitId":"Yuxinn-J"},"content":"     Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-16"},{"lineNumber":95,"author":{"gitId":"Yuxinn-J"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-16"},{"lineNumber":96,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":97,"author":{"gitId":"Yuxinn-J"},"content":" ```","lastModifiedDate":"2021-09-16"}],"authorContributionMap":{"Yuxinn-J":74,"-":23}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"D | 0 | cz2005 lab quiz review | tonight","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"T | 0 | cs2030 lab1,2,3,4","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"T | 0 | learn cz2101 lecture","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"D | 0 | cs2113 ip | Friday midnight","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"E | 0 | st2334 quiz 2 | Friday afternoon","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"Yuxinn-J":5}},{"path":"src/main/java/duke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.commands;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.StorageOperationException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":" * Adds a task to the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    private final Task newTask;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String COMMAND_WORD_1 \u003d \"todo\";","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String COMMAND_WORD_2 \u003d \"deadline\";","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String COMMAND_WORD_3 \u003d \"event\";","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String MESSAGE_USAGE \u003d \"Duke provides three types of tasks: \\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"            + \"1. ToDos\\n\" + COMMAND_WORD_1 + \": Adds a new ToDo to the task list. \"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"            + \"ToDos without any date/time attached to it.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"            + \"✪ Parameters: DESCRIPTION\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"            + \"⮞ Example: \" + COMMAND_WORD_1","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"            + \" borrow book\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"            + System.lineSeparator()","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"            + \"2. Deadlines\\n\" + COMMAND_WORD_2 + \": Adds a new Deadline to the task list. \"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"            + \"Deadlines that need to be done before a specific date/time.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"            + \"✪ Parameters: DESCRIPTION /by DATE\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"            + \"⮞ Example: \" + COMMAND_WORD_2","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"            + \" return book /by Sunday\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"            + System.lineSeparator()","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"            + \"3. Events\\n\" + COMMAND_WORD_3 + \": Adds a new Event to the task list. \"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"            + \"Events that start at a specific time and ends at a specific time.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"            + \"✪ Parameters: DESCRIPTION /at TIME\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"            + \"⮞ Example: \" + COMMAND_WORD_3","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"            + \" project meeting /at Mon 2-4pm\";","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"     * Convenience constructor using processed Task data","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"     * @param task A new task","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"        this.newTask \u003d task;","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"     * Adds a task to the list","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"     * @param tasks Recorded list of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"     * @param ui Used ui","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"     * @param storage Used storage","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws StorageOperationException","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws StorageOperationException {","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"        tasks.addTask(newTask);","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(newTask);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" task(s) in the list.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":63}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.commands;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":" * Represents an executable command.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"     * Returns a flag that indicates whether it exits the program or not.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"     * @return \u003ccode\u003efalse\u003c/code\u003e by default.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"        return false;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":23}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.commands;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.DukeOutOfRangeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.StorageOperationException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":" * Deletes a task identified using its last displayed index from the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    private final int deleteIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"            + \": Deletes the task identified by the index number used in the last task listing.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"            + \"✪ Parameters: INDEX\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"            + \"⮞ Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"        this.deleteIndex \u003d index;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeOutOfRangeException, StorageOperationException {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"        if (deleteIndex \u003e tasks.getSize()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"            throw new DukeOutOfRangeException(\"Please enter a valid index of task :-(\");","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + tasks.getTask(deleteIndex - 1));","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"        tasks.deleteTask(deleteIndex - 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":35}},{"path":"src/main/java/duke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.commands;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.DukeOutOfRangeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.StorageOperationException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":" * Marks a task as done using its last displayed index from the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    private final int doneIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"            + \": Mark the task identified by the index number used in the last task listing as done.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"            + \"✪ Parameters: INDEX\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"            + \"⮞ Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    public DoneCommand(int index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"        this.doneIndex \u003d index;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeOutOfRangeException, StorageOperationException {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"        if (doneIndex \u003e tasks.getSize()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"            throw new DukeOutOfRangeException(\"Please enter a valid index of task :-(\");","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"        tasks.doneTask(doneIndex - 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(tasks.getTask(doneIndex - 1));","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"        storage.save(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":35}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.commands;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":" * Terminated the program.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits the program.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"            + \"⮞ Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"        ui.showExit();","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"     * Sets the flag that indicates whether it exits the program or not to true.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"     * @return \u003ccode\u003etrue\u003c/code\u003e.","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"        return true;","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":29}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.commands;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":" * Finds and lists all tasks in the list whose descriptions contain the argument keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    private final String keyword;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose descriptions contain any of \"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"            + \"✪ Parameters: KEYWORD\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"            + \"⮞ Example: \" + COMMAND_WORD + \" book\";","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"     * Convenience constructor storing the keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"     * @param keyword for searching","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"     * Retrieves all tasks in the list whose descriptions contain the argument keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"        TaskList matchingTasks \u003d tasks.search(this.keyword);","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"        if (matchingTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println(\"I\u0027m sorry, but there is no matching task.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"            matchingTasks.printList();","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":44}},{"path":"src/main/java/duke/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.commands;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":" * Shows help instructions.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"            + \"⮞ Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"        ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"        ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(DoneCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"        ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"        ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"        ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"        ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":31}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.commands;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":" * lists all tasks in the list to the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"            + \": Displays all recorded tasks as a list with index numbers.\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"            + \"⮞ Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"        if (tasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println(\"No task has added yet!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"            tasks.printList();","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":25}},{"path":"src/main/java/duke/data/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.data;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.InvalidStorageFilePathException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":" * Entry point of the Duke application.","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":" * Initializes the application and starts the interaction with the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":" *","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":" * @author Jiang Yuxin","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":" * @since 28/09/2021","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"public class Duke {","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"    // Constants","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String FILE_NAME \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"    // Attributes","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"    private static Storage storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"    private static TaskList tasks;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"    // Constructor","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"    public Duke(String filePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"        ui.showLogo();","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"            tasks.printList();","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"    /** Runs the program until termination. */","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"    public void run(){","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"        ui.showWelcome();","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"            try {","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"            } finally {","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"    // Main function","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"    public static void main(String[] args) throws DukeException, FileNotFoundException {","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"        new Duke(FILE_NAME).run();","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":69}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.data;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":" * A list of Task.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"public class TaskList implements Iterable\u003cTask\u003e{","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    // Attributes","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); // using Java Collections classes","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"     * Constructs empty task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"     * Constructs a list from the tasks in the given collection.","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"     * @param sourceList a collection of tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"    public TaskList(Collection\u003cTask\u003e sourceList){","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"        tasks.addAll(sourceList);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"     * Constructs a shallow copy of the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"    public TaskList(TaskList source) {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"        tasks.addAll(source.tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"    public Task getTask(int index){","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"     * @param task Added task","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"    public void addTask(Task task){","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"        this.tasks.add(task);","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"     * Deletes the identified task from the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"     * @param index last displayed index from the list","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"    public void deleteTask(int index){","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"        this.tasks.remove(index);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"     * Marks the identified task as done.","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"    public void doneTask(int index){","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"        this.tasks.get(index).markAsDone();","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"     * Retrieves all tasks in the list whose descriptions contain the keyword.","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"     * @param keyword for searching","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"     * @return lists of tasks found","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"Yuxinn-J"},"content":"    public TaskList search(String keyword) {","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"Yuxinn-J"},"content":"        final List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"Yuxinn-J"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"Yuxinn-J"},"content":"            if (task.containsKeyword(keyword)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"Yuxinn-J"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"Yuxinn-J"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"Yuxinn-J"},"content":"        return new TaskList(matchingTasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"Yuxinn-J"},"content":"     * Displays all current tasks in the list.","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"Yuxinn-J"},"content":"    public void printList() {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"Yuxinn-J"},"content":"        for (int i\u003d0; i\u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"Yuxinn-J"},"content":"     * Retrieves the number of tasks holding in the list now.","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"Yuxinn-J"},"content":"     * @return size of the list","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"Yuxinn-J"},"content":"    public int getSize() {","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"Yuxinn-J"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"Yuxinn-J"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"Yuxinn-J"},"content":"        return tasks.iterator();","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":108}},{"path":"src/main/java/duke/exception/DukeEmptyParaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":" * Signals that the user input, lacking of parameters, does not fulfill the accepted format.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"public class DukeEmptyParaException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"    public DukeEmptyParaException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"        super(\"EmptyParametersException\");","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"    public DukeEmptyParaException(String message){","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Yuxinn-J":15}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-09"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"    public DukeException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"        super(\"DukeException\");","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-09"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"        super(message);","lastModifiedDate":"2021-09-09"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-09"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-09"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-09"}],"authorContributionMap":{"Yuxinn-J":13}},{"path":"src/main/java/duke/exception/DukeOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":" * Signals that the given index is out of range.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"public class DukeOutOfRangeException extends DukeException {","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"    public DukeOutOfRangeException(){","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"        super(\"OutOfRangeException\");","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"    public DukeOutOfRangeException(String message){","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"Yuxinn-J":15}},{"path":"src/main/java/duke/exception/IllegalValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.exception;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"public class IllegalValueException extends DukeException{","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"    public IllegalValueException(){","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"        super(\"IllegalValueException\");","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    public IllegalValueException(String message){","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"        super(message);","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":14}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.exception;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":" * Signals that user given input does not fulfill some constraints.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"public class InvalidInputException extends DukeException{","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"    public InvalidInputException(){","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"        super(\"InvalidInputException\");","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    public InvalidInputException(String message){","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"        super((message));","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":14}},{"path":"src/main/java/duke/exception/InvalidStorageFilePathException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.exception;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":" * Signals that the given file path does not fulfill the storage filepath constraints.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"public class InvalidStorageFilePathException extends DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"    public InvalidStorageFilePathException(){","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"        super(\"InvalidStorageFilePathException\");","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    public InvalidStorageFilePathException(String message){","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"        super(message);","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":14}},{"path":"src/main/java/duke/exception/StorageOperationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.exception;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":" * Signals that some error has occurred while trying to convert and read/write data between the application","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":" * and the storage file.","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"public class StorageOperationException extends DukeException{","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"    public StorageOperationException(){","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"        super(\"StorageOperationException\");","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"    public StorageOperationException(String message){","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"        super(message);","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.DukeEmptyParaException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.Events;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":" * Parses user input.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"public class Parser {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"     * @param fullCommand full user input string","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"     * @return the command based on the input","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws DukeException on input error","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"        /** Used for extracting the command word. */","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"        String command \u003d fullCommand.contains(\" \") ? fullCommand.split(\" \")[0] : fullCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"        switch (command) {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"            case \"deadline\":","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"            case \"event\":","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"            case \"todo\":","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"                return new AddCommand(parseTask(command, fullCommand));","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"            case \"bye\":","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"                return new ExitCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"            case \"delete\":","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"                return new DeleteCommand(parseIndex(command, fullCommand));","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"            case \"done\":","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"                return new DoneCommand(parseIndex(command, fullCommand));","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"            case \"find\":","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"                return new FindCommand(parseKeyword(fullCommand));","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"            case \"help\":","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"                return new HelpCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"            case \"list\":","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"                return new ListCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"            default:","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"                throw new InvalidInputException(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"     * Extracts index from user input and Converts it into \u003ccode\u003eint\u003c/code\u003e type.","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"    public static int parseIndex(String command, String fullCommand) throws DukeEmptyParaException {","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"        int i \u003d fullCommand.indexOf(\" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"        if (i \u003d\u003d -1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"            throw new DukeEmptyParaException(\"There should be an index of task to \" + command);","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"        return Integer.parseInt(fullCommand.substring(i + 1));","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"    public static String parseKeyword(String fullCommand) throws DukeEmptyParaException {","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"        int i \u003d fullCommand.indexOf(\" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"        if (i \u003d\u003d -1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"            throw new DukeEmptyParaException(\"The keyword to find cannot be empty\");","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"        return fullCommand.substring(i + 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"     * Parses arguments in the context of the add task command.","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"Yuxinn-J"},"content":"     * @param command command word \"todo\", \"deadline\" and \"event\"","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"Yuxinn-J"},"content":"     * @param fullCommand full user input string","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"Yuxinn-J"},"content":"     * @return parsed task to be added into list","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws DukeException on Empty parameters and Invalid input","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"Yuxinn-J"},"content":"    public static Task parseTask(String command, String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"Yuxinn-J"},"content":"        int i \u003d fullCommand.indexOf(\" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"Yuxinn-J"},"content":"        String taskDetails \u003d \" \";","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"Yuxinn-J"},"content":"        if (i !\u003d -1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"Yuxinn-J"},"content":"            taskDetails \u003d fullCommand.substring(i + 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"Yuxinn-J"},"content":"        if (taskDetails.isBlank()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"Yuxinn-J"},"content":"            // the string is empty or contains only white space","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"Yuxinn-J"},"content":"            throw new DukeEmptyParaException(\"The description of a \" + command + \" cannot be empty\");","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"Yuxinn-J"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"Yuxinn-J"},"content":"            switch (command) {","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"Yuxinn-J"},"content":"                case \"todo\":","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"Yuxinn-J"},"content":"                    return new ToDos(taskDetails);","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"Yuxinn-J"},"content":"                case \"deadline\":","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"Yuxinn-J"},"content":"                    return parseDeadline(taskDetails);","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"Yuxinn-J"},"content":"                case \"event\":","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"Yuxinn-J"},"content":"                    return parseEvent(taskDetails);","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"Yuxinn-J"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"Yuxinn-J"},"content":"        return null;","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"Yuxinn-J"},"content":"     * Parses Task information into Deadline object.","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"Yuxinn-J"},"content":"     * @param taskDetails Description and Date of a deadline task","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"Yuxinn-J"},"content":"     * @return A Deadline task created based on given tasks details","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws InvalidInputException missing keyword \"/by\"","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"Yuxinn-J"},"content":"    public static Deadline parseDeadline(String taskDetails) throws InvalidInputException {","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"Yuxinn-J"},"content":"        int i \u003d taskDetails.indexOf(\" /by \");","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"Yuxinn-J"},"content":"        if ( i \u003d\u003d -1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"Yuxinn-J"},"content":"            throw new InvalidInputException(\"There should be a \\\"/by\\\" in the deadline\");","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"Yuxinn-J"},"content":"        String description \u003d getDescription(i, taskDetails);","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"Yuxinn-J"},"content":"        String by \u003d getTime(i, taskDetails);","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"Yuxinn-J"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"Yuxinn-J"},"content":"     * Parses Task information into Event object.","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"Yuxinn-J"},"content":"     * @param taskDetails Description and Time of an event task","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"Yuxinn-J"},"content":"     * @return An Event task created based on given tasks details","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws InvalidInputException missing keyword \"/at\"","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"Yuxinn-J"},"content":"    public static Events parseEvent(String taskDetails) throws InvalidInputException {","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"Yuxinn-J"},"content":"        int i \u003d taskDetails.indexOf(\" /at \");","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"Yuxinn-J"},"content":"        if ( i \u003d\u003d -1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"Yuxinn-J"},"content":"            throw new InvalidInputException(\"There should be a \\\"/at\\\" in the event\");","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"Yuxinn-J"},"content":"        String description \u003d getDescription(i, taskDetails);","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"Yuxinn-J"},"content":"        String at \u003d getTime(i, taskDetails);","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"Yuxinn-J"},"content":"        return new Events(description, at);","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":138,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"Yuxinn-J"},"content":"     * Extracts description of task.","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"Yuxinn-J"},"content":"    public static String getDescription(int index, String taskDetails){","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"Yuxinn-J"},"content":"        return taskDetails.substring(0, index);","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"Yuxinn-J"},"content":"     * Extracts date/time of a deadline/event task.","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"Yuxinn-J"},"content":"    public static String getTime(int index, String taskDetails){","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"Yuxinn-J"},"content":"        final int KEYWORD_LENGTH \u003d 5;","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"Yuxinn-J"},"content":"        return taskDetails.substring(index + KEYWORD_LENGTH);","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":155}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.IllegalValueException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.InvalidStorageFilePathException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.StorageOperationException;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":" * Represents the file used to store task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"public class Storage {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"    /** Default file path used if the user doesn\u0027t provide the file name. */","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"data/duke.txt\";","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"    private final Path path;","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws InvalidStorageFilePathException if the default path is invalid","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"    public Storage() throws InvalidStorageFilePathException {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"    public Storage(String filePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"        this.path \u003d Paths.get(filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"        if (!isValidPath(path)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"            throw new InvalidStorageFilePathException(\"Storage file should end with \u0027.txt\u0027\");","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"     * Returns true if the given path is acceptable as a storage file.","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"     * The file path is considered acceptable if it ends with \u0027.txt\u0027","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"    private static boolean isValidPath(Path filePath) {","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"        return filePath.toString().endsWith(\".txt\");","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"     * Saves the {@code tasks} data to the storage file.","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws StorageOperationException if there were errors converting and/or storing data to file.","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"    public void save(TaskList tasks) throws StorageOperationException {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"            List\u003cString\u003e encodedTaskList \u003d TaskListEncoder.encodeTaskList(tasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"            Files.write(path, encodedTaskList);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + path);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"     * Loads the {@code TaskList} data from this storage file, and then returns it.","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"     * Returns an empty {@code TaskList} if the file does not exist, or is not a regular file.","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws StorageOperationException if there were errors reading and/or converting data from file.","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"    public TaskList load() throws StorageOperationException {","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"        if (!Files.exists(this.path) || !Files.isRegularFile(this.path)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"            return new TaskList();","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"Yuxinn-J"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"Yuxinn-J"},"content":"            System.out.println(\"Loading...\" + System.lineSeparator() + \"███████████████ 100%\");","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"Yuxinn-J"},"content":"            return TaskListDecoder.decodeTaskList(Files.readAllLines(this.path));","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"Yuxinn-J"},"content":"        } catch (FileNotFoundException fnfe) {","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"Yuxinn-J"},"content":"            throw new AssertionError(\"A non-existent file scenario is already handled earlier.\");","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"Yuxinn-J"},"content":"            // other errors","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"Yuxinn-J"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"Yuxinn-J"},"content":"            throw new StorageOperationException(\"Error writing to file: \" + this.path);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"Yuxinn-J"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"Yuxinn-J"},"content":"            throw new StorageOperationException(\"File contains illegal data values; Data type constraints not met\");","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"Yuxinn-J"},"content":"    public String getPath() {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"Yuxinn-J"},"content":"        return path.toString();","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":93}},{"path":"src/main/java/duke/storage/TaskListDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.IllegalValueException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.StorageOperationException;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.Events;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.ToDos;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":" * Decodes the storage data file into an {@code TaskList} object.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"public class TaskListDecoder {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"     * Decodes {@code encodedTaskList} into an {@code TaskList} containing the decoded tasks.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws IllegalValueException if any of the fields in any encoded task string is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"    public static TaskList decodeTaskList(List\u003cString\u003e encodedTaskList) throws IllegalValueException {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"        final List\u003cTask\u003e decodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"        for (String encodedTask : encodedTaskList) {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"            decodedTasks.add(decodeTaskFromString(encodedTask));","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"        return new TaskList(decodedTasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"     * Decodes {@code encodedTask} into a {@code Task}.","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"     * @throws IllegalValueException if any field in the {@code encodedTask} is invalid.","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"    public static Task decodeTaskFromString(String encodedTask) throws IllegalValueException {","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"            String[] taskComponent \u003d encodedTask.split(\" \\\\| \");","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"            char taskType \u003d taskComponent[0].charAt(0);","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"            int isDone \u003d Integer.parseInt(taskComponent[1].trim());","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"            String taskDetails \u003d taskComponent[2].trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"            Task newTask;","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"                    newTask \u003d new ToDos(taskDetails);","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"                    newTask \u003d new Deadline(taskDetails, taskComponent[3].trim());","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"                    newTask \u003d new Events(taskDetails, taskComponent[3].trim());","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"                    break;","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"                default:","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"                    newTask \u003d null;","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"            if (isDone \u003d\u003d 1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"                assert newTask !\u003d null;","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"                newTask.markAsDone();","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"            return newTask;","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"        } catch (ArrayIndexOutOfBoundsException e){","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"            throw new IllegalValueException();","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":70}},{"path":"src/main/java/duke/storage/TaskListEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.List;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":" * Encodes the {@code TaskList} object into a data file for storage.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"public class TaskListEncoder {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"     * Encodes all the {@code Task} in the {@code toSave} into a list of decodable and readable string presentation","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"     * for storage.","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    public static List\u003cString\u003e encodeTaskList(TaskList toSave) {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"        final List\u003cString\u003e encodedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"        toSave.forEach(task -\u003e encodedTasks.add(task.parseToStore()));","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"        return encodedTasks;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":24}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"    protected String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    public String parseToStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"        return \"D |\" + super.parseToStore() + \" | \" + this.by;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Yuxinn-J":21}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"public class Events extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"    protected String at;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"    public Events(String description, String at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"    public String parseToStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"        return \"E |\" + super.parseToStore() + \" | \" + this.at;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Yuxinn-J":23}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"public class Task {","lastModifiedDate":"2021-08-26"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"    protected String description;","lastModifiedDate":"2021-08-26"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-26"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-26"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-26"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-26"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-26"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-26"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-26"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"        return description.toLowerCase().contains(keyword.toLowerCase());","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"    public String parseToStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"        int doneStatus \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"        return String.format(\" %d | %s\", doneStatus, this.description);","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"    public String toString() {","lastModifiedDate":"2021-08-26"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), this.description);","lastModifiedDate":"2021-08-26"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-08-26"}],"authorContributionMap":{"Yuxinn-J":33}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"public class ToDos extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"    public ToDos(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":"    public String parseToStore() {","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":"        return \"T |\" + super.parseToStore();","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Yuxinn-J":20}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Yuxinn-J"},"content":"package duke.ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.Duke;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Yuxinn-J"},"content":"import duke.data.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Yuxinn-J"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Yuxinn-J"},"content":"import java.io.InputStream;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Yuxinn-J"},"content":"import java.io.PrintStream;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Yuxinn-J"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Yuxinn-J"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"Yuxinn-J"},"content":" * Text Ui of the Duke application.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"Yuxinn-J"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"Yuxinn-J"},"content":"public class Ui {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Yuxinn-J"},"content":"    // Constants","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String LOGO \u003d \" __     __         _       _     \\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Yuxinn-J"},"content":"                                    + \" \\\\ \\\\   / /        (_)     ( )    \" + \"  \" + \" ____        _        \\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"                                    + \"  \\\\ \\\\_/ /   ___  ___ _ __ |/ ___ \" + \"  \" + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Yuxinn-J"},"content":"                                    + \"   \\\\   / | | \\\\ \\\\/ / | \u0027_ \\\\  / __|\" + \"  \" + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Yuxinn-J"},"content":"                                    + \"    | || |_| |\u003e  \u003c| | | | | \\\\__ \\\\\" + \"  \" + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Yuxinn-J"},"content":"                                    + \"    |_| \\\\__,_/_/\\\\_\\\\_|_| |_| |___/\" + \"  \" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String MEME \u003d \"                  ░░░░░░░▄█▄▄▄█▄░░░░░░░\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Yuxinn-J"},"content":"                                    + \"                  ▄▀░░░░▄▌─▄─▄─▐▄░░░░▀▄\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Yuxinn-J"},"content":"                                    + \"                  █▄▄█░░▀▌─▀─▀─▐▀░░█▄▄█\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Yuxinn-J"},"content":"                                    + \"                  ░▐▌░░░░▀▀███▀▀░░░░▐▌\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Yuxinn-J"},"content":"                                    + \"                  ████░▄█████████▄░████\\n\";","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Yuxinn-J"},"content":"    public static final String DIVIDER \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Yuxinn-J"},"content":"    private final Scanner in;","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Yuxinn-J"},"content":"    private final PrintStream out;","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Yuxinn-J"},"content":"    public Ui() {","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Yuxinn-J"},"content":"        this(System.in, System.out);","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Yuxinn-J"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Yuxinn-J"},"content":"        this.in \u003d new Scanner(in);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Yuxinn-J"},"content":"        this.out \u003d out;","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Yuxinn-J"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"Yuxinn-J"},"content":"     * Prompts for the command and reads the text entered by the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"Yuxinn-J"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"Yuxinn-J"},"content":"     * @return full line command entered by the user","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"Yuxinn-J"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"Yuxinn-J"},"content":"    public String readCommand() {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"Yuxinn-J"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"Yuxinn-J"},"content":"    public void showLogo() {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(DIVIDER + \"\\n\" + \"Hello from\\n\" + MEME + LOGO + DIVIDER);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"Yuxinn-J"},"content":"    public void showWelcome() {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"Yuxinn-J"},"content":"        String greet \u003d \" Hello! I\u0027m Yuxin\u0027s Duke\\n\"","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"Yuxinn-J"},"content":"                     + \" What can I do for you?\\n\";","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(DIVIDER + \"\\n\" + greet + DIVIDER);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"Yuxinn-J"},"content":"    public void showLine(){","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(DIVIDER);","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"Yuxinn-J"},"content":"    public void showError(String errorInformation){","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"OOPS!!! \" + errorInformation + \"  :-(\");","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"Yuxinn-J"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"Yuxinn-J"},"content":"    public void showExit(){","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"Yuxinn-J"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"Yuxinn-J"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"Yuxinn-J"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Yuxinn-J":73}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Yuxinn-J"},"content":"java -classpath ..\\bin duke.data.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Yuxinn-J":1,"-":20}}]
