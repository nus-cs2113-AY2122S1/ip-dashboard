[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"E | X | liverpool match | friday 3am","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"T |   | something","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"D | X | MoreOOP | week 8","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.commands.Command;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import duke.components.ExceptionHandler;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"public class Duke {","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    private static ExceptionHandler exceptionHandler \u003d new ExceptionHandler();","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    private static Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    private static Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    private static TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     * Initialize tasks with the data from the storage.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    public Duke() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"            tasks.setTasks(storage.readDataFromFile());","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"            exceptionHandler.handleOtherExceptions(e);","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     * Reads and executes command from user inputs.","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"    private static void run() {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        while (true) {","lastModifiedDate":"2021-08-29"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"            String userInput \u003d ui.getUserInput(in);","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"                Command c \u003d parser.parseCommand(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"                ui.printLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"                exceptionHandler.handleDukeExceptions(e);","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"            } catch (Exception e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"                exceptionHandler.handleOtherExceptions(e);","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     * Main entry method to run Duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"     * @param args Unused params.","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"        new Duke();","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"        Duke.run();","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"nvbinh15":64,"-":1}},{"path":"src/main/java/duke/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.IllegalDeadlineException;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.PREFIX_BY_DEADLINE;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    String commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public AddDeadlineCommand(String commandArgs) {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IllegalDeadlineException, IOException {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        int indexOfByPrefix \u003d commandArgs.indexOf(PREFIX_BY_DEADLINE);","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        if (indexOfByPrefix \u003d\u003d -1) {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalDeadlineException();","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        String description \u003d commandArgs.substring(0, indexOfByPrefix).trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"        String by \u003d commandArgs.substring(indexOfByPrefix + 3).trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"        Deadline toBeAddedDeadline \u003d new Deadline(description, by);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        tasks.addTask(toBeAddedDeadline);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        ui.printConfirmAdd(toBeAddedDeadline, tasks.getNumberOfTasks());","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        storage.saveDataToFile(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":34}},{"path":"src/main/java/duke/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.IllegalEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.PREFIX_TIME_EVENT;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    String commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public AddEventCommand(String commandArgs) {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IllegalEventException, IOException {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        int indexOfTimePrefix \u003d commandArgs.indexOf(PREFIX_TIME_EVENT);","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        if (indexOfTimePrefix \u003d\u003d -1) {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"            throw new IllegalEventException();","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        String description \u003d commandArgs.substring(0, indexOfTimePrefix).trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"        String time \u003d commandArgs.substring(indexOfTimePrefix + 3).trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"        Event toBeAddedEvent \u003d new Event(description, time);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        tasks.addTask(toBeAddedEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        ui.printConfirmAdd(toBeAddedEvent, tasks.getNumberOfTasks());","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        storage.saveDataToFile(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":34}},{"path":"src/main/java/duke/commands/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"public class AddToDoCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    String commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public AddToDoCommand (String commandArgs) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        String description \u003d commandArgs.trim();","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        tasks.addTask(new ToDo(description));","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        ui.printConfirmAdd(tasks.getTaskByIndex(tasks.getNumberOfTasks() - 1), tasks.getNumberOfTasks());","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        storage.saveDataToFile(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":26}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.IllegalEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, Exception;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":11}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    String commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public DeleteCommand(String commandArgs) {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"        int taskIndex \u003d Integer.parseInt(commandArgs.strip()) - 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        ui.printConfirmDelete(tasks.getTaskByIndex(taskIndex), tasks.getNumberOfTasks());","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        tasks.removeTaskByIndex(taskIndex);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        storage.saveDataToFile(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":24}},{"path":"src/main/java/duke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"        ui.printGoodBye();","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":14}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.HORIZONTAL_LINE;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_NO_TASK;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.LINE_PREFIX;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_LISTING_TASKS;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"        if (tasks.getNumberOfTasks() \u003c\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(MESSAGE_NO_TASK);","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"            return;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(MESSAGE_LISTING_TASKS);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        for (int i \u003d 0; i \u003c tasks.getNumberOfTasks(); i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(LINE_PREFIX + (i + 1) + \". \" + tasks.getTaskByIndex(i));","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":26}},{"path":"src/main/java/duke/commands/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.components.TaskList;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.components.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"public class MarkDoneCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    String commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public MarkDoneCommand(String commandArgs) {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"        this.commandArgs \u003d commandArgs;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"        int taskIndex \u003d Integer.parseInt(commandArgs.strip()) - 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        Task currentTask \u003d tasks.getTaskByIndex(taskIndex);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        currentTask.markAsDone();","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        ui.printConfirmMarkDone(currentTask);","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"        storage.saveDataToFile(tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":26}},{"path":"src/main/java/duke/components/ExceptionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.components;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.EmptyTaskException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.IllegalDeadlineException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.IllegalEventException;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_INVALID_DEADLINE_EXCEPTION;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_INVALID_EVENT_EXCEPTION;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_EMPTY_TASK_EXCEPTION;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_DUKE_EXCEPTION;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_OTHER_EXCEPTION;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":" * A class that handles exceptions thrown by Duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"public class ExceptionHandler {","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"    private static Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * Handles duke exceptions.","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of type DukeException thrown by Duke.","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    public static void handleDukeExceptions(DukeException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"        if (e instanceof IllegalDeadlineException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"            ui.printMessage(MESSAGE_INVALID_DEADLINE_EXCEPTION);","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"        } else if (e instanceof IllegalEventException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"            ui.printMessage(MESSAGE_INVALID_EVENT_EXCEPTION);","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        } else if (e instanceof EmptyTaskException) {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"            ui.printMessage(MESSAGE_EMPTY_TASK_EXCEPTION);","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"            ui.printMessage(MESSAGE_DUKE_EXCEPTION);","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     * Handles other exceptions.","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     * @param e Exception of types other than DukeException thrown by Duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    public static void handleOtherExceptions(Exception e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(MESSAGE_OTHER_EXCEPTION);","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nvbinh15":46}},{"path":"src/main/java/duke/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.components;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.commands.*;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import duke.exceptions.EmptyTaskException;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.CommandConstants.*;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.CommandConstants.COMMAND_EXIT;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.*;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.PREFIX_EVENT;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.PREFIX_DEADLINE;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.PREFIX_TODO;","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.STATUS_ICON_DONE;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":" * A class that deals with making sense of the user command","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":" * and formatting data to stored and retrieved from the storage.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"public class Parser {","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    public Parser() {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     * Formats a task to be stored in the storage file.","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     * @param task The task to be formatted.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     * @return The formatted string representation of task.","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    public static String formatTaskToStore(Task task) {","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"        String prefix;","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"        String by;","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        String time;","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        String data;","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        String description \u003d task.getDescription();","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        String statusIcon \u003d task.getStatusIcon();","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"        if (task instanceof Deadline) {","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"            prefix \u003d PREFIX_DEADLINE;","lastModifiedDate":"2021-09-12"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"            by \u003d ((Deadline) task).getBy();","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"            data \u003d prefix + VERTICAL_BAR + statusIcon + VERTICAL_BAR + description + VERTICAL_BAR + by + LINE_SEPARATOR;","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        } else if (task instanceof Event) {","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"            prefix \u003d PREFIX_EVENT;","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"            time \u003d ((Event) task).getTime();","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"            data \u003d prefix + VERTICAL_BAR + statusIcon + VERTICAL_BAR + description + VERTICAL_BAR + time + LINE_SEPARATOR;","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"            prefix \u003d PREFIX_TODO;","lastModifiedDate":"2021-09-12"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"            data \u003d prefix + VERTICAL_BAR + statusIcon + VERTICAL_BAR + description + LINE_SEPARATOR;","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        return data;","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     * Retrieves a task from the storage file.","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"     * @param data The string representation of the task in the storage file.","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"     * @return The task to be retrieved.","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"    public static Task retrieveStoredData(String data) {","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"        String[] tokens \u003d data.split(VERTICAL_BAR_REGEX);","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"        String prefix \u003d tokens[0];","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"        String statusIcon \u003d tokens[1];","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"        String description \u003d tokens[2];","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"        boolean isDone \u003d (statusIcon.equals(STATUS_ICON_DONE)) ? true : false;","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"        switch (prefix) {","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"        case PREFIX_EVENT:","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"            String time \u003d tokens[3];","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"            return new Event(description, isDone, time);","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"        case PREFIX_DEADLINE:","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"            String by \u003d tokens[3];","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"            return new Deadline(description, isDone, by);","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"            return new ToDo(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"     * Splits raw user input into command word and command arguments.","lastModifiedDate":"2021-09-11"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput Raw input from user.","lastModifiedDate":"2021-09-11"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"     * @return a String array of size 2 including the command type and the arguments.","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"     * @throws EmptyTaskException If the add task command has no task description.","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"    public static String[] splitCommandAndArgs(String userInput) throws EmptyTaskException {","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"        String[] tokens \u003d userInput.trim().split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"        String command \u003d tokens[0];","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"        boolean isCommandAdd \u003d command.equals(COMMAND_ADD_DEADLINE) || command.equals(COMMAND_ADD_TODO)","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"                || command.equals(COMMAND_ADD_EVENT);","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"        if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"            return tokens;","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"        } else if (isCommandAdd) {","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"            throw new EmptyTaskException();","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"            return new String[] {command, EMPTY_STRING};","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"nvbinh15"},"content":"     * Returns a to be executed command based on the raw input from user.","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"nvbinh15"},"content":"     * @param userInput The raw input from user.","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"nvbinh15"},"content":"     * @return The command to be executed.","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"nvbinh15"},"content":"     * @throws DukeException If there is an exception of type DukeException occurs.","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"nvbinh15"},"content":"    public Command parseCommand(String userInput) throws DukeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"nvbinh15"},"content":"        final String[] commandTypeAndParams \u003d splitCommandAndArgs(userInput);","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"nvbinh15"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"nvbinh15"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"nvbinh15"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_ADD_TODO:","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"nvbinh15"},"content":"            return new AddToDoCommand(commandArgs);","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"nvbinh15"},"content":"            return new AddDeadlineCommand(commandArgs);","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_ADD_EVENT:","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"nvbinh15"},"content":"            return new AddEventCommand(commandArgs);","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_LIST:","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"nvbinh15"},"content":"            return new ListCommand();","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_MARK_DONE:","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"nvbinh15"},"content":"            return new MarkDoneCommand(commandArgs);","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_DELETE:","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"nvbinh15"},"content":"            return new DeleteCommand(commandArgs);","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"nvbinh15"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"nvbinh15"},"content":"            return new ExitCommand();","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"nvbinh15"},"content":"        default:","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"nvbinh15"},"content":"            throw new DukeException();","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"nvbinh15":142}},{"path":"src/main/java/duke/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.components;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import java.io.File;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.StorageConfig.PATH_TO_STORAGE_FILE;","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_FILE_NOT_FOUND;","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":" * A class that deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"public class Storage {","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    static Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * Creates a new file to store data.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    private static void createFile() throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"        File file \u003d new File(String.valueOf(PATH_TO_STORAGE_FILE));","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"        file.createNewFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * Reads data that stored in the storage file.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * @return The data stored in storage.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    public static ArrayList\u003cTask\u003e readDataFromFile() throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        if (Files.notExists(PATH_TO_STORAGE_FILE)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"            createFile();","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"        ArrayList\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        File file \u003d new File(String.valueOf(PATH_TO_STORAGE_FILE));","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        try {","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"            Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"            while (scanner.hasNext()) {","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"                Task task \u003d parser.retrieveStoredData(scanner.nextLine());","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"                storedTasks.add(task);","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"            }","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2021-09-12"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        return storedTasks;","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"     * Saves data to the storage file.","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"     * @param tasksList The ArrayList of Task to be stored.","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * @throws IOException If there are failed or interrupted I/O operations.","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"    public static void saveDataToFile(TaskList tasksList) throws IOException {","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"        FileWriter fileWriter \u003d new FileWriter(String.valueOf(PATH_TO_STORAGE_FILE));","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"        for (Task t : tasksList.getTasksList()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"            fileWriter.write(parser.formatTaskToStore(t));","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"        fileWriter.close();","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"nvbinh15":71}},{"path":"src/main/java/duke/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.components;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":" * A class that contains the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"public class TaskList {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    protected ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * Creates an empty ArrayList of Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public TaskList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     * Returns the ArrayList of Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     * @return tasks The ArrayList of Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"        return tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     * Set the value of tasks","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     * @param tasks The ArrayList of Task to be set to tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     * Returns the total number of tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     * @return The total number of tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     * Adds a new task to tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"        tasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"     * Returns a tasks knowing its index (0-based)","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"     * @param index Index of the task to be returned (0-based).","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * @return The task having the given index.","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"    public Task getTaskByIndex(int index) {","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"        return tasks.get(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"     * Removes a task from tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"     * @param index Index of the task to be removed (0-based).","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"    public void removeTaskByIndex(int index) {","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"        tasks.remove(index);","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"    ","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"nvbinh15":77}},{"path":"src/main/java/duke/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.components;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.HORIZONTAL_LINE;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.LOGO;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_GREETING;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.MESSAGE_MARK_TASK_DONE;","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.LINE_PREFIX;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":" * A lass that deals with interactions with the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"public class Ui {","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * Reads the text entered by the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"     * @param in The Scanner to read user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"     * @return line Full line entered by the user.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    public static String getUserInput(Scanner in) {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"        String line \u003d in.nextLine();","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"        return line;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     * Prints the divider HORIZONTAL_LINE.","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    public static void printLine() {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * Prints the greeting message to standard output.","lastModifiedDate":"2021-09-07"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-09-07"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"        printMessage(LOGO + MESSAGE_GREETING);","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"     * Prints the goodbye message to standard output.","lastModifiedDate":"2021-09-07"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    public static void printGoodBye() {","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"        printMessage(MESSAGE_GOODBYE);","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     * Prints confirm message after adding ToDo, Event, or Deadline.","lastModifiedDate":"2021-09-07"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     * @param task The task to be added.","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"     * @param numberOfTasks Number of tasks after adding the given task.","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"    public static void printConfirmAdd(Task task, int numberOfTasks) {","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(LINE_PREFIX + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(LINE_PREFIX + LINE_PREFIX + task);","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"        if (numberOfTasks \u003d\u003d 1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(LINE_PREFIX + \"Now you have one task in the list.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(LINE_PREFIX + \"Now you have \" + numberOfTasks + \" tasks in the list.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"     * Prints confirm message after delete a task.","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"     * @param task The task to be deleted.","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"     * @param numberOfTasksBeforeDelete Number of tasks before delete the given task.","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"    public static void printConfirmDelete(Task task, int numberOfTasksBeforeDelete) {","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(LINE_PREFIX + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(LINE_PREFIX + LINE_PREFIX + task);","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"        if (numberOfTasksBeforeDelete \u003d\u003d 2) {","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(LINE_PREFIX + \"Now you have one task in the list.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"        } else if (numberOfTasksBeforeDelete \u003d\u003d 1) {","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(LINE_PREFIX + \"Now you have zero task in the list.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"nvbinh15"},"content":"        } else {","lastModifiedDate":"2021-09-07"},{"lineNumber":82,"author":{"gitId":"nvbinh15"},"content":"            System.out.println(LINE_PREFIX + \"Now you have \" + (numberOfTasksBeforeDelete - 1) + \" tasks in the list.\");","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"nvbinh15"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":84,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":85,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":86,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":87,"author":{"gitId":"nvbinh15"},"content":"     * Prints confirm message after marking a task as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":88,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":89,"author":{"gitId":"nvbinh15"},"content":"     * @param task The task to be marked as done.","lastModifiedDate":"2021-09-07"},{"lineNumber":90,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":91,"author":{"gitId":"nvbinh15"},"content":"    public static void printConfirmMarkDone(Task task) {","lastModifiedDate":"2021-09-07"},{"lineNumber":92,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(MESSAGE_MARK_TASK_DONE);","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(LINE_PREFIX + LINE_PREFIX + task);","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":96,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":97,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-07"},{"lineNumber":98,"author":{"gitId":"nvbinh15"},"content":"     * Prints message to the standard output.","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-07"},{"lineNumber":100,"author":{"gitId":"nvbinh15"},"content":"     * @param message The message to be printed.","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-07"},{"lineNumber":102,"author":{"gitId":"nvbinh15"},"content":"    public static void printMessage(String message) {","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(message);","lastModifiedDate":"2021-09-07"},{"lineNumber":105,"author":{"gitId":"nvbinh15"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":107,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nvbinh15":107}},{"path":"src/main/java/duke/constants/CommandConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.constants;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that contains constants related to Commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public final class CommandConstants {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_MARK_DONE \u003d \"done\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nvbinh15":17}},{"path":"src/main/java/duke/constants/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.constants;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that contains Messages constants.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class Messages {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"    public final static String LOGO \u003d \"\\t\" + \" ____        _\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"            + \"\\t\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public static final String OPEN_SQUARE_BRACKET \u003d \"[\";","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public static final String CLOSE_SQUARE_BRACKET \u003d \"]\";","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    public static final String VERTICAL_BAR \u003d \" | \";","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"    public static final String VERTICAL_BAR_REGEX \u003d \" \\\\| \";","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_PREFIX \u003d \"\\t\";","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public static final String LINE_SEPARATOR \u003d System.lineSeparator();","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    public static final String NEW_LINE \u003d LINE_SEPARATOR + LINE_PREFIX;","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    public static final String HORIZONTAL_LINE \u003d LINE_PREFIX + \"__________________________________________________\";","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_GREETING \u003d LINE_PREFIX + \"Hello! I\u0027m Duke\" + NEW_LINE + \"What can I do for you?\";","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_GOODBYE \u003d LINE_PREFIX + \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_NO_TASK \u003d LINE_PREFIX + \"You don\u0027t have any tasks. Add a ToDo, Deadline, or Event.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_MARK_TASK_DONE \u003d LINE_PREFIX + \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_LISTING_TASKS \u003d LINE_PREFIX + \"Here are the tasks in your list:\";","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_DUKE_EXCEPTION \u003d LINE_PREFIX + \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_EMPTY_TASK_EXCEPTION \u003d LINE_PREFIX + \"OOPS!!! The description of a task cannot be empty.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_INVALID_DEADLINE_EXCEPTION \u003d LINE_PREFIX + \"OOPS!!! Invalid deadline.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_INVALID_EVENT_EXCEPTION \u003d LINE_PREFIX + \"OOPS!!! Invalid event.\";","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_OTHER_EXCEPTION \u003d LINE_PREFIX + \"Something went wrong. Please try again!\";","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d LINE_PREFIX + \"File not found.\";","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"nvbinh15":38}},{"path":"src/main/java/duke/constants/StorageConfig.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.constants;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":" * A class that contains configurations of Storage.","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"public class StorageConfig {","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    public static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    public static final String STORAGE_FOLDER \u003d \"data\";","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    public static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public static final Path PATH_TO_STORAGE_FOLDER \u003d Paths.get(PROJECT_ROOT, STORAGE_FOLDER);","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public static final Path PATH_TO_STORAGE_FILE \u003d Paths.get(PROJECT_ROOT, STORAGE_FOLDER, FILE_NAME);","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"nvbinh15":17}},{"path":"src/main/java/duke/constants/TaskConstants.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.constants;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that contains constants related to Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class TaskConstants {","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"    public static final String PREFIX_BY_DEADLINE \u003d \"/by\";","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"    public static final String PREFIX_TIME_EVENT \u003d \"/at\";","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"    public static final String STATUS_ICON_DONE \u003d \"X\";","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    public static final String STATUS_ICON_UNDONE \u003d \" \";","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    public static final String PREFIX_TODO \u003d \"T\";","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    public static final String PREFIX_DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"    public static final String PREFIX_EVENT \u003d \"E\";","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"nvbinh15":18}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A base class that represents checked specific exceptions thrown by Duke.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nvbinh15":8}},{"path":"src/main/java/duke/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when the task description is empty.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nvbinh15":8}},{"path":"src/main/java/duke/exceptions/IllegalDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when a deadline is illegal.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class IllegalDeadlineException extends DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nvbinh15":8}},{"path":"src/main/java/duke/exceptions/IllegalEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":" * A class that represents exceptions thrown when an event is illegal.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"public class IllegalEventException extends DukeException {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"nvbinh15":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.OPEN_SQUARE_BRACKET;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.CLOSE_SQUARE_BRACKET;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.PREFIX_DEADLINE;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":" * A representation of a Deadline task.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    protected String by;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the description and the date time of Deadline inheriting abstract class Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * Creates an undone Deadline.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     * @param description Deadline description.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @param by Deadline date time.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public Deadline (String description, String by) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the description, the status, and the date time of Deadline","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * inheriting abstract class Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     * @param description Deadline description.","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * @param isDone Deadline status (done or undone).","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     * @param by Deadline date time.","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    public Deadline (String description, boolean isDone, String by) {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * Returns the date time of Deadline.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * @return Deadline date time.","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    public String getBy() {","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        return this.by;","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     * Overrides toString method class Task to get string representation of Deadline","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     * including the Deadline prefix (\"D\"), the status icon, the description, and the date time.","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     * @return String representation of Deadline.","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        return OPEN_SQUARE_BRACKET + PREFIX_DEADLINE + CLOSE_SQUARE_BRACKET + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"nvbinh15":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.OPEN_SQUARE_BRACKET;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.CLOSE_SQUARE_BRACKET;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.PREFIX_EVENT;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":" * A representation of an Event task.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    protected String time;","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the description and the date time of Event inheriting abstract class Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * Creates an undone Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     * @param description Event description.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     * @param time Event date time.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"    public Event(String description, String time) {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the description, the status, and the date time of Event","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * inheriting abstract class Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     * @param description Event description.","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"     * @param isDone Event status (done or undone).","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"     * @param time Event date time.","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    public Event(String description, boolean isDone, String time) {","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     * Returns Event date time.","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"     * @return Event date time.","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"    public String getTime() {","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"        return this.time;","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"     * Overrides toString method of class Task to get string representation of Event","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"     * including the Event prefix (\"E\"), the status icon, the description, and the date time.","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"     * @return String representation of Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"        return OPEN_SQUARE_BRACKET + PREFIX_EVENT + CLOSE_SQUARE_BRACKET + super.toString() + \" (at: \" + this.time + \")\";","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"nvbinh15":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.OPEN_SQUARE_BRACKET;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.CLOSE_SQUARE_BRACKET;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.STATUS_ICON_DONE;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.STATUS_ICON_UNDONE;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" * An abstract representation of Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    protected String description;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the description of the task.","lastModifiedDate":"2021-08-24"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the description and the status of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"     * @param isDone Task status (done or undone).","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * Returns the \"X\" or \" \" icon based on whether the task is done.","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"     * @return the corresponding icon.","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"        return (isDone ? STATUS_ICON_DONE : STATUS_ICON_UNDONE);","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"nvbinh15"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"nvbinh15"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":49,"author":{"gitId":"nvbinh15"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"nvbinh15"},"content":"     * Returns the description of the Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"nvbinh15"},"content":"     * @return Task description.","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"nvbinh15"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"nvbinh15"},"content":"        return this.description;","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":61,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"nvbinh15"},"content":"     * Returns the status of the task (done or undone).","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"nvbinh15"},"content":"     * @return Task status (true if the Task is done and false otherwise).","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"nvbinh15"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"nvbinh15"},"content":"        return this.isDone;","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"nvbinh15"},"content":"     * Overrides toString method of class Object to get string representation of Task","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"nvbinh15"},"content":"     * including the status icon and the description.","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"nvbinh15"},"content":"     * @return String representation of Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"nvbinh15"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"nvbinh15"},"content":"        return OPEN_SQUARE_BRACKET + this.getStatusIcon() + CLOSE_SQUARE_BRACKET + \" \" + this.description;","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"nvbinh15":80}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.OPEN_SQUARE_BRACKET;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.Messages.CLOSE_SQUARE_BRACKET;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"import static duke.constants.TaskConstants.PREFIX_TODO;","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":" * A representation of a ToDo task.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the description of ToDo inheriting abstract class Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"     * Creates an undone ToDo.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"     * @param description ToDo description.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"    public ToDo (String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"     * Class constructor specifying the description and the status of ToDo","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"nvbinh15"},"content":"     * inheriting abstract class Task.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"nvbinh15"},"content":"     * @param description ToDo description.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"nvbinh15"},"content":"     * @param isDone ToDo status (done or undone).","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"nvbinh15"},"content":"    public ToDo (String description, boolean isDone) {","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"nvbinh15"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"nvbinh15"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"nvbinh15"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"nvbinh15"},"content":"     * Overrides toString method class Task to get string representation of ToDo","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"nvbinh15"},"content":"     * including the ToDo prefix (\"T\"), the status icon, and the description.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"nvbinh15"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"nvbinh15"},"content":"     * @return String representation of ToDo.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"nvbinh15"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"nvbinh15"},"content":"    @Override","lastModifiedDate":"2021-08-29"},{"lineNumber":40,"author":{"gitId":"nvbinh15"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"nvbinh15"},"content":"        return OPEN_SQUARE_BRACKET + PREFIX_TODO + CLOSE_SQUARE_BRACKET + super.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"nvbinh15"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"nvbinh15"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"nvbinh15":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nvbinh15"},"content":"deadline CG2027 assignment 3 /by 29 Aug","lastModifiedDate":"2021-08-29"},{"lineNumber":2,"author":{"gitId":"nvbinh15"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":3,"author":{"gitId":"nvbinh15"},"content":"blah","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"nvbinh15"},"content":"todo complete iP level-4","lastModifiedDate":"2021-08-29"},{"lineNumber":5,"author":{"gitId":"nvbinh15"},"content":"todo add text-ui-testing","lastModifiedDate":"2021-08-29"},{"lineNumber":6,"author":{"gitId":"nvbinh15"},"content":"done 3","lastModifiedDate":"2021-08-29"},{"lineNumber":7,"author":{"gitId":"nvbinh15"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":8,"author":{"gitId":"nvbinh15"},"content":"event team meeting","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"nvbinh15"},"content":"event team meeting /at Monday","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"nvbinh15"},"content":"deadline review PRs","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"nvbinh15"},"content":"deadline review PRs /by Thursday","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"nvbinh15"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"nvbinh15"},"content":"todo","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"nvbinh15"},"content":"done 1","lastModifiedDate":"2021-08-29"},{"lineNumber":15,"author":{"gitId":"nvbinh15"},"content":"done 4","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"list","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"nvbinh15"},"content":"delete 1","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"nvbinh15"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"nvbinh15"},"content":"bye","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"nvbinh15":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"nvbinh15"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/exceptions/*.java ../src/main/java/duke/constants/*.java ../src/main/java/duke/task/*.java ../src/main/java/duke/components/*.java","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"nvbinh15"},"content":"java -classpath ../bin/ duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"nvbinh15":2,"-":36}}]
