[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"EdisonZhong17"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"EdisonZhong17"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EdisonZhong17":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdisonZhong17"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"EdisonZhong17"},"content":"import duke.command.Deadline;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"EdisonZhong17"},"content":"import duke.command.Event;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"EdisonZhong17"},"content":"import duke.command.Todo;","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"EdisonZhong17"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":7,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":8,"author":{"gitId":"EdisonZhong17"},"content":"import java.util.Objects;","lastModifiedDate":"2021-08-17"},{"lineNumber":9,"author":{"gitId":"EdisonZhong17"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-17"},{"lineNumber":10,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":13,"author":{"gitId":"EdisonZhong17"},"content":"    public static int taskNum \u003d 0;","lastModifiedDate":"2021-09-08"},{"lineNumber":14,"author":{"gitId":"EdisonZhong17"},"content":"    public static Task[] tasks \u003d new Task[100];","lastModifiedDate":"2021-09-08"},{"lineNumber":15,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"EdisonZhong17"},"content":"        String userCommand;","lastModifiedDate":"2021-08-17"},{"lineNumber":18,"author":{"gitId":"EdisonZhong17"},"content":"        Scanner userType \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"EdisonZhong17"},"content":"        greet();","lastModifiedDate":"2021-08-17"},{"lineNumber":20,"author":{"gitId":"EdisonZhong17"},"content":"        do {","lastModifiedDate":"2021-08-17"},{"lineNumber":21,"author":{"gitId":"EdisonZhong17"},"content":"            // Read in the keyboard input from user, and refer to different conditions","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"EdisonZhong17"},"content":"            userCommand \u003d userType.nextLine();","lastModifiedDate":"2021-08-18"},{"lineNumber":23,"author":{"gitId":"EdisonZhong17"},"content":"            if (userCommand.equals(\"bye\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":24,"author":{"gitId":"EdisonZhong17"},"content":"                break;","lastModifiedDate":"2021-08-21"},{"lineNumber":25,"author":{"gitId":"EdisonZhong17"},"content":"            } else if (userCommand.equals(\"list\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":26,"author":{"gitId":"EdisonZhong17"},"content":"                printList(tasks, taskNum);","lastModifiedDate":"2021-08-21"},{"lineNumber":27,"author":{"gitId":"EdisonZhong17"},"content":"            } else if (userCommand.contains(\"done\")) {","lastModifiedDate":"2021-08-21"},{"lineNumber":28,"author":{"gitId":"EdisonZhong17"},"content":"                int id \u003d Integer.parseInt(userCommand.substring(5));","lastModifiedDate":"2021-08-21"},{"lineNumber":29,"author":{"gitId":"EdisonZhong17"},"content":"                taskDone(tasks[id - 1]);","lastModifiedDate":"2021-08-21"},{"lineNumber":30,"author":{"gitId":"EdisonZhong17"},"content":"            } else if (userCommand.startsWith(\"todo\")) {","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"EdisonZhong17"},"content":"                addTodo(userCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":32,"author":{"gitId":"EdisonZhong17"},"content":"            } else if (userCommand.startsWith(\"event\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":33,"author":{"gitId":"EdisonZhong17"},"content":"                addEvent(userCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":34,"author":{"gitId":"EdisonZhong17"},"content":"            } else if (userCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-08"},{"lineNumber":35,"author":{"gitId":"EdisonZhong17"},"content":"                addDeadline(userCommand);","lastModifiedDate":"2021-09-08"},{"lineNumber":36,"author":{"gitId":"EdisonZhong17"},"content":"            } else {","lastModifiedDate":"2021-09-08"},{"lineNumber":37,"author":{"gitId":"EdisonZhong17"},"content":"                printSign();","lastModifiedDate":"2021-09-08"},{"lineNumber":38,"author":{"gitId":"EdisonZhong17"},"content":"                System.out.println(\" â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-08"},{"lineNumber":39,"author":{"gitId":"EdisonZhong17"},"content":"                printSign();","lastModifiedDate":"2021-09-08"},{"lineNumber":40,"author":{"gitId":"EdisonZhong17"},"content":"            }","lastModifiedDate":"2021-09-08"},{"lineNumber":41,"author":{"gitId":"EdisonZhong17"},"content":"        } while (!Objects.equals(userCommand, \"bye\"));","lastModifiedDate":"2021-09-08"},{"lineNumber":42,"author":{"gitId":"EdisonZhong17"},"content":"        exit();","lastModifiedDate":"2021-09-08"},{"lineNumber":43,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":44,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":45,"author":{"gitId":"EdisonZhong17"},"content":"    public static void greet() {","lastModifiedDate":"2021-09-08"},{"lineNumber":46,"author":{"gitId":"EdisonZhong17"},"content":"        // the function is used to greet user in the very first beginning","lastModifiedDate":"2021-09-08"},{"lineNumber":47,"author":{"gitId":"EdisonZhong17"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":48,"author":{"gitId":"EdisonZhong17"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":49,"author":{"gitId":"EdisonZhong17"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"EdisonZhong17"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-08"},{"lineNumber":51,"author":{"gitId":"EdisonZhong17"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-08"},{"lineNumber":52,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2021-09-08"},{"lineNumber":53,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-09-08"},{"lineNumber":54,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(\"Hello! I\u0027m duke.Duke\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":55,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(\"What can I do for you?\\n\");","lastModifiedDate":"2021-09-08"},{"lineNumber":56,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-09-08"},{"lineNumber":57,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"EdisonZhong17"},"content":"    public static void addTodo(String userCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"EdisonZhong17"},"content":"        //add exception","lastModifiedDate":"2021-09-08"},{"lineNumber":61,"author":{"gitId":"EdisonZhong17"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":62,"author":{"gitId":"EdisonZhong17"},"content":"            int contentStart \u003d 5;","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"EdisonZhong17"},"content":"            String description \u003d userCommand.substring(contentStart);","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"EdisonZhong17"},"content":"            tasks[taskNum] \u003d new Todo(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"EdisonZhong17"},"content":"            taskNum++;","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"EdisonZhong17"},"content":"            printTotalNumOfTasks(tasks, taskNum);","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"EdisonZhong17"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":68,"author":{"gitId":"EdisonZhong17"},"content":"        catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":69,"author":{"gitId":"EdisonZhong17"},"content":"            printSign();","lastModifiedDate":"2021-09-08"},{"lineNumber":70,"author":{"gitId":"EdisonZhong17"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":71,"author":{"gitId":"EdisonZhong17"},"content":"            printSign();","lastModifiedDate":"2021-09-08"},{"lineNumber":72,"author":{"gitId":"EdisonZhong17"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":73,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":74,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":75,"author":{"gitId":"EdisonZhong17"},"content":"    public static void addEvent(String userCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":76,"author":{"gitId":"EdisonZhong17"},"content":"        //add exception","lastModifiedDate":"2021-09-08"},{"lineNumber":77,"author":{"gitId":"EdisonZhong17"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":78,"author":{"gitId":"EdisonZhong17"},"content":"            int contentStart \u003d 6;","lastModifiedDate":"2021-08-30"},{"lineNumber":79,"author":{"gitId":"EdisonZhong17"},"content":"            int contentEnd \u003d userCommand.indexOf(\"/at\") - 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"EdisonZhong17"},"content":"            int atStart \u003d userCommand.indexOf(\"/at\") + 4;","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"EdisonZhong17"},"content":"            String description \u003d userCommand.substring(contentStart, contentEnd);","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"EdisonZhong17"},"content":"            String at \u003d userCommand.substring(atStart);","lastModifiedDate":"2021-08-30"},{"lineNumber":83,"author":{"gitId":"EdisonZhong17"},"content":"            tasks[taskNum] \u003d new Event(description, at);","lastModifiedDate":"2021-08-30"},{"lineNumber":84,"author":{"gitId":"EdisonZhong17"},"content":"            taskNum++;","lastModifiedDate":"2021-08-30"},{"lineNumber":85,"author":{"gitId":"EdisonZhong17"},"content":"            printTotalNumOfTasks(tasks, taskNum);","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"EdisonZhong17"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":87,"author":{"gitId":"EdisonZhong17"},"content":"        catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":88,"author":{"gitId":"EdisonZhong17"},"content":"            printSign();","lastModifiedDate":"2021-09-08"},{"lineNumber":89,"author":{"gitId":"EdisonZhong17"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":90,"author":{"gitId":"EdisonZhong17"},"content":"            printSign();","lastModifiedDate":"2021-09-08"},{"lineNumber":91,"author":{"gitId":"EdisonZhong17"},"content":"        }","lastModifiedDate":"2021-09-08"},{"lineNumber":92,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":93,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":94,"author":{"gitId":"EdisonZhong17"},"content":"    public static void addDeadline(String userCommand) {","lastModifiedDate":"2021-09-08"},{"lineNumber":95,"author":{"gitId":"EdisonZhong17"},"content":"        //add exception","lastModifiedDate":"2021-09-08"},{"lineNumber":96,"author":{"gitId":"EdisonZhong17"},"content":"        try {","lastModifiedDate":"2021-09-08"},{"lineNumber":97,"author":{"gitId":"EdisonZhong17"},"content":"            int contentStart \u003d 9;","lastModifiedDate":"2021-08-30"},{"lineNumber":98,"author":{"gitId":"EdisonZhong17"},"content":"            int contentEnd \u003d userCommand.indexOf(\"/by\") - 1;","lastModifiedDate":"2021-08-30"},{"lineNumber":99,"author":{"gitId":"EdisonZhong17"},"content":"            int byStart \u003d userCommand.indexOf(\"/by\") + 4;","lastModifiedDate":"2021-08-30"},{"lineNumber":100,"author":{"gitId":"EdisonZhong17"},"content":"            String description \u003d userCommand.substring(contentStart, contentEnd);","lastModifiedDate":"2021-08-30"},{"lineNumber":101,"author":{"gitId":"EdisonZhong17"},"content":"            String by \u003d userCommand.substring(byStart);","lastModifiedDate":"2021-08-30"},{"lineNumber":102,"author":{"gitId":"EdisonZhong17"},"content":"            tasks[taskNum] \u003d new Deadline(description, by);","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"EdisonZhong17"},"content":"            taskNum++;","lastModifiedDate":"2021-08-21"},{"lineNumber":104,"author":{"gitId":"EdisonZhong17"},"content":"            printTotalNumOfTasks(tasks, taskNum);","lastModifiedDate":"2021-08-30"},{"lineNumber":105,"author":{"gitId":"EdisonZhong17"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":106,"author":{"gitId":"EdisonZhong17"},"content":"        catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-08"},{"lineNumber":107,"author":{"gitId":"EdisonZhong17"},"content":"            printSign();","lastModifiedDate":"2021-08-17"},{"lineNumber":108,"author":{"gitId":"EdisonZhong17"},"content":"            System.out.println(\"â˜¹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2021-09-08"},{"lineNumber":109,"author":{"gitId":"EdisonZhong17"},"content":"            printSign();","lastModifiedDate":"2021-08-17"},{"lineNumber":110,"author":{"gitId":"EdisonZhong17"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":111,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":112,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":113,"author":{"gitId":"EdisonZhong17"},"content":"    public static void taskDone(Task args) {","lastModifiedDate":"2021-08-21"},{"lineNumber":114,"author":{"gitId":"EdisonZhong17"},"content":"        // Mark the relevant task as \"done\", and print out a line indicates that the task is marked as done","lastModifiedDate":"2021-08-21"},{"lineNumber":115,"author":{"gitId":"EdisonZhong17"},"content":"        args.markAsDone();","lastModifiedDate":"2021-08-21"},{"lineNumber":116,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-08-21"},{"lineNumber":117,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":118,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(args.toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":119,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-08-17"},{"lineNumber":120,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":121,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":122,"author":{"gitId":"EdisonZhong17"},"content":"    public static void printList(Task[] args, int length) {","lastModifiedDate":"2021-08-21"},{"lineNumber":123,"author":{"gitId":"EdisonZhong17"},"content":"        // Print out the whole task list with their status icons","lastModifiedDate":"2021-08-21"},{"lineNumber":124,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-08-18"},{"lineNumber":125,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-21"},{"lineNumber":126,"author":{"gitId":"EdisonZhong17"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2021-08-18"},{"lineNumber":127,"author":{"gitId":"EdisonZhong17"},"content":"            System.out.print(i + 1 + \".\");","lastModifiedDate":"2021-08-18"},{"lineNumber":128,"author":{"gitId":"EdisonZhong17"},"content":"            System.out.println(args[i].toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":129,"author":{"gitId":"EdisonZhong17"},"content":"        }","lastModifiedDate":"2021-08-18"},{"lineNumber":130,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-08-18"},{"lineNumber":131,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":132,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":133,"author":{"gitId":"EdisonZhong17"},"content":"    public static void printTotalNumOfTasks(Task[] args, int total) {","lastModifiedDate":"2021-08-30"},{"lineNumber":134,"author":{"gitId":"EdisonZhong17"},"content":"        // Print out the total number of the tasks and what is added to do","lastModifiedDate":"2021-08-30"},{"lineNumber":135,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-08-30"},{"lineNumber":136,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-30"},{"lineNumber":137,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(args[total-1].toString());","lastModifiedDate":"2021-08-30"},{"lineNumber":138,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(\"Now you have \" + total + \" tasks in the list\");","lastModifiedDate":"2021-08-30"},{"lineNumber":139,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"EdisonZhong17"},"content":"    public static void exit() {","lastModifiedDate":"2021-08-17"},{"lineNumber":143,"author":{"gitId":"EdisonZhong17"},"content":"        // Exit the program one user key in \"bye\"","lastModifiedDate":"2021-08-21"},{"lineNumber":144,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-08-21"},{"lineNumber":145,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2021-08-17"},{"lineNumber":146,"author":{"gitId":"EdisonZhong17"},"content":"        printSign();","lastModifiedDate":"2021-08-17"},{"lineNumber":147,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-17"},{"lineNumber":148,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-17"},{"lineNumber":149,"author":{"gitId":"EdisonZhong17"},"content":"    public static void printSign() {","lastModifiedDate":"2021-08-17"},{"lineNumber":150,"author":{"gitId":"EdisonZhong17"},"content":"        // Print out a \"-\" line","lastModifiedDate":"2021-08-21"},{"lineNumber":151,"author":{"gitId":"EdisonZhong17"},"content":"        for (int i \u003d 1; i \u003c\u003d 40; i++) {","lastModifiedDate":"2021-08-31"},{"lineNumber":152,"author":{"gitId":"EdisonZhong17"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2021-08-17"},{"lineNumber":153,"author":{"gitId":"EdisonZhong17"},"content":"        }","lastModifiedDate":"2021-08-17"},{"lineNumber":154,"author":{"gitId":"EdisonZhong17"},"content":"        System.out.println();","lastModifiedDate":"2021-08-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"EdisonZhong17":152,"-":4}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdisonZhong17"},"content":"package duke;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"EdisonZhong17"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"EdisonZhong17"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"EdisonZhong17":4}},{"path":"src/main/java/duke/command/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdisonZhong17"},"content":"package duke.command;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"EdisonZhong17"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"EdisonZhong17"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"EdisonZhong17"},"content":"    protected String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EdisonZhong17"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"EdisonZhong17"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EdisonZhong17"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"EdisonZhong17"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EdisonZhong17"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EdisonZhong17"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EdisonZhong17"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"EdisonZhong17":18}},{"path":"src/main/java/duke/command/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdisonZhong17"},"content":"package duke.command;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"EdisonZhong17"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"EdisonZhong17"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"EdisonZhong17"},"content":"    protected String at;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EdisonZhong17"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"EdisonZhong17"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EdisonZhong17"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"EdisonZhong17"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EdisonZhong17"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"EdisonZhong17"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"EdisonZhong17"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"EdisonZhong17":18}},{"path":"src/main/java/duke/command/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdisonZhong17"},"content":"package duke.command;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"EdisonZhong17"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"EdisonZhong17"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"EdisonZhong17"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EdisonZhong17"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"EdisonZhong17"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"EdisonZhong17"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"EdisonZhong17"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"EdisonZhong17"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"EdisonZhong17":15}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EdisonZhong17"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"EdisonZhong17"},"content":"public class Task {","lastModifiedDate":"2021-08-21"},{"lineNumber":4,"author":{"gitId":"EdisonZhong17"},"content":"    protected String description;","lastModifiedDate":"2021-08-21"},{"lineNumber":5,"author":{"gitId":"EdisonZhong17"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-21"},{"lineNumber":6,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":7,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"EdisonZhong17"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"EdisonZhong17"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-21"},{"lineNumber":10,"author":{"gitId":"EdisonZhong17"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-21"},{"lineNumber":11,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":12,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":13,"author":{"gitId":"EdisonZhong17"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-21"},{"lineNumber":14,"author":{"gitId":"EdisonZhong17"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-08-21"},{"lineNumber":15,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":16,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":17,"author":{"gitId":"EdisonZhong17"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-21"},{"lineNumber":18,"author":{"gitId":"EdisonZhong17"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-21"},{"lineNumber":19,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-21"},{"lineNumber":20,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-21"},{"lineNumber":21,"author":{"gitId":"EdisonZhong17"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"EdisonZhong17"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"EdisonZhong17"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"EdisonZhong17"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"EdisonZhong17"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"EdisonZhong17"},"content":"}","lastModifiedDate":"2021-08-21"}],"authorContributionMap":{"EdisonZhong17":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EdisonZhong17"},"content":"todo borrow book","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"EdisonZhong17"},"content":"deadline read book /by September 4th","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"EdisonZhong17"},"content":"deadline return book /by September 6th","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"EdisonZhong17"},"content":"event basketball training /at Wed 8-11pm","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"EdisonZhong17"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"EdisonZhong17"},"content":"done 1","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"EdisonZhong17"},"content":"done 2","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"EdisonZhong17"},"content":"done 4","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"EdisonZhong17"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"EdisonZhong17"},"content":"done 3","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"EdisonZhong17"},"content":"deadline finish individual project /by no idea :-P","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"EdisonZhong17"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"EdisonZhong17"},"content":"LebronJames","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"EdisonZhong17"},"content":"bye","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"EdisonZhong17":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"EdisonZhong17"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EdisonZhong17":1,"-":20}}]
