[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"# Duke User Guide","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":"Duke is a CLI-based application with similar functionalities to TodoList apps.","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"## Setting up and running Duke","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"1. Ensure you have java installed on your operating system. You can download Java from https://www.java.com/en/download/manual.jsp.","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"2. You can download Duke\u0027s jarfile from https://github.com/Rakesh12000/ip/releases/download/v2.0/ip.jar. It is best to keep it in an easily accessible directory. E.g. C:\\Users\\[UserName]\\Desktop\\jarfile","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"3. Run command prompt and navigate to your jarfile directory using cd. E.g. \"cd C:\\Users\\[UserName]\\Desktop\\jarfile\".","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"4. Type command \"java -jar ip.jar\". This will run Duke.","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"5. Duke will prompt you to type in a directory where you can save the data file. Duke will then handle the creation of a text file \u0027duke.txt\u0027 in this folder to save your tasks.","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"## Duke commands","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"1. Adding Tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"   1. Adding Todo Task :      **\"todo [task description]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"   1. Adding Deadline Task :  **\"deadline [task description /by yyyy-mm-dd HHMM]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"   1. Adding Event Task :     **\"event [task description /at date/place]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"1. Viewing Tasks :            **\"list\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"1. Finding Certain Tasks :    **\"find [keyword]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"1. Marking Tasks As Done :    **\"done [task number]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"1. Removing Tasks :           **\"delete [task number]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"1. Exiting Program:           **\"bye\"**","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"Rakesh12000":18,"-":3}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"1. [T][ ] this","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"Rakesh12000":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"# Duke User Guide","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":"Duke is a CLI-based application with similar functionalities to TodoList apps.","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"## Setting up and running Duke","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"1. Ensure you have java installed on your operating system. You can download Java from https://www.java.com/en/download/manual.jsp.","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"2. You can download Duke\u0027s jarfile from https://github.com/Rakesh12000/ip/releases/download/v2.0/ip.jar. It is best to keep it in an easily accessible directory. E.g. C:\\Users\\[UserName]\\Desktop\\jarfile","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"3. Create an empty folder named \u0027data\u0027 in your C drive. E.g. C:\\data. Duke will handle the creation of a text file \u0027duke.txt\u0027 in this folder to save your tasks.","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"4. Run command prompt and navigate to your jarfile directory using cd. E.g. \"cd C:\\Users\\[UserName]\\Desktop\\jarfile\".","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"5. Type command \"java -jar ip.jar\". This will run Duke.","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"## Duke commands","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"1. Adding Tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"   1. Adding Todo Task :      **\"todo [task description]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"   1. Adding Deadline Task :  **\"deadline [task description /by yyyy-mm-dd HHMM]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"   1. Adding Event Task :     **\"event [task description /at date/place]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"1. Viewing Tasks :            **\"list\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"1. Finding Certain Tasks :    **\"find [keyword]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"1. Marking Tasks As Done :    **\"done [task number]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"1. Removing Tasks :           **\"delete [task number]\"**","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"1. Exiting Program:           **\"bye\"**","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"Rakesh12000":21}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":" * The Deadline object is an extension of the Task object. It handles the storage of the deadline task description and","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":" * the due date.","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isDeadline;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"    protected String Description;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"    protected String Date;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isData;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"    dateTime dateTime \u003d new dateTime();","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"    public Deadline(String description, String date, boolean isData) {","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"        super(description);","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"        Description \u003d description;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"        isDeadline \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"        Date \u003d date;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"        this.isData \u003d isData;","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"     * Takes in description and date of deadline task and return full task details as given below. Changes date format","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"     * from yyyy-mm-dd to MMM d yyyy by calling the dateTime program.","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"     * @return task type + task status + task description + due date","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"    public String toString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"        String taskType \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"        String middle \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"Rakesh12000"},"content":"        String time \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Rakesh12000"},"content":"        String finalDate \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"Rakesh12000"},"content":"        if (isDeadline){","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"Rakesh12000"},"content":"            taskType \u003d \"[D]\";","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d Description.substring(8, Description.lastIndexOf(\"/\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"Rakesh12000"},"content":"            if (!isData) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Rakesh12000"},"content":"                middle \u003d Date.substring(Date.indexOf(\" \") + 1, Date.lastIndexOf(\" \"));","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Rakesh12000"},"content":"                time \u003d Date.substring(Date.lastIndexOf(\" \"), Date.length());","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Rakesh12000"},"content":"                middle \u003d dateTime.getDate(middle);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Rakesh12000"},"content":"                time \u003d dateTime.getTime(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Rakesh12000"},"content":"                finalDate \u003d \"(by: \" + middle + time + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Rakesh12000"},"content":"            else {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Rakesh12000"},"content":"                middle \u003d Date;","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Rakesh12000"},"content":"                finalDate \u003d \"(\" + middle + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"Rakesh12000"},"content":"        else taskType \u003d \"\";","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"Rakesh12000"},"content":"        return taskType + \"[\" + super.getStatusIcon() + \"]\" + description + finalDate;","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"Rakesh12000":51}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":" * The Duke program performs the functions of a todolist application. It is capable of adding new tasks in the form of","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":" * todos, deadlines or events, marking them as done, listing them, finding tasks based on keywords and removing","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":" * specific tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"    private static final ArrayList\u003cTask\u003e Task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"    public static void main(String[] args) throws FileNotFoundException {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"        String date;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"        int count \u003d 0; //holds number of Tasks in Task array","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"        String fileName \u003d \"C:\\\\DukeData\\\\duke_data.txt\"; //file path","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"        String directoryName \u003d \"C:\\\\DukeData\";","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"        StorageFile store \u003d new StorageFile(); //creates new StorageFile object to handle functions related to","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"        // the data file","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"        ui ui \u003d new ui(); //creates new ui object to handle printing of ui messages","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"        store.create(); //creates new data text file","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"        store.read(); //reads existing data in file","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"        ArrayList\u003cString\u003e data \u003d store.Data; //assigns scanned data from StorageFile program to String Array data in main","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"        boolean hasData \u003d store.hasData;","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"        ui.welcome();","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"        if (hasData) { //converts Data from string to Task by adding todos, deadlines and events to Task array","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"            for (int i \u003d 0; i \u003c data.size(); i++) { //transfers data into task array","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"Rakesh12000"},"content":"                if (data.get(i).contains(\"[T]\")) {","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"Rakesh12000"},"content":"                    String task \u003d \"todo \" + data.get(i).substring(10);","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"Rakesh12000"},"content":"                    Task.add(count, new Todo(task));","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"Rakesh12000"},"content":"                    count++;","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"Rakesh12000"},"content":"                if (data.get(i).contains(\"[D]\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Rakesh12000"},"content":"                    String task \u003d data.get(i).substring(data.get(i).lastIndexOf(\"]\") + 1, data.get(i).lastIndexOf(\"(\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Rakesh12000"},"content":"                    task \u003d \"deadline\" + task + \"/\";","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Rakesh12000"},"content":"                    date \u003d data.get(i).substring(data.get(i).lastIndexOf(\"(\") + 1, data.get(i).lastIndexOf(\")\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"Rakesh12000"},"content":"                    Task.add(count, new Deadline(task, date, true));","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Rakesh12000"},"content":"                    count++;","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"Rakesh12000"},"content":"                if (data.get(i).contains(\"[E]\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Rakesh12000"},"content":"                    String task \u003d data.get(i).substring(data.get(i).lastIndexOf(\"]\") + 1, data.get(i).lastIndexOf(\"(\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Rakesh12000"},"content":"                    task \u003d \"event\" + task + \"/\";","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"Rakesh12000"},"content":"                    date \u003d data.get(i).substring(data.get(i).lastIndexOf(\"(\") + 1, data.get(i).lastIndexOf(\")\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Rakesh12000"},"content":"                    Task.add(count, new Event(task, date));","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"Rakesh12000"},"content":"                    count++;","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"Rakesh12000"},"content":"                if (data.get(i).contains(\"[X]\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Rakesh12000"},"content":"                Task.get(i).setDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"Rakesh12000"},"content":"           }","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"Rakesh12000"},"content":"            ui.listExists();","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":57,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"Rakesh12000"},"content":"        Parser parser \u003d new Parser(Task, count, store);","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"Rakesh12000"},"content":"        parser.run();","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Rakesh12000":58,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":" * The DukeException program handles invalid user commands by printing relevant error messages.","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"public class DukeException {","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isInvalidCommand;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isNotDone;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isDoneNoNumber;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isTodoEmpty;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isDeadlineEmpty;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isEventEmpty;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isDeadlineNoDate;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isEventNoDate;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isNotDelete;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isDeleteNoNumber;","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isFindNoWord;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"    protected String Description;","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"    public DukeException(String description) {","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"        Description \u003d description;","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"        isInvalidCommand \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"        isNotDone \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"        isDoneNoNumber \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"        isTodoEmpty \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"        isDeadlineEmpty \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"        isEventEmpty \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"        isDeadlineNoDate \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"        isEventNoDate \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"        isNotDelete \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"        isDeleteNoNumber \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"Rakesh12000"},"content":"        isFindNoWord \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"Rakesh12000"},"content":"     * Sets String description as relevant error message based on type of error by checking which error boolean is set","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"Rakesh12000"},"content":"     * to true and returns it.","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"Rakesh12000"},"content":"     * @return error description","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"Rakesh12000"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"Rakesh12000"},"content":"    public String toString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"Rakesh12000"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":44,"author":{"gitId":"Rakesh12000"},"content":"        if (isInvalidCommand){","lastModifiedDate":"2021-09-14"},{"lineNumber":45,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"Huh? I don\u0027t understand. What would you like to add?\\n\" + \"Use Todo/ Deadline/ Event to specify task!\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"Rakesh12000"},"content":"        else if (isNotDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"Done what??? Add the task number!\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"Rakesh12000"},"content":"        else if (isDoneNoNumber) {","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"Done what??? Use the correct task number instead!\\n\" + \"Use \u0027list\u0027 to access task number!\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"Rakesh12000"},"content":"        else if (isNotDelete) {","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"Delete what??? Add the task number!\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"Rakesh12000"},"content":"        else if (isDeleteNoNumber) {","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"Delete what??? Use the correct task number instead!\\n\" + \"Use \u0027list\u0027 to access task number!\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":58,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"Rakesh12000"},"content":"        else if (isFindNoWord) {","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"Find what??? Use keywords to find the task you\u0027re looking for!\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Rakesh12000"},"content":"        else if (isTodoEmpty) {","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"Todo what???\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"Rakesh12000"},"content":"        else if (isDeadlineEmpty) {","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"What\u0027s due when??? You can add the date and time after \u0027/\u0027!\\n\" + \"Example: (Deadline Coding Exercise /by yyyy-mm-dd HHMM)\\n\";","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":69,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"Rakesh12000"},"content":"        else if (isDeadlineNoDate) {","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"When is this due? You can add the date and time after \u0027/\u0027!\\n\" + \"Example: (Deadline Coding Exercise /by yyyy-mm-dd HHMM)\\n\";","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"Rakesh12000"},"content":"        else if (isEventEmpty) {","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"What event and when is it???\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"Rakesh12000"},"content":"        else if (isEventNoDate) {","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d \"When/where is this event? You can add the timing/place after \u0027/\u0027!\\n\" + \"Example: (Event CS Tutorial /at Wed 11:00)\\n\";","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"Rakesh12000"},"content":"        return description;","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"Rakesh12000"},"content":"    public void setInvalidCommand() {","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"Rakesh12000"},"content":"        isInvalidCommand \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"Rakesh12000"},"content":"    public void setNotDone() {","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"Rakesh12000"},"content":"        isNotDone \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"Rakesh12000"},"content":"    public void setDoneNoNumber() {","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"Rakesh12000"},"content":"        isDoneNoNumber \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"Rakesh12000"},"content":"    public void setNotDelete() {","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"Rakesh12000"},"content":"        isNotDelete \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"Rakesh12000"},"content":"    public void setDeleteNoNumber() {","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"Rakesh12000"},"content":"        isDeleteNoNumber \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"Rakesh12000"},"content":"    public void setFindNoWord() {","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"Rakesh12000"},"content":"        isFindNoWord \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"Rakesh12000"},"content":"    public void setTodoEmpty() {","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"Rakesh12000"},"content":"        isTodoEmpty \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":111,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":112,"author":{"gitId":"Rakesh12000"},"content":"    public void setDeadlineEmpty() {","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"Rakesh12000"},"content":"        isDeadlineEmpty \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"Rakesh12000"},"content":"    public void setEventEmpty() {","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"Rakesh12000"},"content":"        isEventEmpty \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":120,"author":{"gitId":"Rakesh12000"},"content":"    public void setDeadlineNoDate() {","lastModifiedDate":"2021-09-14"},{"lineNumber":121,"author":{"gitId":"Rakesh12000"},"content":"        isDeadlineNoDate \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":123,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":124,"author":{"gitId":"Rakesh12000"},"content":"    public void setEventNoDate() {","lastModifiedDate":"2021-09-14"},{"lineNumber":125,"author":{"gitId":"Rakesh12000"},"content":"        isEventNoDate \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":127,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"Rakesh12000":127}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":" * The Event object is an extension of the Task object. It handles the storage of the event task description and","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":" * the date/place of event.","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isEvent;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"    protected String Description;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"    protected String Date;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"        super(description);","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"        Description \u003d description;","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"        Date \u003d date;","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"        isEvent \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"     * Takes in description and date/place of event and returns full task details as given below.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"     * @return task type + task status + task description + date/place","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"    public String toString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"        String taskType \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"        String middle \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"        String finalDate \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"        if (isEvent){","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"            taskType \u003d \"[E]\";","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d Description.substring(5, Description.lastIndexOf(\"/\"));","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"            middle \u003d Date.substring(Date.indexOf(\" \")+1, Date.length());","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"Rakesh12000"},"content":"            finalDate \u003d \"(at: \" + middle + \")\";","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"Rakesh12000"},"content":"        } else taskType \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"Rakesh12000"},"content":"        return taskType + \"[\" + super.getStatusIcon() + \"]\" + description + finalDate;","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"Rakesh12000":35}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":" * The Parser program understands user commands and executes respective tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"public class Parser {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"    protected ArrayList\u003cTask\u003e Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"    protected String userInput;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"    protected String date \u003d \"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"    protected StorageFile Store;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"    protected int count;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"    Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"    ui ui \u003d new ui();","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"    TaskList TaskList \u003d new TaskList();","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"    String LINE  \u003d \"_______________________________________________________________\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"    public Parser(ArrayList\u003cTask\u003e Task, int count, StorageFile Store) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"        this.Task \u003d Task;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"        this.count \u003d count;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"        this.Store \u003d Store;","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"     * Runs Duke program until user command given is \"bye\". Adds todo, deadline or event tasks to Task object based on","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"     * user commands and details given such as dates. Also performs other functions using user command such as removing","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"     * tasks, marking them as done, or listing the tasks. In any case of invalid commands, it calls to DukeException to","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"     * print out invalid statements and prompt user to give a more appropriate command input.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"Rakesh12000"},"content":"    public void run() {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"Rakesh12000"},"content":"        do {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"Rakesh12000"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"Rakesh12000"},"content":"            String[] wordArr \u003d userInput.split(\" \"); // stores string of multiple words in a string Array","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"Rakesh12000"},"content":"            String firstWord \u003d wordArr[0];","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"Rakesh12000"},"content":"            DukeException invalid \u003d new DukeException(userInput); //to call when invalid commands are given","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"Rakesh12000"},"content":"            int wordLength \u003d wordArr.length;","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"Rakesh12000"},"content":"            int isInvalid \u003d 0; //functions as boolean","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"Rakesh12000"},"content":"            if (isDone(firstWord)  \u0026\u0026 wordLength \u003e 1) { //complete Tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"Rakesh12000"},"content":"                int doneNumber \u003d -1;","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"Rakesh12000"},"content":"                if (isNumber(wordArr[1])) {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Rakesh12000"},"content":"                    doneNumber \u003d Integer.parseInt(wordArr[1]) - 1; // gets Task number","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"Rakesh12000"},"content":"                if (isNumber(wordArr[1]) \u0026\u0026 doneNumber \u003c count) {","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"Rakesh12000"},"content":"                    Task.get(doneNumber).setDone(); //marks Task as done","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"Rakesh12000"},"content":"                    ui.taskDone(Task.get(doneNumber)); //prints task done message","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"Rakesh12000"},"content":"                else {","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"Rakesh12000"},"content":"                    invalid.setDoneNoNumber();","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"Rakesh12000"},"content":"                    System.out.println(LINE + invalid + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"Rakesh12000"},"content":"            else if (isDone(firstWord)  \u0026\u0026 wordLength \u003c\u003d 1) { //invalid complete Task command","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"Rakesh12000"},"content":"                invalid.setNotDone();","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"Rakesh12000"},"content":"                System.out.println(LINE + invalid + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"Rakesh12000"},"content":"            else if (isDelete(firstWord)  \u0026\u0026 wordLength \u003e 1) { //deletes Tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"Rakesh12000"},"content":"                int deleteNumber \u003d -1;","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Rakesh12000"},"content":"                if (isNumber(wordArr[1])) {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"Rakesh12000"},"content":"                    deleteNumber \u003d Integer.parseInt(wordArr[1]) - 1; // gets Task number to delete","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"Rakesh12000"},"content":"                if (isNumber(wordArr[1]) \u0026\u0026 deleteNumber \u003c count) {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Rakesh12000"},"content":"                    ui.deleteTask(Task.get(deleteNumber)); //prints message saying task removed","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"Rakesh12000"},"content":"                    TaskList.removeTask(Task, deleteNumber); //removes Task","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"Rakesh12000"},"content":"                    count--;","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"Rakesh12000"},"content":"                else {","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"Rakesh12000"},"content":"                    invalid.setDeleteNoNumber();","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"Rakesh12000"},"content":"                    System.out.println(LINE + invalid + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"Rakesh12000"},"content":"            else if (isDelete(firstWord)  \u0026\u0026 wordLength \u003c\u003d 1) { //invalid delete Task command","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"Rakesh12000"},"content":"                invalid.setNotDelete();","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Rakesh12000"},"content":"                System.out.println(LINE + invalid + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"Rakesh12000"},"content":"            else if (isFind(firstWord)  \u0026\u0026 wordLength \u003c\u003d 1) { //invalid find Task command","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"Rakesh12000"},"content":"                invalid.setFindNoWord();","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"Rakesh12000"},"content":"                System.out.println(LINE + invalid + LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"Rakesh12000"},"content":"            else if (isFind(firstWord) \u0026\u0026 wordLength \u003e 1) { //finds tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"Rakesh12000"},"content":"                int index \u003d 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"Rakesh12000"},"content":"                boolean wordExists \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"Rakesh12000"},"content":"                System.out.println(LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"Rakesh12000"},"content":"                for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"Rakesh12000"},"content":"                    String currentTask \u003d \"\" + Task.get(i); //converts task object to string","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"Rakesh12000"},"content":"                    String keyword \u003d wordArr[1];","lastModifiedDate":"2021-09-27"},{"lineNumber":96,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"Rakesh12000"},"content":"                    if (currentTask.contains(keyword)) { //find tasks containing keyword and prints them","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"Rakesh12000"},"content":"                        wordExists \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"Rakesh12000"},"content":"                        System.out.print(index + \". \");","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"Rakesh12000"},"content":"                        System.out.println(Task.get(i) + \" - Task no: \" + (i+1));","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"Rakesh12000"},"content":"                        index++;","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"Rakesh12000"},"content":"                    }","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"Rakesh12000"},"content":"                if (!wordExists) { //prints error message if keyword is not found","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"Rakesh12000"},"content":"                    ui.wordNotFound();","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"Rakesh12000"},"content":"                System.out.println(LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"Rakesh12000"},"content":"            else if (!isBye(userInput) \u0026\u0026 !isList(userInput)) { //Task words","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"Rakesh12000"},"content":"                if (isTodo(firstWord) \u0026\u0026 wordLength \u003d\u003d 1) { //Todo is empty","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"Rakesh12000"},"content":"                    invalid.setTodoEmpty();","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"Rakesh12000"},"content":"                    isInvalid \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"Rakesh12000"},"content":"                else if (isTodo(firstWord) \u0026\u0026 wordLength \u003e 1){ //Todo is not empty","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"Rakesh12000"},"content":"                    TaskList.addTodo(Task, count, userInput);","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"Rakesh12000"},"content":"                    count++;","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"Rakesh12000"},"content":"                else if (isDeadline(firstWord) \u0026\u0026 wordLength \u003d\u003d 1 ) { //Deadline is empty","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"Rakesh12000"},"content":"                    invalid.setDeadlineEmpty();","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"Rakesh12000"},"content":"                    isInvalid \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"Rakesh12000"},"content":"                else if (isDeadline(firstWord) \u0026\u0026 wordLength \u003e 1 ) { //Deadline is not empty","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"Rakesh12000"},"content":"                    if (userInput.contains(\"/\") \u0026\u0026 userInput.contains(\"-\")) { //Deadline has a date","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"Rakesh12000"},"content":"                        date \u003d userInput.substring(userInput.lastIndexOf(\"/\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"Rakesh12000"},"content":"                        TaskList.addDeadline(Task, count, userInput, date);","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"Rakesh12000"},"content":"                        count++;","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"Rakesh12000"},"content":"                    }","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"Rakesh12000"},"content":"                    else { //Deadline Task has no date","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"Rakesh12000"},"content":"                        invalid.setDeadlineNoDate();","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"Rakesh12000"},"content":"                        isInvalid \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"Rakesh12000"},"content":"                    }","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"Rakesh12000"},"content":"                else if (isEvent(firstWord) \u0026\u0026 wordLength \u003d\u003d 1 ) { //Event is empty","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"Rakesh12000"},"content":"                    invalid.setEventEmpty();","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"Rakesh12000"},"content":"                    isInvalid \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"Rakesh12000"},"content":"                else if (isEvent(firstWord) \u0026\u0026 wordLength \u003e 1 ) { //Event is not empty","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"Rakesh12000"},"content":"                    if (userInput.contains(\"/\")) { //Event has a date/place","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"Rakesh12000"},"content":"                        date \u003d userInput.substring(userInput.lastIndexOf(\"/\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"Rakesh12000"},"content":"                        TaskList.addEvent(Task, count, userInput, date);","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"Rakesh12000"},"content":"                        count++;","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"Rakesh12000"},"content":"                    }","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"Rakesh12000"},"content":"                    else { //Event has no date","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"Rakesh12000"},"content":"                        invalid.setEventNoDate();","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"Rakesh12000"},"content":"                        isInvalid \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"Rakesh12000"},"content":"                    }","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"Rakesh12000"},"content":"                else { //Other invalid commands","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"Rakesh12000"},"content":"                    invalid.setInvalidCommand();","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"Rakesh12000"},"content":"                    isInvalid \u003d 1;","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"Rakesh12000"},"content":"                switch(isInvalid) { //handles errors","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"Rakesh12000"},"content":"                    case 0: ui.addedTask(firstWord.toLowerCase(), Task.get(count - 1), count);","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"Rakesh12000"},"content":"                        break;","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"Rakesh12000"},"content":"                    case 1: System.out.println(LINE + invalid + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"Rakesh12000"},"content":"                        break;","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"Rakesh12000"},"content":"            else if (isList(userInput)) { //List tasks","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"Rakesh12000"},"content":"                ui.list();","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"Rakesh12000"},"content":"                for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"Rakesh12000"},"content":"                    System.out.print(i + 1 + \". \");","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"Rakesh12000"},"content":"                    System.out.println(Task.get(i));","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"Rakesh12000"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"Rakesh12000"},"content":"                System.out.print(LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":177,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":178,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"Rakesh12000"},"content":"            for (int i \u003d 0; i \u003c count; i++) {","lastModifiedDate":"2021-09-27"},{"lineNumber":180,"author":{"gitId":"Rakesh12000"},"content":"                String text \u003d toString(Task.get(i), i+1);","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"Rakesh12000"},"content":"                Store.write(i, text);","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"Rakesh12000"},"content":"        } while (!isBye(userInput)); //Exits","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"Rakesh12000"},"content":"        ui.bye();","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"Rakesh12000"},"content":"    public static String toString(Task task, int i) {","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"Rakesh12000"},"content":"        return i + \". \" + task;","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"Rakesh12000"},"content":"    public static boolean isBye(String word) {","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"Rakesh12000"},"content":"        return word.equalsIgnoreCase(\"bye\");","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"Rakesh12000"},"content":"    public static boolean isList(String word) {","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"Rakesh12000"},"content":"        return word.equalsIgnoreCase(\"list\");","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"Rakesh12000"},"content":"    public static boolean isDone(String word) { return word.equalsIgnoreCase(\"done\"); }","lastModifiedDate":"2021-09-27"},{"lineNumber":201,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"Rakesh12000"},"content":"    public static boolean isTodo(String word) { return word.equalsIgnoreCase(\"todo\"); }","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"Rakesh12000"},"content":"    public static boolean isDeadline(String word) {","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"Rakesh12000"},"content":"        return word.equalsIgnoreCase(\"deadline\");","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"Rakesh12000"},"content":"    public static boolean isEvent(String word) {","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"Rakesh12000"},"content":"        return word.equalsIgnoreCase(\"event\");","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"Rakesh12000"},"content":"    public static boolean isNumber(String input) {","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"Rakesh12000"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"Rakesh12000"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"Rakesh12000"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":217,"author":{"gitId":"Rakesh12000"},"content":"        catch (final NumberFormatException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":218,"author":{"gitId":"Rakesh12000"},"content":"            return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":219,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":220,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"Rakesh12000"},"content":"    public static boolean isDelete(String word) {","lastModifiedDate":"2021-09-26"},{"lineNumber":223,"author":{"gitId":"Rakesh12000"},"content":"        return word.equalsIgnoreCase(\"delete\");","lastModifiedDate":"2021-09-26"},{"lineNumber":224,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":225,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":226,"author":{"gitId":"Rakesh12000"},"content":"    public static boolean isFind(String word) {","lastModifiedDate":"2021-09-27"},{"lineNumber":227,"author":{"gitId":"Rakesh12000"},"content":"        return word.equalsIgnoreCase(\"find\");","lastModifiedDate":"2021-09-27"},{"lineNumber":228,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":229,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":230,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Rakesh12000":230}},{"path":"src/main/java/StorageFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"import java.io.File;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":" * The StorageFile program handles the creation of data file, reading existing tasks in it and the writing of new tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":" * to the file.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"public class StorageFile {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"    protected String fileName;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"    protected String directoryName;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean hasData;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"    protected int count \u003d 0;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"    protected String date \u003d \"\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"    protected ArrayList\u003cString\u003e Data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"    protected ArrayList\u003cTask\u003e Task \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"     * Creates a new file named \"duke.txt\" in the given file path and prints a creation message. In the case the file","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"     * already exists, prints a message stating its existence. Also prints an error message in case any error occurs.","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"    public void create() {","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"        System.out.println(\"Enter the path to create a directory:  [e.g. C:\\\\DUKE\\\\]\");","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"        String directoryPath \u003d sc.next();","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"Rakesh12000"},"content":"        File directory \u003d new File(directoryPath);","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"Rakesh12000"},"content":"        boolean createdDir \u003d directory.mkdir();","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"Rakesh12000"},"content":"        if (createdDir) {","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"Rakesh12000"},"content":"            System.out.println(\"Directory created successfully: \" + directoryPath);","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"Rakesh12000"},"content":"        } else {","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"Rakesh12000"},"content":"            System.out.println(\"Directory already exists: \" + directoryPath);","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"Rakesh12000"},"content":"        String name \u003d \"duke.txt\";","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"Rakesh12000"},"content":"        fileName \u003d directoryPath + \"\\\\\" + name;","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"Rakesh12000"},"content":"        try {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"Rakesh12000"},"content":"            File myFile \u003d new File(fileName);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"Rakesh12000"},"content":"            if (myFile.createNewFile()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"Rakesh12000"},"content":"                System.out.println(\"File created: \" + myFile.getName() + \"\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"Rakesh12000"},"content":"            else {","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"Rakesh12000"},"content":"                System.out.println(\"File already exists: \" + myFile.getName());","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"Rakesh12000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"Rakesh12000"},"content":"            System.out.println(\"An error occurred.\\n\");","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"Rakesh12000"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"Rakesh12000"},"content":"     * Scans every line in duke.txt file as a String and stores it in a String Array.","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"Rakesh12000"},"content":"     * @throws FileNotFoundException when file is not found at given file path","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"Rakesh12000"},"content":"    public void read() throws FileNotFoundException {","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"Rakesh12000"},"content":"        File f \u003d new File(fileName); // create a File for the given file path","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"Rakesh12000"},"content":"        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"Rakesh12000"},"content":"        while (s.hasNext()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"Rakesh12000"},"content":"            hasData \u003d true;","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"Rakesh12000"},"content":"            String word \u003d s.nextLine();","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"Rakesh12000"},"content":"            Data.add(word);","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"Rakesh12000"},"content":"     * Saves the tasks by writing to the text file.","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"Rakesh12000"},"content":"     * @param i index of Task array to differentiate between writing over and appending in the text file","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"Rakesh12000"},"content":"     * @param text Task to write in the text file","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"Rakesh12000"},"content":"    public void write(int i, String text) {","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"Rakesh12000"},"content":"        if (i\u003d\u003d0) {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"Rakesh12000"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Rakesh12000"},"content":"                writeToFile(fileName, text + System.lineSeparator());","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"Rakesh12000"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"Rakesh12000"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"Rakesh12000"},"content":"        else {","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"Rakesh12000"},"content":"            try {","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"Rakesh12000"},"content":"                appendToFile(fileName, text + System.lineSeparator());","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"Rakesh12000"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"Rakesh12000"},"content":"                System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"Rakesh12000"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"Rakesh12000"},"content":"     * Writes over existing text in text file","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"Rakesh12000"},"content":"     * @param filePath where the text file is kept","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"Rakesh12000"},"content":"     * @param textToAdd text to write to file","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"Rakesh12000"},"content":"     * @throws IOException when method is unable to write to file","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"Rakesh12000"},"content":"    private static void writeToFile(String filePath, String textToAdd) throws IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"Rakesh12000"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"Rakesh12000"},"content":"        fw.write(textToAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"Rakesh12000"},"content":"        fw.close();","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"Rakesh12000"},"content":"     * Appends text to text file","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"Rakesh12000"},"content":"     * @param filePath where the text file is kept","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"Rakesh12000"},"content":"     * @param textToAppend text to append to file","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"Rakesh12000"},"content":"     * @throws IOException when method is unable to append to file","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"Rakesh12000"},"content":"    private static void appendToFile(String filePath, String textToAppend) throws IOException {","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"Rakesh12000"},"content":"        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"Rakesh12000"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"Rakesh12000"},"content":"        fw.close();","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Rakesh12000":116}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":" * The Task object handles the storage of Task description and its task status.","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":"public class Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"    protected String description;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"    public Task(String description) {","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"     * Returns the task status of tasks based on the truth of the isDone boolean.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"     * @return task status","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"     * Sets the isDone boolean to true when called upon.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"    public void setDone() {","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"Rakesh12000":29}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":" * The TaskList program handles the adding and removing of Task objects to/from the Task array.","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"public class TaskList {","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"     * Adds todos into the existing Task Array at a certain index given by the integer count.","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"     * @param Task The Task array into which todos will be added","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"     * @param count The index of Task array at which the new todos will be added","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"     * @param userInput The description of the todos to be added","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"    public void addTodo(ArrayList\u003cTask\u003e Task, int count, String userInput) {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"        Task.add(count, new Todo(userInput));","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"     * Adds deadlines into the existing Task Array at a certain index given by the integer count.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"     * @param Task The Task array into which deadlines will be added","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"     * @param count The index of Task array at which the new deadlines will be added","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"     * @param userInput The description of the deadlines to be added","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"     * @param date The date by when the deadline is due by.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"    public void addDeadline(ArrayList\u003cTask\u003e Task, int count, String userInput, String date) {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"        Task.add(count, new Deadline(userInput, date, false));","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"     * Adds events into the existing Task Array at a certain index given by the integer count.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"     * @param Task The Task array into which events will be added","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"Rakesh12000"},"content":"     * @param count The index of Task array at which the new events will be added","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"Rakesh12000"},"content":"     * @param userInput The description of the events to be added","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"Rakesh12000"},"content":"     * @param date The date by when the event is due by.","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"Rakesh12000"},"content":"    public void addEvent(ArrayList\u003cTask\u003e Task, int count, String userInput, String date) {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"Rakesh12000"},"content":"        Task.add(count, new Event(userInput, date));","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"Rakesh12000"},"content":"     * Removes tasks from the existing Task Array at a certain index given by the integer count.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"Rakesh12000"},"content":"     * @param Task The Task array from which tasks will be removed","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"Rakesh12000"},"content":"     * @param count The index of Task array at which the task will be removed","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"Rakesh12000"},"content":"    public void removeTask(ArrayList\u003cTask\u003e Task, int count) {","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"Rakesh12000"},"content":"        Task.remove(count);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Rakesh12000":47}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":" * The Todo object is an extension of the Task object. It handles the storage of the Todo task description.","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"    protected boolean isTodo;","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"    protected String Description;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"        super(description);","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"        Description \u003d description;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"        isTodo \u003d true;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"     * Takes in description returns full task details as given below.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"     * @return task type + task status + task description","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"    public String toString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"        String taskType;","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"        if (isTodo){","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"            taskType \u003d \"[T]\";","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"            description \u003d Description.substring(Description.indexOf(\" \"), Description.length());","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"        } else taskType \u003d \"\";","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"        return taskType + \"[\" + super.getStatusIcon() + \"]\" + description;","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"Rakesh12000":30}},{"path":"src/main/java/dateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":" * The dateTime program formats date and time to desired format.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"public class dateTime {","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"     * Converts date from yyyy-mm-dd format to MMM d yyyy format.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"     * @param date given in yyyy-mm-dd format","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"     * @return String Date","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"    public String getDate(String date) {","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"        LocalDate Date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"        return \"\" + Date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"     * Converts time from 24-hour format and writes in 12-hour format. E.g. from 1830 to 6.30pm.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"     * @param time given in 24-hour format.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"     * @return String Time","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"    public String getTime(String time) {","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"        String Time;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"        String amPm;","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"        String hour;","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"        int intHour;","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"        String min;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"Rakesh12000"},"content":"        hour \u003d time.substring(1, 3);","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"Rakesh12000"},"content":"        min \u003d time.substring(3, 5);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"Rakesh12000"},"content":"        intHour \u003d Integer.parseInt(hour);","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"Rakesh12000"},"content":"        if (intHour \u003c\u003d 11) {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"Rakesh12000"},"content":"            amPm \u003d \"am\";","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Rakesh12000"},"content":"        else {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Rakesh12000"},"content":"            amPm \u003d \"pm\";","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Rakesh12000"},"content":"            hour \u003d toAnalog(intHour);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"Rakesh12000"},"content":"        if (min.equals(\"00\")) {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"Rakesh12000"},"content":"            min \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"Rakesh12000"},"content":"        else {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"Rakesh12000"},"content":"            min \u003d \".\" + min;","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"Rakesh12000"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"Rakesh12000"},"content":"        Time \u003d \" \" + hour + min + amPm;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"Rakesh12000"},"content":"        return Time;","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"Rakesh12000"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"Rakesh12000"},"content":"     * Converts integer hour of time from 24-hour to 12-hour format and returns it as string","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"Rakesh12000"},"content":"     * @param intHour hour of time in 24-hour format","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"Rakesh12000"},"content":"     * @return String analogHour","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"Rakesh12000"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"Rakesh12000"},"content":"    public String toAnalog(int intHour) {","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"Rakesh12000"},"content":"        int analogHour \u003d intHour - 12;","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"Rakesh12000"},"content":"        return \"\" + analogHour;","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"Rakesh12000":64}},{"path":"src/main/java/ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Rakesh12000"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"Rakesh12000"},"content":" * The ui program handles the printing of all messages that are not related to invalid commands.","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Rakesh12000"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"Rakesh12000"},"content":"public class ui {","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"Rakesh12000"},"content":"    String LINE \u003d \"_______________________________________________________________\\n\";","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"Rakesh12000"},"content":"    public void welcome() {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"Rakesh12000"},"content":"        System.out.println(LINE + \"Hello! I\u0027m Duke\\n\" + \"Whatchu want\\n\" + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"Rakesh12000"},"content":"    public void listExists() {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"Rakesh12000"},"content":"        System.out.println(\"Looks like you already have some tasks. Type \u0027list\u0027 to view them!\\n\" + LINE);","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"Rakesh12000"},"content":"    public void taskDone(Task word) {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"Rakesh12000"},"content":"        System.out.println(LINE + \"Ok! I\u0027ve marked this task as done:\\n\" + word +","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"Rakesh12000"},"content":"                \"\\nYou can add more tasks or view existing ones by typing \u0027list\u0027!\\n\"+ LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"Rakesh12000"},"content":"    public void deleteTask(Task word) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"Rakesh12000"},"content":"        System.out.println(LINE + \"Ok! I\u0027ve removed this task:\\n\" + word +","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"Rakesh12000"},"content":"                \"\\nYou can add more tasks or view existing ones by typing \u0027list\u0027!\\n\" + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"Rakesh12000"},"content":"    public void addedTask(String firstWord, Task word, int count) {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"Rakesh12000"},"content":"        System.out.println(LINE + \"Ok! I\u0027ve added this \" + firstWord + \":\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"Rakesh12000"},"content":"                word + \"\\n\" + \"Now you have \" + count + (count \u003d\u003d 1 ? \" task\":\" tasks\") + \" in the list.\\n\" +","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"Rakesh12000"},"content":"                \"Type \u0027list\u0027 to save / view your tasks!\\n\" + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"Rakesh12000"},"content":"    public void list() {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"Rakesh12000"},"content":"        System.out.print(LINE + \"You can mark tasks as done by typing \u0027done\u0027 + task number!\\n\" );","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"Rakesh12000"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"Rakesh12000"},"content":"    public void bye() {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"Rakesh12000"},"content":"        System.out.println(LINE + \"Bye. Hope to see you again soon!\\n\" + LINE);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"Rakesh12000"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"Rakesh12000"},"content":"    public void wordNotFound() {","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"Rakesh12000"},"content":"        System.out.println(\"Task with given keyword does not exist!\\n\");","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"Rakesh12000"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"Rakesh12000"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"Rakesh12000":42}}]
