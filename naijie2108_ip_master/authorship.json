[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"naijie2108":2,"-":22}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"Duke is a **desktop app for managing tasks meant for use via a Command Line Interface**.","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"If you can type fast and want to manage your tasks, then this is the App for you. ","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"## **1. Quick Start**","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"* Ensure you have `Java 11` installed in your computer","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"* Download the v0.2 JAR file (ip.jar) from [here](https://github.com/naijie2108/ip/releases/tag/A-Release).","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"* Copy the file to your desired folder. This folder will act as the home folder for the JAR file.","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"* Then, open your terminal in the folder storing the JAR file, and run the following command `java -jar ip.jar` You should be able to see a welcome message","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"like this:","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"Hello from","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":" ____        _        ","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"|  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"| | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"| |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"|____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"What can I do for you?","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"## **2. Key Features**","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"A brief summary of available features in Duke. For more detailed instructions, go to the `Commands` section.","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"### **Manage tasks**","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"Add/Delete 3 different types of tasks to your task list, namely:","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"* Todo ","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"* Deadline","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"* Event  ","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"### **List tasks**","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"List all current tasks to keep track of tasks that need to be done","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"### **Mark tasks**","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"Mark tasks when you are done with them to better keep track of your existing tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"### **Find tasks**","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"Search for tasks from your existing list of tasks by using keywords.","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"### **Auto-save feature**","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"All changes made to the task list are saved automatically, so the user does not have to","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"worry about losing data from the task list when exiting the program.","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"---","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"## **3. Commands**","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"List of all the commands available in Duke.","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"### **`todo` - Add Todo task**","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"Adds a Todo task to your task list with a description of the task. If no description is given, ","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"it will return an error message and the task will not be added.","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"If the command is successful, the task will be printed out together with the total number of tasks currently in the task list","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"**Command format:**","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"`todo [description]`","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"Parameters:","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"* `[description]` - Description of the Todo task, can include spaces","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"**Example:**","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"`todo CS2113 Lecture Quiz`","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"Expected output:","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"The following task has been added:","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"\t[T][ ] CS2113 Lecture Quiz","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"You now have 1 task(s)","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"`[T]` shows that the task added is a Todo task. There are ","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"other types of tasks, namely Deadline and Event tasks.  ","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"  ","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"### **`deadline` - Add Deadline task**","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"Adds a Deadline task to your task list with a description and deadline for the task. If no description or deadline","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"naijie2108"},"content":"is given, it will return an error message and the task will not be added.","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"If the command is successful, the task will be printed out together with the total number of tasks currently in the task list","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"**Command format:**","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"naijie2108"},"content":"`deadline [description] /by [deadline]`","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"Parameters:","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"* `[description]` - Description of the task, can include spaces","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"* `[deadline]` - Deadline of the task, needs to be in the format `yyyy-mm-dd HH:mm`","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"naijie2108"},"content":"**Example:**","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"`deadline CG2027 Assignment 3 /by 2021-09-22 13:00`","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"Expected output:","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":114,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":115,"author":{"gitId":"naijie2108"},"content":"The following task has been added:","lastModifiedDate":"2021-09-22"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"\t[D][ ] CG2027 Assignment 3 (by: Sep 22 2021 13:00)","lastModifiedDate":"2021-09-22"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"You now have 2 task(s)","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"`[D]` shows that the task added is a Deadline task. There are","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"other types of tasks, namely Todo and Event tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"### **`event` - Add Event task**","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"Adds an Event task to your task list with a description and time for the task. If no description or time","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"is given, it will return an error message and the task will not be added.","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"If the command is successful, the task will be printed out together with the total number of tasks currently in the task list","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"**Command format:**","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"`event [description] /at [time]`","lastModifiedDate":"2021-09-25"},{"lineNumber":135,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"naijie2108"},"content":"Parameters:","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"naijie2108"},"content":"* `[description]` - Description of the task, can include spaces","lastModifiedDate":"2021-09-22"},{"lineNumber":138,"author":{"gitId":"naijie2108"},"content":"* `[time]` - Time of the event, needs to be in the format `yyyy-mm-dd HH:mm`","lastModifiedDate":"2021-09-22"},{"lineNumber":139,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"naijie2108"},"content":"**Example:**","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":142,"author":{"gitId":"naijie2108"},"content":"`event CS2113 Lecture /at 2021-09-30 16:00`","lastModifiedDate":"2021-09-22"},{"lineNumber":143,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":144,"author":{"gitId":"naijie2108"},"content":"Expected output:","lastModifiedDate":"2021-09-22"},{"lineNumber":145,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"naijie2108"},"content":"The following task has been added:","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"naijie2108"},"content":"\t[E][ ] CS2113 Lecture (at: Sep 30 2021 16:00)","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"naijie2108"},"content":"You now have 3 task(s)","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"naijie2108"},"content":"`[E]` shows that the task added is an Event task. There are","lastModifiedDate":"2021-09-22"},{"lineNumber":153,"author":{"gitId":"naijie2108"},"content":"other types of tasks, namely Todo and Deadline tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":154,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":155,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":156,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":157,"author":{"gitId":"naijie2108"},"content":"### **`list` - List all tasks available**","lastModifiedDate":"2021-09-22"},{"lineNumber":158,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"Lists all tasks that have been added to your task list. If there are no tasks, simply shows that no tasks are available.","lastModifiedDate":"2021-09-22"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"**Command format:**","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"`list`","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"naijie2108"},"content":"**Example:**","lastModifiedDate":"2021-09-22"},{"lineNumber":166,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":167,"author":{"gitId":"naijie2108"},"content":"`list`","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":169,"author":{"gitId":"naijie2108"},"content":"Expected output:","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":172,"author":{"gitId":"naijie2108"},"content":"Here are all your tasks:","lastModifiedDate":"2021-09-22"},{"lineNumber":173,"author":{"gitId":"naijie2108"},"content":"\t1. [T][X] CS2113 Lecture Quiz","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"naijie2108"},"content":"\t2. [D][ ] CG2027 Assignment 3 (by: Sep 22 2021 13:00)","lastModifiedDate":"2021-09-22"},{"lineNumber":175,"author":{"gitId":"naijie2108"},"content":"\t3. [E][ ] CS2113 Lecture (at: Sep 30 2021 16:00)","lastModifiedDate":"2021-09-22"},{"lineNumber":176,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":177,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"naijie2108"},"content":"The first `[]` in each task represents the type of the task:","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"naijie2108"},"content":"* `[T]` - Todo ","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"naijie2108"},"content":"* `[E]` - Event","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"naijie2108"},"content":"* `[D]` - Deadline","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":183,"author":{"gitId":"naijie2108"},"content":"The second `[]` represents whether the task is done:","lastModifiedDate":"2021-09-22"},{"lineNumber":184,"author":{"gitId":"naijie2108"},"content":"* `[X]` - Task is done","lastModifiedDate":"2021-09-22"},{"lineNumber":185,"author":{"gitId":"naijie2108"},"content":"* `[]` - Task not done yet","lastModifiedDate":"2021-09-22"},{"lineNumber":186,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"naijie2108"},"content":"For example, task 1 `CS2113 Lecture Quiz` is a todo task that has been marked as done","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":189,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":190,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":191,"author":{"gitId":"naijie2108"},"content":"### **`done` - Mark task as done**","lastModifiedDate":"2021-09-22"},{"lineNumber":192,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":193,"author":{"gitId":"naijie2108"},"content":"Marks a previously added task as done. If an invalid task number is provided, it will return an error","lastModifiedDate":"2021-09-22"},{"lineNumber":194,"author":{"gitId":"naijie2108"},"content":"and the command is stopped.","lastModifiedDate":"2021-09-22"},{"lineNumber":195,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":196,"author":{"gitId":"naijie2108"},"content":"**Command format:**","lastModifiedDate":"2021-09-22"},{"lineNumber":197,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":198,"author":{"gitId":"naijie2108"},"content":"`done [task number]`","lastModifiedDate":"2021-09-22"},{"lineNumber":199,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":200,"author":{"gitId":"naijie2108"},"content":"Parameters:","lastModifiedDate":"2021-09-22"},{"lineNumber":201,"author":{"gitId":"naijie2108"},"content":"* `[task number]` - Number representing the task to mark. A list of available tasks and their corresponding task number can be found by using the command `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":202,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":203,"author":{"gitId":"naijie2108"},"content":"**Example:**","lastModifiedDate":"2021-09-22"},{"lineNumber":204,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"naijie2108"},"content":"`done 1`","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":207,"author":{"gitId":"naijie2108"},"content":"Expected output:","lastModifiedDate":"2021-09-22"},{"lineNumber":208,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":209,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":210,"author":{"gitId":"naijie2108"},"content":"The following task has been marked as done:","lastModifiedDate":"2021-09-22"},{"lineNumber":211,"author":{"gitId":"naijie2108"},"content":"\t[T][X] CS2113 Lecture Quiz","lastModifiedDate":"2021-09-22"},{"lineNumber":212,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":213,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":214,"author":{"gitId":"naijie2108"},"content":"`[X]` represents that the task has been marked as done","lastModifiedDate":"2021-09-22"},{"lineNumber":215,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":216,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":217,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":218,"author":{"gitId":"naijie2108"},"content":"### **`delete` - Delete a task**","lastModifiedDate":"2021-09-22"},{"lineNumber":219,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":220,"author":{"gitId":"naijie2108"},"content":"Deletes a previously added task from your task list. If an invalid task number is provided, it will return an error","lastModifiedDate":"2021-09-22"},{"lineNumber":221,"author":{"gitId":"naijie2108"},"content":"and the command is stopped.","lastModifiedDate":"2021-09-22"},{"lineNumber":222,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":223,"author":{"gitId":"naijie2108"},"content":"**Command format:**","lastModifiedDate":"2021-09-22"},{"lineNumber":224,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":225,"author":{"gitId":"naijie2108"},"content":"`delete [task number]`","lastModifiedDate":"2021-09-22"},{"lineNumber":226,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"naijie2108"},"content":"Parameters:","lastModifiedDate":"2021-09-22"},{"lineNumber":228,"author":{"gitId":"naijie2108"},"content":"* `[task number]` - Number representing the task to delete. A list of available tasks and their corresponding task number can be found by using the command `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":229,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":230,"author":{"gitId":"naijie2108"},"content":"**Example:**","lastModifiedDate":"2021-09-22"},{"lineNumber":231,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":232,"author":{"gitId":"naijie2108"},"content":"`delete 1`","lastModifiedDate":"2021-09-22"},{"lineNumber":233,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"naijie2108"},"content":"Expected output:","lastModifiedDate":"2021-09-22"},{"lineNumber":235,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":236,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":237,"author":{"gitId":"naijie2108"},"content":"The following task has been deleted:","lastModifiedDate":"2021-09-22"},{"lineNumber":238,"author":{"gitId":"naijie2108"},"content":"\t[T][X] CS2113 Lecture Quiz","lastModifiedDate":"2021-09-22"},{"lineNumber":239,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":240,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":241,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":242,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":243,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":244,"author":{"gitId":"naijie2108"},"content":"### **`find` - Find tasks**","lastModifiedDate":"2021-09-22"},{"lineNumber":245,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":246,"author":{"gitId":"naijie2108"},"content":"Search for tasks from text provided. Returns all tasks with description containing the text provided. For example, if a task has a description \u0027Assignment\u0027, ","lastModifiedDate":"2021-09-22"},{"lineNumber":247,"author":{"gitId":"naijie2108"},"content":"results from a query \u0027Assign\u0027 will contain that task in the results. Take note to use the correct letter-case when searching for tasks,","lastModifiedDate":"2021-09-22"},{"lineNumber":248,"author":{"gitId":"naijie2108"},"content":"as the search is case-sensitive.","lastModifiedDate":"2021-09-22"},{"lineNumber":249,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":250,"author":{"gitId":"naijie2108"},"content":"**Command format:**","lastModifiedDate":"2021-09-22"},{"lineNumber":251,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":252,"author":{"gitId":"naijie2108"},"content":"`find [query]`","lastModifiedDate":"2021-09-27"},{"lineNumber":253,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":254,"author":{"gitId":"naijie2108"},"content":"* `[query]` - Text to query for","lastModifiedDate":"2021-09-22"},{"lineNumber":255,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":256,"author":{"gitId":"naijie2108"},"content":"**Example:**","lastModifiedDate":"2021-09-22"},{"lineNumber":257,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":258,"author":{"gitId":"naijie2108"},"content":"`find CG`","lastModifiedDate":"2021-09-22"},{"lineNumber":259,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":260,"author":{"gitId":"naijie2108"},"content":"Expected output:","lastModifiedDate":"2021-09-22"},{"lineNumber":261,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":262,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":263,"author":{"gitId":"naijie2108"},"content":"Here are all the matching tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":264,"author":{"gitId":"naijie2108"},"content":"\t1. [D][ ] CG2027 Assignment 3 (by: Sep 22 2021 13:00)","lastModifiedDate":"2021-09-22"},{"lineNumber":265,"author":{"gitId":"naijie2108"},"content":"\t2. [T][ ] CG2027 Revision","lastModifiedDate":"2021-09-22"},{"lineNumber":266,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":267,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":268,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":269,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":270,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":271,"author":{"gitId":"naijie2108"},"content":"### **`save` - Save tasks**","lastModifiedDate":"2021-09-22"},{"lineNumber":272,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":273,"author":{"gitId":"naijie2108"},"content":"Saves your task list so that you will still be able to view the tasks the next time you","lastModifiedDate":"2021-09-22"},{"lineNumber":274,"author":{"gitId":"naijie2108"},"content":"use the program. ","lastModifiedDate":"2021-09-22"},{"lineNumber":275,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":276,"author":{"gitId":"naijie2108"},"content":"This feature acts as a safeguard, as there is already an auto-save feature which activates every time your task list is modified.","lastModifiedDate":"2021-09-22"},{"lineNumber":277,"author":{"gitId":"naijie2108"},"content":"Users can use this feature in case there is an error with the auto-save feature.","lastModifiedDate":"2021-09-22"},{"lineNumber":278,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":279,"author":{"gitId":"naijie2108"},"content":"**Command format:**","lastModifiedDate":"2021-09-22"},{"lineNumber":280,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":281,"author":{"gitId":"naijie2108"},"content":"`save`","lastModifiedDate":"2021-09-22"},{"lineNumber":282,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":283,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":284,"author":{"gitId":"naijie2108"},"content":"**Example:**","lastModifiedDate":"2021-09-22"},{"lineNumber":285,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":286,"author":{"gitId":"naijie2108"},"content":"`save`","lastModifiedDate":"2021-09-22"},{"lineNumber":287,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":288,"author":{"gitId":"naijie2108"},"content":"Expected output:","lastModifiedDate":"2021-09-22"},{"lineNumber":289,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":290,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":291,"author":{"gitId":"naijie2108"},"content":"You task list has been saved successfully","lastModifiedDate":"2021-09-22"},{"lineNumber":292,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":293,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":294,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":295,"author":{"gitId":"naijie2108"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":296,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":297,"author":{"gitId":"naijie2108"},"content":"### **`bye` - Exit program**","lastModifiedDate":"2021-09-22"},{"lineNumber":298,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":299,"author":{"gitId":"naijie2108"},"content":"Exits and terminates the program.","lastModifiedDate":"2021-09-22"},{"lineNumber":300,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":301,"author":{"gitId":"naijie2108"},"content":"**Command format:**","lastModifiedDate":"2021-09-22"},{"lineNumber":302,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":303,"author":{"gitId":"naijie2108"},"content":"`bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":304,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":305,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":306,"author":{"gitId":"naijie2108"},"content":"**Example:**","lastModifiedDate":"2021-09-22"},{"lineNumber":307,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":308,"author":{"gitId":"naijie2108"},"content":"`bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":309,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":310,"author":{"gitId":"naijie2108"},"content":"Expected output:","lastModifiedDate":"2021-09-22"},{"lineNumber":311,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":312,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":313,"author":{"gitId":"naijie2108"},"content":"Thank you for using our application. We hope to see you again soon","lastModifiedDate":"2021-09-22"},{"lineNumber":314,"author":{"gitId":"naijie2108"},"content":"----------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-09-22"},{"lineNumber":315,"author":{"gitId":"naijie2108"},"content":"```","lastModifiedDate":"2021-09-22"},{"lineNumber":316,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":317,"author":{"gitId":"naijie2108"},"content":"## **4. Command Summary**","lastModifiedDate":"2021-09-27"},{"lineNumber":318,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":319,"author":{"gitId":"naijie2108"},"content":"Action | Command Format | Example","lastModifiedDate":"2021-09-27"},{"lineNumber":320,"author":{"gitId":"naijie2108"},"content":"--- | --- | --- | ","lastModifiedDate":"2021-09-27"},{"lineNumber":321,"author":{"gitId":"naijie2108"},"content":"Todo | todo [description] | `todo Assignment`","lastModifiedDate":"2021-09-27"},{"lineNumber":322,"author":{"gitId":"naijie2108"},"content":"Deadline | deadline [description] /by [deadline] | `deadline CG2027 Assignment /by 2021-10-01 11:59`","lastModifiedDate":"2021-09-27"},{"lineNumber":323,"author":{"gitId":"naijie2108"},"content":"Event | event [description] /at [time] | `event lecture /at 2021-12-11 19:00`","lastModifiedDate":"2021-09-27"},{"lineNumber":324,"author":{"gitId":"naijie2108"},"content":"List | list | `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":325,"author":{"gitId":"naijie2108"},"content":"Done | done [task number] | `done 2`","lastModifiedDate":"2021-09-27"},{"lineNumber":326,"author":{"gitId":"naijie2108"},"content":"Delete | delete [task number] | `delete 3`","lastModifiedDate":"2021-09-27"},{"lineNumber":327,"author":{"gitId":"naijie2108"},"content":"Find | find [query] | `find lecture`","lastModifiedDate":"2021-09-27"},{"lineNumber":328,"author":{"gitId":"naijie2108"},"content":"Save | save | `save`","lastModifiedDate":"2021-09-27"},{"lineNumber":329,"author":{"gitId":"naijie2108"},"content":"Exit | bye | `bye`","lastModifiedDate":"2021-09-27"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"naijie2108":312,"-":18}},{"path":"src/main/java/duke/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import duke.exception.ExceptionMessages;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":" * Receives commands that come in from the user, and then","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":" * carries out the relevant command.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"public class CommandHandler {","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"    //Strings to define command type","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_LIST_TASKS \u003d \"list\";","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_MARK_TASK_AS_DONE \u003d \"done\";","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_ADD_TODO_TASK \u003d \"todo\";","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_ADD_DEADLINE_TASK \u003d \"deadline\";","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_ADD_EVENT_TASK \u003d \"event\";","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_DELETE_TASK \u003d \"delete\";","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_SAVE_TASK_LIST \u003d \"save\";","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_FIND_TASK \u003d \"find\";","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"     * Takes in as \u003ccode\u003eTaskList\u003c/code\u003e object and user commands and executes the relevant methods.","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"     * @param commandType Type of command.","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"     * @param commandArgs Arguments to the command.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"     * @param tasks Task list which commands are operated on.","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"     * @throws DukeException If command is invalid.","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"    public static void processInput(String commandType, String commandArgs, TaskList tasks) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"            exitProgram(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_LIST_TASKS:","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"            listAllTasks(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_MARK_TASK_AS_DONE:","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"            markTaskAsDone(commandArgs, tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_ADD_TODO_TASK:","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"            addTodoTaskToList(commandArgs, tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_ADD_DEADLINE_TASK:","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"            addDeadlineTaskToList(commandArgs, tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_ADD_EVENT_TASK:","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"            addEventTaskToList(commandArgs, tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_DELETE_TASK:","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"            deleteTask(commandArgs, tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_SAVE_TASK_LIST:","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"            saveTaskList(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_FIND_TASK:","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"            findTask(commandArgs, tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"        default:","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_INVALID_COMMAND);","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"    private static void exitProgram(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"        Storage.writeTaskListToFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"        Ui.printExitProgramMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"        System.exit(0);","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"    private static void saveTaskList(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"        Storage.writeTaskListToFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"        Ui.printSaveTaskMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"    private static void listAllTasks(TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"        tasks.listAllTasks();","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"    private static void markTaskAsDone(String taskNumber, TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"            tasks.markTaskAsDone(taskNumber);","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"            Storage.writeTaskListToFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"            final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"            switch (message) {","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_NO_TASK_NUMBER:","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"                Ui.showNoTaskNumberError();","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_INVALID_TASK_NUMBER:","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"                Ui.showInvalidTaskNumberError();","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"naijie2108"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"naijie2108"},"content":"            Ui.showInvalidTaskNumberFormatError();","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"    private static void deleteTask(String input, TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"naijie2108"},"content":"            tasks.deleteTask(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"            Storage.writeTaskListToFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"            final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"            switch (message) {","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_NO_TASK_NUMBER:","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"naijie2108"},"content":"                Ui.showNoTaskNumberError();","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_INVALID_TASK_NUMBER:","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"                Ui.showInvalidTaskNumberError();","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"            Ui.showInvalidTaskNumberFormatError();","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"    private static void addTodoTaskToList(String input, TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"            tasks.addTask(new Todo(input));","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"            Storage.writeTaskListToFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"            final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"            if (message.equals(ExceptionMessages.EXCEPTION_NO_DESCRIPTION)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"                Ui.showTodoDescriptionError();","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"naijie2108"},"content":"    private static void addDeadlineTaskToList(String input, TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"naijie2108"},"content":"            final String[] taskDescriptionAndBy \u003d Parser.splitDeadlineDescriptionAndTime(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"naijie2108"},"content":"            final String description \u003d taskDescriptionAndBy[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"naijie2108"},"content":"            final String by \u003d taskDescriptionAndBy[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"naijie2108"},"content":"            LocalDateTime dateTime \u003d Parser.parseDateTime(by);","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"naijie2108"},"content":"            tasks.addTask(new Deadline(description, dateTime));","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"naijie2108"},"content":"            Storage.writeTaskListToFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"naijie2108"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"naijie2108"},"content":"            final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"naijie2108"},"content":"            switch (message) {","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_NO_DESCRIPTION:","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"naijie2108"},"content":"                Ui.showDeadlineDescriptionError();","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_WRONG_DEADLINE_FORMAT:","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"naijie2108"},"content":"                Ui.showDeadlineFormatError();","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"naijie2108"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"naijie2108"},"content":"            Ui.showDateTimeFormatError();","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"    private static void addEventTaskToList(String input, TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"            final String[] taskDescriptionAndAt \u003d Parser.splitEventDescriptionAndTime(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"            final String description \u003d taskDescriptionAndAt[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"            final String at \u003d taskDescriptionAndAt[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"naijie2108"},"content":"            LocalDateTime dateTime \u003d Parser.parseDateTime(at);","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"naijie2108"},"content":"            tasks.addTask(new Event(description, dateTime));","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"naijie2108"},"content":"            Storage.writeTaskListToFile(tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"naijie2108"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"naijie2108"},"content":"            final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"naijie2108"},"content":"            switch (message) {","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_NO_DESCRIPTION:","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"naijie2108"},"content":"                Ui.showEventDescriptionError();","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_WRONG_EVENT_FORMAT:","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"naijie2108"},"content":"                Ui.showEventFormatError();","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"naijie2108"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"naijie2108"},"content":"            Ui.showDateTimeFormatError();","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"naijie2108"},"content":"    private static void findTask(String input, TaskList tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"naijie2108"},"content":"            tasks.findTasks(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"naijie2108"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"naijie2108"},"content":"            if (e.getMessage().equals(ExceptionMessages.EXCEPTION_EMPTY_SEARCH_QUERY)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"naijie2108"},"content":"                Ui.showEmptyQueryError();","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"naijie2108":192}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import duke.exception.ExceptionMessages;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"     * Executes the Duke program and continuously reads in and executes commands","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"     * given by the user until the program is terminated.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    public static void run() {","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"        String input;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"        Ui.printWelcomeMessage();","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"        TaskList tasks \u003d Storage.loadTaskListFromFile();","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"        while (true) {","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"            input \u003d ui.readInput();","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"            String[] parsedCommand \u003d Parser.splitCommandWordAndArgs(input);","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"            String commandType \u003d parsedCommand[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"            String commandArgs \u003d parsedCommand[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"            try {","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"                CommandHandler.processInput(commandType, commandArgs, tasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"                final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"                if (message.equals(ExceptionMessages.EXCEPTION_INVALID_COMMAND)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"                    Ui.showInvalidCommandError();","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"                }","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"        run();","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"naijie2108":36,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke;","lastModifiedDate":"2021-09-19"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import duke.exception.ExceptionMessages;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":" * Parses commands and input from the user to make sense of user commands.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"public class Parser {","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //@@author naijie2108-reused","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/nus-cs2113-AY2122S1/contacts","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Splits the command type and command arguments from raw user input.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * If there are no command arguments in the input, returns blank space as argument instead.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param rawUserInput String representing input from the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return A String array of length \u003d\u003d 2, with split[0] being the command type,","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and split[1] being the command argument.","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String[] splitCommandWordAndArgs(String rawUserInput) {","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        final String[] split \u003d rawUserInput.trim().split(\" \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    //@@author naijie2108-reused","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/nus-cs2113-AY2122S1/contacts","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Splits the description and time in the raw description of a Deadline task.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param rawDescription Raw description of the Deadline task consisting of both","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *                       description and time of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return A string array of length \u003d\u003d 2, with split[0] containing the description,","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and split[1] containing the task time.","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws DukeException If deadline format is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String[] splitDeadlineDescriptionAndTime(String rawDescription) throws DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String[] split \u003d rawDescription.trim().split(\"/by\", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c split.length; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            split[i] \u003d split[i].trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_WRONG_DEADLINE_FORMAT);","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return split;","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //@@author naijie2108-reused","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/nus-cs2113-AY2122S1/contacts","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Splits the description and time in the raw description of an Event task.","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param rawDescription Raw description of the Event task consisting of both description","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *                       and time of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @return A string array of length \u003d\u003d 2, with split[0] containing the description,","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * and split[1] containing the task time.","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws DukeException If event format is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static String[] splitEventDescriptionAndTime(String rawDescription) throws DukeException{","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String[] split \u003d rawDescription.trim().split(\"/at\", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c split.length; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            split[i] \u003d split[i].trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (split.length !\u003d 2) {","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_WRONG_EVENT_FORMAT);","lastModifiedDate":"2021-09-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return split;","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //@@author naijie2108-reused","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/nus-cs2113-AY2122S1/contacts","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Splits the date and time in the dateTime input of Deadline and Event tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param dateTime Date time input of Deadline and Event tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @return A string array of length \u003d\u003d 2, with split[0] containing the date and split[1]","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * containing the time.","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static String[] splitDateAndTime(String dateTime) {","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String[] split \u003d dateTime.trim().split(\" \", 2);","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c split.length; i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            split[i] \u003d split[i].trim();","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return split;","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //@@author naijie2108-reused","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/nus-cs2113-AY2122S1/contacts","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses date and time input of Deadline and Event tasks into a","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @param dateTime Date time input of Deadline and Event tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * @return Date and Time of represented by dateTime as a \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws DateTimeParseException If the date and time input cannot be parsed.","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static LocalDateTime parseDateTime(String dateTime) throws DateTimeParseException{","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        LocalDateTime parsedDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        final String[] timeSplit \u003d splitDateAndTime(dateTime);","lastModifiedDate":"2021-09-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final String date \u003d timeSplit[0];","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final String time \u003d timeSplit[1];","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        parsedDateTime \u003d LocalDateTime.parse(date + \"T\" + time);","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return parsedDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-19"}],"authorContributionMap":{"naijie2108":13,"-":101}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke;","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import java.io.File;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"import duke.exception.ExceptionMessages;","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":" * Deals with loading tasks from save file and saving tasks to the save file.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"public class Storage {","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    private static final String ROOT \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    private static final Path FILE_PATH \u003d Paths.get(ROOT, \"data\", \"duke.txt\");","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    private static final Path DIRECTORY_PATH \u003d Paths.get(ROOT, \"data\");","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"     * Saves a \u003ccode\u003eTaskList\u003c/code\u003e object to a file in a relative path specified by FILE_PATH","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"     * by converting it to a text file.","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"     * If the file or the target directory does not exist, it will be created.","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"     * @param taskList The task list to be saved.","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"    public static void writeTaskListToFile(TaskList taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"            if (!Files.exists((DIRECTORY_PATH))) {","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"                createDataDirectory();","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"            if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"                createFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"            FileWriter fw \u003d new FileWriter(FILE_PATH.toString());","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"            fw.write(taskList.toFile());","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"            fw.close();","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"            Ui.showWritingToSaveFileError();","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"            switch (e.getMessage()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_CREATE_FILE_FAIL:","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"                Ui.showCreateSaveFileError();","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"            case ExceptionMessages.EXCEPTION_CREATE_DIRECTORY_FAIL:","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"                Ui.showCreateDirectoryError();","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"            default:","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"                Ui.showUnknownError();","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"    private static void createDataDirectory() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"        File newDirectory \u003d new File(DIRECTORY_PATH.toString());","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"        boolean createSuccess \u003d newDirectory.mkdir();","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"        if (!createSuccess) {","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_CREATE_DIRECTORY_FAIL);","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"    private static void createFile() throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"            File newFile \u003d new File(FILE_PATH.toString());","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"            boolean createSuccess \u003d newFile.createNewFile();","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"            if (!createSuccess) {","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"                throw new DukeException(ExceptionMessages.EXCEPTION_CREATE_FILE_FAIL);","lastModifiedDate":"2021-09-13"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"            Ui.showCreateSaveFileError();","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"     * Loads task list stored in the text save file and converts it to a \u003ccode\u003eTaskList\u003c/code\u003e object.","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"     * @return TaskList object obtained by converting text save file to a TaskList object.","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"    public static TaskList loadTaskListFromFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"        if (!Files.exists(FILE_PATH)) {","lastModifiedDate":"2021-09-13"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"            return new TaskList();","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2021-09-13"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"            File newFile \u003d new File(FILE_PATH.toString());","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"naijie2108"},"content":"            Scanner s \u003d new Scanner(newFile);","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2021-09-13"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"                final String task \u003d s.nextLine();","lastModifiedDate":"2021-09-13"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"                Task newTask \u003d convertTextToTask(task);","lastModifiedDate":"2021-09-13"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"                tasks.addTaskWithoutMessage(newTask);","lastModifiedDate":"2021-09-13"},{"lineNumber":101,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":102,"author":{"gitId":"naijie2108"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"            Ui.showReadSaveFileError();","lastModifiedDate":"2021-09-19"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"            Ui.showConvertSaveFileError();","lastModifiedDate":"2021-09-19"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":107,"author":{"gitId":"naijie2108"},"content":"        return tasks;","lastModifiedDate":"2021-09-13"},{"lineNumber":108,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"    private static Task convertTextToTask(String task) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"        final String[] taskDetails \u003d task.split(\"\\\\|\");","lastModifiedDate":"2021-09-13"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"        final String taskType \u003d taskDetails[0];","lastModifiedDate":"2021-09-13"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"        final boolean isDone \u003d taskDetails[1].equals(\"1\");","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"naijie2108"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-13"},{"lineNumber":115,"author":{"gitId":"naijie2108"},"content":"        case \"T\":","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"            String todoDescription \u003d taskDetails[2];","lastModifiedDate":"2021-09-13"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"            return new Todo(todoDescription, isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"        case \"D\":","lastModifiedDate":"2021-09-13"},{"lineNumber":119,"author":{"gitId":"naijie2108"},"content":"            String deadlineDescription \u003d taskDetails[2];","lastModifiedDate":"2021-09-13"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"            LocalDateTime deadlineBy \u003d LocalDateTime.parse(taskDetails[3]);","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"            return new Deadline(deadlineDescription, deadlineBy, isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"        case \"E\":","lastModifiedDate":"2021-09-13"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"            String eventDescription \u003d taskDetails[2];","lastModifiedDate":"2021-09-13"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"            LocalDateTime eventAt \u003d LocalDateTime.parse(taskDetails[3]);","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"            return new Event(eventDescription, eventAt, isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"        default:","lastModifiedDate":"2021-09-13"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_INVALID_FILE_LINE);","lastModifiedDate":"2021-09-13"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-09-13"}],"authorContributionMap":{"naijie2108":132}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"public class Ui {","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    //Application Logo","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    //Utility constants","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"    private static final String INDENTATION \u003d \"\\t\";","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    private static final int HORIZONTAL_LINE_LENGTH \u003d 100;","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    //General Messages","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_START_APPLICATION \u003d \"Hello from\\n\" + LOGO + System.lineSeparator() +","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"            \"What can I do for you?\";","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_EXIT_APPLICATION \u003d \"Thank you for using our application. \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"            \"We hope to see you again soon\";","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_INVALID_COMMAND \u003d \"I am sorry but I am not able to \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"            \"recognise this command\";","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_SAVE_TASK_LIST \u003d \"You task list has been saved successfully\";","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_TASK_ADDED_SUCCESSFULLY \u003d \"The following task has been added:\";","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"The following task has been marked as done:\";","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"The following task has been deleted:\";","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_NO_TASK_AVAILABLE \u003d \"You have no tasks yet\";","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_PRINT_ALL_TASK_SUCCESS \u003d \"Here are all your tasks:\";","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_NO_MATCHING_TASK \u003d \"There are no matching tasks available\";","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"    private static final String MESSAGE_FIND_TASK_SUCCESS \u003d \"Here are all the matching tasks\";","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"    //Error Messages","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_NO_TASK_NUMBER_TO_MARK \u003d \"Please provide a task number e.g \u0027xxxx 2\u0027\";","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_INVALID_TASK_NUMBER \u003d \"Sorry, but the task does not exist, \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"            \"unable to proceed with command.\\n\" +","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"            \"You can view a list of your tasks using the \u0027list\u0027 command\";","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_INVALID_TASK_NUMBER_FORMAT \u003d \"There seems to be an issue with \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"            \"the format of the task number.\\n \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"            \"Please try again with the correct format (e.g xxxx 3)\";","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_TODO_NO_DESCRIPTION \u003d \"Todo tasks require a description \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"            \"e.g \u0027todo CS1010 Assignment\u0027\";","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_DEADLINE_NO_DESCRIPTION \u003d \"Deadlines require a description \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"            \"e.g \u0027deadline Project Reflection /by Friday 10pm\u0027\";","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_EVENT_NO_DESCRIPTION \u003d \"Events require a description \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"            \"e.g \u0027event Seminar /at Friday 2pm\u0027\";","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_WRITING_TO_SAVE_FILE \u003d \"Error writing to save file\";","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_CREATING_SAVE_FILE \u003d \"Error creating save file\";","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_CREATING_DATA_DIRECTORY \u003d \"Error creating data directory\";","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_DUKE_UNKNOWN \u003d \"Unknown error with Duke occurred\";","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_READING_SAVE_FILE \u003d \"Error reading save file, \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"            \"some tasks may have been lost\";","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_CONVERTING_SAVE_FILE \u003d \"Error converting file to task list, \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"            \"some tasks may have been lost\";","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_EMPTY_QUERY \u003d \"The query is empty. Please add a valid query\";","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_DATE_TIME_FORMAT \u003d \"There is an error with the date time \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"            \"format provided, please use a valid date time format\\n\" +","lastModifiedDate":"2021-09-19"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"            \"(e.g yyyy-mm-dd HH:mm)\";","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_EVENT_FORMAT \u003d \"There is an error with the format of the input. \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"            \"Please enter a valid input\\n\" +","lastModifiedDate":"2021-09-19"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"            \"(e.g event Lecture /at 2019-08-13 20:00)\";","lastModifiedDate":"2021-09-19"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"    private static final String ERROR_DEADLINE_FORMAT \u003d \"There is an error with the format of the input. \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"            \"Please enter a valid input\\n \" +","lastModifiedDate":"2021-09-19"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"            \"(e.g deadline Assignment /by 2021-08-23 13:00)\";","lastModifiedDate":"2021-09-25"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"     * Scanner object to read user input","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"    private final Scanner in;","lastModifiedDate":"2021-09-19"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"     * Constructs an instance of the \u003ccode\u003eUi\u003c/code\u003e object.","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"     * Only required when reading input from user, as all other methods","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"     * are static methods.","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"    public Ui() {","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"    //Reading input","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"     * Reads input from the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"     * @return Input by the user as a String.","lastModifiedDate":"2021-09-19"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"    public String readInput() {","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"        return in.nextLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":96,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"    //Utility print methods","lastModifiedDate":"2021-09-25"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"    private static void printHorizontalLine() {","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c HORIZONTAL_LINE_LENGTH; i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"naijie2108"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2021-08-25"},{"lineNumber":102,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"        System.out.println();","lastModifiedDate":"2021-08-25"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"    private static void printSpacing() {","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"naijie2108"},"content":"        System.out.print(INDENTATION);","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"    private static void printGenericMessage(String message) {","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"        System.out.println(message);","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":115,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"    //General Messages","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"     * Prints a welcome message to the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"    public static void printWelcomeMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"        System.out.println(MESSAGE_START_APPLICATION);","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"        Ui.printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"     * Prints a farewell message to the user.","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"    public static void printExitProgramMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(MESSAGE_EXIT_APPLICATION);","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"naijie2108"},"content":"     * Prints a message indicating that tasks were saved successfully.","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"naijie2108"},"content":"    public static void printSaveTaskMessage() {","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(MESSAGE_SAVE_TASK_LIST);","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":139,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":140,"author":{"gitId":"naijie2108"},"content":"     * Prints a message indicating that a task was added successfully.","lastModifiedDate":"2021-09-19"},{"lineNumber":141,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":142,"author":{"gitId":"naijie2108"},"content":"     * @param listLength Length of the task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":143,"author":{"gitId":"naijie2108"},"content":"     * @param taskAdded  The task that was added.","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"naijie2108"},"content":"    public static void printAddTaskMessage(int listLength, Task taskAdded) {","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":147,"author":{"gitId":"naijie2108"},"content":"        System.out.println(MESSAGE_TASK_ADDED_SUCCESSFULLY);","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"naijie2108"},"content":"        Ui.printSpacing();","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"naijie2108"},"content":"        System.out.println(taskAdded);","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"You now have \" + listLength + \" task(s)\");","lastModifiedDate":"2021-09-19"},{"lineNumber":151,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":152,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":155,"author":{"gitId":"naijie2108"},"content":"     * Prints a message indicating that a task was deleted successfully.","lastModifiedDate":"2021-09-19"},{"lineNumber":156,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":157,"author":{"gitId":"naijie2108"},"content":"     * @param taskDeleted The task that was deleted.","lastModifiedDate":"2021-09-19"},{"lineNumber":158,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"    public static void printDeleteTaskSuccessMessage(Task taskDeleted) {","lastModifiedDate":"2021-09-19"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"        System.out.println(MESSAGE_DELETE_TASK_SUCCESS);","lastModifiedDate":"2021-09-19"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"        printSpacing();","lastModifiedDate":"2021-09-19"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"        System.out.println(taskDeleted);","lastModifiedDate":"2021-09-19"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":165,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":166,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":167,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":168,"author":{"gitId":"naijie2108"},"content":"     * Prints a message indicating that a task was marked as done successfully.","lastModifiedDate":"2021-09-19"},{"lineNumber":169,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":170,"author":{"gitId":"naijie2108"},"content":"     * @param taskMarked The task that was marked.","lastModifiedDate":"2021-09-19"},{"lineNumber":171,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":172,"author":{"gitId":"naijie2108"},"content":"    public static void printMarkTaskSuccessMessage(Task taskMarked) {","lastModifiedDate":"2021-09-19"},{"lineNumber":173,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":174,"author":{"gitId":"naijie2108"},"content":"        System.out.println(MESSAGE_MARK_TASK_SUCCESS);","lastModifiedDate":"2021-09-19"},{"lineNumber":175,"author":{"gitId":"naijie2108"},"content":"        printSpacing();","lastModifiedDate":"2021-09-19"},{"lineNumber":176,"author":{"gitId":"naijie2108"},"content":"        System.out.println(taskMarked);","lastModifiedDate":"2021-09-19"},{"lineNumber":177,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":178,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":179,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":180,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":181,"author":{"gitId":"naijie2108"},"content":"     * Prints all matching tasks from a query.","lastModifiedDate":"2021-09-19"},{"lineNumber":182,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":183,"author":{"gitId":"naijie2108"},"content":"     * @param matchingTasks List of matching tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":184,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":185,"author":{"gitId":"naijie2108"},"content":"    public static void printMatchingTasks(ArrayList\u003cTask\u003e matchingTasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":186,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":187,"author":{"gitId":"naijie2108"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":188,"author":{"gitId":"naijie2108"},"content":"            System.out.println(MESSAGE_NO_MATCHING_TASK);","lastModifiedDate":"2021-09-19"},{"lineNumber":189,"author":{"gitId":"naijie2108"},"content":"            printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":190,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-09-19"},{"lineNumber":191,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":192,"author":{"gitId":"naijie2108"},"content":"        System.out.println(MESSAGE_FIND_TASK_SUCCESS);","lastModifiedDate":"2021-09-19"},{"lineNumber":193,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":194,"author":{"gitId":"naijie2108"},"content":"            printSpacing();","lastModifiedDate":"2021-09-19"},{"lineNumber":195,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + matchingTasks.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":196,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":197,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":198,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":199,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":200,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":201,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":202,"author":{"gitId":"naijie2108"},"content":"     * Prints all the task in a task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":203,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":204,"author":{"gitId":"naijie2108"},"content":"     * @param tasks ArrayList containing all tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":205,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":206,"author":{"gitId":"naijie2108"},"content":"    public static void printAllTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-19"},{"lineNumber":207,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":208,"author":{"gitId":"naijie2108"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2021-09-19"},{"lineNumber":209,"author":{"gitId":"naijie2108"},"content":"            System.out.println(MESSAGE_NO_TASK_AVAILABLE);","lastModifiedDate":"2021-09-19"},{"lineNumber":210,"author":{"gitId":"naijie2108"},"content":"            printHorizontalLine();","lastModifiedDate":"2021-09-19"},{"lineNumber":211,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-09-19"},{"lineNumber":212,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":213,"author":{"gitId":"naijie2108"},"content":"        System.out.println(MESSAGE_PRINT_ALL_TASK_SUCCESS);","lastModifiedDate":"2021-09-19"},{"lineNumber":214,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-19"},{"lineNumber":215,"author":{"gitId":"naijie2108"},"content":"            printSpacing();","lastModifiedDate":"2021-09-19"},{"lineNumber":216,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));","lastModifiedDate":"2021-09-19"},{"lineNumber":217,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":218,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":219,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":220,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":221,"author":{"gitId":"naijie2108"},"content":"    //Error messages split into multiple methods for better maintainability","lastModifiedDate":"2021-09-19"},{"lineNumber":222,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":223,"author":{"gitId":"naijie2108"},"content":"     * Shows error when there is no description provided for a Todo task.","lastModifiedDate":"2021-09-19"},{"lineNumber":224,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":225,"author":{"gitId":"naijie2108"},"content":"    public static void showTodoDescriptionError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":226,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_TODO_NO_DESCRIPTION);","lastModifiedDate":"2021-09-19"},{"lineNumber":227,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":228,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":229,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":230,"author":{"gitId":"naijie2108"},"content":"     * Shows error when there is no description provided for a Deadline task.","lastModifiedDate":"2021-09-19"},{"lineNumber":231,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":232,"author":{"gitId":"naijie2108"},"content":"    public static void showDeadlineDescriptionError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":233,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_DEADLINE_NO_DESCRIPTION);","lastModifiedDate":"2021-09-19"},{"lineNumber":234,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":235,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":236,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":237,"author":{"gitId":"naijie2108"},"content":"     * Shows error when there is no description provided for an Event task.","lastModifiedDate":"2021-09-19"},{"lineNumber":238,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":239,"author":{"gitId":"naijie2108"},"content":"    public static void showEventDescriptionError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":240,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_EVENT_NO_DESCRIPTION);","lastModifiedDate":"2021-09-19"},{"lineNumber":241,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":242,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":243,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":244,"author":{"gitId":"naijie2108"},"content":"     * Shows error when an input command is invalid.","lastModifiedDate":"2021-09-19"},{"lineNumber":245,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":246,"author":{"gitId":"naijie2108"},"content":"    public static void showInvalidCommandError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":247,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2021-09-19"},{"lineNumber":248,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":249,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":250,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":251,"author":{"gitId":"naijie2108"},"content":"     * Shows error when task number is not provided for certain commands.","lastModifiedDate":"2021-09-19"},{"lineNumber":252,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":253,"author":{"gitId":"naijie2108"},"content":"    public static void showNoTaskNumberError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":254,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_NO_TASK_NUMBER_TO_MARK);","lastModifiedDate":"2021-09-19"},{"lineNumber":255,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":256,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":257,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":258,"author":{"gitId":"naijie2108"},"content":"     * Shows error when task number provided for certain commands is invalid.","lastModifiedDate":"2021-09-19"},{"lineNumber":259,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":260,"author":{"gitId":"naijie2108"},"content":"    public static void showInvalidTaskNumberError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":261,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-19"},{"lineNumber":262,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":263,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":264,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":265,"author":{"gitId":"naijie2108"},"content":"     * Shows error when there is an error with the format of the task number provided","lastModifiedDate":"2021-09-19"},{"lineNumber":266,"author":{"gitId":"naijie2108"},"content":"     * for certain commands.","lastModifiedDate":"2021-09-19"},{"lineNumber":267,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":268,"author":{"gitId":"naijie2108"},"content":"    public static void showInvalidTaskNumberFormatError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":269,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_INVALID_TASK_NUMBER_FORMAT);","lastModifiedDate":"2021-09-19"},{"lineNumber":270,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":271,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":272,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":273,"author":{"gitId":"naijie2108"},"content":"     * Shows error when there is an error with creating a file to save the task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":274,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":275,"author":{"gitId":"naijie2108"},"content":"    public static void showCreateSaveFileError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":276,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_CREATING_SAVE_FILE);","lastModifiedDate":"2021-09-19"},{"lineNumber":277,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":278,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":279,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":280,"author":{"gitId":"naijie2108"},"content":"     * Shows error when there is an error with creating a directory to save the task list file.","lastModifiedDate":"2021-09-19"},{"lineNumber":281,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":282,"author":{"gitId":"naijie2108"},"content":"    public static void showCreateDirectoryError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":283,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_CREATING_DATA_DIRECTORY);","lastModifiedDate":"2021-09-19"},{"lineNumber":284,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":285,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":286,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":287,"author":{"gitId":"naijie2108"},"content":"     * Shows error when there is an error with converting the save file into a","lastModifiedDate":"2021-09-19"},{"lineNumber":288,"author":{"gitId":"naijie2108"},"content":"     * \u003ccode\u003eTaskList\u003c/code\u003e object.","lastModifiedDate":"2021-09-19"},{"lineNumber":289,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":290,"author":{"gitId":"naijie2108"},"content":"    public static void showConvertSaveFileError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":291,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_CONVERTING_SAVE_FILE);","lastModifiedDate":"2021-09-19"},{"lineNumber":292,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":293,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":294,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":295,"author":{"gitId":"naijie2108"},"content":"     * Shows error when there is an error with reading the save file from the given path.","lastModifiedDate":"2021-09-19"},{"lineNumber":296,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":297,"author":{"gitId":"naijie2108"},"content":"    public static void showReadSaveFileError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":298,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_READING_SAVE_FILE);","lastModifiedDate":"2021-09-19"},{"lineNumber":299,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":300,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":301,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":302,"author":{"gitId":"naijie2108"},"content":"     * Shows error when there is error with writing to a save file.","lastModifiedDate":"2021-09-19"},{"lineNumber":303,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":304,"author":{"gitId":"naijie2108"},"content":"    public static void showWritingToSaveFileError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":305,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_WRITING_TO_SAVE_FILE);","lastModifiedDate":"2021-09-19"},{"lineNumber":306,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":307,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":308,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":309,"author":{"gitId":"naijie2108"},"content":"     * Shows error when query input in empty.","lastModifiedDate":"2021-09-19"},{"lineNumber":310,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":311,"author":{"gitId":"naijie2108"},"content":"    public static void showEmptyQueryError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":312,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_EMPTY_QUERY);","lastModifiedDate":"2021-09-19"},{"lineNumber":313,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":314,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":315,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":316,"author":{"gitId":"naijie2108"},"content":"     * Shows error when DateTime format is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":317,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":318,"author":{"gitId":"naijie2108"},"content":"    public static void showDateTimeFormatError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":319,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_DATE_TIME_FORMAT);","lastModifiedDate":"2021-09-19"},{"lineNumber":320,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":321,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":322,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":323,"author":{"gitId":"naijie2108"},"content":"     * Shows error when Event format is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":324,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":325,"author":{"gitId":"naijie2108"},"content":"    public static void showEventFormatError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":326,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_EVENT_FORMAT);","lastModifiedDate":"2021-09-19"},{"lineNumber":327,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":328,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":329,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":330,"author":{"gitId":"naijie2108"},"content":"     * Shows error when Deadline format is wrong.","lastModifiedDate":"2021-09-19"},{"lineNumber":331,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":332,"author":{"gitId":"naijie2108"},"content":"    public static void showDeadlineFormatError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":333,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_DEADLINE_FORMAT);","lastModifiedDate":"2021-09-19"},{"lineNumber":334,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":335,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":336,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":337,"author":{"gitId":"naijie2108"},"content":"     * Shows error when an unknown error happens with Duke.","lastModifiedDate":"2021-09-19"},{"lineNumber":338,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":339,"author":{"gitId":"naijie2108"},"content":"    public static void showUnknownError() {","lastModifiedDate":"2021-09-19"},{"lineNumber":340,"author":{"gitId":"naijie2108"},"content":"        printGenericMessage(ERROR_DUKE_UNKNOWN);","lastModifiedDate":"2021-09-19"},{"lineNumber":341,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":342,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"naijie2108":342}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":" * Represents exceptions specific to Duke","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    public DukeException (String message) {","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"        super(message);","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"naijie2108":10}},{"path":"src/main/java/duke/exception/ExceptionMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":" * Constants representing Duke specific exceptions.","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"public class ExceptionMessages {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_NO_DESCRIPTION \u003d \"No Description Given\";","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_INVALID_COMMAND \u003d \"Invalid Command\";","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_NO_TASK_NUMBER \u003d \"No Task Number Given\";","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_INVALID_TASK_NUMBER \u003d \"Invalid Task Number\";","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_INVALID_FILE_LINE \u003d \"Invalid File Line\";","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_CREATE_DIRECTORY_FAIL \u003d \"Create Directory Fail\";","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_CREATE_FILE_FAIL \u003d \"Create File Fail\";","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_EMPTY_SEARCH_QUERY \u003d \"Empty Search Query\";","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_WRONG_DEADLINE_FORMAT \u003d \"Wrong Deadline Format\";","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_WRONG_EVENT_FORMAT \u003d \"Wrong Event Format\";","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"naijie2108":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":" * Inherits the \u003ccode\u003eTask\u003c/code\u003e class, adding in a deadline time to represent a deadline.","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"     * Constructs an unfinished deadline task with its deadline time.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"     * @param by Deadline time of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"     * Constructs a deadline task with a description, deadline time and status of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"     * @param by Deadline time of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"     * @param isDone Indicates whether the task is done or not.","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone) {","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"     * @return Deadline of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"        return by;","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"     * Overrides the default toString method to display the task in a more suitable format.","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"     * @return A string showing status of the task, its description and its deadline.","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(formatter) + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"naijie2108":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":" * Inherits the \u003ccode\u003eTask\u003c/code\u003e class, adding in a time to represent an event.","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"    protected LocalDateTime at;","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"     * Constructs an unfinished Event task with the time of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"     * @param at Time of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    public Event(String description, LocalDateTime at) {","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"     * Constructs an Event task with a description, time and status of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"     * @param at Deadline time of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"     * @param isDone Indicates whether the task is done or not.","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"    public Event(String description, LocalDateTime at, boolean isDone) {","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"     * Gets the time of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"     * @return Time of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"    public LocalDateTime getAt() {","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"        return at;","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"     * Overrides the default toString method to display the task in a more suitable format.","lastModifiedDate":"2021-09-19"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"     * @return A string showing status of the task, its description, and the date of the event.","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2021-09-19"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(formatter) + \")\";","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"naijie2108":56}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":" * Represents a task with a description and can be marked as done.","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"     * Constructs an unfinished task with a description.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"     * Constructs a task with a description and an option to choose whether the task is done.","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"     * @param isDone Indicates whether the task is done or not.","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"     * Gets the status icon of the task, which indicates whether the task is done.","lastModifiedDate":"2021-09-19"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"     * @return \"X\" if the task is done, and \" \" otherwise.","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"        return description;","lastModifiedDate":"2021-09-05"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"     * Overrides the default toString method to display the task in a more suitable format.","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"     * @return A string showing status of the task and its description.","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"naijie2108":66}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import duke.exception.ExceptionMessages;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import duke.Ui;","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":" * Task list containing a list of different types of tasks.","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"     * Constructs an instance of the \u003ccode\u003eTaskList\u003c/code\u003e object with an empty ArrayList.","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-09-19"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"     * @throws DukeException If no description given.","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"        if (task.getDescription().equals(\"\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_NO_DESCRIPTION);","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"        final int listLength \u003d taskList.size();","lastModifiedDate":"2021-09-19"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"        //To check that task was added successfully","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"        final Task mostRecentTask \u003d taskList.get(listLength - 1);","lastModifiedDate":"2021-09-19"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"        Ui.printAddTaskMessage(listLength, mostRecentTask);","lastModifiedDate":"2021-09-19"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"     * Adds a task to the task list without printing a message.","lastModifiedDate":"2021-09-19"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"     * @param task Task to be added.","lastModifiedDate":"2021-09-19"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"     * @throws DukeException If no description given.","lastModifiedDate":"2021-09-19"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"    public void addTaskWithoutMessage(Task task) throws DukeException {","lastModifiedDate":"2021-09-13"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"        if (task.getDescription().equals(\"\")) {","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_NO_DESCRIPTION);","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"     * Deletes a task by taking in the task number.","lastModifiedDate":"2021-09-19"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"     * @param rawTaskNumber Number used to identify the task to delete.","lastModifiedDate":"2021-09-19"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"     * @throws DukeException         If task number is invalid or if no task number is provided.","lastModifiedDate":"2021-09-19"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"     * @throws NumberFormatException If task number provided is not parsable into an integer.","lastModifiedDate":"2021-09-19"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"    public void deleteTask(String rawTaskNumber) throws DukeException, NumberFormatException {","lastModifiedDate":"2021-09-19"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"        if (rawTaskNumber.equals(\"\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_NO_TASK_NUMBER);","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"        int taskNumber \u003d Integer.parseInt(rawTaskNumber.trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"        if (isMissingTask(taskNumber)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"        deleteExistingTask(taskNumber);","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"    private void deleteExistingTask(int taskNumber) {","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"        final int taskIndex \u003d taskNumber - 1;","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"        Ui.printDeleteTaskSuccessMessage(taskList.get(taskIndex));","lastModifiedDate":"2021-09-19"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"        taskList.remove(taskIndex);","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-09-19"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"     * @param rawTaskNumber Number to identify the task to be marked.","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"     * @throws DukeException         If task number is invalid or if no task number is provided.","lastModifiedDate":"2021-09-19"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"     * @throws NumberFormatException If task number provided is not parsable into an integer.","lastModifiedDate":"2021-09-19"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":86,"author":{"gitId":"naijie2108"},"content":"    public void markTaskAsDone(String rawTaskNumber) throws DukeException, NumberFormatException {","lastModifiedDate":"2021-09-19"},{"lineNumber":87,"author":{"gitId":"naijie2108"},"content":"        if (rawTaskNumber.equals(\"\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":88,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_NO_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":89,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":90,"author":{"gitId":"naijie2108"},"content":"        int taskNumber \u003d Integer.parseInt(rawTaskNumber.trim());","lastModifiedDate":"2021-09-19"},{"lineNumber":91,"author":{"gitId":"naijie2108"},"content":"        if (isMissingTask(taskNumber)) {","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":93,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":94,"author":{"gitId":"naijie2108"},"content":"        markExistingTaskAsDone(taskList.get(taskNumber - 1));","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":96,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":97,"author":{"gitId":"naijie2108"},"content":"    private boolean isMissingTask(int taskNumber) {","lastModifiedDate":"2021-09-19"},{"lineNumber":98,"author":{"gitId":"naijie2108"},"content":"        final int listLength \u003d taskList.size();","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"naijie2108"},"content":"        final boolean isNegativeTaskNumber \u003d taskNumber \u003c\u003d 0;","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"naijie2108"},"content":"        final boolean isOutOfScopeTaskNumber \u003d taskNumber \u003e listLength;","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"naijie2108"},"content":"        return isNegativeTaskNumber || isOutOfScopeTaskNumber;","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":103,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":104,"author":{"gitId":"naijie2108"},"content":"    private void markExistingTaskAsDone(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"naijie2108"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":106,"author":{"gitId":"naijie2108"},"content":"        Ui.printMarkTaskSuccessMessage(task);","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":108,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":109,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":110,"author":{"gitId":"naijie2108"},"content":"     * Lists and prints all the tasks in the task list.","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"naijie2108"},"content":"    public void listAllTasks() {","lastModifiedDate":"2021-09-19"},{"lineNumber":113,"author":{"gitId":"naijie2108"},"content":"        Ui.printAllTasks(taskList);","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":115,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":116,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":117,"author":{"gitId":"naijie2108"},"content":"     * Finds tasks containing a keyword.","lastModifiedDate":"2021-09-19"},{"lineNumber":118,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"naijie2108"},"content":"     * @param keyword Keyword to query for.","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"naijie2108"},"content":"     * @throws DukeException If keyword is empty.","lastModifiedDate":"2021-09-19"},{"lineNumber":121,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":122,"author":{"gitId":"naijie2108"},"content":"    public void findTasks(String keyword) throws DukeException {","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"naijie2108"},"content":"        if (keyword.equals(\"\")) {","lastModifiedDate":"2021-09-19"},{"lineNumber":124,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_EMPTY_SEARCH_QUERY);","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"naijie2108"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d","lastModifiedDate":"2021-09-19"},{"lineNumber":127,"author":{"gitId":"naijie2108"},"content":"                (ArrayList\u003cTask\u003e) taskList.stream()","lastModifiedDate":"2021-09-19"},{"lineNumber":128,"author":{"gitId":"naijie2108"},"content":"                        .filter(t -\u003e t.getDescription().contains(keyword))","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"naijie2108"},"content":"                        .collect(Collectors.toList());","lastModifiedDate":"2021-09-19"},{"lineNumber":130,"author":{"gitId":"naijie2108"},"content":"        Ui.printMatchingTasks(matchingTasks);","lastModifiedDate":"2021-09-19"},{"lineNumber":131,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-19"},{"lineNumber":132,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-19"},{"lineNumber":133,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":134,"author":{"gitId":"naijie2108"},"content":"     * Converts the task list into a string to be saved as a text file.","lastModifiedDate":"2021-09-19"},{"lineNumber":135,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":136,"author":{"gitId":"naijie2108"},"content":"     * @return String representing the task list to be saved as a text file.","lastModifiedDate":"2021-09-19"},{"lineNumber":137,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":138,"author":{"gitId":"naijie2108"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-13"},{"lineNumber":139,"author":{"gitId":"naijie2108"},"content":"        StringBuilder fileContent \u003d new StringBuilder();","lastModifiedDate":"2021-09-13"},{"lineNumber":140,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"naijie2108"},"content":"            Task taskToConvert \u003d taskList.get(i);","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"naijie2108"},"content":"            if (taskToConvert instanceof Todo) {","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"naijie2108"},"content":"                fileContent.append(\"T|\")","lastModifiedDate":"2021-09-19"},{"lineNumber":144,"author":{"gitId":"naijie2108"},"content":"                        .append(taskToConvert.isDone ? \u00271\u0027 : \u00270\u0027)","lastModifiedDate":"2021-09-19"},{"lineNumber":145,"author":{"gitId":"naijie2108"},"content":"                        .append(\u0027|\u0027).append(taskToConvert.description);","lastModifiedDate":"2021-09-19"},{"lineNumber":146,"author":{"gitId":"naijie2108"},"content":"            } else if (taskToConvert instanceof Deadline) {","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"naijie2108"},"content":"                fileContent.append(\"D|\")","lastModifiedDate":"2021-09-19"},{"lineNumber":148,"author":{"gitId":"naijie2108"},"content":"                        .append(taskToConvert.isDone ? \u00271\u0027 : \u00270\u0027)","lastModifiedDate":"2021-09-19"},{"lineNumber":149,"author":{"gitId":"naijie2108"},"content":"                        .append(\u0027|\u0027).append(taskToConvert.description)","lastModifiedDate":"2021-09-19"},{"lineNumber":150,"author":{"gitId":"naijie2108"},"content":"                        .append(\u0027|\u0027).append(((Deadline) taskToConvert).getBy());","lastModifiedDate":"2021-09-14"},{"lineNumber":151,"author":{"gitId":"naijie2108"},"content":"            } else if (taskToConvert instanceof Event) {","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"naijie2108"},"content":"                fileContent.append(\"E|\").append(taskToConvert.isDone ? \u00271\u0027 : \u00270\u0027)","lastModifiedDate":"2021-09-19"},{"lineNumber":153,"author":{"gitId":"naijie2108"},"content":"                        .append(\u0027|\u0027).append(taskToConvert.description)","lastModifiedDate":"2021-09-19"},{"lineNumber":154,"author":{"gitId":"naijie2108"},"content":"                        .append(\u0027|\u0027).append(((Event) taskToConvert).getAt());","lastModifiedDate":"2021-09-14"},{"lineNumber":155,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":156,"author":{"gitId":"naijie2108"},"content":"            //skip iteration for last task","lastModifiedDate":"2021-09-13"},{"lineNumber":157,"author":{"gitId":"naijie2108"},"content":"            if (i \u003d\u003d taskList.size() - 1) {","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"naijie2108"},"content":"                continue;","lastModifiedDate":"2021-09-13"},{"lineNumber":159,"author":{"gitId":"naijie2108"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":160,"author":{"gitId":"naijie2108"},"content":"            fileContent.append(System.lineSeparator());","lastModifiedDate":"2021-09-13"},{"lineNumber":161,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":162,"author":{"gitId":"naijie2108"},"content":"        return fileContent.toString();","lastModifiedDate":"2021-09-13"},{"lineNumber":163,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":164,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"naijie2108":164}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"/**","lastModifiedDate":"2021-09-19"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":" * Inherits the \u003ccode\u003eTask\u003c/code\u003e class to represent a Todo task.","lastModifiedDate":"2021-09-19"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":" */","lastModifiedDate":"2021-09-19"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"     * Constructs an unfinished Todo task with a description.","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"     * Constructs a Todo task with a description and an option to choose whether the task is done.","lastModifiedDate":"2021-09-19"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"     * @param description Description of the task.","lastModifiedDate":"2021-09-19"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"     * @param isDone Indicates whether the task is done or not.","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"    /**","lastModifiedDate":"2021-09-19"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"     * Overrides the default toString method to display the task in a more suitable format.","lastModifiedDate":"2021-09-19"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"     *","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"     * @return A string showing status of the task and its description.","lastModifiedDate":"2021-09-19"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"     */","lastModifiedDate":"2021-09-19"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"naijie2108":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"event Project Meeting /at 2021-08-09 18:00","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"event Team Meeting","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"deadline Assignment 2 /by 2022-09-21 15:00","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"deadline Mom\u0027s Birthday","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"todo Clean bed","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"done","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"done -3","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"event","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"done 1","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"done 2","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"done 4","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"delete 5","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"delete","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"delete 2","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"list","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"find Assignment","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"find","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"bye","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"naijie2108":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"REM delete save file from previous run","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"if exist data\\duke.txt del data\\duke.txt","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"naijie2108":5,"-":19}}]
