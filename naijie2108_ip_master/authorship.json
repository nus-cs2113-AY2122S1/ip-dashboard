[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"# duke.Duke project template","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"naijie2108":2,"-":22}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import duke.exception.ExceptionMessages;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    //Application Logo","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    //Strings to define command type","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_LIST_TASKS \u003d \"list\";","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_MARK_TASK_AS_DONE \u003d \"done\";","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_ADD_TODO_TASK \u003d \"todo\";","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_ADD_DEADLINE_TASK \u003d \"deadline\";","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"    private static final String COMMAND_ADD_EVENT_TASK \u003d \"event\";","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"    //Output Messages","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_START_APPLICATION \u003d \"Hello from\\n\" + LOGO + System.lineSeparator() + \"What can I do for you?\";","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_EXIT_APPLICATION \u003d \"Thank you for using our application. We hope to see you again soon\";","lastModifiedDate":"2021-09-05"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_TODO_NO_DESCRIPTION \u003d \"Todo tasks require a description e.g \u0027todo CS1010 Assignment\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_DEADLINE_NO_DESCRIPTION \u003d \"Deadlines require a description e.g \u0027deadline Project Reflection /by Friday 10pm\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_EVENT_NO_DESCRIPTION \u003d \"Events require a description e.g \u0027event Seminar /at Friday 2pm\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"I am sorry but I am not able to recognise this command\";","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_NO_TASK_NUMBER_TO_MARK \u003d \"Please provide a task number e.g \u0027done 2\u0027\";","lastModifiedDate":"2021-09-05"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_INVALID_TASK_NUMBER \u003d \"Sorry, but the task does not exist, unable to mark as done.\\nYou can view a list of your tasks using the \u0027list\u0027 command\";","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"    //Default values for tasks","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"    private static final String DEFAULT_DEADLINE_TIME_CONTENT \u003d \"No deadline provided\";","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"    private static final String DEFAULT_EVENT_TIME_CONTENT \u003d \"No date provided\";","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"    private static TaskList task \u003d new TaskList();","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"    private static void processInput(String input) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"        final String[] commandTypeAndParams \u003d splitCommandWordAndArgs(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"        final String commandType \u003d commandTypeAndParams[0];","lastModifiedDate":"2021-08-30"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"        final String commandArgs \u003d commandTypeAndParams[1];","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"        switch (commandType) {","lastModifiedDate":"2021-08-30"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"            exitProgram();","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_LIST_TASKS:","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"            listAllTasks();","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_MARK_TASK_AS_DONE:","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"            markTaskAsDone(commandArgs);","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_ADD_TODO_TASK:","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"            addTodoTaskToList(commandArgs);","lastModifiedDate":"2021-08-30"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_ADD_DEADLINE_TASK:","lastModifiedDate":"2021-08-30"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"            addDeadlineTaskToList(commandArgs);","lastModifiedDate":"2021-08-30"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"        case COMMAND_ADD_EVENT_TASK:","lastModifiedDate":"2021-08-30"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"            addEventTaskToList(commandArgs);","lastModifiedDate":"2021-08-30"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"            break;","lastModifiedDate":"2021-08-30"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"        default:","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_INVALID_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //@@author okkhoy-reused","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/nus-cs2113-AY2122S1/contacts","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static String[] splitCommandWordAndArgs(String rawUserInput) {","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final String[] split \u003d rawUserInput.trim().split(\" \", 2);","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], \"\"};","lastModifiedDate":"2021-09-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static void exitProgram() {","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        System.out.println(MESSAGE_EXIT_APPLICATION);","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static void listAllTasks() {","lastModifiedDate":"2021-08-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        task.printAllTasks();","lastModifiedDate":"2021-08-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private static void markTaskAsDone(String input) {","lastModifiedDate":"2021-09-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            task.markTaskAsDone(input);","lastModifiedDate":"2021-09-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            switch (message) {","lastModifiedDate":"2021-09-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            case ExceptionMessages.EXCEPTION_NO_TASK_NUMBER:","lastModifiedDate":"2021-09-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                PrintUtils.printErrorMessage(MESSAGE_NO_TASK_NUMBER_TO_MARK);","lastModifiedDate":"2021-09-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            case ExceptionMessages.EXCEPTION_INVALID_TASK_NUMBER:","lastModifiedDate":"2021-09-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                PrintUtils.printErrorMessage(MESSAGE_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                break;","lastModifiedDate":"2021-09-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static void addTodoTaskToList(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            task.addTask(new Todo(input));","lastModifiedDate":"2021-08-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            if (message.equals(ExceptionMessages.EXCEPTION_NO_DESCRIPTION)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                PrintUtils.printErrorMessage(MESSAGE_TODO_NO_DESCRIPTION);","lastModifiedDate":"2021-09-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private static void addDeadlineTaskToList(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final String[] taskDescriptionAndBy \u003d splitDeadlineDescriptionAndDate(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final String description \u003d taskDescriptionAndBy[0];","lastModifiedDate":"2021-08-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final String by \u003d taskDescriptionAndBy[1];","lastModifiedDate":"2021-08-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            task.addTask(new Deadline(description, by));","lastModifiedDate":"2021-08-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            if (message.equals(ExceptionMessages.EXCEPTION_NO_DESCRIPTION)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                PrintUtils.printErrorMessage(MESSAGE_DEADLINE_NO_DESCRIPTION);","lastModifiedDate":"2021-09-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-16"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    //@@author okkhoy-reused","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/nus-cs2113-AY2122S1/contacts","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private static String[] splitDeadlineDescriptionAndDate(String rawDescription) {","lastModifiedDate":"2021-08-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String[] split \u003d rawDescription.trim().split(\"/by\", 2);","lastModifiedDate":"2021-08-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c split.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            split[i] \u003d split[i].trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], DEFAULT_DEADLINE_TIME_CONTENT};","lastModifiedDate":"2021-08-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private static void addEventTaskToList(String input) {","lastModifiedDate":"2021-08-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        final String[] taskDescriptionAndAt \u003d splitEventDescriptionAndDate(input);","lastModifiedDate":"2021-08-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        final String description \u003d taskDescriptionAndAt[0];","lastModifiedDate":"2021-08-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final String at \u003d taskDescriptionAndAt[1];","lastModifiedDate":"2021-08-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            task.addTask(new Event(description, at));","lastModifiedDate":"2021-08-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            if (message.equals(ExceptionMessages.EXCEPTION_NO_DESCRIPTION)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                PrintUtils.printErrorMessage(MESSAGE_EVENT_NO_DESCRIPTION);","lastModifiedDate":"2021-09-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    //@@author okkhoy-reused","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/nus-cs2113-AY2122S1/contacts","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    //with minor modifications","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    private static String[] splitEventDescriptionAndDate(String rawDescription) {","lastModifiedDate":"2021-08-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String[] split \u003d rawDescription.trim().split(\"/at\", 2);","lastModifiedDate":"2021-08-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c split.length; i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            split[i] \u003d split[i].trim();","lastModifiedDate":"2021-08-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return split.length \u003d\u003d 2 ? split : new String[]{split[0], DEFAULT_EVENT_TIME_CONTENT};","lastModifiedDate":"2021-08-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String line;","lastModifiedDate":"2021-08-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        System.out.println(MESSAGE_START_APPLICATION);","lastModifiedDate":"2021-08-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2021-08-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2021-09-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                processInput(line);","lastModifiedDate":"2021-09-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                final String message \u003d e.getMessage();","lastModifiedDate":"2021-09-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                if (message.equals(ExceptionMessages.EXCEPTION_INVALID_COMMAND)) {","lastModifiedDate":"2021-09-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                    PrintUtils.printErrorMessage(MESSAGE_INVALID_COMMAND);","lastModifiedDate":"2021-09-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2021-09-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"naijie2108":71,"-":119}},{"path":"src/main/java/duke/PrintUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"public class PrintUtils {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"    private static final String INDENTATION \u003d \"\\t\";","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"    private static final int HORIZONTAL_LINE_LENGTH \u003d 100;","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"    public static void printHorizontalLine() {","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c HORIZONTAL_LINE_LENGTH; i++) {","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"            System.out.print(\"-\");","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"        System.out.println();","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"    public static void printSpacing() {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"        System.out.print(INDENTATION);","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"    public static void printErrorMessage(String errorMessage) {","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"        printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"naijie2108":24}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"    public DukeException (String message) {","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"        super(message);","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"naijie2108":8}},{"path":"src/main/java/duke/exception/ExceptionMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"public class ExceptionMessages {","lastModifiedDate":"2021-09-05"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_NO_DESCRIPTION \u003d \"No Description Given\";","lastModifiedDate":"2021-09-05"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_INVALID_COMMAND \u003d \"Invalid Command\";","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_NO_TASK_NUMBER \u003d \"No Task Number Given\";","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    public static final String EXCEPTION_INVALID_TASK_NUMBER \u003d \"Invalid Task.Task Number\";","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"naijie2108":8}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"    protected String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"naijie2108":16}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"    protected String at;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"naijie2108":16}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"public class Task {","lastModifiedDate":"2021-08-25"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"        return description;","lastModifiedDate":"2021-09-05"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"    public void markTaskAsDone() {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"naijie2108":29}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"import duke.exception.ExceptionMessages;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"import duke.PrintUtils;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"public class TaskList {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"    //Output messages","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_TASK_ADDED_SUCCESSFULLY \u003d \"The following task has been added:\";","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_MARK_TASK_SUCCESS \u003d \"The following task has been marked as done:\";","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_NO_TASK_AVAILABLE \u003d \"You have no tasks yet\";","lastModifiedDate":"2021-09-05"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"    public static final String MESSAGE_PRINT_ALL_TASK_SUCCESS \u003d \"Here are all your tasks:\";","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"    private int taskNumber;","lastModifiedDate":"2021-08-25"},{"lineNumber":17,"author":{"gitId":"naijie2108"},"content":"    private Task[] taskList;","lastModifiedDate":"2021-08-25"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"naijie2108"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"naijie2108"},"content":"        taskNumber \u003d 0;","lastModifiedDate":"2021-08-25"},{"lineNumber":21,"author":{"gitId":"naijie2108"},"content":"        taskList \u003d new Task[100];","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"naijie2108"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":26,"author":{"gitId":"naijie2108"},"content":"        if (task.getDescription().equals(\"\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_NO_DESCRIPTION);","lastModifiedDate":"2021-09-05"},{"lineNumber":28,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-05"},{"lineNumber":29,"author":{"gitId":"naijie2108"},"content":"        PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"naijie2108"},"content":"        taskList[taskNumber] \u003d task;","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"naijie2108"},"content":"        printAddTaskSuccessMessage();","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"naijie2108"},"content":"        taskNumber++;","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"naijie2108"},"content":"        PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":35,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"naijie2108"},"content":"    private void printAddTaskSuccessMessage() {","lastModifiedDate":"2021-08-31"},{"lineNumber":37,"author":{"gitId":"naijie2108"},"content":"        System.out.println(MESSAGE_TASK_ADDED_SUCCESSFULLY);","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"naijie2108"},"content":"        PrintUtils.printSpacing();","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"naijie2108"},"content":"        System.out.println(taskList[taskNumber]);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"naijie2108"},"content":"        System.out.println(\"You now have \" + (taskNumber + 1) + \" task(s)\");","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":42,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"naijie2108"},"content":"    public void markTaskAsDone(String input) throws DukeException {","lastModifiedDate":"2021-09-05"},{"lineNumber":44,"author":{"gitId":"naijie2108"},"content":"        if (input.equals(\"\")) {","lastModifiedDate":"2021-09-02"},{"lineNumber":45,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_NO_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":46,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-09-02"},{"lineNumber":47,"author":{"gitId":"naijie2108"},"content":"        int taskNumber \u003d Integer.parseInt(input.trim());","lastModifiedDate":"2021-09-02"},{"lineNumber":48,"author":{"gitId":"naijie2108"},"content":"        if (!isExistingTask(taskNumber)) {","lastModifiedDate":"2021-08-30"},{"lineNumber":49,"author":{"gitId":"naijie2108"},"content":"            throw new DukeException(ExceptionMessages.EXCEPTION_INVALID_TASK_NUMBER);","lastModifiedDate":"2021-09-05"},{"lineNumber":50,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":51,"author":{"gitId":"naijie2108"},"content":"        markExistingTaskAsDone(taskList[taskNumber - 1]);","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":54,"author":{"gitId":"naijie2108"},"content":"    private boolean isExistingTask(int taskNumber) {","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"naijie2108"},"content":"        return taskNumber \u003e 0 \u0026\u0026 taskNumber \u003c\u003d this.taskNumber;","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"naijie2108"},"content":"    private void markExistingTaskAsDone(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"naijie2108"},"content":"        task.markTaskAsDone();","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"naijie2108"},"content":"        printMarkTaskSuccessMessage(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":61,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":62,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"naijie2108"},"content":"    private void printMarkTaskSuccessMessage(Task task) {","lastModifiedDate":"2021-08-31"},{"lineNumber":64,"author":{"gitId":"naijie2108"},"content":"        PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":65,"author":{"gitId":"naijie2108"},"content":"        System.out.println(MESSAGE_MARK_TASK_SUCCESS);","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"naijie2108"},"content":"        PrintUtils.printSpacing();","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"naijie2108"},"content":"        System.out.println(task);","lastModifiedDate":"2021-08-31"},{"lineNumber":68,"author":{"gitId":"naijie2108"},"content":"        PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":69,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":71,"author":{"gitId":"naijie2108"},"content":"    public void printAllTasks() {","lastModifiedDate":"2021-08-31"},{"lineNumber":72,"author":{"gitId":"naijie2108"},"content":"        PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":73,"author":{"gitId":"naijie2108"},"content":"        if (taskNumber \u003d\u003d 0) {","lastModifiedDate":"2021-08-30"},{"lineNumber":74,"author":{"gitId":"naijie2108"},"content":"            System.out.println(MESSAGE_NO_TASK_AVAILABLE);","lastModifiedDate":"2021-08-31"},{"lineNumber":75,"author":{"gitId":"naijie2108"},"content":"            PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":76,"author":{"gitId":"naijie2108"},"content":"            return;","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"naijie2108"},"content":"        System.out.println(MESSAGE_PRINT_ALL_TASK_SUCCESS);","lastModifiedDate":"2021-08-31"},{"lineNumber":79,"author":{"gitId":"naijie2108"},"content":"        for (int i \u003d 0; i \u003c taskNumber; i++) {","lastModifiedDate":"2021-08-25"},{"lineNumber":80,"author":{"gitId":"naijie2108"},"content":"            PrintUtils.printSpacing();","lastModifiedDate":"2021-08-30"},{"lineNumber":81,"author":{"gitId":"naijie2108"},"content":"            System.out.println((i + 1) + \". \" + taskList[i]);","lastModifiedDate":"2021-08-30"},{"lineNumber":82,"author":{"gitId":"naijie2108"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"naijie2108"},"content":"        PrintUtils.printHorizontalLine();","lastModifiedDate":"2021-09-05"},{"lineNumber":84,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"naijie2108":85}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"naijie2108":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"naijie2108"},"content":"event Project Meeting /at Wed 8-10PM","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"naijie2108"},"content":"event Team Meeting","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"naijie2108"},"content":"deadline Assignment 2 /by Fri 5pm","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"naijie2108"},"content":"deadline Mom\u0027s Birthday","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"naijie2108"},"content":"todo Clean bed","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"naijie2108"},"content":"done","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"naijie2108"},"content":"done -3","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"naijie2108"},"content":"event","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"naijie2108"},"content":"todo","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"deadline","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"naijie2108"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"naijie2108"},"content":"done 1","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"naijie2108"},"content":"done 2","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"naijie2108"},"content":"done 4","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"naijie2108"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"naijie2108"},"content":"bye","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"naijie2108":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"naijie2108"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"naijie2108"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"naijie2108":2,"-":19}}]
