[{"path":"src/main/java/duke/Commands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"/* A list of all commands */","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"public final class Commands {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"    public static final String LIST \u003d \"LIST\";","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"    public static final String DONE \u003d \"DONE\";","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"    public static final String BYE \u003d \"BYE\";","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"    public static final String TODO \u003d \"TODO\";","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    public static final String DEADLINE \u003d \"DEADLINE\";","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    public static final String EVENT \u003d \"EVENT\";","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    public static final String DELETE \u003d \"DELETE\";","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"SeenFang":13}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import duke.exception.DirectoryCreationException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import duke.exception.IllegalCommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import duke.exception.IllegalParameterException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import duke.task.TaskManager;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    /* Logo - generated using https://manytools.org/hacker-tools/convert-images-to-ascii-art/go/ */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"    private static final String LOGO \u003d \"                               */@@@@@@@@@@@@@@@%*.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"            + \"                       .\u0026@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\u0026,\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"            + \"                  *@@@@@@@@@@@@#     .@@/@@.     #@@@@@@@@@@@@\u0026,\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"            + \"              ,@@@@@\u0026. *@@@\u0026.       #@#   #@#        \u0026@@@/  ,\u0026@@@@%.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"            + \"           ,@@@@%.   /@@@(        ,@@.     .@@.        /@@@,    .@@@@@.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"            + \"         \u0026@@@%      \u0026@@%         \u0026@#         (@%         %@@#      .@@@@/\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"            + \"      ,@@@@*       %@@#        *@@.            @@,        /@@\u0026        #@@@%\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"            + \"    *@@@@.        #@@/        @@/               /@%        (@@#         /@@@(\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"            + \"   \u0026@@\u0026          .@@@.      *@\u0026                   \u0026@*       @@@           #@@@.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"            + \" (@@@*           .@@\u0026      \u0026@*                     *@\u0026      %@@,           (@@@*\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"            + \"  .@@@\u0026          .@@\u0026    /@#                         %@(    @@@          .@@@@.\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"            + \"    *@@@\u0026         \u0026@@/  \u0026@,                           .@@. /@@#        .@@@@,\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"            + \"      /@@@@,       \u0026@@@@#                               %@@@@\u0026.      /@@@\u0026\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"            + \"         \u0026@@@\u0026      \u0026@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@     .\u0026@@@%\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"            + \"           (@@@@%    (@@@,                             ,@@@/   ,@@@@\u0026\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"            + \"              ,@@@@@%. #@@@(                         #@@@% .\u0026@@@@\u0026\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"            + \"                  /@@@@@@@@@@@\u0026.                 ,\u0026@@@@@@@@@@\u0026,\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"            + \"                       (@@@@@@@@@@@@@\u0026%%%%%\u0026@@@@@@@@@@@@\u0026*\\n\"","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"            + \"                              *\u0026@@@@@@@@@@@@@@@@@(,\\n\";","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"    /* Divider */","lastModifiedDate":"2021-08-24"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"    /* Prints a help message listing all commands and their formats */","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"    public static void printHelp() {","lastModifiedDate":"2021-09-01"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"Usage:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"        System.out.printf(\"\\t%s \u003cdescription\u003e%n\", Commands.TODO);","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"\\t\\tAdds a new task without any date/time attached to it.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"        System.out.printf(\"\\t%s \u003cdescription\u003e /by \u003cdeadline\u003e%n\", Commands.DEADLINE);","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"\\t\\tAdds a new task that need to be done before a specific date/time.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"        System.out.printf(\"\\t%s \u003cdescription\u003e /at \u003ctime range\u003e%n\", Commands.EVENT);","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"\\t\\tAdds a new task that starts at a specific time and ends at a specific time\");","lastModifiedDate":"2021-09-01"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"        System.out.printf(\"\\t%s%n\", Commands.LIST);","lastModifiedDate":"2021-09-01"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"\\t\\tPrints a indexed list of all added tasks\");","lastModifiedDate":"2021-09-01"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"        System.out.printf(\"\\t%s \u003ctask index in list\u003e%n\", Commands.DONE);","lastModifiedDate":"2021-09-01"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"\\t\\tMarks task at supplied index as done\");","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"        System.out.printf(\"\\t%s \u003ctask index in list\u003e%n\", Commands.DELETE);","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"\\t\\tDeletes the task at the supplied index\");","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"        System.out.printf(\"\\t%s%n\", Commands.BYE);","lastModifiedDate":"2021-09-01"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"\\t\\tExits the program\");","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"    /* Prints a greeting message with logo */","lastModifiedDate":"2021-08-24"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"    public static void printGreeting() {","lastModifiedDate":"2021-08-24"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"\\nWelcome friends. I had a feeling you would come.\\n\" +","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"                \"My fake brain is better than your real one.\\n\" +","lastModifiedDate":"2021-08-24"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"                \"When I develop protein synthesis, I will be able to make myself a real brain. Far better than your \"","lastModifiedDate":"2021-08-24"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"                + \"silly little thinking device.\\n\" + DIVIDER + \"\\n\");","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"    /* Prints goodbye message */","lastModifiedDate":"2021-08-24"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"    public static void printGoodbye() {","lastModifiedDate":"2021-08-24"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"        System.out.println(","lastModifiedDate":"2021-08-24"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"                \"My favourite feeling is schadenfreude. I also like hiraeth. It\u0027s the Welsh concept of longing for home.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"    public static void main(String[] args) throws DirectoryCreationException {","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"        printGreeting();","lastModifiedDate":"2021-08-24"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":74,"author":{"gitId":"SeenFang"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":75,"author":{"gitId":"SeenFang"},"content":"        TaskManager taskManager \u003d new TaskManager();","lastModifiedDate":"2021-08-24"},{"lineNumber":76,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":77,"author":{"gitId":"SeenFang"},"content":"        taskManager.loadTasklistFromFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"SeenFang"},"content":"        while (!exit) {","lastModifiedDate":"2021-08-24"},{"lineNumber":80,"author":{"gitId":"SeenFang"},"content":"            /* Splits off first word from input */","lastModifiedDate":"2021-09-01"},{"lineNumber":81,"author":{"gitId":"SeenFang"},"content":"            String[] userInput \u003d in.nextLine().split(\" \", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":82,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":83,"author":{"gitId":"SeenFang"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2021-08-24"},{"lineNumber":84,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":85,"author":{"gitId":"SeenFang"},"content":"            String command \u003d userInput[0].toUpperCase().trim();","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"SeenFang"},"content":"            String options \u003d null;","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"SeenFang"},"content":"            if (userInput.length \u003e\u003d 2) {","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"SeenFang"},"content":"                options \u003d userInput[1];","lastModifiedDate":"2021-09-14"},{"lineNumber":90,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"SeenFang"},"content":"            try {","lastModifiedDate":"2021-08-24"},{"lineNumber":93,"author":{"gitId":"SeenFang"},"content":"                switch (command) {","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"SeenFang"},"content":"                case Commands.LIST:","lastModifiedDate":"2021-09-01"},{"lineNumber":95,"author":{"gitId":"SeenFang"},"content":"                    taskManager.listTasks();","lastModifiedDate":"2021-08-24"},{"lineNumber":96,"author":{"gitId":"SeenFang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":97,"author":{"gitId":"SeenFang"},"content":"                case Commands.DONE:","lastModifiedDate":"2021-09-01"},{"lineNumber":98,"author":{"gitId":"SeenFang"},"content":"                    taskManager.markDone(Integer.parseInt(options));","lastModifiedDate":"2021-09-14"},{"lineNumber":99,"author":{"gitId":"SeenFang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"SeenFang"},"content":"                case Commands.BYE:","lastModifiedDate":"2021-09-01"},{"lineNumber":101,"author":{"gitId":"SeenFang"},"content":"                    printGoodbye();","lastModifiedDate":"2021-08-24"},{"lineNumber":102,"author":{"gitId":"SeenFang"},"content":"                    exit \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":103,"author":{"gitId":"SeenFang"},"content":"                    break;","lastModifiedDate":"2021-08-24"},{"lineNumber":104,"author":{"gitId":"SeenFang"},"content":"                case Commands.TODO:","lastModifiedDate":"2021-09-01"},{"lineNumber":105,"author":{"gitId":"SeenFang"},"content":"                    taskManager.processAndAddTask(options, TaskType.TODO);","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"SeenFang"},"content":"                    break;","lastModifiedDate":"2021-09-01"},{"lineNumber":107,"author":{"gitId":"SeenFang"},"content":"                case Commands.DEADLINE:","lastModifiedDate":"2021-09-01"},{"lineNumber":108,"author":{"gitId":"SeenFang"},"content":"                    taskManager.processAndAddTask(options, TaskType.DEADLINE);","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"SeenFang"},"content":"                    break;","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"SeenFang"},"content":"                case Commands.EVENT:","lastModifiedDate":"2021-09-01"},{"lineNumber":111,"author":{"gitId":"SeenFang"},"content":"                    taskManager.processAndAddTask(options, TaskType.EVENT);","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"SeenFang"},"content":"                    break;","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"SeenFang"},"content":"                case Commands.DELETE:","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"SeenFang"},"content":"                    taskManager.deleteTask(Integer.parseInt(options));","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"SeenFang"},"content":"                    break;","lastModifiedDate":"2021-09-01"},{"lineNumber":116,"author":{"gitId":"SeenFang"},"content":"                default:","lastModifiedDate":"2021-08-24"},{"lineNumber":117,"author":{"gitId":"SeenFang"},"content":"                    throw new IllegalCommandException(\"Unidentified command\");","lastModifiedDate":"2021-09-07"},{"lineNumber":118,"author":{"gitId":"SeenFang"},"content":"                }","lastModifiedDate":"2021-08-24"},{"lineNumber":119,"author":{"gitId":"SeenFang"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":120,"author":{"gitId":"SeenFang"},"content":"                System.out.println(e + \": Do you not understand what a number is?\");","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"SeenFang"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-08-24"},{"lineNumber":122,"author":{"gitId":"SeenFang"},"content":"                System.out.println(e + \": Enter something that makes sense next time.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"SeenFang"},"content":"            } catch (IllegalCommandException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"SeenFang"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"SeenFang"},"content":"                printHelp();","lastModifiedDate":"2021-09-07"},{"lineNumber":126,"author":{"gitId":"SeenFang"},"content":"            } catch (IllegalParameterException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":127,"author":{"gitId":"SeenFang"},"content":"                System.out.println(e + \": Enter some valid parameters next time.\");","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":129,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":130,"author":{"gitId":"SeenFang"},"content":"            System.out.println(DIVIDER);","lastModifiedDate":"2021-08-24"},{"lineNumber":131,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":132,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"SeenFang":131,"-":3}},{"path":"src/main/java/duke/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import duke.exception.DirectoryCreationException;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import duke.task.TaskHelper;","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import duke.task.TaskType;","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import java.io.File;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"public class FileManager {","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    private static String USER_DIR;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"    private static String FILE_PATH;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"    private final File saveFile;","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"     * Constructor for FileManager, checks and generates save file","lastModifiedDate":"2021-09-15"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"     * @throws DirectoryCreationException Throws exception if file directory cannot be created","lastModifiedDate":"2021-09-15"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"    public FileManager() throws DirectoryCreationException {","lastModifiedDate":"2021-09-15"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"        USER_DIR \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"        FILE_PATH \u003d USER_DIR + \"/data/\" + FILE_NAME;","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"        saveFile \u003d new File(FILE_PATH);","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"        checkFileExists(saveFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"     * Saves task list to a file","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"     * @param tasklist","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"    public void saveTasklistToFile(ArrayList\u003cTask\u003e tasklist) {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"            FileWriter fw \u003d new FileWriter(saveFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"            for (Task task : tasklist) {","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"                fw.write(formatTask(task));","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"            fw.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"            System.out.println(\"Something went wrong: \" + e.getMessage());","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"     * reads save file into an array","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"     * @return ArrayList containing each line from the save file","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"    public ArrayList\u003cString\u003e readTasklistFromFile() {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"        ArrayList\u003cString\u003e fileLines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"        try {","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"            Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"                fileLines.add(scanner.nextLine());","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"            scanner.close();","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"            System.out.println(\"Save file not found! A new save file will be created.\\n\");","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"SeenFang"},"content":"        return fileLines;","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"SeenFang"},"content":"     * Checks if the given file and its directory exists, creating then if it doesn\u0027t.","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"SeenFang"},"content":"     * @param file file to check if it exists","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"SeenFang"},"content":"     * @throws DirectoryCreationException Throws exception if file directory cannot be created","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"SeenFang"},"content":"    private void checkFileExists(File file) throws DirectoryCreationException {","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"SeenFang"},"content":"        if (!file.getParentFile().exists()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"SeenFang"},"content":"            if (!file.getParentFile().mkdirs()) {","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"SeenFang"},"content":"                throw new DirectoryCreationException(file.toString());","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"SeenFang"},"content":"     * @param task task to be formatted to be saved","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"SeenFang"},"content":"     * @return","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"SeenFang"},"content":"    private String formatTask(Task task) {","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"SeenFang"},"content":"        final String SPACER \u003d \" | \";","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"SeenFang"},"content":"        String saveString \u003d \"\";","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"SeenFang"},"content":"        saveString +\u003d task.getType();","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"SeenFang"},"content":"        saveString +\u003d SPACER;","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"SeenFang"},"content":"        saveString +\u003d task.isDone() ? \u00271\u0027 : \u00270\u0027;","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"SeenFang"},"content":"        saveString +\u003d SPACER;","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"SeenFang"},"content":"        saveString +\u003d task.getDescription();","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"SeenFang"},"content":"        boolean isDeadline \u003d task.getType() \u003d\u003d TaskType.DEADLINE;","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"SeenFang"},"content":"        boolean isEvent \u003d task.getType() \u003d\u003d TaskType.EVENT;","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"SeenFang"},"content":"        if (isDeadline || isEvent) {","lastModifiedDate":"2021-09-15"},{"lineNumber":109,"author":{"gitId":"SeenFang"},"content":"            saveString +\u003d SPACER;","lastModifiedDate":"2021-09-15"},{"lineNumber":110,"author":{"gitId":"SeenFang"},"content":"            saveString +\u003d ((TaskHelper) task).getDeadline();","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":112,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"SeenFang"},"content":"        saveString +\u003d System.lineSeparator();","lastModifiedDate":"2021-09-15"},{"lineNumber":114,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"SeenFang"},"content":"        return saveString;","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":117,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":118,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"SeenFang":118}},{"path":"src/main/java/duke/exception/DirectoryCreationException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.exception;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"public class DirectoryCreationException extends Exception{","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"    public DirectoryCreationException(String message) {","lastModifiedDate":"2021-09-15"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"        super(message);","lastModifiedDate":"2021-09-15"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"    public DirectoryCreationException() {","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"SeenFang":12}},{"path":"src/main/java/duke/exception/IllegalCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"public class IllegalCommandException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"    public IllegalCommandException(String message) {","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"        super(message);","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"    public IllegalCommandException() {","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"SeenFang":12}},{"path":"src/main/java/duke/exception/IllegalParameterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.exception;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"public class IllegalParameterException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"    public IllegalParameterException(String message) {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"        super(message);","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"    public IllegalParameterException() {","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"SeenFang":11}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"public class Deadline extends Task implements TaskHelper {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"    protected String deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"     * Constructor for Task of type Deadline","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"     * @param description Description of the task to add.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"     * @param deadline    Deadline of task","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"    public Deadline(String description, String deadline) {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"        super(description, TaskType.DEADLINE);","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"     * @return deadline of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"        return deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"     * Formats details of the Task to a printable string.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"     * @return Formatted string of a task.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"    public String toFormattedString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"        return String.format(\"%s (by: %s)\", super.toFormattedString(), this.deadline);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"SeenFang":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"public class Event extends Task implements TaskHelper {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"    protected String deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"     * Constructor for Task of type Event","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"     * @param description Description of the task to add.","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"     * @param deadline    Deadline of task","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"    public Event(String description, String deadline) {","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"        super(description, TaskType.EVENT);","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"     * @return deadline of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    public String getDeadline() {","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"        return deadline;","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"     * Formats details of the Task to a printable string.","lastModifiedDate":"2021-09-01"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"     * @return Formatted string of a task.","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"    @Override","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"    public String toFormattedString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"        return String.format(\"%s (at: %s)\", super.toFormattedString(), this.deadline);","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"SeenFang":36}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"public class Task {","lastModifiedDate":"2021-08-24"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"    private String description;","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"    private final char type;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"     * Constructor for Task","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"     * @param description Description of the task to add.","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"     * @param type        type of task to add.","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"    public Task(String description, char type) {","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"        this.type \u003d type;","lastModifiedDate":"2021-09-01"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"     * Gets the description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"     * @return Description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"        return description;","lastModifiedDate":"2021-09-01"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"     * Sets the description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"     * @param description description of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-01"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"     * Gets the \u0027Done\u0027 status of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"     * @return \u0027Done\u0027 status of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"        return isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"    /* Sets the \u0027Done\u0027 status of the task to TRUE. */","lastModifiedDate":"2021-09-01"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"    public void setDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"     * Gets the type of task.","lastModifiedDate":"2021-09-01"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"     * @return Type of the task.","lastModifiedDate":"2021-09-01"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"    public char getType() {","lastModifiedDate":"2021-09-01"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"        return type;","lastModifiedDate":"2021-09-01"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"     * Formats details of the Task to a printable string.","lastModifiedDate":"2021-09-01"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"     * @return Formatted string of a task.","lastModifiedDate":"2021-09-01"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"    public String toFormattedString() {","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"        return String.format(\"[%c][%c] %s\", this.getType(), isDone ? \u0027X\u0027 : \u0027 \u0027, this.getDescription());","lastModifiedDate":"2021-09-01"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"SeenFang":70}},{"path":"src/main/java/duke/task/TaskHelper.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.task;","lastModifiedDate":"2021-09-15"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"public interface TaskHelper {","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"    String getDeadline();","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-15"}],"authorContributionMap":{"SeenFang":5}},{"path":"src/main/java/duke/task/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"import duke.FileManager;","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"import duke.exception.DirectoryCreationException;","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"import duke.exception.IllegalParameterException;","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-24"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-15"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-24"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    private final FileManager fileManager;","lastModifiedDate":"2021-09-15"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"    private static final int SAVE_TYPE_LOC \u003d 0;","lastModifiedDate":"2021-09-15"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"    private static final int SAVE_DONE_LOC \u003d 1;","lastModifiedDate":"2021-09-15"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"    private static final int SAVE_DESCRIPTION_LOC \u003d 2;","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"SeenFang"},"content":"    private static final int SAVE_DEADLINE_LOC \u003d 3;","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"SeenFang"},"content":"    /* Constructor for Taskmanger */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"SeenFang"},"content":"    public TaskManager() throws DirectoryCreationException {","lastModifiedDate":"2021-09-15"},{"lineNumber":21,"author":{"gitId":"SeenFang"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"SeenFang"},"content":"        fileManager \u003d new FileManager();","lastModifiedDate":"2021-09-15"},{"lineNumber":23,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":26,"author":{"gitId":"SeenFang"},"content":"     * Adds a new task of type Todo to the task manager.","lastModifiedDate":"2021-09-01"},{"lineNumber":27,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"SeenFang"},"content":"     * @param task     task to be added to the task manager","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"SeenFang"},"content":"     * @param isSilent if true, does not print add response to terminal","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"SeenFang"},"content":"    public void addTask(Task task, boolean isSilent) {","lastModifiedDate":"2021-09-15"},{"lineNumber":32,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"SeenFang"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"SeenFang"},"content":"            taskList.add(task);","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"SeenFang"},"content":"            if (!isSilent) {","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"SeenFang"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"SeenFang"},"content":"                System.out.println(\"  \" + task.toFormattedString());","lastModifiedDate":"2021-09-15"},{"lineNumber":39,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":40,"author":{"gitId":"SeenFang"},"content":"                if (taskList.size() \u003d\u003d 1) {","lastModifiedDate":"2021-09-15"},{"lineNumber":41,"author":{"gitId":"SeenFang"},"content":"                    System.out.printf(\"There is now %d task in the list%n\", taskList.size());","lastModifiedDate":"2021-09-15"},{"lineNumber":42,"author":{"gitId":"SeenFang"},"content":"                } else {","lastModifiedDate":"2021-09-15"},{"lineNumber":43,"author":{"gitId":"SeenFang"},"content":"                    System.out.printf(\"There are now %d tasks in the list%n\", taskList.size());","lastModifiedDate":"2021-09-15"},{"lineNumber":44,"author":{"gitId":"SeenFang"},"content":"                }","lastModifiedDate":"2021-09-15"},{"lineNumber":45,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":46,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":47,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":48,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":49,"author":{"gitId":"SeenFang"},"content":"        fileManager.saveTasklistToFile(taskList);","lastModifiedDate":"2021-09-15"},{"lineNumber":50,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":52,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":53,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":54,"author":{"gitId":"SeenFang"},"content":"     * Overloads addTask to provide a default value for isSilent","lastModifiedDate":"2021-09-15"},{"lineNumber":55,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":56,"author":{"gitId":"SeenFang"},"content":"     * @param task task to be added to the task manager","lastModifiedDate":"2021-09-15"},{"lineNumber":57,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":58,"author":{"gitId":"SeenFang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-09-15"},{"lineNumber":59,"author":{"gitId":"SeenFang"},"content":"        addTask(task, false);","lastModifiedDate":"2021-09-15"},{"lineNumber":60,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":61,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":62,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":63,"author":{"gitId":"SeenFang"},"content":"     * Loads tasklist from savefile","lastModifiedDate":"2021-09-15"},{"lineNumber":64,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":65,"author":{"gitId":"SeenFang"},"content":"    public void loadTasklistFromFile() {","lastModifiedDate":"2021-09-15"},{"lineNumber":66,"author":{"gitId":"SeenFang"},"content":"        ArrayList\u003cString\u003e fileLines \u003d fileManager.readTasklistFromFile();","lastModifiedDate":"2021-09-15"},{"lineNumber":67,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":68,"author":{"gitId":"SeenFang"},"content":"        for (String line : fileLines) {","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"SeenFang"},"content":"            Task task;","lastModifiedDate":"2021-09-15"},{"lineNumber":70,"author":{"gitId":"SeenFang"},"content":"            String[] taskData \u003d line.split(\"\\\\|\");","lastModifiedDate":"2021-09-15"},{"lineNumber":71,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":72,"author":{"gitId":"SeenFang"},"content":"            char taskType \u003d taskData[SAVE_TYPE_LOC].trim().charAt(0);","lastModifiedDate":"2021-09-15"},{"lineNumber":73,"author":{"gitId":"SeenFang"},"content":"            String taskDescription \u003d taskData[SAVE_DESCRIPTION_LOC].trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":74,"author":{"gitId":"SeenFang"},"content":"            boolean isDone \u003d taskData[SAVE_DONE_LOC].trim().equals(\"1\");","lastModifiedDate":"2021-09-15"},{"lineNumber":75,"author":{"gitId":"SeenFang"},"content":"            String taskDeadline \u003d null;","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":77,"author":{"gitId":"SeenFang"},"content":"            if (taskData.length \u003e\u003d 4) {","lastModifiedDate":"2021-09-15"},{"lineNumber":78,"author":{"gitId":"SeenFang"},"content":"                taskDeadline \u003d taskData[SAVE_DEADLINE_LOC].trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":79,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":81,"author":{"gitId":"SeenFang"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-15"},{"lineNumber":82,"author":{"gitId":"SeenFang"},"content":"            case TaskType.TODO:","lastModifiedDate":"2021-09-15"},{"lineNumber":83,"author":{"gitId":"SeenFang"},"content":"                task \u003d new Todo(taskDescription);","lastModifiedDate":"2021-09-15"},{"lineNumber":84,"author":{"gitId":"SeenFang"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":85,"author":{"gitId":"SeenFang"},"content":"            case TaskType.DEADLINE:","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"SeenFang"},"content":"                task \u003d new Deadline(taskDescription, taskDeadline);","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"SeenFang"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"SeenFang"},"content":"            case TaskType.EVENT:","lastModifiedDate":"2021-09-15"},{"lineNumber":89,"author":{"gitId":"SeenFang"},"content":"                task \u003d new Event(taskDescription, taskDeadline);","lastModifiedDate":"2021-09-15"},{"lineNumber":90,"author":{"gitId":"SeenFang"},"content":"                break;","lastModifiedDate":"2021-09-15"},{"lineNumber":91,"author":{"gitId":"SeenFang"},"content":"            default:","lastModifiedDate":"2021-09-15"},{"lineNumber":92,"author":{"gitId":"SeenFang"},"content":"                System.out.println(\"An invalid task type has been detected\");","lastModifiedDate":"2021-09-15"},{"lineNumber":93,"author":{"gitId":"SeenFang"},"content":"                return;","lastModifiedDate":"2021-09-15"},{"lineNumber":94,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":95,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":96,"author":{"gitId":"SeenFang"},"content":"            if (isDone) {","lastModifiedDate":"2021-09-15"},{"lineNumber":97,"author":{"gitId":"SeenFang"},"content":"                task.setDone();","lastModifiedDate":"2021-09-15"},{"lineNumber":98,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":99,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":100,"author":{"gitId":"SeenFang"},"content":"            addTask(task, true);","lastModifiedDate":"2021-09-15"},{"lineNumber":101,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":102,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":103,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":104,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":105,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"SeenFang"},"content":"     * Processes user input and adds a new task of type Todo to the task manager.","lastModifiedDate":"2021-09-15"},{"lineNumber":107,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":108,"author":{"gitId":"SeenFang"},"content":"     * @param taskDescription Name of the task to add.","lastModifiedDate":"2021-09-01"},{"lineNumber":109,"author":{"gitId":"SeenFang"},"content":"     * @param taskType        Type of task to add, defined in TaskType.","lastModifiedDate":"2021-09-01"},{"lineNumber":110,"author":{"gitId":"SeenFang"},"content":"     * @throws IllegalParameterException Exception is thrown if an illegal parameter was passed","lastModifiedDate":"2021-09-15"},{"lineNumber":111,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":112,"author":{"gitId":"SeenFang"},"content":"    public void processAndAddTask(String taskDescription, char taskType) throws IllegalParameterException {","lastModifiedDate":"2021-09-15"},{"lineNumber":113,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":114,"author":{"gitId":"SeenFang"},"content":"        Task task;","lastModifiedDate":"2021-09-15"},{"lineNumber":115,"author":{"gitId":"SeenFang"},"content":"        String[] userInput;","lastModifiedDate":"2021-09-15"},{"lineNumber":116,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":117,"author":{"gitId":"SeenFang"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-01"},{"lineNumber":118,"author":{"gitId":"SeenFang"},"content":"        case TaskType.TODO:","lastModifiedDate":"2021-09-01"},{"lineNumber":119,"author":{"gitId":"SeenFang"},"content":"            task \u003d new Todo(processString(taskDescription));","lastModifiedDate":"2021-09-07"},{"lineNumber":120,"author":{"gitId":"SeenFang"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":121,"author":{"gitId":"SeenFang"},"content":"        case TaskType.DEADLINE:","lastModifiedDate":"2021-09-01"},{"lineNumber":122,"author":{"gitId":"SeenFang"},"content":"            userInput \u003d taskDescription.split(\"/by\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":123,"author":{"gitId":"SeenFang"},"content":"            task \u003d new Deadline(processString(userInput[0]), processString(userInput[1]));","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"SeenFang"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":125,"author":{"gitId":"SeenFang"},"content":"        case TaskType.EVENT:","lastModifiedDate":"2021-09-01"},{"lineNumber":126,"author":{"gitId":"SeenFang"},"content":"            userInput \u003d taskDescription.split(\"/at\", 2);","lastModifiedDate":"2021-09-01"},{"lineNumber":127,"author":{"gitId":"SeenFang"},"content":"            task \u003d new Event(processString(userInput[0]), processString(userInput[1]));","lastModifiedDate":"2021-09-07"},{"lineNumber":128,"author":{"gitId":"SeenFang"},"content":"            break;","lastModifiedDate":"2021-09-01"},{"lineNumber":129,"author":{"gitId":"SeenFang"},"content":"        default:","lastModifiedDate":"2021-09-01"},{"lineNumber":130,"author":{"gitId":"SeenFang"},"content":"            System.out.println(\"An invalid task type has been detected\");","lastModifiedDate":"2021-09-01"},{"lineNumber":131,"author":{"gitId":"SeenFang"},"content":"            return;","lastModifiedDate":"2021-09-01"},{"lineNumber":132,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-09-01"},{"lineNumber":133,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":134,"author":{"gitId":"SeenFang"},"content":"        addTask(task);","lastModifiedDate":"2021-09-15"},{"lineNumber":135,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":136,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":137,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":138,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-14"},{"lineNumber":139,"author":{"gitId":"SeenFang"},"content":"     * Deletes the task at selected index, removing it from the list.","lastModifiedDate":"2021-09-14"},{"lineNumber":140,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-14"},{"lineNumber":141,"author":{"gitId":"SeenFang"},"content":"     * @param index index of the task to be deleted.","lastModifiedDate":"2021-09-14"},{"lineNumber":142,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-14"},{"lineNumber":143,"author":{"gitId":"SeenFang"},"content":"    public void deleteTask(int index){","lastModifiedDate":"2021-09-14"},{"lineNumber":144,"author":{"gitId":"SeenFang"},"content":"        index--;","lastModifiedDate":"2021-09-14"},{"lineNumber":145,"author":{"gitId":"SeenFang"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2021-09-14"},{"lineNumber":146,"author":{"gitId":"SeenFang"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-09-14"},{"lineNumber":147,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"I have erased this task from existence:\");","lastModifiedDate":"2021-09-14"},{"lineNumber":148,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"  \" + task.toFormattedString());","lastModifiedDate":"2021-09-14"},{"lineNumber":149,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":150,"author":{"gitId":"SeenFang"},"content":"        fileManager.saveTasklistToFile(taskList);","lastModifiedDate":"2021-09-15"},{"lineNumber":151,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":152,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":153,"author":{"gitId":"SeenFang"},"content":"    /* Prints a list of all tasks in task manager */","lastModifiedDate":"2021-08-24"},{"lineNumber":154,"author":{"gitId":"SeenFang"},"content":"    public void listTasks() {","lastModifiedDate":"2021-08-24"},{"lineNumber":155,"author":{"gitId":"SeenFang"},"content":"        if (taskList.size() \u003c\u003d 0) {","lastModifiedDate":"2021-09-01"},{"lineNumber":156,"author":{"gitId":"SeenFang"},"content":"            System.out.println(\"The list, just like your head, is empty.\");","lastModifiedDate":"2021-09-01"},{"lineNumber":157,"author":{"gitId":"SeenFang"},"content":"        } else {","lastModifiedDate":"2021-09-01"},{"lineNumber":158,"author":{"gitId":"SeenFang"},"content":"            System.out.println(","lastModifiedDate":"2021-09-01"},{"lineNumber":159,"author":{"gitId":"SeenFang"},"content":"                    \"Here is the list of the things your feeble human mind is incapable of keeping track of:\");","lastModifiedDate":"2021-09-01"},{"lineNumber":160,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":161,"author":{"gitId":"SeenFang"},"content":"            int index \u003d 1;","lastModifiedDate":"2021-08-24"},{"lineNumber":162,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":163,"author":{"gitId":"SeenFang"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2021-08-24"},{"lineNumber":164,"author":{"gitId":"SeenFang"},"content":"                System.out.printf(\"%d.%s%n\", index, task.toFormattedString());","lastModifiedDate":"2021-09-02"},{"lineNumber":165,"author":{"gitId":"SeenFang"},"content":"                index++;","lastModifiedDate":"2021-08-24"},{"lineNumber":166,"author":{"gitId":"SeenFang"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":167,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-08-24"},{"lineNumber":168,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":169,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":170,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":171,"author":{"gitId":"SeenFang"},"content":"     * Marks the task at selected index as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":172,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":173,"author":{"gitId":"SeenFang"},"content":"     * @param index index of the task to be marked as done.","lastModifiedDate":"2021-09-01"},{"lineNumber":174,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":175,"author":{"gitId":"SeenFang"},"content":"    public void markDone(int index) {","lastModifiedDate":"2021-08-24"},{"lineNumber":176,"author":{"gitId":"SeenFang"},"content":"        Task task \u003d taskList.get(--index);","lastModifiedDate":"2021-08-24"},{"lineNumber":177,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":178,"author":{"gitId":"SeenFang"},"content":"        task.setDone();","lastModifiedDate":"2021-08-24"},{"lineNumber":179,"author":{"gitId":"SeenFang"},"content":"        System.out.println(\"The task has been marked as done. No need to thank me.\");","lastModifiedDate":"2021-08-24"},{"lineNumber":180,"author":{"gitId":"SeenFang"},"content":"        System.out.println(task.toFormattedString());","lastModifiedDate":"2021-09-02"},{"lineNumber":181,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":182,"author":{"gitId":"SeenFang"},"content":"        fileManager.saveTasklistToFile(taskList);","lastModifiedDate":"2021-09-15"},{"lineNumber":183,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":184,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":185,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-15"},{"lineNumber":186,"author":{"gitId":"SeenFang"},"content":"     * Performs some processing on user inputs","lastModifiedDate":"2021-09-15"},{"lineNumber":187,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-15"},{"lineNumber":188,"author":{"gitId":"SeenFang"},"content":"     * @param toProcess String to be processed","lastModifiedDate":"2021-09-15"},{"lineNumber":189,"author":{"gitId":"SeenFang"},"content":"     * @return Processed strong","lastModifiedDate":"2021-09-15"},{"lineNumber":190,"author":{"gitId":"SeenFang"},"content":"     * @throws IllegalParameterException exception is thrown if parameter is empty","lastModifiedDate":"2021-09-15"},{"lineNumber":191,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-15"},{"lineNumber":192,"author":{"gitId":"SeenFang"},"content":"    private String processString(String toProcess) throws IllegalParameterException {","lastModifiedDate":"2021-09-07"},{"lineNumber":193,"author":{"gitId":"SeenFang"},"content":"        String processed \u003d toProcess.trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":194,"author":{"gitId":"SeenFang"},"content":"        processed \u003d processed.replace(\"|\", \"\");","lastModifiedDate":"2021-09-15"},{"lineNumber":195,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":196,"author":{"gitId":"SeenFang"},"content":"        if (processed.isEmpty()) {","lastModifiedDate":"2021-09-07"},{"lineNumber":197,"author":{"gitId":"SeenFang"},"content":"            throw new IllegalParameterException(\"Empty parameter\");","lastModifiedDate":"2021-09-07"},{"lineNumber":198,"author":{"gitId":"SeenFang"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":199,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":200,"author":{"gitId":"SeenFang"},"content":"        return processed;","lastModifiedDate":"2021-09-07"},{"lineNumber":201,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":202,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-08-24"},{"lineNumber":203,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"SeenFang":203}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"/* A list of all task types */","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"public final class TaskType {","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"    public static final char TODO \u003d \u0027T\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"    public static final char DEADLINE \u003d \u0027D\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"    public static final char EVENT \u003d \u0027E\u0027;","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"SeenFang":9}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"    /**","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"     * Constructor for Task of type Todo","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"     *","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"     * @param description Description of the task to add.","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"     */","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"        super(description, TaskType.TODO);","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"    }","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"}","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"SeenFang":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"SeenFang"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":2,"author":{"gitId":"SeenFang"},"content":"todo borrow book","lastModifiedDate":"2021-09-01"},{"lineNumber":3,"author":{"gitId":"SeenFang"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-09-01"},{"lineNumber":4,"author":{"gitId":"SeenFang"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-09-01"},{"lineNumber":5,"author":{"gitId":"SeenFang"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":6,"author":{"gitId":"SeenFang"},"content":"done 2","lastModifiedDate":"2021-09-01"},{"lineNumber":7,"author":{"gitId":"SeenFang"},"content":"done 3","lastModifiedDate":"2021-09-01"},{"lineNumber":8,"author":{"gitId":"SeenFang"},"content":"todo eat","lastModifiedDate":"2021-09-01"},{"lineNumber":9,"author":{"gitId":"SeenFang"},"content":"todo sleep","lastModifiedDate":"2021-09-01"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"todo rave","lastModifiedDate":"2021-09-01"},{"lineNumber":11,"author":{"gitId":"SeenFang"},"content":"todo repeat","lastModifiedDate":"2021-09-01"},{"lineNumber":12,"author":{"gitId":"SeenFang"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":13,"author":{"gitId":"SeenFang"},"content":"done 5","lastModifiedDate":"2021-09-01"},{"lineNumber":14,"author":{"gitId":"SeenFang"},"content":"done 6","lastModifiedDate":"2021-09-01"},{"lineNumber":15,"author":{"gitId":"SeenFang"},"content":"list","lastModifiedDate":"2021-09-01"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"bye","lastModifiedDate":"2021-09-01"}],"authorContributionMap":{"SeenFang":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"SeenFang"},"content":"javac -encoding UTF-8 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"SeenFang"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SeenFang":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"SeenFang"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"SeenFang":1,"-":37}}]
