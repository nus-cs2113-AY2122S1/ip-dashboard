[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"Duke is an app for **managing Tasks, Deadlines and Events via a Command Line Interface (CLI)**. If you can type fast, ","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"Duke is able to manage your various tasks faster than traditional GUI applications.","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"  - [Qutting the program: `bye`](#bye---quits-the-program)","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"  - [Adding a deadline: `deadline`](#deadline---creates-a-task-with-deadline)","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"  - [Deleting a task: `delete`](#delete---deletes-a-task)","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"  - [Creating an event: `event`](#event---creates-an-event)","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"  - [Seaching for tasks: `find`](#find---search-for-tasks)","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"  - [Viewing help: `help`](#help---displays-the-help-message)","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"  - [Viewing all tasks: `list`](#list---list-all-tasks)","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"  - [Creating a todo: `todo`](#todo---creates-a-todo-list)","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"  - [Viewing tasks by date: `whatson`](#whats-on---list-tasks-on-a-day)","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"  - [Saving the data](#saving-the-data)","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"  - [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"## Quick Start","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"1. Ensure you have Java `11` installed in your computer.","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"2. Download the latest `duke.jar` from [here](https://github.com/alvintan01/ip/releases/tag/A-Jar).","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"3. Copy the file to the folder you want to use as the home folder for your task list.","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"4. Run the application using the command `java -jar duke.jar`.","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"## Features","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"**Notes about the commands format**","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"- All dates and times must be in `dd/MM/yyyy HHmm` format. For example `20/09/2021 1600` represents the ","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"`20 September 2021 4pm`. ","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"- Parameters must be given in the format specified.","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"### `Bye` - Quits the program.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"The program ends and saves the data.","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"Format: `bye`","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"  ","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"### `Deadline` - Creates a task with deadline.","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"Creates a task with a deadline and adds it to the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"Format: `deadline \u003cname\u003e /by \u003cdate in dd/MM/yyyy HHmm\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"Example of usage: ","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"`deadline project /by 30/09/2021 1200`","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"A task named project is created with dateline 30/09/2021 1200.","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"[D][ ] project (by: Sep 30 2021 1200)","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"### `Delete` - Deletes a task.","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"Deletes a specified task.","lastModifiedDate":"2021-09-20"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"Format: `delete \u003ctask id\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"Example of usage: ","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"`delete 1`","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"The task selected is removed from the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"[D][ ] project (by: Sep 30 2021 1200)","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"### `Done` - Marks a task complete.","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"Marks a specified task as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"Format: `done \u003ctask id\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"Example of usage: ","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"`done 1`","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"The task selected is marked as completed.","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"[D][X] project (by: Sep 30 2021 1200)","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"### `Event` - Creates an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"Creates an event in the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"Format: `event \u003cevent name\u003e /at \u003cdate in dd/MM/yyyy HHmm\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"Example of usage: ","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"`event open house /at 15/10/2021 0900`","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"The event named open house is created with date and time 15/10/2021 0900.","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"[E][ ] open house (at: Oct 15 2021 0900)","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"### `Find` - Search for tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"Finds all tasks with the specified word.","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"Format: `find \u003cstring to search\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"`find open`","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"The event named open house is returned.","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"1.[E][ ] open house (at: Oct 15 2021 0900)","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"### `Help` - Displays the help message.","lastModifiedDate":"2021-09-18"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"Shows the description and syntax of all commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"Format: `help`","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"The description and syntax of the commands are returned.","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"Welcome to the help page.","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"Bye: Exits the program.","lastModifiedDate":"2021-09-18"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"Deadline: Adds a task with deadline. Command Syntax: deadline \u003cname\u003e /by \u003cdate in dd/MM/yyyy HHmm\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"Delete: Deletes a task. Command Syntax: delete \u003ctask id\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"Done: Marks a task as completed. Command Syntax: done \u003ctask id\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"Event: Creates an event. Command Syntax: event \u003cevent name\u003e /at \u003cdate in dd/MM/yyyy HHmm\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"Find: Finds all tasks with the specified word. Command Syntax: find \u003cstring to search\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"Help: Displays the help message.","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"List: Lists all tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"Todo: Creates a Todo task. Command Syntax: todo \u003ctask name\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"What\u0027s On: Lists all tasks occurring on the specified day. Command Syntax: whatson \u003cdate in dd/MM/yyyy\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"### `List` - List all tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"List all tasks in the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"Format: `list`","lastModifiedDate":"2021-09-22"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"All tasks in the task list are listed.","lastModifiedDate":"2021-09-18"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-18"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"1.[D][X] project (by: Sep 30 2021 1200)","lastModifiedDate":"2021-09-18"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"2.[E][ ] open house (at: Oct 15 2021 0900)","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"### `Todo` - Creates a Todo list.","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"Creates a Todo in the task list.","lastModifiedDate":"2021-09-20"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"Format: `todo \u003ctask name\u003e`","lastModifiedDate":"2021-09-22"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":206,"author":{"gitId":"alvintan01"},"content":"Example of usage: ","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":208,"author":{"gitId":"alvintan01"},"content":"`todo buy bread`","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"alvintan01"},"content":"Expected outcome:","lastModifiedDate":"2021-09-18"},{"lineNumber":211,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"The task buy bread is added to the task list.","lastModifiedDate":"2021-09-18"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":216,"author":{"gitId":"alvintan01"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-18"},{"lineNumber":217,"author":{"gitId":"alvintan01"},"content":"[T][ ] buy bread","lastModifiedDate":"2021-09-18"},{"lineNumber":218,"author":{"gitId":"alvintan01"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"alvintan01"},"content":"```","lastModifiedDate":"2021-09-18"},{"lineNumber":221,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":222,"author":{"gitId":"alvintan01"},"content":"### `What\u0027s On` - List tasks on a day.","lastModifiedDate":"2021-09-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":224,"author":{"gitId":"alvintan01"},"content":"Lists all tasks occurring on the specified date.","lastModifiedDate":"2021-09-20"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":226,"author":{"gitId":"alvintan01"},"content":"Format: `whatson \u003cdate in dd/MM/yyyy`","lastModifiedDate":"2021-09-22"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":229,"author":{"gitId":"alvintan01"},"content":"`whatson 15/10/2021`","lastModifiedDate":"2021-09-18"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":233,"author":{"gitId":"alvintan01"},"content":"All tasks on the specific date is returned.","lastModifiedDate":"2021-09-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":235,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":236,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":237,"author":{"gitId":"alvintan01"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-18"},{"lineNumber":238,"author":{"gitId":"alvintan01"},"content":"1.[E][ ] open house (at: Oct 15 2021 0900)","lastModifiedDate":"2021-09-18"},{"lineNumber":239,"author":{"gitId":"alvintan01"},"content":"++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++","lastModifiedDate":"2021-09-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":241,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":242,"author":{"gitId":"alvintan01"},"content":"### Saving the data","lastModifiedDate":"2021-09-22"},{"lineNumber":243,"author":{"gitId":"alvintan01"},"content":"Duke will automatically save the data after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-22"},{"lineNumber":244,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":245,"author":{"gitId":"alvintan01"},"content":"### Editing the data file","lastModifiedDate":"2021-09-22"},{"lineNumber":246,"author":{"gitId":"alvintan01"},"content":"Duke\u0027s data are saved by a pipe `|` delimited file at `data/duke.txt`. Advanced users are welcome to update the data","lastModifiedDate":"2021-09-22"},{"lineNumber":247,"author":{"gitId":"alvintan01"},"content":"directly by editing that data file.","lastModifiedDate":"2021-09-22"},{"lineNumber":248,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":249,"author":{"gitId":"alvintan01"},"content":"`!Caution: If your changes to the data file makes its format invalid, Duke will discard all data and start with an ","lastModifiedDate":"2021-09-22"},{"lineNumber":250,"author":{"gitId":"alvintan01"},"content":"empty data file at the next run.`","lastModifiedDate":"2021-09-22"},{"lineNumber":251,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":252,"author":{"gitId":"alvintan01"},"content":"## Command Summary","lastModifiedDate":"2021-09-22"},{"lineNumber":253,"author":{"gitId":"alvintan01"},"content":"| Action | Command Parameters |","lastModifiedDate":"2021-09-22"},{"lineNumber":254,"author":{"gitId":"alvintan01"},"content":"| --- | --- |","lastModifiedDate":"2021-09-22"},{"lineNumber":255,"author":{"gitId":"alvintan01"},"content":"| `bye` | - |","lastModifiedDate":"2021-09-22"},{"lineNumber":256,"author":{"gitId":"alvintan01"},"content":"| `deadline` | `deadline \u003cname\u003e /by \u003cdate in dd/MM/yyyy HHmm\u003e` |","lastModifiedDate":"2021-09-22"},{"lineNumber":257,"author":{"gitId":"alvintan01"},"content":"| `delete` | `delete \u003ctask id\u003e` |","lastModifiedDate":"2021-09-22"},{"lineNumber":258,"author":{"gitId":"alvintan01"},"content":"| `done` | `done \u003ctask id\u003e`|","lastModifiedDate":"2021-09-22"},{"lineNumber":259,"author":{"gitId":"alvintan01"},"content":"| `event` | `event \u003cevent name\u003e /at \u003cdate in dd/MM/yyyy HHmm\u003e` |","lastModifiedDate":"2021-09-22"},{"lineNumber":260,"author":{"gitId":"alvintan01"},"content":"| `find` | `find \u003cstring to search\u003e` |","lastModifiedDate":"2021-09-22"},{"lineNumber":261,"author":{"gitId":"alvintan01"},"content":"| `help` | - |","lastModifiedDate":"2021-09-22"},{"lineNumber":262,"author":{"gitId":"alvintan01"},"content":"| `list` | - |","lastModifiedDate":"2021-09-22"},{"lineNumber":263,"author":{"gitId":"alvintan01"},"content":"| `todo` | `todo \u003ctask name\u003e` |","lastModifiedDate":"2021-09-22"},{"lineNumber":264,"author":{"gitId":"alvintan01"},"content":"| `whatson` | `whatson \u003cdate in dd/MM/yyyy\u003e` |","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"alvintan01":241,"-":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"import commands.Command;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"import commands.CommandList;","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommand;","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" * Helps to start the application, load the data from file and initialise all variables","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" * used as well as to continuously prompt for input from the user until \"BYE\" is received.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        tasks \u003d storage.loadData(ui);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        new Duke(\"data/duke.txt\").run();","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"     * Prompts input from user and processes it indefinitely until \"BYE\" is received.","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    private void run() {","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        ui.printWelcomeMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        // String to store user\u0027s input","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        // Loops till bye is received","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        while (true) {","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            System.out.print(\"\u003e \");","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            // Reads user input","lastModifiedDate":"2021-09-17"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            try {","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"                Command command \u003d Parser.processCommand(userInput);","lastModifiedDate":"2021-09-20"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"                command.execute(ui, tasks, storage);","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                if (command.isExit()) {","lastModifiedDate":"2021-09-20"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"                    break;","lastModifiedDate":"2021-09-17"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-09-17"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"            } catch (InvalidCommand e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"                // Invalid Command","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"                ui.printInvalidCommandMessage();","lastModifiedDate":"2021-09-17"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"alvintan01":56,"-":4}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Represents the Bye command. Helps to do all operations of the bye command such as to print the bye statement","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * and to save the data to a file.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public ByeCommand(String command) {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        isExit \u003d true;","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        storage.saveData(ui, tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        ui.customPrint(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":26}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Represents the generic command. Helps to declare the abstract methods. It is inherited by all","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * other commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String addTaskMessage \u003d \"Got it. I\u0027ve added this task:\\n%1$s\\nNow you have\"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"            + \" %2$o tasks in the list.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    String command;","lastModifiedDate":"2021-09-17"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    boolean isExit;","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public Command(String command) {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    // Return null as default as not all commands needs a help function.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public String help() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        return null;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public String getCommand() {","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        return command;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    public void setCommand(String command) {","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        this.command \u003d command;","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        return isExit;","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    public void setExit(boolean exit) {","lastModifiedDate":"2021-09-20"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        isExit \u003d exit;","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"    public abstract void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage);","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"alvintan01":48}},{"path":"src/main/java/commands/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Consists of all the accepted commands in the program.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class CommandList {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    public static final String LIST \u003d \"LIST\";","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    public static final String TODO \u003d \"TODO\";","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static final String DEADLINE \u003d \"DEADLINE\";","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String EVENT \u003d \"EVENT\";","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String DONE \u003d \"DONE\";","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String BYE \u003d \"BYE\";","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public static final String DELETE \u003d \"DELETE\";","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String HELP \u003d \"HELP\";","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public static final String WHATSON \u003d \"WHATSON\";","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String FIND \u003d \"FIND\";","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"alvintan01":18}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" * Represents the Deadline command. Helps to do all operations of the deadline command such as","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" * creating the Deadline object and does all the error handling related to that command.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private static final String byNotProvided \u003d \"I could not find \u0027/by dd/MM/YYYY HHmm\u0027 in your command!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private static final String deadlineTitleNotProvided \u003d \"I could not find the title of your deadline!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String commandSyntax \u003d \"Command Syntax: deadline \u003cname\u003e /by \u003cdate in dd/MM/yyyy HHmm\u003e\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public String description;","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public String date;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public DeadlineCommand(String command, String description, String date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    public String help() {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        return commandSyntax;","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        Date dateObj \u003d DateParser.stringToDateTime(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        // Handle case it user did not provide date","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        if (dateObj \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(byNotProvided + \"\\n\" + help());","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        } else if (description.equals(\"\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(deadlineTitleNotProvided + \"\\n\" + help());","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            Deadline deadline \u003d new Deadline(description, dateObj);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            tasks.add(deadline);","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(String.format(addTaskMessage, deadline, tasks.size()));","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            storage.saveData(ui, tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":51}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inputvalidator.CheckId;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Represents the Delete command. Helps to do all operations of the delete command such as","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" * removing the task from the list and ensures that the ID input is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    private static final String removeTaskMessage \u003d \"Noted. I\u0027ve removed this task:\\n%1$s\\nNow you have %2$o tasks\"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"            + \" in the list.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String commandSyntax \u003d \"Command Syntax: delete \u003ctask id\u003e\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    String id;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public DeleteCommand(String command, String id) {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    public String help() {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        return commandSyntax;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        if (!CheckId.isValidTaskId(id, tasks)) { // Invalid task id","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(Task.taskDoesNotExist + \"\\n\" + help());","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"            int taskId \u003d Integer.parseInt(id) - 1;","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            Task removedTask \u003d tasks.get(taskId);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"            tasks.remove(taskId);","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(String.format(removeTaskMessage, removedTask, tasks.size()));","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            storage.saveData(ui, tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":44}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import inputvalidator.CheckId;","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Represents the Done command. Helps to do all operations of the done command such as","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" * marking a task as completed and ensuring that the ID input is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    private static final String taskAlreadyCompleted \u003d \"You have already completed the task [%1$s]!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    private static final String taskMarkedDone \u003d \"Nice! I\u0027ve marked this task as done:\\n%1$s\";","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String commandSyntax \u003d \"Command Syntax: done \u003ctask id\u003e\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public String id;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public DoneCommand(String command, String id) {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public String help() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        return commandSyntax;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        if (!CheckId.isValidTaskId(id, tasks)) { // Task id is invalid","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(Task.taskDoesNotExist + \"\\n\" + help());","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"            int taskId \u003d Integer.parseInt(id) - 1; // -1 as array index starts from 0","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            // Checks if task has been completed","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"            Task currentTask \u003d tasks.get(taskId);","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"            if (currentTask.isDone()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"                ui.customPrint(String.format(taskAlreadyCompleted, currentTask.getDescription()));","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"                currentTask.markAsDone(); // Mark current task as done","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"                ui.customPrint(String.format(taskMarkedDone, currentTask));","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"                storage.saveData(ui, tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":49}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import tasks.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" * Represents the Event command. Helps to do all operations of the event command such as","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" * creating the event object and does all the error handling such as invalid date.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private static final String atNotProvided \u003d \"I could not find \u0027/at dd/MM/YYYY HHmm\u0027 in your command!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    private static final String eventTitleNotProvided \u003d \"I could not find the title of your event!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public static final String commandSyntax \u003d \"Command Syntax: event \u003cevent name\u003e /at \u003cdate in dd/MM/yyyy HHmm\u003e\";","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public String eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public String at;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public EventCommand(String command, String eventName, String at) {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    public String help() {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        return commandSyntax;","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        Date dateObj \u003d DateParser.stringToDateTime(at);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        // Handle case it user did not provide date","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"        if (dateObj \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(atNotProvided + \"\\n\" + help());","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        } else if (eventName.equals(\"\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(eventTitleNotProvided + \"\\n\" + help());","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            Event event \u003d new Event(eventName, dateObj);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            tasks.add(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(String.format(addTaskMessage, event, tasks.size()));","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            storage.saveData(ui, tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":51}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Represents the Find command. Helps to list out all the tasks with the matching string provided","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * by the user. It also does all the error handling related to that command.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public static final String commandSyntax \u003d \"Command Syntax: find \u003cstring to search\u003e\";","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public String searchTerm;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public FindCommand(String command, String searchTerm) {","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        this.searchTerm \u003d searchTerm;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    public String help() {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        return commandSyntax;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"            // Ignores case","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"            if (task.getDescription().toUpperCase().contains(searchTerm.toUpperCase())) {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"                filteredTasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        // Checks if tasks exists","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            taskString.append(Task.noTasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            taskString.append(Task.hereAreYourTasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            Task currentTask \u003d filteredTasks.get(i);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"            taskString.append(i + 1).append(\".\").append(currentTask.toString()).append(\"\\n\");","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"        ui.customPrint(taskString.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":53}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Represents the Help command. Helps to list out the details of the commands and the","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * syntax of the commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    private static final String helpMessage \u003d \"Welcome to the help page.\"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"            + \"\\nBye: Exits the program.\"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"            + \"\\nDeadline: Adds a task with deadline. \" + DeadlineCommand.commandSyntax","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"            + \"\\nDelete: Deletes a task. \" + DeleteCommand.commandSyntax","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"            + \"\\nDone: Marks a task as completed. \" + DoneCommand.commandSyntax","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"            + \"\\nEvent: Creates an event. \" + EventCommand.commandSyntax","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"            + \"\\nFind: Finds all tasks with the specified word. \" + FindCommand.commandSyntax","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"            + \"\\nHelp: Displays the help message.\"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"            + \"\\nList: Lists all tasks.\"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"            + \"\\nTodo: Creates a Todo task. \" + TodoCommand.commandSyntax","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"            + \"\\nWhat\u0027s On: Lists all tasks occurring on the specified day. \" + WhatsOnCommand.commandSyntax;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    public HelpCommand(String command) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        ui.customPrint(helpMessage);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"alvintan01":36}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" * Represents the List command. Helps to list out all the tasks in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        // Checks if tasks exists","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"            taskString +\u003d Task.noTasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"            taskString +\u003d Task.hereAreYourTasks;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"            taskString +\u003d (i + 1) + \".\" + currentTask.toString() + \"\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        ui.customPrint(taskString);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":34}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import tasks.Todo;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * Represents the Todo command. Helps to do all operations of the Todo command such as","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" * creating the Todo object and does all the error handling such as a empty description.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    private static final String todoError \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"    public static final String commandSyntax \u003d \"Command Syntax: todo \u003ctask name\u003e\";","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public String description;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public TodoCommand(String command, String description) {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public String help() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        return commandSyntax;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(todoError + \"\\n\" + commandSyntax);","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"            Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"            tasks.add(todo);","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(String.format(addTaskMessage, todo, tasks.size()));","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            storage.saveData(ui, tasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":41}},{"path":"src/main/java/commands/WhatsOnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package commands;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import storage.Storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import tasks.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":" * Represents the WhatsOn command. Helps to list out all the tasks in the list that matches","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":" * the date given by the user. It also helps to ensure that the date given is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"public class WhatsOnCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public static final String commandSyntax \u003d \"Command Syntax: whatson \u003cdate in dd/MM/yyyy\u003e\";","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    String date;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public WhatsOnCommand(String command, String date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        super(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public String help() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        return \"Invalid syntax.\\n\" + commandSyntax;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    public void execute(Ui ui, ArrayList\u003cTask\u003e tasks, Storage storage) {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        String parsedDate \u003d DateParser.formatDate(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        if (parsedDate \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(help());","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"            ArrayList\u003cTask\u003e filteredTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"                    String taskDate \u003d DateParser.dateToString(((Deadline) task).getDate());","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"                    if (taskDate.equals(parsedDate)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"                        filteredTasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"                    }","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"                    String taskDate \u003d DateParser.dateToString(((Event) task).getAt());","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"                    if (taskDate.equals(parsedDate)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"                        filteredTasks.add(task);","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"                    }","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"            // Checks if tasks exists","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"            if (filteredTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"                taskString.append(Task.noTasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"                taskString.append(Task.hereAreYourTasks);","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"            for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"                Task currentTask \u003d filteredTasks.get(i);","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"                taskString.append(i + 1).append(\".\").append(currentTask.toString()).append(\"\\n\");","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(taskString.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":68}},{"path":"src/main/java/errors/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package errors;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * The InvalidCommand is thrown when the user enters any command not supported","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" * by the application.","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"public class InvalidCommand extends Exception {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"alvintan01":9}},{"path":"src/main/java/errors/InvalidFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package errors;","lastModifiedDate":"2021-09-10"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * The InvalidFile is thrown when there is invalid data found in the saved file.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class InvalidFile extends Exception {","lastModifiedDate":"2021-09-10"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-10"}],"authorContributionMap":{"alvintan01":8}},{"path":"src/main/java/inputvalidator/CheckId.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package inputvalidator;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" * Helps to check if a task id provided is valid.","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"public class CheckId {","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"     * Checks if a task id is valid.","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"     * @param id String ID of task to be checked.","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"     * @return a boolean value indicating if a task was valid.","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"     * @throws NumberFormatException If id was not a number or \u003c 1 or \u003e tasks.size().","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public static boolean isValidTaskId(String id, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        int taskId;","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"            taskId \u003d Integer.parseInt(id);","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"            if (taskId \u003c 1 || taskId \u003e tasks.size()) { //invalid task ID","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"                throw new NumberFormatException();","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-20"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"            return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"alvintan01":31}},{"path":"src/main/java/parser/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":" * The DateParser class implement methods to convert String to Date and Date to String.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"public class DateParser {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"     * Converts a date object to string.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"     * @param date Date object to be converted to String.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"     * @return A string containing date in MMM dd yyyy HHmm format.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    public static String dateTimeToString(Date date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"        return new SimpleDateFormat(\"MMM dd yyyy HHmm\").format(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"     * Converts a date object to string, excluding the time.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"     * @param date Date object to be converted to String.","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"     * @return A string containing date in dd/MM/yyyy format.","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public static String dateToString(Date date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        return new SimpleDateFormat(\"dd/MM/yyyy\").format(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"     * Converts a date object to string to be written to the file.","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"     * @param date Date object to be converted to String.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"     * @return A string containing date in dd/MM/yyyy HHmm format.","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    public static String dateToFile(Date date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        return new SimpleDateFormat(\"dd/MM/yyyy HHmm\").format(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"     * Formats a string to dd/MM/yyyy format if day/month contains 1 digit.","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"     * @param date A date string.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"     * @return A string containing date in dd/MM/yyyy format. Returns null when it is an invalid date.","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"    public static String formatDate(String date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            if (date \u003d\u003d null) { // Ensure that date is not null","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"                throw new ParseException(\"Unknown date\", 0);","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"            dateTimeFormatter.parse(date); // To check if date was in valid format","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"            Date parsedDate \u003d new SimpleDateFormat(\"dd/MM/yyyy\").parse(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"            // To ensure date is in the correct format even if day/month has 1 digit","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"            return new SimpleDateFormat(\"dd/MM/yyyy\").format(parsedDate);","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        } catch (DateTimeParseException | ParseException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"            // For invalid date formats","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"        return null;","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"     * Converts a string to a Date object.","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"     * @param date A date string.","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"     * @return Date object containing date. Returns null when it is an invalid date.","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    public static Date stringToDateTime(String date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"            if (date \u003d\u003d null) { // Ensure that date is not null","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"                throw new ParseException(\"Unknown date\", 0);","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"            dateTimeFormatter.parse(date); // To check if date was in valid format","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"            return new SimpleDateFormat(\"dd/MM/yyyy HHmm\").parse(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"        } catch (DateTimeParseException | ParseException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"            // For invalid date formats","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"        return null;","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"alvintan01":90}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package parser;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import commands.*;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidCommand;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidFile;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"import tasks.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import tasks.Todo;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import static commands.CommandList.*;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"import static commands.CommandList.WHATSON;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":" * The Parser class helps extract the user\u0027s command as well as the task description","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":" * and date if applicable.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"public class Parser {","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"     * Processes the user input into a Command Object.","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"     * @param userInput Input provided by user.","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"     * @return Command object containing command, description and date (if command was deadline or event).","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"     * @throws InvalidCommand If a command does not exist.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public static Command processCommand(String userInput) throws InvalidCommand {","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        // Splits user input by spaces","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        String[] userInputSplitted \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        String command \u003d userInputSplitted[0].toUpperCase();","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        String description \u003d \"\";","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        String[] descriptionAndDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        // Ensure description exists","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        if (userInputSplitted.length \u003e 1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            description \u003d userInputSplitted[1];","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        switch (command) {","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        case LIST:","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            return new ListCommand(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"        case TODO:","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"            return new TodoCommand(command, description);","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"            descriptionAndDate \u003d spiltString(\"/by\", description);","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"            return new DeadlineCommand(command, descriptionAndDate[0], descriptionAndDate[1]);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"        case EVENT:","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"            descriptionAndDate \u003d spiltString(\"/at\", description);","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"            return new EventCommand(command, descriptionAndDate[0], descriptionAndDate[1]);","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"        case DONE:","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"            return new DoneCommand(command, description);","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        case DELETE:","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"            return new DeleteCommand(command, description);","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        case HELP:","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            return new HelpCommand(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        case BYE:","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"            return new ByeCommand(command);","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"        case FIND:","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"            return new FindCommand(command, description);","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"        case WHATSON:","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"            return new WhatsOnCommand(command, description);","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"            throw new InvalidCommand();","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"     * Splits the string by the delimiter provided.","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"     * @param delimiter   Delimiter to split string by.","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"     * @param description String to be split.","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"     * @return Array of string of size 2 after string is spilt by the delimiter.","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    private static String[] spiltString(String delimiter, String description) {","lastModifiedDate":"2021-09-20"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"        String[] returnValues \u003d new String[2];","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"        int byIndex \u003d description.indexOf(delimiter);","lastModifiedDate":"2021-09-17"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-17"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"            returnValues[0] \u003d description;","lastModifiedDate":"2021-09-17"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-17"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"            String taskDescription \u003d description.substring(0, byIndex).trim(); // Remove trailing spaces","lastModifiedDate":"2021-09-17"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"            String date \u003d description.substring(byIndex + delimiter.length()).trim(); // Remove leading spaces","lastModifiedDate":"2021-09-17"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"            returnValues[0] \u003d taskDescription;","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"            returnValues[1] \u003d date;","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"        return returnValues;","lastModifiedDate":"2021-09-17"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"     * Returns a Task object based on a given line from the data file.","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"     * @param line A line from the data file.","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"     * @return Task object containing the task\u0027s description.","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"     * @throws InvalidFile If the file is not in a correct format.","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"    public static Task fileParser(String line) throws InvalidFile {","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"        String[] dataSplit \u003d line.split(\"\\\\|\"); // Split by |","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        if (dataSplit.length \u003c 3) { // Ensure that there should be at least 3 elements","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"            throw new InvalidFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"        String taskType \u003d dataSplit[0];","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"        boolean taskCompleted \u003d dataSplit[1].equals(\"true\");","lastModifiedDate":"2021-09-22"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"        String description \u003d dataSplit[2];","lastModifiedDate":"2021-09-22"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"        Date date \u003d null;","lastModifiedDate":"2021-09-22"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"        if (dataSplit.length \u003e 3) { // There is a date","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"            date \u003d DateParser.stringToDateTime(dataSplit[3]);","lastModifiedDate":"2021-09-22"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"        if (!taskType.equals(\"T\") \u0026\u0026 date \u003d\u003d null) { // Invalid date","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"            throw new InvalidFile();","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"        Task task;","lastModifiedDate":"2021-09-22"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"        switch (taskType) {","lastModifiedDate":"2021-09-22"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"        case \"T\":","lastModifiedDate":"2021-09-22"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"            task \u003d new Todo(description);","lastModifiedDate":"2021-09-22"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"        case \"D\":","lastModifiedDate":"2021-09-22"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"            task \u003d new Deadline(description, date);","lastModifiedDate":"2021-09-22"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"        case \"E\":","lastModifiedDate":"2021-09-22"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"            task \u003d new Event(description, date);","lastModifiedDate":"2021-09-22"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-09-22"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"            throw new InvalidFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"        if (taskCompleted) {","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"            task.markAsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"        return task;","lastModifiedDate":"2021-09-22"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"alvintan01":136}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package storage;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import parser.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-17"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import ui.Ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"import errors.InvalidFile;","lastModifiedDate":"2021-09-17"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"import java.io.File;","lastModifiedDate":"2021-09-17"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-17"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":" * The Storage class helps to do all the saving and loading of data to the tasks Arraylist.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"public class Storage {","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    File filePath;","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        this.filePath \u003d new File(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"     * Converts all tasks to a string to be written to the file Duke.txt.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"     * @param ui    Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"     * @param tasks Reference to the ArrayList of Tasks passed by Main.","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    public void saveData(Ui ui, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        if (!filePath.exists()) {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"            createDirectory();","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            output.append(task.toFile()).append(\"\\n\");","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"            FileWriter myFile \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"            myFile.write(output.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"            myFile.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(\"Could not write to file!\");","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"     * Loads the data to task ArrayList if Duke.txt exists.","lastModifiedDate":"2021-09-17"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"     * @param ui Reference to the UI object passed by Main to print messages.","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"     * @return ArrayList of Tasks.","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"    public ArrayList\u003cTask\u003e loadData(Ui ui) {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-17"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"        try {","lastModifiedDate":"2021-09-17"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"            Scanner myReader \u003d new Scanner(filePath);","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"                String line \u003d myReader.nextLine();","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"                Task newTask \u003d Parser.fileParser(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"                tasks.add(newTask);","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"            myReader.close();","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-17"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(\"Data file does not exist! Creating a new one...\");","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        } catch (InvalidFile invalidFile) {","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"            ui.customPrint(\"File contains invalid data!\");","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"            System.exit(0);","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-17"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"        return tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"     * Creates the data folder if it doesn\u0027t exist.","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"    public void createDirectory() {","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"        File dataDirectory \u003d new File(filePath.getParent());","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"        dataDirectory.mkdirs();","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"alvintan01":83}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" * Represents a task with deadline. A Deadline object is represented by a description and date.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    protected Date date;","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public Date getDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"        return date;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public void setDate(Date date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    public Deadline(String description, Date date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-27"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + DateParser.dateTimeToString(date) + \")\";","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        return \"D|\" + super.toFile() + \"|\" + DateParser.dateToFile(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"alvintan01":36}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import parser.DateParser;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"import java.util.Date;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" * Represents an event entry. An Event object is represented by a description and at","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":" * (the date and time of the event).","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    protected Date at;","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public Date getAt() {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        return at;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public void setAt(Date at) {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public Event(String description, Date at) {","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + DateParser.dateTimeToString(at) + \")\";","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-10"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        return \"E|\" + super.toFile() + \"|\" + DateParser.dateToFile(at);","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"alvintan01":38}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":" * Represents a generic task. A Task object is represented by a description and a boolean flag","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":" * representing whether the task is completed. It is inherited by all other tasks.","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"public class Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    public static final String taskDoesNotExist \u003d \"The task ID does not exist!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public static final String noTasks \u003d \"You have no tasks in your list!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public static final String hereAreYourTasks \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    protected String description;","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        return description;","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        return isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-20"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-20"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + getDescription();","lastModifiedDate":"2021-08-27"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-10"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"        return isDone + \"|\" + description;","lastModifiedDate":"2021-09-10"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"alvintan01":47}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package tasks;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Represents a Todo task. A Todo object is represented by a description of the task.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-10"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-09-10"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    public String toFile() {","lastModifiedDate":"2021-09-10"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        return \"T|\" + super.toFile();","lastModifiedDate":"2021-09-10"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-10"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"alvintan01":22}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package ui;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":" * Helps to format and print all the output to the console.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"public class Ui {","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    private final int noOfPlus \u003d 115;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"     * Prints out a statement with borders.","lastModifiedDate":"2021-09-17"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"     * @param statement Statement to be printed.","lastModifiedDate":"2021-09-17"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    public void customPrint(String statement) {","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"+\".repeat(noOfPlus));","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        System.out.println(statement.trim()); // Remove any trailing spaces","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"+\".repeat(noOfPlus));","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"     * Prints the welcome message.","lastModifiedDate":"2021-09-17"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public void printWelcomeMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"        // Prints welcome message","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"        String welcomeMessage \u003d logo;","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"        welcomeMessage +\u003d \"Hello! I\u0027m Duke\\n\";","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"        welcomeMessage +\u003d \"What can I do for you?\";","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"        customPrint(welcomeMessage);","lastModifiedDate":"2021-09-17"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"     * Prints the invalid command message.","lastModifiedDate":"2021-09-17"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"    public void printInvalidCommandMessage() {","lastModifiedDate":"2021-09-17"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"        customPrint(\"Sorry! I did not understand your command.\");","lastModifiedDate":"2021-09-17"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"alvintan01":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"todo borrow book","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"done 1","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"done 2","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"done 3","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"bye","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"alvintan01":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alvintan01":1,"-":20}}]
