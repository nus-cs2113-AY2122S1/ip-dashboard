[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"    protected String date;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"alvintan01":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    // ArrayList to store all the tasks","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"        printWelcomeMessage();","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"        getUserInput();","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"     * Prompts input from user and processes it","lastModifiedDate":"2021-08-27"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    private static void getUserInput() {","lastModifiedDate":"2021-08-27"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"        // String to store user\u0027s input","lastModifiedDate":"2021-08-27"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"        // Loops till bye is received","lastModifiedDate":"2021-08-27"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"        while (true) {","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"            // Reads user input","lastModifiedDate":"2021-08-23"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"            userInput \u003d in.nextLine();","lastModifiedDate":"2021-08-27"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"            // Splits user input by spaces","lastModifiedDate":"2021-08-27"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"            String[] userInputSplitted \u003d userInput.split(\"\\\\s+\", 2);","lastModifiedDate":"2021-09-04"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"            String command \u003d userInputSplitted[0];","lastModifiedDate":"2021-09-04"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"            String description \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"            // Ensure description exists","lastModifiedDate":"2021-08-27"},{"lineNumber":33,"author":{"gitId":"alvintan01"},"content":"            if (userInputSplitted.length \u003e 1) {","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"alvintan01"},"content":"                description \u003d userInputSplitted[1];","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-08-27"},{"lineNumber":36,"author":{"gitId":"alvintan01"},"content":"            try{","lastModifiedDate":"2021-09-04"},{"lineNumber":37,"author":{"gitId":"alvintan01"},"content":"                processCommands(command, description);","lastModifiedDate":"2021-08-27"},{"lineNumber":38,"author":{"gitId":"alvintan01"},"content":"            }catch (InvalidCommand e){","lastModifiedDate":"2021-09-04"},{"lineNumber":39,"author":{"gitId":"alvintan01"},"content":"                // Invalid Command","lastModifiedDate":"2021-09-04"},{"lineNumber":40,"author":{"gitId":"alvintan01"},"content":"                printInvalidCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":41,"author":{"gitId":"alvintan01"},"content":"            }","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":44,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":45,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":46,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":47,"author":{"gitId":"alvintan01"},"content":"     * Processes the commands entered by the user.","lastModifiedDate":"2021-08-27"},{"lineNumber":48,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":49,"author":{"gitId":"alvintan01"},"content":"     * @param command     The command entered by the user","lastModifiedDate":"2021-08-27"},{"lineNumber":50,"author":{"gitId":"alvintan01"},"content":"     * @param description Task description entered by user.","lastModifiedDate":"2021-08-27"},{"lineNumber":51,"author":{"gitId":"alvintan01"},"content":"     * @throws InvalidCommand If an invalid command is entered.","lastModifiedDate":"2021-09-04"},{"lineNumber":52,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":53,"author":{"gitId":"alvintan01"},"content":"    private static void processCommands(String command, String description) throws InvalidCommand {","lastModifiedDate":"2021-09-04"},{"lineNumber":54,"author":{"gitId":"alvintan01"},"content":"        // Capitalise the command","lastModifiedDate":"2021-08-27"},{"lineNumber":55,"author":{"gitId":"alvintan01"},"content":"        switch (command.toUpperCase()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":56,"author":{"gitId":"alvintan01"},"content":"        case \"LIST\":","lastModifiedDate":"2021-08-27"},{"lineNumber":57,"author":{"gitId":"alvintan01"},"content":"            listTasks();","lastModifiedDate":"2021-08-27"},{"lineNumber":58,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-08-20"},{"lineNumber":59,"author":{"gitId":"alvintan01"},"content":"        case \"TODO\":","lastModifiedDate":"2021-08-27"},{"lineNumber":60,"author":{"gitId":"alvintan01"},"content":"            addToDo(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":61,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":62,"author":{"gitId":"alvintan01"},"content":"        case \"DEADLINE\":","lastModifiedDate":"2021-08-27"},{"lineNumber":63,"author":{"gitId":"alvintan01"},"content":"            addDeadLine(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":64,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":65,"author":{"gitId":"alvintan01"},"content":"        case \"EVENT\":","lastModifiedDate":"2021-08-27"},{"lineNumber":66,"author":{"gitId":"alvintan01"},"content":"            addEvent(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":67,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":68,"author":{"gitId":"alvintan01"},"content":"        case \"DONE\":","lastModifiedDate":"2021-08-27"},{"lineNumber":69,"author":{"gitId":"alvintan01"},"content":"            markDone(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":70,"author":{"gitId":"alvintan01"},"content":"            break;","lastModifiedDate":"2021-08-27"},{"lineNumber":71,"author":{"gitId":"alvintan01"},"content":"        case \"BYE\":","lastModifiedDate":"2021-08-27"},{"lineNumber":72,"author":{"gitId":"alvintan01"},"content":"            exit();","lastModifiedDate":"2021-08-27"},{"lineNumber":73,"author":{"gitId":"alvintan01"},"content":"        default:","lastModifiedDate":"2021-08-27"},{"lineNumber":74,"author":{"gitId":"alvintan01"},"content":"            throw new InvalidCommand();","lastModifiedDate":"2021-09-04"},{"lineNumber":75,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-08-23"},{"lineNumber":76,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":77,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":78,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":79,"author":{"gitId":"alvintan01"},"content":"     * Adds a Todo to the Task list","lastModifiedDate":"2021-08-27"},{"lineNumber":80,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":81,"author":{"gitId":"alvintan01"},"content":"     * @param description Task description entered by user.","lastModifiedDate":"2021-08-27"},{"lineNumber":82,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":83,"author":{"gitId":"alvintan01"},"content":"    private static void addToDo(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":84,"author":{"gitId":"alvintan01"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2021-08-27"},{"lineNumber":85,"author":{"gitId":"alvintan01"},"content":"            customPrint(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2021-09-04"},{"lineNumber":86,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":87,"author":{"gitId":"alvintan01"},"content":"            tasks.add(new Todo(description));","lastModifiedDate":"2021-08-27"},{"lineNumber":88,"author":{"gitId":"alvintan01"},"content":"            acknowledgeCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":89,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":90,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":91,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":92,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":93,"author":{"gitId":"alvintan01"},"content":"     * Splits the string by the delimiter provided","lastModifiedDate":"2021-08-27"},{"lineNumber":94,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":95,"author":{"gitId":"alvintan01"},"content":"     * @param delimiter   Delimiter to split string by","lastModifiedDate":"2021-08-27"},{"lineNumber":96,"author":{"gitId":"alvintan01"},"content":"     * @param description String to be split","lastModifiedDate":"2021-08-27"},{"lineNumber":97,"author":{"gitId":"alvintan01"},"content":"     * @return Array of string of size 2 after string is spilt by the delimiter or null if delimiter was not found","lastModifiedDate":"2021-08-27"},{"lineNumber":98,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":99,"author":{"gitId":"alvintan01"},"content":"    private static String[] spiltString(String delimiter, String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":100,"author":{"gitId":"alvintan01"},"content":"        int byIndex \u003d description.indexOf(delimiter);","lastModifiedDate":"2021-08-27"},{"lineNumber":101,"author":{"gitId":"alvintan01"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2021-08-27"},{"lineNumber":102,"author":{"gitId":"alvintan01"},"content":"            return null;","lastModifiedDate":"2021-08-27"},{"lineNumber":103,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":104,"author":{"gitId":"alvintan01"},"content":"        String taskDescription \u003d description.substring(0, byIndex).trim(); // Remove trailing spaces","lastModifiedDate":"2021-08-27"},{"lineNumber":105,"author":{"gitId":"alvintan01"},"content":"        String date \u003d description.substring(byIndex + delimiter.length()).trim(); // Remove leading spaces","lastModifiedDate":"2021-08-27"},{"lineNumber":106,"author":{"gitId":"alvintan01"},"content":"        String[] output \u003d {taskDescription, date};","lastModifiedDate":"2021-08-27"},{"lineNumber":107,"author":{"gitId":"alvintan01"},"content":"        return output;","lastModifiedDate":"2021-08-27"},{"lineNumber":108,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":109,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":110,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":111,"author":{"gitId":"alvintan01"},"content":"     * Adds a Deadline to the Task list","lastModifiedDate":"2021-08-27"},{"lineNumber":112,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":113,"author":{"gitId":"alvintan01"},"content":"     * @param description Task description entered by user.","lastModifiedDate":"2021-08-27"},{"lineNumber":114,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":115,"author":{"gitId":"alvintan01"},"content":"    private static void addDeadLine(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":116,"author":{"gitId":"alvintan01"},"content":"        String[] split \u003d spiltString(\"/by\", description);","lastModifiedDate":"2021-08-27"},{"lineNumber":117,"author":{"gitId":"alvintan01"},"content":"        // Handle case it user did not provide date","lastModifiedDate":"2021-08-27"},{"lineNumber":118,"author":{"gitId":"alvintan01"},"content":"        if (split \u003d\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":119,"author":{"gitId":"alvintan01"},"content":"            customPrint(\"I could not find \u0027/by\u0027 in your command!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":120,"author":{"gitId":"alvintan01"},"content":"        } else if (split[0].equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":121,"author":{"gitId":"alvintan01"},"content":"            customPrint(\"I could not find the title of your deadline!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":122,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":123,"author":{"gitId":"alvintan01"},"content":"            String taskDescription \u003d split[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":124,"author":{"gitId":"alvintan01"},"content":"            String date \u003d split[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":125,"author":{"gitId":"alvintan01"},"content":"            tasks.add(new Deadline(taskDescription, date));","lastModifiedDate":"2021-08-27"},{"lineNumber":126,"author":{"gitId":"alvintan01"},"content":"            acknowledgeCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":127,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":128,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":129,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":130,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":131,"author":{"gitId":"alvintan01"},"content":"     * Adds an Event to the Task list","lastModifiedDate":"2021-08-27"},{"lineNumber":132,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-08-27"},{"lineNumber":133,"author":{"gitId":"alvintan01"},"content":"     * @param description Task description entered by user.","lastModifiedDate":"2021-08-27"},{"lineNumber":134,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":135,"author":{"gitId":"alvintan01"},"content":"    private static void addEvent(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":136,"author":{"gitId":"alvintan01"},"content":"        String[] split \u003d spiltString(\"/at\", description);","lastModifiedDate":"2021-08-27"},{"lineNumber":137,"author":{"gitId":"alvintan01"},"content":"        // Handle case it user did not provide date","lastModifiedDate":"2021-08-27"},{"lineNumber":138,"author":{"gitId":"alvintan01"},"content":"        if (split \u003d\u003d null) {","lastModifiedDate":"2021-08-27"},{"lineNumber":139,"author":{"gitId":"alvintan01"},"content":"            customPrint(\"I could not find \u0027/at\u0027 in your command!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":140,"author":{"gitId":"alvintan01"},"content":"        } else if (split[0].equals(\"\")) {","lastModifiedDate":"2021-09-04"},{"lineNumber":141,"author":{"gitId":"alvintan01"},"content":"            customPrint(\"I could not find the title of your event!\");","lastModifiedDate":"2021-09-04"},{"lineNumber":142,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":143,"author":{"gitId":"alvintan01"},"content":"            String taskDescription \u003d split[0];","lastModifiedDate":"2021-08-27"},{"lineNumber":144,"author":{"gitId":"alvintan01"},"content":"            String at \u003d split[1];","lastModifiedDate":"2021-08-27"},{"lineNumber":145,"author":{"gitId":"alvintan01"},"content":"            tasks.add(new Event(taskDescription, at));","lastModifiedDate":"2021-08-27"},{"lineNumber":146,"author":{"gitId":"alvintan01"},"content":"            acknowledgeCommand();","lastModifiedDate":"2021-08-27"},{"lineNumber":147,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":148,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":149,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":150,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":151,"author":{"gitId":"alvintan01"},"content":"     * Prints the exit message and ends the program.","lastModifiedDate":"2021-08-27"},{"lineNumber":152,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":153,"author":{"gitId":"alvintan01"},"content":"    private static void exit() {","lastModifiedDate":"2021-08-27"},{"lineNumber":154,"author":{"gitId":"alvintan01"},"content":"        customPrint(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":155,"author":{"gitId":"alvintan01"},"content":"        // Ends the program","lastModifiedDate":"2021-08-27"},{"lineNumber":156,"author":{"gitId":"alvintan01"},"content":"        System.exit(0);","lastModifiedDate":"2021-08-27"},{"lineNumber":157,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":158,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":159,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":160,"author":{"gitId":"alvintan01"},"content":"     * Prints the acknowledgement that the command is processed.","lastModifiedDate":"2021-08-27"},{"lineNumber":161,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":162,"author":{"gitId":"alvintan01"},"content":"    private static void acknowledgeCommand() {","lastModifiedDate":"2021-08-27"},{"lineNumber":163,"author":{"gitId":"alvintan01"},"content":"        Task addedTask \u003d tasks.get(tasks.size() - 1);","lastModifiedDate":"2021-08-27"},{"lineNumber":164,"author":{"gitId":"alvintan01"},"content":"        customPrint(\"Got it. I\u0027ve added this task:\\n\" + addedTask.toString() + \"\\nNow you have \"","lastModifiedDate":"2021-08-27"},{"lineNumber":165,"author":{"gitId":"alvintan01"},"content":"                + tasks.size() + \" tasks in the list.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":166,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":167,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":168,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":169,"author":{"gitId":"alvintan01"},"content":"     * Prints the welcome message.","lastModifiedDate":"2021-08-27"},{"lineNumber":170,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":171,"author":{"gitId":"alvintan01"},"content":"    private static void printWelcomeMessage() {","lastModifiedDate":"2021-08-27"},{"lineNumber":172,"author":{"gitId":"alvintan01"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":173,"author":{"gitId":"alvintan01"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":174,"author":{"gitId":"alvintan01"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":175,"author":{"gitId":"alvintan01"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-27"},{"lineNumber":176,"author":{"gitId":"alvintan01"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":177,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":178,"author":{"gitId":"alvintan01"},"content":"        // Prints welcome message","lastModifiedDate":"2021-08-27"},{"lineNumber":179,"author":{"gitId":"alvintan01"},"content":"        String welcomeMessage \u003d logo;","lastModifiedDate":"2021-08-27"},{"lineNumber":180,"author":{"gitId":"alvintan01"},"content":"        welcomeMessage +\u003d \"Hello! I\u0027m Duke\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":181,"author":{"gitId":"alvintan01"},"content":"        welcomeMessage +\u003d \"What can I do for you?\";","lastModifiedDate":"2021-08-27"},{"lineNumber":182,"author":{"gitId":"alvintan01"},"content":"        customPrint(welcomeMessage);","lastModifiedDate":"2021-08-27"},{"lineNumber":183,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":184,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":185,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-27"},{"lineNumber":186,"author":{"gitId":"alvintan01"},"content":"     * Prints the invalid command message.","lastModifiedDate":"2021-08-27"},{"lineNumber":187,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-27"},{"lineNumber":188,"author":{"gitId":"alvintan01"},"content":"    private static void printInvalidCommand() {","lastModifiedDate":"2021-09-04"},{"lineNumber":189,"author":{"gitId":"alvintan01"},"content":"        customPrint(\"Sorry! I did not understand your command.\");","lastModifiedDate":"2021-08-27"},{"lineNumber":190,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":191,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":192,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":193,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":194,"author":{"gitId":"alvintan01"},"content":"     * Prints out a statement with borders.","lastModifiedDate":"2021-08-23"},{"lineNumber":195,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":196,"author":{"gitId":"alvintan01"},"content":"     * @param statement Statement to be printed.","lastModifiedDate":"2021-08-23"},{"lineNumber":197,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":198,"author":{"gitId":"alvintan01"},"content":"    public static void customPrint(String statement) {","lastModifiedDate":"2021-08-23"},{"lineNumber":199,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\");","lastModifiedDate":"2021-08-27"},{"lineNumber":200,"author":{"gitId":"alvintan01"},"content":"        System.out.println(statement.trim()); // Remove any trailing spaces","lastModifiedDate":"2021-08-27"},{"lineNumber":201,"author":{"gitId":"alvintan01"},"content":"        System.out.println(\"+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\");","lastModifiedDate":"2021-08-27"},{"lineNumber":202,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":203,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":204,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":205,"author":{"gitId":"alvintan01"},"content":"     * Prints out all the Tasks with borders.","lastModifiedDate":"2021-08-23"},{"lineNumber":206,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":207,"author":{"gitId":"alvintan01"},"content":"    public static void listTasks() {","lastModifiedDate":"2021-08-27"},{"lineNumber":208,"author":{"gitId":"alvintan01"},"content":"        String taskString \u003d \"\";","lastModifiedDate":"2021-08-27"},{"lineNumber":209,"author":{"gitId":"alvintan01"},"content":"        // Checks if tasks exists","lastModifiedDate":"2021-09-04"},{"lineNumber":210,"author":{"gitId":"alvintan01"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-04"},{"lineNumber":211,"author":{"gitId":"alvintan01"},"content":"            taskString +\u003d \"You have no tasks in your list!\";","lastModifiedDate":"2021-09-04"},{"lineNumber":212,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-09-04"},{"lineNumber":213,"author":{"gitId":"alvintan01"},"content":"            taskString +\u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":214,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":215,"author":{"gitId":"alvintan01"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2021-08-20"},{"lineNumber":216,"author":{"gitId":"alvintan01"},"content":"            Task currentTask \u003d tasks.get(i);","lastModifiedDate":"2021-08-20"},{"lineNumber":217,"author":{"gitId":"alvintan01"},"content":"            taskString +\u003d (i + 1) + \".\" + currentTask.toString() + \"\\n\";","lastModifiedDate":"2021-08-27"},{"lineNumber":218,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":219,"author":{"gitId":"alvintan01"},"content":"        customPrint(taskString);","lastModifiedDate":"2021-08-27"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":221,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":222,"author":{"gitId":"alvintan01"},"content":"    /**","lastModifiedDate":"2021-08-23"},{"lineNumber":223,"author":{"gitId":"alvintan01"},"content":"     * Marks a task as done and calls customPrint to print the completed message.","lastModifiedDate":"2021-08-23"},{"lineNumber":224,"author":{"gitId":"alvintan01"},"content":"     *","lastModifiedDate":"2021-08-23"},{"lineNumber":225,"author":{"gitId":"alvintan01"},"content":"     * @param description String ID of task to be marked as completed.","lastModifiedDate":"2021-08-27"},{"lineNumber":226,"author":{"gitId":"alvintan01"},"content":"     */","lastModifiedDate":"2021-08-23"},{"lineNumber":227,"author":{"gitId":"alvintan01"},"content":"    public static void markDone(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":228,"author":{"gitId":"alvintan01"},"content":"        int taskId \u003d Integer.parseInt(description) - 1; // -1 as array index starts from 0","lastModifiedDate":"2021-08-27"},{"lineNumber":229,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":230,"author":{"gitId":"alvintan01"},"content":"        Boolean isNotValidTaskID \u003d taskId \u003c 0 || taskId \u003e\u003d tasks.size();","lastModifiedDate":"2021-09-04"},{"lineNumber":231,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":232,"author":{"gitId":"alvintan01"},"content":"        // Checks for valid taskID","lastModifiedDate":"2021-08-27"},{"lineNumber":233,"author":{"gitId":"alvintan01"},"content":"        if (isNotValidTaskID) {","lastModifiedDate":"2021-09-04"},{"lineNumber":234,"author":{"gitId":"alvintan01"},"content":"            customPrint(\"You have entered an invalid task ID!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":235,"author":{"gitId":"alvintan01"},"content":"            return;","lastModifiedDate":"2021-08-27"},{"lineNumber":236,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-08-27"},{"lineNumber":237,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":238,"author":{"gitId":"alvintan01"},"content":"        // Checks if task has been completed","lastModifiedDate":"2021-08-27"},{"lineNumber":239,"author":{"gitId":"alvintan01"},"content":"        Task currentTask \u003d tasks.get(taskId);","lastModifiedDate":"2021-08-20"},{"lineNumber":240,"author":{"gitId":"alvintan01"},"content":"        if (currentTask.isDone()) {","lastModifiedDate":"2021-08-27"},{"lineNumber":241,"author":{"gitId":"alvintan01"},"content":"            customPrint(\"You have already completed the task [\" + currentTask.getDescription() + \"]!\");","lastModifiedDate":"2021-08-27"},{"lineNumber":242,"author":{"gitId":"alvintan01"},"content":"        } else {","lastModifiedDate":"2021-08-27"},{"lineNumber":243,"author":{"gitId":"alvintan01"},"content":"            currentTask.markAsDone(); // Mark current task as done","lastModifiedDate":"2021-08-23"},{"lineNumber":244,"author":{"gitId":"alvintan01"},"content":"            String textToPrint \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-08-20"},{"lineNumber":245,"author":{"gitId":"alvintan01"},"content":"            textToPrint +\u003d currentTask.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":246,"author":{"gitId":"alvintan01"},"content":"            customPrint(textToPrint);","lastModifiedDate":"2021-08-23"},{"lineNumber":247,"author":{"gitId":"alvintan01"},"content":"        }","lastModifiedDate":"2021-08-20"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":249,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"alvintan01":246,"-":3}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"    protected String at;","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-08-27"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"alvintan01":16}},{"path":"src/main/java/duke/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"public class InvalidCommand extends Exception{","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"    public void InvalidCommand(){","lastModifiedDate":"2021-09-04"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"alvintan01":7}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"public class Task {","lastModifiedDate":"2021-08-20"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"    private String description;","lastModifiedDate":"2021-08-20"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"    private boolean isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-20"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-20"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"        return description;","lastModifiedDate":"2021-08-20"},{"lineNumber":14,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":15,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":16,"author":{"gitId":"alvintan01"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-08-20"},{"lineNumber":17,"author":{"gitId":"alvintan01"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-20"},{"lineNumber":18,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":19,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":20,"author":{"gitId":"alvintan01"},"content":"    public boolean isDone() {","lastModifiedDate":"2021-08-20"},{"lineNumber":21,"author":{"gitId":"alvintan01"},"content":"        return isDone;","lastModifiedDate":"2021-08-20"},{"lineNumber":22,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":23,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":24,"author":{"gitId":"alvintan01"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-20"},{"lineNumber":25,"author":{"gitId":"alvintan01"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-20"},{"lineNumber":26,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":27,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-20"},{"lineNumber":28,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":29,"author":{"gitId":"alvintan01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":30,"author":{"gitId":"alvintan01"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + getDescription();","lastModifiedDate":"2021-08-27"},{"lineNumber":31,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-20"},{"lineNumber":32,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-08-20"}],"authorContributionMap":{"alvintan01":32}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"package duke;","lastModifiedDate":"2021-09-04"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"        super(description);","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"    @Override","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"    public String toString() {","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2021-08-27"},{"lineNumber":12,"author":{"gitId":"alvintan01"},"content":"    }","lastModifiedDate":"2021-08-27"},{"lineNumber":13,"author":{"gitId":"alvintan01"},"content":"}","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"alvintan01":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"alvintan01"},"content":"todo borrow book","lastModifiedDate":"2021-08-27"},{"lineNumber":2,"author":{"gitId":"alvintan01"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":3,"author":{"gitId":"alvintan01"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-27"},{"lineNumber":4,"author":{"gitId":"alvintan01"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-27"},{"lineNumber":5,"author":{"gitId":"alvintan01"},"content":"done 1","lastModifiedDate":"2021-08-27"},{"lineNumber":6,"author":{"gitId":"alvintan01"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":7,"author":{"gitId":"alvintan01"},"content":"done 2","lastModifiedDate":"2021-08-27"},{"lineNumber":8,"author":{"gitId":"alvintan01"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":9,"author":{"gitId":"alvintan01"},"content":"done 3","lastModifiedDate":"2021-08-27"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"list","lastModifiedDate":"2021-08-27"},{"lineNumber":11,"author":{"gitId":"alvintan01"},"content":"bye","lastModifiedDate":"2021-08-27"}],"authorContributionMap":{"alvintan01":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"alvintan01"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"alvintan01":1,"-":20}}]
