[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"D | 0 | deadline ba | by 6","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"ruyian":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"Duke is a Command-Line Interface application. It is used for recording and tracking tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"- [Duke User Guide](#duke-user-guide)","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"  - [Before we start](#before-we-start)","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"  - [Features](#features)","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"    - [Adding todo : `todo`](#adding-todo--todo)","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"    - [Add event : `event`](#add-event--event)","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"    - [Add deadline : `deadline`](#add-deadline--deadline)","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"    - [List all tasks : `list`](#list-all-tasks--list)","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"    - [Mark the task as done : `done`](#mark-the-task-as-done--done)","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"    - [Delete a task : `delete`](#delete-a-task--delete)","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"    - [Find task : `find`](#find-task--find)","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"    - [Exit Program : `bye`](#exit-program--bye)","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"  - [Note about storage](#note-about-storage)","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"  - [Table of commands](#table-of-commands)","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"  - [Reference](#reference)","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"## Before we start","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"1. Install Java version `11` on your computer","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"2. Download the lastest Duke.jar by clicking [me](https://github.com/ruyian/ip/releases/download/A-Release/ip.jar)","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"3. Copy Duke.jar to the target directory as the home folder","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"4. Open terminal and cd to the home folder","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"5. Run the program using `java -jar Duke.jar` command.","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"6. We are all done. Type your first command in terminal to talk to Duke.","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"### Adding todo : `todo`","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"Adds a new todo task to the list of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"Todos are tasks without any date/time attached to it.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"`todo \u003ctask name\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"Example of Usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"`todo visit new theme park`","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"    ","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"      [T][ ] visit new theme park","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"    Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"### Add event : `event`","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"ruyian"},"content":"Adds a new event task with date/time to task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ruyian"},"content":"Events are tasks that start at a specific time and ends at a specific time. ","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"ruyian"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"ruyian"},"content":"`event \u003ctask name\u003e /at \u003cevent date/time\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ruyian"},"content":"Example of Usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"ruyian"},"content":"`event team project meeting /at Friday Afternoon`","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"ruyian"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"ruyian"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"ruyian"},"content":"      [E][ ] team project meeting (at Friday Afternoon)","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"ruyian"},"content":"    Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ruyian"},"content":"### Add deadline : `deadline`","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"ruyian"},"content":"Adds a new deadline task with deadline to task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"ruyian"},"content":"Deadlines are tasks that need to be done before a specific date/time.","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"ruyian"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"ruyian"},"content":"`deadline \u003ctask name\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"ruyian"},"content":"Example of Usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"ruyian"},"content":"`deadline submit report /by: 11/10/2019 5pm`","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ruyian"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ruyian"},"content":"    Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ruyian"},"content":"      [D][ ] submit report (by: 11/10/2019 5pm)","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"ruyian"},"content":"    Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"ruyian"},"content":"### List all tasks : `list`","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"ruyian"},"content":"Display all the tasks in the list of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"ruyian"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"ruyian"},"content":"`list`","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"ruyian"},"content":"Example of Usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"ruyian"},"content":"`list`","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"ruyian"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"ruyian"},"content":"    Here are the tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"ruyian"},"content":"    1. [T][ ] Exercise","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"ruyian"},"content":"    2. [D][X] CS5222 Assignment (by: 31 Sept 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"ruyian"},"content":"    3. [E][ ] Watch a movie (at: 1 Oct 2021, 9PM)","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"ruyian"},"content":"    4. [D][ ] Scholarship Application (by: 2 Oct 2021 11:59pm)","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"ruyian"},"content":"Notes: Notice the `[ ]` and `[X]` in the above example? It indicates whether a task is done or not. A task with `[ ]` is to be done and a task with `[X]` has already been done.","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"ruyian"},"content":"### Mark the task as done : `done`","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"ruyian"},"content":"Mark the specified task as done by its index.","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"ruyian"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"ruyian"},"content":"`done \u003cindex number\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"ruyian"},"content":"Example of Usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"ruyian"},"content":"`done 3`","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"ruyian"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"ruyian"},"content":"    ","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"ruyian"},"content":"    Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"ruyian"},"content":"      [E][X] Watch a movie (at: 1 Oct 2021, 9PM)","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"ruyian"},"content":"See, the `[ ]` has been changed to `[X]` after `done 3` command.","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"ruyian"},"content":"Note: You can view the index of a task by typing `list`.","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"ruyian"},"content":"### Delete a task : `delete`","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"ruyian"},"content":"Delete the specified task by its index.","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"ruyian"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"ruyian"},"content":"`delete \u003cindex number\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"ruyian"},"content":"Example of Usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"ruyian"},"content":"`delete 1`","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"ruyian"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"ruyian"},"content":"    Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"ruyian"},"content":"      [T][ ] Exercise","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"ruyian"},"content":"    Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"ruyian"},"content":"Note: You can view the index of a task by typing `list`.","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"ruyian"},"content":"### Find task : `find`","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"ruyian"},"content":"Find all tasks in the list that contain the given keyword.","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"ruyian"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"ruyian"},"content":"`find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"ruyian"},"content":"Example of Usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"ruyian"},"content":"`find coding`","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"ruyian"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"ruyian"},"content":"    Here are the matching tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"ruyian"},"content":"    1. [D][ ] CS2030 coding Assignment (by: 31 Sept 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"ruyian"},"content":"    2. [T][X] Leetcode coding practise","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"ruyian"},"content":"### Exit Program : `bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":171,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"ruyian"},"content":"Exits the Duke program.","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"ruyian"},"content":"Format:","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"ruyian"},"content":"`bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":178,"author":{"gitId":"ruyian"},"content":"Example of Usage:","lastModifiedDate":"2021-09-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":180,"author":{"gitId":"ruyian"},"content":"`bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":182,"author":{"gitId":"ruyian"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":184,"author":{"gitId":"ruyian"},"content":"    Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":187,"author":{"gitId":"ruyian"},"content":"## Note about storage","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"ruyian"},"content":"All data are stored under a text file under directory of \"./data/duke.txt\" to the home folder. Text file is modified and all changes are automatically saved whenever there is a change to the list e.g. deleting, mark as done, adding new todo/event/deadline. All data are saved locally and no data will be collected from you.","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":191,"author":{"gitId":"ruyian"},"content":"Every time you restart Duke, Duke will automatically reload the all the tasks you have previously keyyed in from the text file.","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"ruyian"},"content":"## Table of commands","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":195,"author":{"gitId":"ruyian"},"content":"Command | Format","lastModifiedDate":"2021-09-30"},{"lineNumber":196,"author":{"gitId":"ruyian"},"content":"--------|--------","lastModifiedDate":"2021-09-30"},{"lineNumber":197,"author":{"gitId":"ruyian"},"content":"todo    |`todo \u003ctask name\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"ruyian"},"content":"event   |`event \u003ctask name\u003e /at \u003cevent date/time\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"ruyian"},"content":"deadline|`deadline \u003ctask name\u003e /by \u003cdeadline\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":200,"author":{"gitId":"ruyian"},"content":"list    |`list`","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"ruyian"},"content":"done    |`done \u003cindex number\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"ruyian"},"content":"delete  |`delete \u003cindex number\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"ruyian"},"content":"find    |`find \u003ckeyword\u003e`","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"ruyian"},"content":"bye     |`bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":206,"author":{"gitId":"ruyian"},"content":"## Reference","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"ruyian"},"content":"The template of the User Guide is followed by [AddressBook Level 3 (AB3) User Guide](https://se-education.org/addressbook-level3/UserGuide.html#editing-a-person--edit).","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ruyian":193,"-":14}},{"path":"src/main/java/duke/body/Action.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.body;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":" * An enum to indicate all possible actions of the users to Duke","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"public enum Action{","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"    BYE, LIST, CREATE_TODO, CREATE_DEADLINE, CREATE_EVENT,","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"    MARK_AS_DONE, DELETE, CLEAR, FIND","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"ruyian":9}},{"path":"src/main/java/duke/body/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.body;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"import duke.exception.IllegalInputException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"import duke.exception.RepeatedCompletionException;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"import duke.task.TaskBank;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"public class Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"     * Perform action from users","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"     * @param sentence the raw user input","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"     * @param action   the actino parsed from user input by Parser","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"     * @param ui       the UI from the Duke","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"     * @param storage  the storage handler of duke.txt","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"     * @param tb       TaskBank of all current tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"     * @throws DukeException if unable to find tasks by an invalid index or wrong Action is keyyed in","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"    public static void perform(String sentence, Action action, Ui ui, Storage storage, TaskBank tb) throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"        switch (action) {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"        case CLEAR:","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"            clear(tb);","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ruyian"},"content":"            ui.showClearMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"ruyian"},"content":"            storage.exportTasks(tb);","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"        case DELETE:","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"            Task deletedTask \u003d deleteTask(sentence, tb);","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"            ui.showDeleteMessage(deletedTask, tb.getTaskSize());","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"            storage.exportTasks(tb);","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"        case BYE:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"            bye();","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"            ui.showByeMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"        case LIST:","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"            ui.showAllTaskMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"            listAllTask(tb);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"        case CREATE_TODO:","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"        case CREATE_DEADLINE:","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"        case CREATE_EVENT:","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"            Task createdTask \u003d createTask(action, tb, sentence);","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"            ui.showTaskAddedMessage(createdTask, tb.getTaskSize());","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"            storage.exportTasks(tb);","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"        case MARK_AS_DONE:","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"ruyian"},"content":"            Task completedTask \u003d completeTask(tb, sentence);","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"ruyian"},"content":"            ui.showCompleteMessage(completedTask);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"ruyian"},"content":"            storage.exportTasks(tb);","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"ruyian"},"content":"        case FIND:","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"ruyian"},"content":"            TaskBank matchedTaskBank \u003d findTask(sentence, tb);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"ruyian"},"content":"            ui.showFindMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"ruyian"},"content":"            listAllTask(matchedTaskBank);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"ruyian"},"content":"        default:","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"ruyian"},"content":"            throw new DukeException(\"Error in parsing command\");","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"ruyian"},"content":"     * Remove all tasks from the taskbank","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ruyian"},"content":"     * @param tb taskbank to be cleared","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"ruyian"},"content":"    private static void clear(TaskBank tb) {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"ruyian"},"content":"        tb.clear();","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"ruyian"},"content":"    private static Task deleteTask(String deleteStament, TaskBank tb) throws DukeIndexOutOfBoundException, IllegalInputException {","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"ruyian"},"content":"        int targetIndex \u003d Parser.parseIndex(deleteStament);","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"ruyian"},"content":"        Task deletedTask \u003d tb.removeTask(targetIndex);","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"ruyian"},"content":"        return deletedTask;","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"ruyian"},"content":"    private static void bye() {","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"ruyian"},"content":"        Duke.terminateDuke();","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"ruyian"},"content":"    private static void listAllTask(TaskBank tb) {","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"ruyian"},"content":"        tb.printList();","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"ruyian"},"content":"    private static Task createTask(Action action, TaskBank tb, String sentence) {","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"ruyian"},"content":"        Task newTask;","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"ruyian"},"content":"        String description \u003d Parser.parseDescription(sentence);","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"ruyian"},"content":"        switch (action) {","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"ruyian"},"content":"        case CREATE_TODO:","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"ruyian"},"content":"            newTask \u003d tb.addTodo(description);","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"ruyian"},"content":"        case CREATE_DEADLINE:","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"ruyian"},"content":"            newTask \u003d tb.addDeadline(description);","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"ruyian"},"content":"        case CREATE_EVENT:","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"ruyian"},"content":"            newTask \u003d tb.addEvent(description);","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"ruyian"},"content":"            break;","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"ruyian"},"content":"        default:","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"ruyian"},"content":"            newTask \u003d null;","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"ruyian"},"content":"        return newTask;","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"ruyian"},"content":"    private static TaskBank findTask(String input, TaskBank givenTaskBank) throws IllegalInputException {","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"ruyian"},"content":"        String keywordInput \u003d Parser.parseKeyWord(input);","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"ruyian"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d TaskBank.findMatchingTask(givenTaskBank, keywordInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"ruyian"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"ruyian"},"content":"            return null;","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"ruyian"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"ruyian"},"content":"            return new TaskBank(matchingTasks);","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"ruyian"},"content":"    private static Task completeTask(TaskBank tb, String sentence) throws RepeatedCompletionException, NumberFormatException, DukeIndexOutOfBoundException, IllegalInputException {","lastModifiedDate":"2021-10-01"},{"lineNumber":119,"author":{"gitId":"ruyian"},"content":"        int targetIndex \u003d Parser.parseIndex(sentence);","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"ruyian"},"content":"        Task completedTask \u003d tb.searchTask(targetIndex);","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"ruyian"},"content":"        completedTask.markAsDone();","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"ruyian"},"content":"        return completedTask;","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"ruyian":124}},{"path":"src/main/java/duke/body/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.body;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"import duke.task.TaskBank;","lastModifiedDate":"2021-09-08"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"    private TaskBank taskBank;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"    private static boolean isTerminating;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"    private static final String TEXT_FILE_PATH\u003d \"./data/duke.txt\";","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"     * Instantiates Storage, TaskBank and Ui  of the programme","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"     * @param filePath the filePath which duke.txt is stored","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"        taskBank \u003d new TaskBank();","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"        storage \u003d new Storage(filePath, taskBank, ui);","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"     * Runs the Duke program","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"ruyian"},"content":"    public void run() {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"ruyian"},"content":"        try (Scanner sc \u003d new Scanner(System.in)) {","lastModifiedDate":"2021-08-25"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"            String fullCommand;","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"            while (!isTerminating) {","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"                fullCommand \u003d ui.readInput(sc);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"                ui.printDashLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"                try {","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"                    Action action \u003d Parser.parseCommand(fullCommand);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"                    Command.perform(fullCommand, action, ui, storage, taskBank);","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"                    ui.showErrorMessage(e);","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"                }","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"                ui.printDashLine();","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"        isTerminating \u003d false;","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"        new Duke(TEXT_FILE_PATH).run();","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"ruyian"},"content":"     * Changes the variable isTerminating to true","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"ruyian"},"content":"     * Used to end the while loop that continuously read user input","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"ruyian"},"content":"    public static void terminateDuke() {","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"ruyian"},"content":"        isTerminating \u003d true;","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-08"},{"lineNumber":58,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-08"},{"lineNumber":59,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":60,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ruyian":60,"-":1}},{"path":"src/main/java/duke/body/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.body;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"import duke.exception.EmptyInputException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"import duke.exception.IllegalInputException;","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"public class Parser {","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"     * Parses user input to corresponding command enum based on user input.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"     * @param sentence Raw String taken from user input","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"     * @return an action to be taken by Command","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"     * @throws DukeException including illegal inputs and empty inputs","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"    public static Action parseCommand(String sentence) throws DukeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"        if (sentence.isEmpty()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"            throw new EmptyInputException(\"Empty input! Try again (o|o)\");","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"        } else if (sentence.equals(\"bye\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"            return Action.BYE;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"        } else if (sentence.equals(\"list\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"            return Action.LIST;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"        } else if (sentence.startsWith(\"done\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"            return Action.MARK_AS_DONE;","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"        } else if (sentence.startsWith(\"todo\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"            return Action.CREATE_TODO;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"        } else if (sentence.startsWith(\"deadline\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"            return Action.CREATE_DEADLINE;","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"ruyian"},"content":"        } else if (sentence.startsWith(\"event\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"ruyian"},"content":"            return Action.CREATE_EVENT;","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"ruyian"},"content":"        } else if (sentence.startsWith(\"delete\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"            return Action.DELETE;","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"        } else if (sentence.startsWith(\"clear\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"            return Action.CLEAR;","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"        } else if (sentence.startsWith(\"find\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"            return Action.FIND;","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"            throw new IllegalInputException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( \\nPlease try again!\");","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"     * Parse the index of the tasks the user wants to done / delete","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"     * @param sentence the raw String from user input of \"done\" and \"delete\"","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"     * @return targetIndex,","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"     * @throws IllegalInputException if an int cannot be parsed","lastModifiedDate":"2021-10-01"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"    public static int parseIndex(String sentence) throws IllegalInputException {","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"        String[] words \u003d sentence.split(\" \");","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"            int targetIndex \u003d Integer.parseInt(words[1]) - 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"ruyian"},"content":"            return targetIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"ruyian"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"ruyian"},"content":"            throw new IllegalInputException(\"Not a number. Try again!\");","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ruyian"},"content":"     * Parse the keyword of the user looks for","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"ruyian"},"content":"     * @param sentence, raw user input","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"ruyian"},"content":"     * @return the keyword that the user looks for","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"ruyian"},"content":"     * @throws IllegalInputException if bad keyword or no keyword is keyyed in","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"ruyian"},"content":"    public static String parseKeyWord(String sentence) throws IllegalInputException {","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"ruyian"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"ruyian"},"content":"            int spaceIndex \u003d sentence.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"ruyian"},"content":"            if (spaceIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"ruyian"},"content":"                throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"ruyian"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"ruyian"},"content":"            String keyWord \u003d sentence.substring(spaceIndex + 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"ruyian"},"content":"            return keyWord;","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"ruyian"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"ruyian"},"content":"            throw new IllegalInputException(\"Bad keyword!\");","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"ruyian"},"content":"        } catch (IndexOutOfBoundsException ie) {","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"ruyian"},"content":"            throw new IllegalInputException(\"You have not keyed in any keyword\");","lastModifiedDate":"2021-10-01"},{"lineNumber":77,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ruyian"},"content":"     * Parse the description of task from user input","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"ruyian"},"content":"     * @param sentence raw user input","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"ruyian"},"content":"     * @return the description of the task","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"ruyian"},"content":"    public static String parseDescription(String sentence) {","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"ruyian"},"content":"        int spaceIndex \u003d sentence.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"ruyian"},"content":"        String description \u003d sentence.substring(spaceIndex + 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"ruyian"},"content":"        return description;","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"ruyian"},"content":"     * Parse the \"/\" used in event and deadline input that separates the description","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"ruyian"},"content":"     * and date","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"ruyian"},"content":"     * @param sentence - raw user input","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"ruyian"},"content":"     * @return the index at which \"/\" is found","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"ruyian"},"content":"    public static int parseSlashIndex(String sentence) {","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"ruyian"},"content":"        return sentence.indexOf(\"/\");","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"ruyian":102}},{"path":"src/main/java/duke/body/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.body;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"import duke.exception.RepeatedCompletionException;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"import duke.task.TaskBank;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"import java.io.File;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"public class Storage {","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"    private String filePath;","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"    private File file;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"    private final String SEPARATOR_WITH_SPACE \u003d \" | \";","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"    private final String SEPARATOR \u003d \"|\";","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"    Storage(String filePath, TaskBank tb, Ui ui) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"        file \u003d new File(filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"        if (file.exists()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"            loadTasks(tb);","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"            ui.showLoadMessage();","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"        } else {","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"            File directoryPath \u003d new File(filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"ruyian"},"content":"            directoryPath.mkdir();","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"ruyian"},"content":"            try {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"ruyian"},"content":"                file.createNewFile();","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"            ui.showGreeting();","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"     * Exports the content in the TaskBank to duke.txt","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"     * @param tb - the TaskBank which tasks are exported from","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"    public void exportTasks(TaskBank tb) {","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"        StringBuffer taskTextString \u003d new StringBuffer();","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"        for (Task task : tb.getTasks()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"            taskTextString.append(task.getTaskType());","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"            taskTextString.append(SEPARATOR_WITH_SPACE);","lastModifiedDate":"2021-10-01"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"            taskTextString.append(task.getDone() ? \"1\" : \"0\");","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"            taskTextString.append(SEPARATOR_WITH_SPACE);","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"            taskTextString.append(task.describeInFile());","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"            taskTextString.append(\"\\r\\n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"ruyian"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"ruyian"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"ruyian"},"content":"            fw.write(taskTextString.toString());","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"ruyian"},"content":"            fw.close();","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"ruyian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"ruyian"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"ruyian"},"content":"     * Loads taks from file to target TaskBank","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"ruyian"},"content":"     * @param tb TaskBank which tasks are loaded to","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"ruyian"},"content":"    public void loadTasks(TaskBank tb) {","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"ruyian"},"content":"        File f \u003d new File(this.filePath);","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"ruyian"},"content":"        try (Scanner sc \u003d new Scanner(f)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"ruyian"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"ruyian"},"content":"                loadTaskLine(sc.nextLine(), tb);","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"ruyian"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"ruyian"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"ruyian"},"content":"            System.out.println(\"duke.txt is not found\");","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"ruyian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"ruyian"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"ruyian"},"content":"        } catch (RepeatedCompletionException e) {","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"ruyian"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ruyian"},"content":"     * Reads a specific line in the text file, and add the parsed Task to the given taskbank","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"ruyian"},"content":"     * @param taskLine - a specific line of String of the text file","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"ruyian"},"content":"     * @param tb       - the given taskbank where tasks are to be added","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"ruyian"},"content":"     * @throws IOException if input or outputs has error","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"ruyian"},"content":"    private void loadTaskLine(String taskLine, TaskBank tb) throws IOException, RepeatedCompletionException {","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"ruyian"},"content":"        String taskTypeString \u003d taskLine.substring(0, 1);","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"ruyian"},"content":"        int firstDivisor \u003d taskLine.indexOf(SEPARATOR, 1);","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"ruyian"},"content":"        int secondDivisor \u003d taskLine.indexOf(SEPARATOR, firstDivisor + 1);","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"ruyian"},"content":"        int thirdDivisor \u003d taskLine.indexOf(SEPARATOR, secondDivisor + 1);","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"ruyian"},"content":"        String taskCompletionStatus \u003d taskLine.substring(firstDivisor + 2, secondDivisor).trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"ruyian"},"content":"        Task newTask;","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"ruyian"},"content":"        if (taskTypeString.equals(\"T\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":97,"author":{"gitId":"ruyian"},"content":"            String todoInput \u003d taskLine.substring(secondDivisor + 1).trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":98,"author":{"gitId":"ruyian"},"content":"            newTask \u003d tb.addTodo(todoInput);","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"ruyian"},"content":"        } else if (taskTypeString.equals(\"D\")) {","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"ruyian"},"content":"            String deadLineInput \u003d taskLine.substring(secondDivisor + 1).trim();","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"ruyian"},"content":"            newTask \u003d tb.addDeadline(deadLineInput.replace(\"| \", \"/\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"ruyian"},"content":"        } else if (taskTypeString.equals(\"E\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"ruyian"},"content":"            String eventLineInput \u003d taskLine.substring(secondDivisor + 1).trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"ruyian"},"content":"            newTask \u003d tb.addEvent(eventLineInput.replace(\"| \", \"/\"));","lastModifiedDate":"2021-10-01"},{"lineNumber":105,"author":{"gitId":"ruyian"},"content":"        } else {","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"ruyian"},"content":"            throw new IOException(\"Wrong type from data loader. File is corrupted\");","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":109,"author":{"gitId":"ruyian"},"content":"        if (taskCompletionStatus.equals(\"1\")) {","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"ruyian"},"content":"            try {","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"ruyian"},"content":"                newTask.markAsDone();","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"ruyian"},"content":"            } catch (RepeatedCompletionException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"ruyian"},"content":"                throw new RepeatedCompletionException(\"Repeated completion on loading\");","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"ruyian"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"ruyian":117}},{"path":"src/main/java/duke/body/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.body;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"public class Ui {","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"     * Prints a dash line to separate line outputs","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"    public void printDashLine() {","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\"____________________________________________________________%n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"     * Prints out the message to greet the user when the program","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"     * is run for the first time","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"    public void showGreeting() {","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"        printDashLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\"Hello! I\u0027m Duke, your task manager.%n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"                \"Its the first time I see you%n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"                \"Key in your tasks below!%n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"        printDashLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"ruyian"},"content":"     * Prints out the message of caught exception","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"     * @param e the caught exception","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"    public void showErrorMessage(Exception e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"        System.out.println(e.getMessage());","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"    public void showClearMessage() {","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"        System.out.println(\"I have cleared all the tasks!\");","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"    public void showDeleteMessage(Task deletedTask, int taskBankSize) {","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\"Noted. I\u0027ve removed this task: %n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"        System.out.println(\"  \" + deletedTask);","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\"Now you have \" + taskBankSize +","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"                \" tasks in the list.%n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"     * Prints out the message when the user ends the program execution","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"    public void showByeMessage() {","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\"Bye. Hope to see you again soon!%n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"ruyian"},"content":"     * Prints out the message that","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"ruyian"},"content":"     * all tasks stored are printed out","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"ruyian"},"content":"    public void showAllTaskMessage() {","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\"Here are the tasks in your list:%n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":64,"author":{"gitId":"ruyian"},"content":"     * Prints out the message that","lastModifiedDate":"2021-10-01"},{"lineNumber":65,"author":{"gitId":"ruyian"},"content":"     * a task has successfully been added","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":67,"author":{"gitId":"ruyian"},"content":"     * @param addedTask the added task","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"ruyian"},"content":"     * @param taskBankSize the taskbank size after addition","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"ruyian"},"content":"    public void showTaskAddedMessage(Task addedTask, int taskBankSize) {","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\"Got it. I\u0027ve added this task: %n \" +","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"ruyian"},"content":"                addedTask +","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"ruyian"},"content":"                \"%nNow you have \" + taskBankSize +","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"ruyian"},"content":"                \" tasks in the list.%n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":78,"author":{"gitId":"ruyian"},"content":"     * Prints out the message that the task has","lastModifiedDate":"2021-10-01"},{"lineNumber":79,"author":{"gitId":"ruyian"},"content":"     * been marked as done","lastModifiedDate":"2021-10-01"},{"lineNumber":80,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":81,"author":{"gitId":"ruyian"},"content":"     * @param completedTask the task that has been marked as done","lastModifiedDate":"2021-10-01"},{"lineNumber":82,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":83,"author":{"gitId":"ruyian"},"content":"    public void showCompleteMessage(Task completedTask) {","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\"Nice! I\u0027ve marked this task as done: %n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"ruyian"},"content":"        System.out.println(\"  \" + completedTask);","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":89,"author":{"gitId":"ruyian"},"content":"     * Reads user\u0027s input line","lastModifiedDate":"2021-10-01"},{"lineNumber":90,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"ruyian"},"content":"     * @param sc A scanner object of System.in","lastModifiedDate":"2021-10-01"},{"lineNumber":92,"author":{"gitId":"ruyian"},"content":"     * @return the read raw input","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":94,"author":{"gitId":"ruyian"},"content":"    public String readInput(Scanner sc) {","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"ruyian"},"content":"        return sc.nextLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":99,"author":{"gitId":"ruyian"},"content":"     * Prints out the message that the tasks have been loaded","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"ruyian"},"content":"     * from the duke.txt file when the user initialize the program","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":102,"author":{"gitId":"ruyian"},"content":"    public void showLoadMessage() {","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"ruyian"},"content":"        printDashLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\"Hello! I\u0027m Duke, your task manager.%n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"ruyian"},"content":"                \"I have loaded the tasks you have keyed in the last time%n\" +","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"ruyian"},"content":"                \"Continue to key in your tasks below!%n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"ruyian"},"content":"        printDashLine();","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":111,"author":{"gitId":"ruyian"},"content":"     * Prints the message that below tasks are","lastModifiedDate":"2021-10-01"},{"lineNumber":112,"author":{"gitId":"ruyian"},"content":"     * all the matching tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":113,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":114,"author":{"gitId":"ruyian"},"content":"    public void showFindMessage() {","lastModifiedDate":"2021-09-28"},{"lineNumber":115,"author":{"gitId":"ruyian"},"content":"        System.out.printf(\" Here are the matching tasks in your list:%n\");","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"ruyian":117}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"    public DukeException() {","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"        super();","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"        super(message);","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruyian":11}},{"path":"src/main/java/duke/exception/DukeIndexOutOfBoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.exception;","lastModifiedDate":"2021-10-01"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"public class DukeIndexOutOfBoundException extends DukeException{","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-10-01"}],"authorContributionMap":{"ruyian":4}},{"path":"src/main/java/duke/exception/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.exception;","lastModifiedDate":"2021-09-12"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":" * A subclass of IllegalInputException, when an illegal input of empty input is keyyed in","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"public class EmptyInputException extends IllegalInputException {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"    public EmptyInputException() {","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"        super();","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"    public EmptyInputException(String mesagge) {","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"        super(mesagge);","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-12"}],"authorContributionMap":{"ruyian":16}},{"path":"src/main/java/duke/exception/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":" * An subclass of exception that is thrown when illegal input is keyyed in","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"public class IllegalInputException extends DukeException {","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"    public IllegalInputException() {","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"        super();","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"    public IllegalInputException(String message) {","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"        super(message);","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruyian":14}},{"path":"src/main/java/duke/exception/RepeatedCompletionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.exception;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"public class RepeatedCompletionException extends DukeException{","lastModifiedDate":"2021-09-08"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"    public RepeatedCompletionException(){","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"        super();","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"    public RepeatedCompletionException(String message){","lastModifiedDate":"2021-09-12"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"        super(message);","lastModifiedDate":"2021-09-12"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-08"}],"authorContributionMap":{"ruyian":12}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"import duke.body.Parser;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"    private String deadlineDateString;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"     * creates a deadline with description and date with users input","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"     * @param description - users\u0027 input","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"    public Deadline(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"        super();","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"        int indexDivider \u003d Parser.parseSlashIndex(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"        String deadlineName \u003d description.substring(0, indexDivider).trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"        String deadlineDateString \u003d description.substring(indexDivider + 1).trim();","lastModifiedDate":"2021-09-15"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"        this.description \u003d deadlineName;","lastModifiedDate":"2021-09-15"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"        this.deadlineDateString \u003d deadlineDateString;","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"        this.taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2021-09-12"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"     * Returns the date stored of the deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"     * @return date of deadline","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"ruyian"},"content":"    public String getDeadlineDateString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"ruyian"},"content":"        return deadlineDateString;","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"     * Provides a String representation of event","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"     * @return a String representation including task type, task status, task description and deadline date.","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"        return super.toString() + \" (\" + getDeadlineDateString() + \")\";","lastModifiedDate":"2021-09-14"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"     * Returns a formatted String that to be stored in file, duke.txt","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"     * @return the formatted String","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"    public String describeInFile() {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"        return getDescription() + \" | \" + getDeadlineDateString();","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ruyian":51}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"import duke.body.Parser;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"    private String eventDateString;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"     * creates an event with description and date with users input","lastModifiedDate":"2021-10-01"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"     * @param description - users\u0027 input","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"    public Event(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"        super();","lastModifiedDate":"2021-09-12"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"        int indexDivider \u003d Parser.parseSlashIndex(description);","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"        String eventName \u003d description.substring(0, indexDivider).trim();","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"        String eventDateString \u003d description.substring(indexDivider + 1).trim();","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"        this.description \u003d eventName;","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"        this.eventDateString \u003d eventDateString;","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"        this.taskType \u003d TaskType.EVENT;","lastModifiedDate":"2021-09-12"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"     * Returns the date stored of the event","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"     * @return date of event","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ruyian"},"content":"    public String getEventDateString() {","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"ruyian"},"content":"        return eventDateString;","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"     * Provides a String representation of event","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"     * @return a String representation including task type, task status, task description and event date.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"        return super.toString() + \" (\" + getEventDateString() + \")\";","lastModifiedDate":"2021-09-14"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"     * Returns a formatted String that to be stored in file, duke.txt","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"     * @return the formatted String","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"    public String describeInFile() {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"        return getDescription() + \" | \" + getEventDateString();","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ruyian":51}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"import duke.exception.RepeatedCompletionException;","lastModifiedDate":"2021-09-12"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"enum TaskType {","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"    TO_DO, DEADLINE, EVENT;","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":" *  Parent class for all type of Tasks (Todo, Event, Deadline)","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":" *  Contains basic methods and fields that are applicable to all subclass tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"     * Description of the tasks (not including the date of deadline / event)","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"     * Status of the Task, to indicate whether it is done or not","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"     * An enum that indicates which type of task it is (TODO, EVENT, DEADLINE)","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"    protected TaskType taskType;","lastModifiedDate":"2021-09-12"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"ruyian"},"content":"    public Task() {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"ruyian"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-12"},{"lineNumber":30,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"     * Provides a String representation of the task to be written in the text file","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"     * @return A line of String representation of the task","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"    public abstract String describeInFile();","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"        this();","lastModifiedDate":"2021-09-12"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"     * Marks a done task with X and an undone task with a space","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"     * @return \"X\" if done, \" \" if not done","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":52,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":53,"author":{"gitId":"ruyian"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":54,"author":{"gitId":"ruyian"},"content":"        return this.description;","lastModifiedDate":"2021-08-25"},{"lineNumber":55,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":56,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":57,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":58,"author":{"gitId":"ruyian"},"content":"     * gets the status of the task, if it is done or not","lastModifiedDate":"2021-10-01"},{"lineNumber":59,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"ruyian"},"content":"     * @return a boolean value reflecting whether the task is done","lastModifiedDate":"2021-10-01"},{"lineNumber":61,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":62,"author":{"gitId":"ruyian"},"content":"    public boolean getDone() {","lastModifiedDate":"2021-08-31"},{"lineNumber":63,"author":{"gitId":"ruyian"},"content":"        return this.isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":64,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":65,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":66,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"ruyian"},"content":"     * Marks a target task as done","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ruyian"},"content":"     * @throws RepeatedCompletionException if the task has already been completed","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"ruyian"},"content":"    public void markAsDone() throws RepeatedCompletionException {","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"ruyian"},"content":"        if (this.getDone()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":73,"author":{"gitId":"ruyian"},"content":"            throw new RepeatedCompletionException(\"This task has already been completed!\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":74,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":75,"author":{"gitId":"ruyian"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-09-15"},{"lineNumber":76,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":77,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":78,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"ruyian"},"content":"     * Gets the specific task type of a task","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"ruyian"},"content":"     * @return the specific task type of a task","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"ruyian"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-08-31"},{"lineNumber":84,"author":{"gitId":"ruyian"},"content":"        switch (this.taskType) {","lastModifiedDate":"2021-09-12"},{"lineNumber":85,"author":{"gitId":"ruyian"},"content":"        case TO_DO:","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"ruyian"},"content":"            return \"T\";","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"ruyian"},"content":"        case EVENT:","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"ruyian"},"content":"            return \"E\";","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"ruyian"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"ruyian"},"content":"            return \"D\";","lastModifiedDate":"2021-09-12"},{"lineNumber":91,"author":{"gitId":"ruyian"},"content":"        default:","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"ruyian"},"content":"            return \"N\"; // stands for unknown tasks","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":95,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":96,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"ruyian"},"content":"     * Provides a String representation of task","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"ruyian"},"content":"     * @return a String representation including task type, task status and task description","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"ruyian"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":102,"author":{"gitId":"ruyian"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":103,"author":{"gitId":"ruyian"},"content":"        return \"[\" + getTaskType() + \"][\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2021-08-31"},{"lineNumber":104,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":105,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":106,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ruyian":106}},{"path":"src/main/java/duke/task/TaskBank.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"import duke.exception.DukeIndexOutOfBoundException;","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"public class TaskBank {","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2021-09-12"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"    public TaskBank() {","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-26"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-26"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"     * Generates a taskBank object using a given arraylist of tasks","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"     * @param givenTasks - ArrayList of tasks that to be filled in the new TaskBank","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"    public TaskBank(ArrayList\u003cTask\u003e givenTasks){","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"        tasks \u003d givenTasks;","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ruyian"},"content":"        return tasks;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":28,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ruyian"},"content":"     * Adds a todo to taskbank","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ruyian"},"content":"     * Creates a new todo task from the raw String input","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ruyian"},"content":"     * @param todoInput","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ruyian"},"content":"     * @return the newly created todo Task","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ruyian"},"content":"    public Task addTodo(String todoInput) {","lastModifiedDate":"2021-08-31"},{"lineNumber":36,"author":{"gitId":"ruyian"},"content":"        Task newTask \u003d new ToDo(todoInput);","lastModifiedDate":"2021-09-12"},{"lineNumber":37,"author":{"gitId":"ruyian"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":38,"author":{"gitId":"ruyian"},"content":"        return newTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":39,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":40,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":42,"author":{"gitId":"ruyian"},"content":"     * Adds an event to taskbank","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ruyian"},"content":"     * Creates a new event task from the raw String input","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ruyian"},"content":"     * @param eventInput","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ruyian"},"content":"     * @return the newly created event Task","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"ruyian"},"content":"    public Task addEvent(String eventInput) {","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ruyian"},"content":"        Task newTask \u003d new Event(eventInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"ruyian"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"ruyian"},"content":"        return newTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":52,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":53,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":54,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"ruyian"},"content":"     * Adds a deadline to taskbank","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"ruyian"},"content":"     * Creates a new event task from the raw String input","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"ruyian"},"content":"     * @param deadlilneInput","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"ruyian"},"content":"     * @return the newly created deadline Task","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"ruyian"},"content":"    public Task addDeadline(String deadlilneInput) {","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"ruyian"},"content":"        Task newTask \u003d new Deadline(deadlilneInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"ruyian"},"content":"        tasks.add(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"ruyian"},"content":"        return newTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":65,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":66,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":67,"author":{"gitId":"ruyian"},"content":"    /** Gets the task bank size","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ruyian"},"content":"     * @return the size of this taskbank","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"ruyian"},"content":"    public int getTaskSize() {","lastModifiedDate":"2021-09-12"},{"lineNumber":71,"author":{"gitId":"ruyian"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-12"},{"lineNumber":72,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":73,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":74,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":75,"author":{"gitId":"ruyian"},"content":"     * Prints all tasks in TaskBank","lastModifiedDate":"2021-10-01"},{"lineNumber":76,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"ruyian"},"content":"    public void printList() {","lastModifiedDate":"2021-08-25"},{"lineNumber":78,"author":{"gitId":"ruyian"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-09-12"},{"lineNumber":79,"author":{"gitId":"ruyian"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-12"},{"lineNumber":80,"author":{"gitId":"ruyian"},"content":"            System.out.printf(\"%d.%s%n\", i + 1, task);","lastModifiedDate":"2021-09-12"},{"lineNumber":81,"author":{"gitId":"ruyian"},"content":"            i++;","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":83,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":84,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":85,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"ruyian"},"content":"     * Returns  the target task from the TaskBank by specific index","lastModifiedDate":"2021-10-01"},{"lineNumber":87,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"ruyian"},"content":"     * @param taskIndex the index of target task","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"ruyian"},"content":"     * @return the target index","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"ruyian"},"content":"     * @throws IndexOutOfBoundsException if index provided is out of bound","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"ruyian"},"content":"    public Task searchTask(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-09-12"},{"lineNumber":93,"author":{"gitId":"ruyian"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e this.getTaskSize()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":94,"author":{"gitId":"ruyian"},"content":"            throw new IndexOutOfBoundsException(\"Ouch! Index is out of range. Try again!\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":95,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":96,"author":{"gitId":"ruyian"},"content":"        return tasks.get(taskIndex);","lastModifiedDate":"2021-09-12"},{"lineNumber":97,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":98,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":99,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":100,"author":{"gitId":"ruyian"},"content":"     * Removes the target task from the TaskBank","lastModifiedDate":"2021-10-01"},{"lineNumber":101,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"ruyian"},"content":"     * @param taskIndex the index of target task","lastModifiedDate":"2021-09-28"},{"lineNumber":103,"author":{"gitId":"ruyian"},"content":"     * @return the removed Task","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"ruyian"},"content":"     * @throws IndexOutOfBoundsException if index provided is out of bound","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"ruyian"},"content":"    public Task removeTask(int taskIndex) throws DukeIndexOutOfBoundException {","lastModifiedDate":"2021-10-01"},{"lineNumber":107,"author":{"gitId":"ruyian"},"content":"        if (taskIndex \u003c 0 || taskIndex \u003e this.getTaskSize()) {","lastModifiedDate":"2021-09-12"},{"lineNumber":108,"author":{"gitId":"ruyian"},"content":"            throw new IndexOutOfBoundsException(\"Ouch! Index is out of range. Try again!\\n\");","lastModifiedDate":"2021-09-12"},{"lineNumber":109,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":110,"author":{"gitId":"ruyian"},"content":"        Task deletedTask \u003d tasks.get(taskIndex);","lastModifiedDate":"2021-09-12"},{"lineNumber":111,"author":{"gitId":"ruyian"},"content":"        tasks.remove(taskIndex);","lastModifiedDate":"2021-09-12"},{"lineNumber":112,"author":{"gitId":"ruyian"},"content":"        return deletedTask;","lastModifiedDate":"2021-09-12"},{"lineNumber":113,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":114,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":115,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"ruyian"},"content":"     * Finds all keyword-matched tasks in a given TaskBank","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"ruyian"},"content":"     * @param givenBank the taskbank that is searched for","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"ruyian"},"content":"     * @param keyword the keyword for finding matching tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"ruyian"},"content":"     * @return an ArrayList of matched tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"ruyian"},"content":"    public static ArrayList\u003cTask\u003e findMatchingTask(TaskBank givenBank, String keyword) {","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"ruyian"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"ruyian"},"content":"        for (Task task : givenBank.getTasks()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"ruyian"},"content":"            String lowercaseTaskDescription \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"ruyian"},"content":"            if (lowercaseTaskDescription.contains(keyword)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"ruyian"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"ruyian"},"content":"            }","lastModifiedDate":"2021-09-28"},{"lineNumber":129,"author":{"gitId":"ruyian"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":130,"author":{"gitId":"ruyian"},"content":"        return matchingTasks;","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"ruyian"},"content":"     * Clears the content of this Taskbank and replaces tasks with a new, empty ArrayList","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"ruyian"},"content":"    public void clear() {","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"ruyian"},"content":"        tasks.clear();","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"ruyian"},"content":"        tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"ruyian":142}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ruyian"},"content":"package duke.task;","lastModifiedDate":"2021-09-08"},{"lineNumber":2,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-09-08"},{"lineNumber":3,"author":{"gitId":"ruyian"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":6,"author":{"gitId":"ruyian"},"content":"     * creates a todo with description with users input","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"ruyian"},"content":"     * @param description - users\u0027 input","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"ruyian"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"ruyian"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"ruyian"},"content":"        this.taskType \u003d TaskType.TO_DO;","lastModifiedDate":"2021-09-12"},{"lineNumber":13,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"ruyian"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"ruyian"},"content":"    /**","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"ruyian"},"content":"     * Returns a formatted String that to be stored in file, duke.txt","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"ruyian"},"content":"     *","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"ruyian"},"content":"     * @return the formatted String","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ruyian"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ruyian"},"content":"    public String describeInFile() {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ruyian"},"content":"        return getDescription();","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"ruyian"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"ruyian"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"ruyian":23}}]
