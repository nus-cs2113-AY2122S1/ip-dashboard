[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"Duke is a Command Line Interface program that let users keep track of their tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"## Quick Start","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"1. Ensure Java `11` is installed.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"2. Download [IP.jar](https://github.com/kum-wh/ip/releases).","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"3. Navigate to file path in terminal.","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"4. To launch **Duke**, enter `java -jar IP.jar`.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"## Command List","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"Command | Use","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"------- | ---","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"`ToDo` | Add **ToDo** Task","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"`Deadline` | Add **Deadline** Task","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"`Event` | Add **Event** Task","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"`Done` | Set a Task as **completed**","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"`Delete` | Remove a Task","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"`List` | View Task","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"`Find` | Find Tasks with a specific **Keyword**","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"`Date` | Find Tasks with a specific **Date**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"`Bye` | Exit Program","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"`Echo` | Repeat Input","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"`!Echo` | Repeat Input in Grafiti ASCII Art","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"`!help` | View commands functions","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"`!list` | View **list** commands description","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"`!event` | View **event** commands description","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"`!deadline` | View **deadline** commands description","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"## Notes","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"* Words in `UPPER_CASE` are parameters to be entered by user.","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"* Program is **not** case sensitive.","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"* `INPUT` represent input by user.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"* `TASK_DESCRIPTION` represent description of a task.","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"* `TASK_DEADLINE` represent date of a task either in words or `DATE` and `TIME` format. ","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"* `TASK_TIMING` represent timing of a task either in words or `DATE` and `TIME` format.","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"* `TASK_INDEX` represent index number of a task. Index number can be viewed by viewing list.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"* `KEYWORD` represent word input by user.","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"* `TIME` represents date input by user in `HH:MM` format.","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"   * `HH` represents hours.","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"   * `MM` represents minutes.","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"* `DATE` represents date input by user in `yyyy-mm-dd` fomat.","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"   * `yyyy` represents year.","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"   * `mm` represents months.","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"   * `dd` represents days.","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"* Tasks are represented as `TASK_TYPE`,`STATUS`,`TASK_DESCRIPTION`,`TASK_DATE`.","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"   * `TASK_TYPE` is `T` for ToDo, `D` for Deadline and `E` for Event.","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"   * `STATUS` is `X` if completed.","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"   * `TASK_DATE` is TASK_DEADLINE for Deadline and TASK_TIMING for Event.","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"### Adding a Task","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"Multiple tasks can be added in one line.","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"#### Adding a ToDo Task","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"Adds a task without any specific dates to list.","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"Command Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"* `TASK_DESCRIPTION` cannot be empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"* `todo watch twitch videos`","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"* `todo watch youtube videos`","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"todo watch twitch videos todo watch youtube videos","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"[T][ ]watch twitch videos","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"[T][ ]watch youtube videos","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"#### Adding a DeadLine Task","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"Adds a task with a duedate as deadline to list.","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"Command Format | Command","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"-------------- | -------","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"Without Date and Time | `deadline TASK_DESCRIPTION by TASK_DEADLINE`","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"Without Date | `deadline TASK_DESCRIPTION by TIME`","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"Without Time | `deadline TASK_DESCRIPTION by DATE`","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"With Date and Time | `deadline TASK_DESCCRIPTION by TIME DATE`","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"* `TASK_DESCRIPTION` and `TASK_DEADLINE` cannot be empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"* Word `by` is required in input to indicated `TASK_DEADLINE`.","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"* No specific ordering of time and date as long as input pattern is followed.","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"* `deadline homework1 by 23:59`","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"* `deadline homework2 by 2020-10-10`","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"* `deadline homework3 by 20:00 2021-10-20`","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"deadline homework1 by 23:59 deadline homework2 by 2020-10-10 deadline homework3 by 20:00 2021-10-20","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"[D][ ]homework1(by: 11:59 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"[D][ ]homework2(by:  Oct 10 2020)","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"Now you have 4 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"[D][ ]homework3(by: 08:00 PM Oct 20 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"View details on adding Deadline task in program.","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"Command Format: `!deadline`","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"deadline command requires a end time indicated using \"by\"[end time]","lastModifiedDate":"2021-09-30"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"[timing]: HH:MM YYYY-MM-DD","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"#### Adding a Event Task","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"Adds a task occuring at a specific date and time as event to list.","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"Command Format | Command","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"-------------- | -------","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"Without Date and Time | `event TASK_DESCRIPTION at TASK_TIMING`","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"Without Date | `event TASK_DESCRIPTION at TIME`","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"Without Time | `event TASK_DESCRIPTION at DATE`","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"With Date and Time | `event TASK_DESCCRIPTION at TIME DATE`","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"* `TASK_DESCRIPTION` and `TASK_TIMING` cannot be empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"* Word `at` is required in input to indicated `TASK_DEADLINE`.","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"* No specific ordering of `TIME` and `DATE` as long as input pattern is followed.","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"* `event g2 vs SEN at 21:00`","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"* `event 100T vs Gambit at 2021-08-01`","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"* `event paperex vs Bren at 2021-08-01 08:00`","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"event g2 vs SEN at 21:00 event 100T vs Gambit at 2021-08-01 event paperex vs Bren at 2021-08-01 08:00","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"kum-wh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"kum-wh"},"content":"[E][ ]g2 vs en(at: 09:00 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"kum-wh"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"[E][ ]100t vs gambit(at:  Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"kum-wh"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":171,"author":{"gitId":"kum-wh"},"content":"Got it. I\u0027ve added this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"[E][ ]paperex vs bren(at: 08:00 AM Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"Now you have 8 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"kum-wh"},"content":"View details on adding Event task in program.","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":179,"author":{"gitId":"kum-wh"},"content":"Command Format: `!event`","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"kum-wh"},"content":"event command requires a timing indicated using \"at\" [timing]","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"kum-wh"},"content":"[timing]: HH:MM YYYY-MM-DD","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":189,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"kum-wh"},"content":"### Setting a task as complete","lastModifiedDate":"2021-09-30"},{"lineNumber":191,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"kum-wh"},"content":"Sets tasks in list as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":193,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"kum-wh"},"content":"Command Format: `done TASK_INDEX`","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":196,"author":{"gitId":"kum-wh"},"content":"* `TASK_INDEX` cannot be empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":197,"author":{"gitId":"kum-wh"},"content":"* `TASK_INDEX` must be a integer.","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"kum-wh"},"content":"* Use `,` to seperate multiple tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":200,"author":{"gitId":"kum-wh"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"kum-wh"},"content":"* `done 1,2,3`","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"kum-wh"},"content":"done 1,2,3","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":209,"author":{"gitId":"kum-wh"},"content":"Nice! I\u0027ve marked this task as done: ","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"kum-wh"},"content":"[T][X]watch twitch videos","lastModifiedDate":"2021-09-30"},{"lineNumber":211,"author":{"gitId":"kum-wh"},"content":"[T][X]watch youtube videos","lastModifiedDate":"2021-09-30"},{"lineNumber":212,"author":{"gitId":"kum-wh"},"content":"[D][X]homework1(by: 11:59 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":213,"author":{"gitId":"kum-wh"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":214,"author":{"gitId":"kum-wh"},"content":"1. [T][X]watch twitch videos","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"kum-wh"},"content":"2. [T][X]watch youtube videos","lastModifiedDate":"2021-09-30"},{"lineNumber":216,"author":{"gitId":"kum-wh"},"content":"3. [D][X]homework1(by: 11:59 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"kum-wh"},"content":"4. [D][ ]homework2(by:  Oct 10 2020)","lastModifiedDate":"2021-09-30"},{"lineNumber":218,"author":{"gitId":"kum-wh"},"content":"5. [D][ ]homework3(by: 08:00 PM Oct 20 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"kum-wh"},"content":"6. [E][ ]g2 vs en(at: 09:00 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":220,"author":{"gitId":"kum-wh"},"content":"7. [E][ ]100t vs gambit(at:  Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"kum-wh"},"content":"8. [E][ ]paperex vs bren(at: 08:00 AM Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":222,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":223,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":224,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":225,"author":{"gitId":"kum-wh"},"content":"### Delete a Task","lastModifiedDate":"2021-09-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":227,"author":{"gitId":"kum-wh"},"content":"Deletes tasks from list","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":229,"author":{"gitId":"kum-wh"},"content":"Command Format: `delete TASK_INDEX`","lastModifiedDate":"2021-09-30"},{"lineNumber":230,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"kum-wh"},"content":"* `TASK_INDEX` cannot be empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":232,"author":{"gitId":"kum-wh"},"content":"* `TASK_INDEX` must be an integer.","lastModifiedDate":"2021-09-30"},{"lineNumber":233,"author":{"gitId":"kum-wh"},"content":"* Use `,` to seperate multiple tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":234,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":235,"author":{"gitId":"kum-wh"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":236,"author":{"gitId":"kum-wh"},"content":"* `delete 2,4,5`","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":239,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":240,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"kum-wh"},"content":"delete 2,4,5","lastModifiedDate":"2021-09-30"},{"lineNumber":242,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":243,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":244,"author":{"gitId":"kum-wh"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":245,"author":{"gitId":"kum-wh"},"content":"[D][ ]homework3(by: 08:00 PM Oct 20 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":246,"author":{"gitId":"kum-wh"},"content":"Now you have 7 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":247,"author":{"gitId":"kum-wh"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":248,"author":{"gitId":"kum-wh"},"content":"[D][ ]homework2(by:  Oct 10 2020)","lastModifiedDate":"2021-09-30"},{"lineNumber":249,"author":{"gitId":"kum-wh"},"content":"Now you have 6 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":250,"author":{"gitId":"kum-wh"},"content":"Noted. I\u0027ve removed this task: ","lastModifiedDate":"2021-09-30"},{"lineNumber":251,"author":{"gitId":"kum-wh"},"content":"[T][X]watch youtube videos","lastModifiedDate":"2021-09-30"},{"lineNumber":252,"author":{"gitId":"kum-wh"},"content":"Now you have 5 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":253,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":254,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":255,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":256,"author":{"gitId":"kum-wh"},"content":"### Delete all Task","lastModifiedDate":"2021-09-30"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":258,"author":{"gitId":"kum-wh"},"content":"Deletes all tasks from list.","lastModifiedDate":"2021-09-30"},{"lineNumber":259,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":260,"author":{"gitId":"kum-wh"},"content":"Command Format: `clear`","lastModifiedDate":"2021-09-30"},{"lineNumber":261,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":262,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":263,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":264,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":265,"author":{"gitId":"kum-wh"},"content":"clear","lastModifiedDate":"2021-09-30"},{"lineNumber":266,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":267,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":268,"author":{"gitId":"kum-wh"},"content":"List Cleared. All tasks removed.","lastModifiedDate":"2021-09-30"},{"lineNumber":269,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":270,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":271,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":272,"author":{"gitId":"kum-wh"},"content":"### View Tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":274,"author":{"gitId":"kum-wh"},"content":"Lists all task in list.","lastModifiedDate":"2021-09-30"},{"lineNumber":275,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":276,"author":{"gitId":"kum-wh"},"content":"Command Format: `list`","lastModifiedDate":"2021-09-30"},{"lineNumber":277,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":278,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":279,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":280,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":281,"author":{"gitId":"kum-wh"},"content":"list","lastModifiedDate":"2021-09-30"},{"lineNumber":282,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":283,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":284,"author":{"gitId":"kum-wh"},"content":"Here are the tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":285,"author":{"gitId":"kum-wh"},"content":"1. [T][X]watch twitch videos","lastModifiedDate":"2021-09-30"},{"lineNumber":286,"author":{"gitId":"kum-wh"},"content":"2. [D][X]homework1(by: 11:59 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":287,"author":{"gitId":"kum-wh"},"content":"3. [E][ ]g2 vs en(at: 09:00 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":288,"author":{"gitId":"kum-wh"},"content":"4. [E][ ]100t vs gambit(at:  Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":289,"author":{"gitId":"kum-wh"},"content":"5. [E][ ]paperex vs bren(at: 08:00 AM Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":290,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":291,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":292,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":293,"author":{"gitId":"kum-wh"},"content":"View all list commands in program.","lastModifiedDate":"2021-09-30"},{"lineNumber":294,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":295,"author":{"gitId":"kum-wh"},"content":"Command Format: `!list`","lastModifiedDate":"2021-09-30"},{"lineNumber":296,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":297,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":298,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":299,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":300,"author":{"gitId":"kum-wh"},"content":"Command Format: `!list`","lastModifiedDate":"2021-09-30"},{"lineNumber":301,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":302,"author":{"gitId":"kum-wh"},"content":"!list","lastModifiedDate":"2021-09-30"},{"lineNumber":303,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":304,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":305,"author":{"gitId":"kum-wh"},"content":"list displays all tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":306,"author":{"gitId":"kum-wh"},"content":"list todo displays all todo tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":307,"author":{"gitId":"kum-wh"},"content":"list event displays all event tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":308,"author":{"gitId":"kum-wh"},"content":"list deadline displays all deadline tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":309,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":310,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":311,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":312,"author":{"gitId":"kum-wh"},"content":"#### Viewing Todo Tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":314,"author":{"gitId":"kum-wh"},"content":"Lists all ToDo task in list","lastModifiedDate":"2021-09-30"},{"lineNumber":315,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":316,"author":{"gitId":"kum-wh"},"content":"Command Format: `list todo`","lastModifiedDate":"2021-09-30"},{"lineNumber":317,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":318,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":319,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":320,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":321,"author":{"gitId":"kum-wh"},"content":"list todo","lastModifiedDate":"2021-09-30"},{"lineNumber":322,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":323,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":324,"author":{"gitId":"kum-wh"},"content":"Here are the ToDo tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":325,"author":{"gitId":"kum-wh"},"content":"1. [T][X]watch twitch videos","lastModifiedDate":"2021-09-30"},{"lineNumber":326,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":327,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":328,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":329,"author":{"gitId":"kum-wh"},"content":"#### Viewing DeadLine Tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":331,"author":{"gitId":"kum-wh"},"content":"Lists all Deadline task in list.","lastModifiedDate":"2021-09-30"},{"lineNumber":332,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":333,"author":{"gitId":"kum-wh"},"content":"Command Format: `list deadline`","lastModifiedDate":"2021-09-30"},{"lineNumber":334,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":335,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":336,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":337,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":338,"author":{"gitId":"kum-wh"},"content":"list deadline","lastModifiedDate":"2021-09-30"},{"lineNumber":339,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":340,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":341,"author":{"gitId":"kum-wh"},"content":"Here are the Deadline tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":342,"author":{"gitId":"kum-wh"},"content":"1. [D][X]homework1(by: 11:59 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":343,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":344,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":345,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":346,"author":{"gitId":"kum-wh"},"content":"#### Viewing Event Tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":348,"author":{"gitId":"kum-wh"},"content":"Lists all Event task in list.","lastModifiedDate":"2021-09-30"},{"lineNumber":349,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":350,"author":{"gitId":"kum-wh"},"content":"Command Format: `list event`","lastModifiedDate":"2021-09-30"},{"lineNumber":351,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":352,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":353,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":354,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":355,"author":{"gitId":"kum-wh"},"content":"list event","lastModifiedDate":"2021-09-30"},{"lineNumber":356,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":357,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":358,"author":{"gitId":"kum-wh"},"content":"Here are the Event tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":359,"author":{"gitId":"kum-wh"},"content":"1. [E][ ]g2 vs en(at: 09:00 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":360,"author":{"gitId":"kum-wh"},"content":"2. [E][ ]100t vs gambit(at:  Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":361,"author":{"gitId":"kum-wh"},"content":"3. [E][ ]paperex vs bren(at: 08:00 AM Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":362,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":363,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":364,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":365,"author":{"gitId":"kum-wh"},"content":"### Finding Task By KeyWords","lastModifiedDate":"2021-09-30"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":367,"author":{"gitId":"kum-wh"},"content":"Lists all tasks with a specific keyword in its description in list.","lastModifiedDate":"2021-09-30"},{"lineNumber":368,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":369,"author":{"gitId":"kum-wh"},"content":"Command Format: `find KEYWORD`","lastModifiedDate":"2021-09-30"},{"lineNumber":370,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":371,"author":{"gitId":"kum-wh"},"content":"* `KEYWORD` must not be empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":372,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":373,"author":{"gitId":"kum-wh"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":374,"author":{"gitId":"kum-wh"},"content":"* `find g2`","lastModifiedDate":"2021-09-30"},{"lineNumber":375,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":376,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":377,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":378,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":379,"author":{"gitId":"kum-wh"},"content":"find g2","lastModifiedDate":"2021-09-30"},{"lineNumber":380,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":381,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":382,"author":{"gitId":"kum-wh"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":383,"author":{"gitId":"kum-wh"},"content":"1. [E][ ]g2 vs en(at: 09:00 PM )","lastModifiedDate":"2021-09-30"},{"lineNumber":384,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":385,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":386,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":387,"author":{"gitId":"kum-wh"},"content":"### Finding Task By Date","lastModifiedDate":"2021-09-30"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":389,"author":{"gitId":"kum-wh"},"content":"Lists all tasks with a specific date in list.","lastModifiedDate":"2021-09-30"},{"lineNumber":390,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":391,"author":{"gitId":"kum-wh"},"content":"Command Format: `date DATE`","lastModifiedDate":"2021-09-30"},{"lineNumber":392,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":393,"author":{"gitId":"kum-wh"},"content":"* `DATE` must not be empty.","lastModifiedDate":"2021-09-30"},{"lineNumber":394,"author":{"gitId":"kum-wh"},"content":"* `DATE` must be in the format of `yyyy-mm-dd`.","lastModifiedDate":"2021-09-30"},{"lineNumber":395,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":396,"author":{"gitId":"kum-wh"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":397,"author":{"gitId":"kum-wh"},"content":"* `date 2021-08-01`","lastModifiedDate":"2021-09-30"},{"lineNumber":398,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":399,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":400,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":401,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":402,"author":{"gitId":"kum-wh"},"content":"date 2021-08-01","lastModifiedDate":"2021-09-30"},{"lineNumber":403,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":404,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":405,"author":{"gitId":"kum-wh"},"content":"Here are the tasks with matching dates in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":406,"author":{"gitId":"kum-wh"},"content":"1. [E][ ]100t vs gambit(at:  Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":407,"author":{"gitId":"kum-wh"},"content":"2. [E][ ]paperex vs bren(at: 08:00 AM Aug 01 2021)","lastModifiedDate":"2021-09-30"},{"lineNumber":408,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":409,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":410,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":411,"author":{"gitId":"kum-wh"},"content":"### Echo User Input","lastModifiedDate":"2021-09-30"},{"lineNumber":412,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":413,"author":{"gitId":"kum-wh"},"content":"Prints user input on terminal","lastModifiedDate":"2021-09-30"},{"lineNumber":414,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":415,"author":{"gitId":"kum-wh"},"content":"Command Format: `echo INPUT`","lastModifiedDate":"2021-09-30"},{"lineNumber":416,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":417,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":418,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":419,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":420,"author":{"gitId":"kum-wh"},"content":"echo hi","lastModifiedDate":"2021-09-30"},{"lineNumber":421,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":422,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":423,"author":{"gitId":"kum-wh"},"content":"hi","lastModifiedDate":"2021-09-30"},{"lineNumber":424,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":425,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":426,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":427,"author":{"gitId":"kum-wh"},"content":"Draws user input on terminial.","lastModifiedDate":"2021-09-30"},{"lineNumber":428,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":429,"author":{"gitId":"kum-wh"},"content":"Command Format: `!echo INPUT`","lastModifiedDate":"2021-09-30"},{"lineNumber":430,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":431,"author":{"gitId":"kum-wh"},"content":"Examples:","lastModifiedDate":"2021-09-30"},{"lineNumber":432,"author":{"gitId":"kum-wh"},"content":"* `!echo hi`","lastModifiedDate":"2021-09-30"},{"lineNumber":433,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":434,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":435,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":436,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":437,"author":{"gitId":"kum-wh"},"content":"!echo hi","lastModifiedDate":"2021-09-30"},{"lineNumber":438,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":439,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":440,"author":{"gitId":"kum-wh"},"content":"HI","lastModifiedDate":"2021-09-30"},{"lineNumber":441,"author":{"gitId":"kum-wh"},"content":"  ___ ___  .___","lastModifiedDate":"2021-09-30"},{"lineNumber":442,"author":{"gitId":"kum-wh"},"content":" /   |   \\ |   |","lastModifiedDate":"2021-09-30"},{"lineNumber":443,"author":{"gitId":"kum-wh"},"content":"/    ~    \\|   |","lastModifiedDate":"2021-09-30"},{"lineNumber":444,"author":{"gitId":"kum-wh"},"content":"\\    Y    /|   |","lastModifiedDate":"2021-09-30"},{"lineNumber":445,"author":{"gitId":"kum-wh"},"content":" \\___|___/ |___|","lastModifiedDate":"2021-09-30"},{"lineNumber":446,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":447,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":448,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":449,"author":{"gitId":"kum-wh"},"content":"### Command Guide","lastModifiedDate":"2021-09-30"},{"lineNumber":450,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":451,"author":{"gitId":"kum-wh"},"content":"Command Format: `!help`","lastModifiedDate":"2021-09-30"},{"lineNumber":452,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":453,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":454,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":455,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":456,"author":{"gitId":"kum-wh"},"content":"!help","lastModifiedDate":"2021-09-30"},{"lineNumber":457,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":458,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":459,"author":{"gitId":"kum-wh"},"content":"List of Commands:","lastModifiedDate":"2021-09-30"},{"lineNumber":460,"author":{"gitId":"kum-wh"},"content":"   echo - Repeat whatever was typed - !echo to repeat in art form","lastModifiedDate":"2021-09-30"},{"lineNumber":461,"author":{"gitId":"kum-wh"},"content":"   list - Display List - !list for details","lastModifiedDate":"2021-09-30"},{"lineNumber":462,"author":{"gitId":"kum-wh"},"content":"   todo - Add ToDo Task","lastModifiedDate":"2021-09-30"},{"lineNumber":463,"author":{"gitId":"kum-wh"},"content":"   event - Add Event Task - !event for details","lastModifiedDate":"2021-09-30"},{"lineNumber":464,"author":{"gitId":"kum-wh"},"content":"   deadline - Add Deadline Task - !deadline for details","lastModifiedDate":"2021-09-30"},{"lineNumber":465,"author":{"gitId":"kum-wh"},"content":"   clear - Clear list","lastModifiedDate":"2021-09-30"},{"lineNumber":466,"author":{"gitId":"kum-wh"},"content":"   find - Find Task With a specific word","lastModifiedDate":"2021-09-30"},{"lineNumber":467,"author":{"gitId":"kum-wh"},"content":"   date - Find Task with a specific date","lastModifiedDate":"2021-09-30"},{"lineNumber":468,"author":{"gitId":"kum-wh"},"content":"   bye - Shut Down","lastModifiedDate":"2021-09-30"},{"lineNumber":469,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":470,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":471,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":472,"author":{"gitId":"kum-wh"},"content":"### Exit Program","lastModifiedDate":"2021-09-30"},{"lineNumber":473,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":474,"author":{"gitId":"kum-wh"},"content":"Exits program.","lastModifiedDate":"2021-09-30"},{"lineNumber":475,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":476,"author":{"gitId":"kum-wh"},"content":"Command Format: `bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":477,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":478,"author":{"gitId":"kum-wh"},"content":"Demo:","lastModifiedDate":"2021-09-30"},{"lineNumber":479,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":480,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":481,"author":{"gitId":"kum-wh"},"content":"bye","lastModifiedDate":"2021-09-30"},{"lineNumber":482,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":483,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":484,"author":{"gitId":"kum-wh"},"content":"____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":485,"author":{"gitId":"kum-wh"},"content":"Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-30"},{"lineNumber":486,"author":{"gitId":"kum-wh"},"content":"_______________.___.___________","lastModifiedDate":"2021-09-30"},{"lineNumber":487,"author":{"gitId":"kum-wh"},"content":"\\______   \\__  |   |\\_   _____/","lastModifiedDate":"2021-09-30"},{"lineNumber":488,"author":{"gitId":"kum-wh"},"content":" |    |  _//   |   | |    __)_","lastModifiedDate":"2021-09-30"},{"lineNumber":489,"author":{"gitId":"kum-wh"},"content":" |    |   \\\\____   | |        \\","lastModifiedDate":"2021-09-30"},{"lineNumber":490,"author":{"gitId":"kum-wh"},"content":" |________// ______|/_________/","lastModifiedDate":"2021-09-30"},{"lineNumber":491,"author":{"gitId":"kum-wh"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":492,"author":{"gitId":"kum-wh"},"content":"## Storage","lastModifiedDate":"2021-09-30"},{"lineNumber":493,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":494,"author":{"gitId":"kum-wh"},"content":"Duke saves all tasks into a text file `duke.txt` automatically.","lastModifiedDate":"2021-09-30"},{"lineNumber":495,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":496,"author":{"gitId":"kum-wh"},"content":"**Do Not manually edit the text file as that might corrupt the data and crash the program.**","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"kum-wh":475,"-":21}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"[T];[X];watch twitch videos","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"[D];[X];homework1;11:59 ","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"[E];[ ];g2 vs en;09:00 ","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"[E];[ ];100t vs gambit; 2021-08-01","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"[E];[ ];paperex vs bren;08:00 2021-08-01","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"kum-wh":5}},{"path":"src/main/java/duke/ArtBot/ArtBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.ArtBot;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Convert string into graffiti form and print it","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"public class ArtBot implements ArtInterface {","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    private static final int SIZE_OF_ARRAY \u003d 5;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"    private final String userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     * Constructor for ArtBot","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     * Assign string to draw","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     * @param userInput String to be drawn","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    public ArtBot(String userInput){","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"     * Each Drawn version of a letter take up 5 line","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     * Convert letter into drawn version of string stored in Logo Class","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     * Split each drawn version into array of 5 string separated by each line","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     * @param letter Letter to convert into array of string","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     * @return Array of string representing a letter","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"    private String[] getLogo(String letter){","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"        String[] letterArt;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"        switch(letter) {","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        case \"A\":","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.A.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"        case \"B\":","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.B.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        case \"C\":","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.C.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"        case \"D\":","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.D.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"        case \"E\":","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.E.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"        case \"F\":","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.F.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"        case \"G\":","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.G.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"        case \"H\":","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.H.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"        case \"I\":","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.I.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"        case \"J\":","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.J.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"        case \"K\":","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.K.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"        case \"L\":","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.L.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"        case \"M\":","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.M.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"        case \"N\":","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.N.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"        case \"O\":","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.O.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"        case \"P\":","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.P.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"        case \"Q\":","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.Q.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"        case \"R\":","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.R.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"        case \"S\":","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.S.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"        case \"T\":","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.T.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"        case \"U\":","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.U.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"        case \"V\":","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.V.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"        case \"W\":","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.W.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"        case \"X\":","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.X.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"        case \"Y\":","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.Y.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"        case \"Z\":","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.Z.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"        case \"0\":","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.ZERO.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"        case \"1\":","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.One.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"        case \"2\":","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.Two.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"        case \"3\":","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.THREE.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"        case \"4\":","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.FOUR.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"        case \"5\":","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.FIVE.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"        case \"6\":","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.SIX.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"        case \"7\":","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.SEVEN.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"        case \"8\":","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.EIGHT.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"        case \"9\":","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d Logo.NINE.split(\"\\n\");","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"        default:","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"            letterArt \u003d null;","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"        return letterArt;","lastModifiedDate":"2021-09-06"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"     * Convert each letter of string into drawn form","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"     * @param inputArrayOfLetter array of Char(letters)","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"     * @return list of string array where each string array is drawn version of a letter","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if char is anything other than A-Z,0-9","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"    private ArrayList\u003cString[]\u003e getLetterInArtForm(String[] inputArrayOfLetter) throws CommandException{","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cString[]\u003e listToStoreLetterInArtForm \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"        for(String s:inputArrayOfLetter){","lastModifiedDate":"2021-09-25"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"            String[] letterInArtForm \u003d getLogo(s);","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"            if(letterInArtForm \u003d\u003d null){","lastModifiedDate":"2021-09-07"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"                throw new CommandException(ErrorStaticString.ERROR_ARTBOT_LETTER_NOT_FOUND);","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":165,"author":{"gitId":"kum-wh"},"content":"            listToStoreLetterInArtForm.add(letterInArtForm);","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":167,"author":{"gitId":"kum-wh"},"content":"        return listToStoreLetterInArtForm;","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":170,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"kum-wh"},"content":"     * Merge same index of string in each string array","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"     * First String in First String Array with First String in Second String Array and so on...","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"kum-wh"},"content":"     * @param arrayToMerge list of String Array to merge","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"kum-wh"},"content":"     * @return String Array of 5 String after all have been merged","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"kum-wh"},"content":"    private String[] mergeArray(ArrayList\u003cString[]\u003e arrayToMerge){","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"kum-wh"},"content":"        String[] arrayToReturn \u003d new String[5];","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"kum-wh"},"content":"        for(int i \u003d 0; i \u003c 5; i++){","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"kum-wh"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-06"},{"lineNumber":181,"author":{"gitId":"kum-wh"},"content":"            for (String[] strings : arrayToMerge) {","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"kum-wh"},"content":"                String temp \u003d strings[i];","lastModifiedDate":"2021-09-06"},{"lineNumber":183,"author":{"gitId":"kum-wh"},"content":"                sb.append(temp);","lastModifiedDate":"2021-09-06"},{"lineNumber":184,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"kum-wh"},"content":"            arrayToReturn[i] \u003d sb.toString();","lastModifiedDate":"2021-09-25"},{"lineNumber":186,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":187,"author":{"gitId":"kum-wh"},"content":"        return arrayToReturn;","lastModifiedDate":"2021-09-25"},{"lineNumber":188,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":189,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":190,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"kum-wh"},"content":"     * Print a array of 5 Strings","lastModifiedDate":"2021-09-28"},{"lineNumber":192,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":193,"author":{"gitId":"kum-wh"},"content":"     * @param array Array to print","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"kum-wh"},"content":"    private void printArray(String[] array){","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"kum-wh"},"content":"        for(int i \u003d 0; i \u003c SIZE_OF_ARRAY; i++){","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"kum-wh"},"content":"            System.out.println(array[i]);","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":202,"author":{"gitId":"kum-wh"},"content":"     * Handle interaction of other classes to echo a string in drawn form","lastModifiedDate":"2021-09-28"},{"lineNumber":203,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"kum-wh"},"content":"    public void drawArt() {","lastModifiedDate":"2021-09-25"},{"lineNumber":205,"author":{"gitId":"kum-wh"},"content":"        String[] letterArray \u003d userInput.split(\"(?!^)\");","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cString[]\u003e letterInArtFormList \u003d null;","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"kum-wh"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":208,"author":{"gitId":"kum-wh"},"content":"            letterInArtFormList \u003d getLetterInArtForm(letterArray);","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"kum-wh"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":210,"author":{"gitId":"kum-wh"},"content":"            e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":211,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":212,"author":{"gitId":"kum-wh"},"content":"        String[] mergeLetterHorizontallyArray \u003d mergeArray(letterInArtFormList);","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"kum-wh"},"content":"        printArray(mergeLetterHorizontallyArray);","lastModifiedDate":"2021-09-25"},{"lineNumber":214,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":215,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kum-wh":215}},{"path":"src/main/java/duke/ArtBot/ArtInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.ArtBot;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"public interface ArtInterface {","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"    void drawArt() throws CommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kum-wh":7}},{"path":"src/main/java/duke/ArtBot/Logo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.ArtBot;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":" * Store Images formed by Strings","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"public class Logo {","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"    public static final String divider \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"    public static final String dividerWithoutNewLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"    public static final String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"                                    + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"                                    + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"                                    + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-04"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    public static final String bye \u003d\"_______________.___.___________\\n\" +","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\______   \\\\__  |   |\\\\_   _____/\\n\" +","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"                                    \" |    |  _//   |   | |    __)_ \\n\" +","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"                                    \" |    |   \\\\\\\\____   | |        \\\\\\n\" +","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"                                    \" |________// ______|/_________/\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    public static final String A \u003d  \"   _____   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"                                    \"  /  _  \\\\  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"                                    \" /  /_\\\\  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"                                    \"/    |    \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\____|____/\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    public static final String B \u003d  \"__________ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\______   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"                                    \" |    |  _/\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"                                    \" |    |   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"                                    \" |________/\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    public static final String C \u003d  \"_________  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\_   ___ \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"                                    \"/    \\\\  \\\\/ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\     \\\\____\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\________/\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    public static final String D \u003d  \"________   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\______ \\\\  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"                                    \" |    |  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"                                    \" |    `   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"                                    \"/_________/\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"    public static final String E \u003d  \"___________\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\_   _____/\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"                                    \" |    __)_ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"                                    \" |        \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"                                    \"/_________/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"    public static final String F \u003d  \"___________\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\_   _____/\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"                                    \" |    __)  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"                                    \" |     \\\\   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\_____/   \\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"    public static final String G \u003d  \"  ________ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"                                    \" /  _____/ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"                                    \"/   \\\\  ___ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\    \\\\_\\\\  \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\________/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"    public static final String H \u003d  \"  ___ ___  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"                                    \" /   |   \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"                                    \"/    ~    \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\    Y    /\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\___|___/ \";","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"    public static final String I \u003d  \".___ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"                                    \"|   |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"                                    \"|   |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"                                    \"|   |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"                                    \"|___|\";","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"    public static final String J \u003d  \"      ____.\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"                                    \"     |    |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"                                    \"     |    |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"                                    \"/\\\\__|    |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\________|\";","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"    public static final String K \u003d  \" ____  __.\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"                                    \"|    |/ _|\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"                                    \"|      \u003c  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"                                    \"|    |  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"                                    \"|____|___\\\\\";","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"    public static final String L \u003d  \".____     \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"                                    \"|    |    \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"                                    \"|    |    \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"                                    \"|    |___ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"                                    \"|________\\\\\";","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"    public static final String M \u003d  \"   _____   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"                                    \"  /     \\\\  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"                                    \" /  \\\\ /  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"                                    \"/    Y    \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\____|____/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"    public static final String N \u003d  \" _______   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\      \\\\  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"                                    \" /   |   \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"                                    \"/    |    \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\____|____/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"    public static final String O \u003d  \"________   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\_____  \\\\  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"                                    \" /   |   \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"                                    \"/    |    \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\_______  /\";","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"    public static final String P \u003d  \"__________ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\______   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"                                    \" |     ___/\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"                                    \" |    |    \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"                                    \" |____| \";","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"    public static final String Q \u003d  \"________   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\_____  \\\\  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"                                    \" /  / \\\\  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"                                    \"/   \\\\_/.  \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\_____\\\\ \\\\_/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"    public static final String R \u003d  \"__________ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\______   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"                                    \" |       _/\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"                                    \" |    |   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"                                    \" |____|___/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"    public static final String S \u003d  \"  _________\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"                                    \" /   _____/\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\_____  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"                                    \" /        \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"                                    \"/_________/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"    public static final String T \u003d  \"___________\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\__    ___/\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"                                    \"  |    |   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"                                    \"  |    |   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"                                    \"  |____| \";","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"    public static final String U \u003d  \" ____ ___ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"                                    \"|    |   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"                                    \"|    |   /\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"                                    \"|    |  / \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"                                    \"|______/ \";","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"    public static final String V \u003d  \"____   ____\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\   \\\\ /   /\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\   Y   / \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"                                    \"  \\\\     /  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"                                    \"   \\\\___/ \";","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"    public static final String W \u003d  \" __      __ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"                                    \"/  \\\\    /  \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\   \\\\/\\\\/   /\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\        / \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"                                    \"  \\\\__/\\\\  /  \";","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"    public static final String X \u003d  \"____  ___\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\   \\\\/  /\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\     / \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"                                    \" /     \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"                                    \"/___/\\\\  \\\\\";","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"    public static final String Y \u003d  \"_____.___.\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\__  |   |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"                                    \" /   |   |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"                                    \" \\\\____   |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"                                    \" / ______|\";","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"    public static final String Z \u003d  \"__________\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"                                    \"\\\\____    /\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"                                    \"  /     / \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"                                    \" /     /_ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"                                    \"/_______ \\\\\";","lastModifiedDate":"2021-09-06"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"    public static final String ZERO \u003d   \"_______   \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\   _  \\\\  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"                                        \"/  /_\\\\  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\  \\\\_/   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"                                        \" \\\\______/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"    public static final String One \u003d    \" ____ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"                                        \"/_   |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"                                        \" |   |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"                                        \" |   |\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"                                        \" |___|\";","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"    public static final String Two \u003d    \"________  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\_____  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"                                        \" /  ____/ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"                                        \"/       \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\________\\\\\";","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"kum-wh"},"content":"    public static final String THREE \u003d  \"________  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\_____  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"kum-wh"},"content":"                                        \"  _(__  \u003c \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"kum-wh"},"content":"                                        \" /       \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"                                        \"/________/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"    public static final String FOUR \u003d   \"   _____  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"kum-wh"},"content":"                                        \"  /  |  | \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":171,"author":{"gitId":"kum-wh"},"content":"                                        \" /   |  |_\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"                                        \"/    ^   /\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\____   |\";","lastModifiedDate":"2021-09-06"},{"lineNumber":174,"author":{"gitId":"kum-wh"},"content":"    public static final String FIVE \u003d   \" .________\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"kum-wh"},"content":"                                        \" |   ____/\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"kum-wh"},"content":"                                        \" |____  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":177,"author":{"gitId":"kum-wh"},"content":"                                        \" /       \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"kum-wh"},"content":"                                        \"/________/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":179,"author":{"gitId":"kum-wh"},"content":"    public static final String SIX \u003d    \"  ________\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"kum-wh"},"content":"                                        \" /  _____/\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":181,"author":{"gitId":"kum-wh"},"content":"                                        \"/   __  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":182,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\  |__\\\\  \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":183,"author":{"gitId":"kum-wh"},"content":"                                        \" \\\\_______/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":184,"author":{"gitId":"kum-wh"},"content":"    public static final String SEVEN \u003d  \"_________ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\______  \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":186,"author":{"gitId":"kum-wh"},"content":"                                        \"    /    /\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":187,"author":{"gitId":"kum-wh"},"content":"                                        \"   /    / \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":188,"author":{"gitId":"kum-wh"},"content":"                                        \"  /____/ \";","lastModifiedDate":"2021-09-06"},{"lineNumber":189,"author":{"gitId":"kum-wh"},"content":"    public static final String EIGHT \u003d \"  ______  \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":190,"author":{"gitId":"kum-wh"},"content":"                                        \" /  __  \\\\ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":191,"author":{"gitId":"kum-wh"},"content":"                                        \" \u003e      \u003c \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":192,"author":{"gitId":"kum-wh"},"content":"                                        \"/   --   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\________/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":194,"author":{"gitId":"kum-wh"},"content":"    public static final String NINE \u003d   \" ________ \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":195,"author":{"gitId":"kum-wh"},"content":"                                        \"/   __   \\\\\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":196,"author":{"gitId":"kum-wh"},"content":"                                        \"\\\\____    /\\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":197,"author":{"gitId":"kum-wh"},"content":"                                        \"   /    / \\n\" +","lastModifiedDate":"2021-09-06"},{"lineNumber":198,"author":{"gitId":"kum-wh"},"content":"                                        \"  /____/\";","lastModifiedDate":"2021-09-06"},{"lineNumber":199,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":200,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":201,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kum-wh":201}},{"path":"src/main/java/duke/Command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Represent a command to add deadline task","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"public class AddDeadlineCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    private final TaskList listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Add Deadline Command","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     * @param taskInput Command input by user to process","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"     * @param listManager Tasklist to interact with list of task","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    public AddDeadlineCommand(String taskInput, TaskList listManager){","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"        super(taskInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"        this.listManager \u003d listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"     * Filter out deadline command, description and date and time of deadline","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     * Add deadline task to list via TaskList","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if date and time of deadline is empty or if description is empty","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand() throws CommandException {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"        String taskDescription \u003d taskInput.replaceFirst(COMMAND_ADD_DEADLINE, EMPTY_STRING).trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"        if(!taskDescription.contains(DEADLINE_DATE)){","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_DEADLINE_TIME);","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        int startOfDeadlineDate \u003d taskDescription.indexOf(DEADLINE_DATE);","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"        String deadlineDescription \u003d taskDescription.substring(START_OF_STRING,startOfDeadlineDate).trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"        if(deadlineDescription.isEmpty()){","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_DEADLINE_INPUT);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        String inputWithoutDescription \u003d taskDescription.replaceFirst(deadlineDescription, EMPTY_STRING).replaceFirst(DEADLINE_DATE,EMPTY_STRING).strip();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"        listManager.addDeadline(deadlineDescription, inputWithoutDescription, false);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":45}},{"path":"src/main/java/duke/Command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Represent a command to add Event task","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"public class AddEventCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    private final TaskList listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Add Deadline Command","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     * @param taskInput Command input by user to process","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"     * @param listManager Tasklist to interact with list of task","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    public AddEventCommand(String taskInput, TaskList listManager){","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"        super(taskInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"        this.listManager \u003d listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"     * Filter out event command, description and date and time of event","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     * Add event task to list via TaskList","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if date and time of event is empty or if description is empty","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand() throws CommandException {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"        String taskDescription \u003d taskInput.replaceFirst(COMMAND_ADD_EVENT, EMPTY_STRING).trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"        if(!taskDescription.contains(EVENT_TIME)){","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_EVENT_TIME);","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        int startOfEventTime \u003d taskDescription.indexOf(EVENT_TIME);","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"        String eventDescription \u003d taskDescription.substring(START_OF_STRING,startOfEventTime).trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"        if(eventDescription.isEmpty()){","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_EVENT_INPUT);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        String inputWithoutDescription \u003d taskDescription.replaceFirst(eventDescription, EMPTY_STRING).replaceFirst(EVENT_TIME,EMPTY_STRING).strip();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"        listManager.addEvent(eventDescription, inputWithoutDescription,false);","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":45}},{"path":"src/main/java/duke/Command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Represent a command to add ToDo task","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"public class AddToDoCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    private final TaskList listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Add ToDo Command","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     * @param taskInput Command input by user to process","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"     * @param listManager Tasklist to interact with list of task","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    public AddToDoCommand(String taskInput, TaskList listManager){","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"        super(taskInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"        this.listManager \u003d listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"     * Filter out ToDo command and description","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if description is empty","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand() throws CommandException{","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"        String removeCommand \u003d taskInput.replaceFirst(COMMAND_ADD_TODO, EMPTY_STRING).trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"        if(removeCommand.isEmpty()){","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_TODO_INPUT);","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"        listManager.addTodo(removeCommand,false);","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":37}},{"path":"src/main/java/duke/Command/ArtCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ArtBot.ArtBot;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Represent a command that echo string in graffiti form","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"public class ArtCommand extends CommandGuide{","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     * Constructor for ArtCommand","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     * @param userInput Command input by user to process","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    public ArtCommand(String userInput){","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"        super(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     * Filter out string to echo in graffiti and hand over drawing to artbot class","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if input is empty","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    public void handleArtCommand() throws CommandException{","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"        String removeCommand \u003d taskInput.replaceFirst(COMMAND_ECHO_ART,EMPTY_STRING).trim().toUpperCase();","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"        if(removeCommand.isEmpty()){","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_ARTBOT_INPUT_EMPTY);","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"        System.out.println(removeCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"        ArtBot artBot \u003d new ArtBot(removeCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"        artBot.drawArt();","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":35}},{"path":"src/main/java/duke/Command/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":" * Represent a command that clears all task in list","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"public class ClearCommand extends Command{","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     * Constructor for ClearCommand","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"     * @param taskInput Command input by user to process","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     * @param taskList Tasklist to interact with list of task","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    public ClearCommand(String taskInput, TaskList taskList){","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"        super(taskInput);","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"     * Clear list in Tasklist","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand(){","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"        taskList.clearTask();","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kum-wh":29}},{"path":"src/main/java/duke/Command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":" * Represent a general structure for all commands","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_HELP \u003d \"!help\";","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_LIST_HELP \u003d \"!list\";","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_EVENT_HELP \u003d \"!event\";","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_ECHO_ART \u003d \"!echo\";","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_DEADLINE_HELP \u003d \"!deadline\";","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_VIEW_LIST \u003d \"list\";","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_ECHO \u003d \"echo\";","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_COMPLETE_TASK \u003d \"done\";","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_DATE_TASK \u003d \"date\";","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    protected static final String COMMAND_FIND_WORD \u003d \"find\";","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    protected static final String EVENT_TIME \u003d \"at \";","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    protected static final String DEADLINE_DATE \u003d \"by \";","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    protected static final String MESSAGE_TASK_COMPLETE \u003d \"Nice! I\u0027ve marked this task as done: \";","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    protected static final String DATE_PATTERN \u003d \"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}\";","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    protected static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    protected static final String SEPARATOR \u003d \",\";","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    protected static final int START_OF_STRING \u003d 0;","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    protected static final String MESSAGE_HELP \u003d  \"List of Commands:\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"            \"   echo - Repeat whatever was typed - !echo to repeat in art form\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"            \"   list - Display List - !list for details\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"            \"   todo - Add ToDo Task\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"            \"   event - Add Event Task - !event for details\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"            \"   deadline - Add Deadline Task - !deadline for details\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"            \"   clear - Clear list\\n\" +","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"            \"   find - Find Task With a specific word\\n\" +","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"            \"   date - Find Task with a specific date\\n\" +","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"            \"   bye - Shut Down\";","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"    protected static final String MESSAGE_LIST_HELP \u003d \"list displays all tasks\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"            \"list todo displays all todo tasks\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"            \"list event displays all event tasks\\n\" +","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"            \"list deadline displays all deadline tasks\";","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"    protected static final String MESSAGE_EVENT_HELP \u003d \"event command requires a timing indicated using \\\"at\\\" [timing]\\n\" +","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"            \"[timing]: HH:MM YYYY-MM-DD\";","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"    protected static final String MESSAGE_DEADLINE_HELP \u003d \"deadline command requires a end time indicated using \\\"by\\\"[end time]\\n\" +","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"            \"[timing]: HH:MM YYYY-MM-DD\";","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"    protected String taskInput;","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Command","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"     * @param taskInput Command input to process","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"    public Command(String taskInput){","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"        this.taskInput \u003d taskInput;","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"     * A function to perform what the command is supposed to do","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException when error encountered for specific command","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"    public abstract void executeCommand() throws CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":66}},{"path":"src/main/java/duke/Command/CommandGuide.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":" * Represent multiple simple one word commands that mainly just print out messages","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"public class CommandGuide extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"     * Constructor for CommandGuide","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     * @param taskInput Command input by user","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    public CommandGuide(String taskInput){","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"        super(taskInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     * Print out a fixed message depending on user input or hand over processing of input to ArtCommand","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand(){","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"        if(taskInput.startsWith(COMMAND_ECHO_ART)){","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"            ArtCommand artCommand \u003d new ArtCommand(taskInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"                artCommand.handleArtCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"                e.handleException();","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"            return;","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"        switch(taskInput) {","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"        case COMMAND_HELP:","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"            System.out.println(MESSAGE_HELP);","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        case COMMAND_LIST_HELP:","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"            System.out.println(MESSAGE_LIST_HELP);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        case COMMAND_EVENT_HELP:","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"            System.out.println(MESSAGE_EVENT_HELP);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"        case COMMAND_DEADLINE_HELP:","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"            System.out.println(MESSAGE_DEADLINE_HELP);","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"            break;","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":48}},{"path":"src/main/java/duke/Command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":" * Represent a command that remove task from list","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    private final TaskList listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     * Constructor for DeleteCommand","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     * @param userInput Command input by user to process","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     * @param listManager Tasklist to interact with list of task","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    public DeleteCommand(String userInput, TaskList listManager){","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"        super(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"        this.listManager \u003d listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     * Handle removing multiple task from list","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     * Extract index of task separated with \",\u0027 and put into a list","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     * Convert index of task into int by parsing","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     * Sort int list into decreasing order so that the correct task will be deleted","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"     * Removal of task is handled in Tasklist and according to the order by Sorted int list","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if task to delete is empty or if deleting a task that non-existent","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand()throws CommandException {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"        String removeCommand \u003d taskInput.replaceFirst(COMMAND_DELETE,EMPTY_STRING).trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"        if(removeCommand.isEmpty()){","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_DELETE_TASK_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        String[] taskDoneArray \u003d removeCommand.split(SEPARATOR);","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cInteger\u003e intArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"        for (String s: taskDoneArray){","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"                int taskDoneIndex \u003d Integer.parseInt(s) - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"                intArray.add(taskDoneIndex);","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"                if (taskDoneIndex \u003e listManager.getListSize() || taskDoneIndex \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"                    throw new CommandException(ErrorStaticString.ERROR_DELETE_TASK);","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"            }catch (NumberFormatException e){","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"                System.out.println(ErrorStaticString.ERROR_DELETE_INPUT_FORMAT);","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"        Collections.sort(intArray, Collections.reverseOrder());","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"        for (Integer i: intArray) {","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"            listManager.deleteTask(i);","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":60}},{"path":"src/main/java/duke/Command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" * Represent a command that set task as completed","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"public class DoneCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"    private final TaskList listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     * Constructor for DoneCommand","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"     * @param userInput Command input by user to process","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     * @param listManager Tasklist to interact with list of task","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    public DoneCommand(String userInput, TaskList listManager){","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"        super(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"        this.listManager \u003d listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     * Handle setting multiple tasks as completed","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     * Filter out Command and split index of task into array of string by \",\"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     * Convert index of task in string into integer","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     * Set each task as done in TaskList class","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if task to set as complete is empty or if task to set as complete does not exist","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand() throws CommandException{","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        String removeCommand \u003d taskInput.replaceFirst(COMMAND_COMPLETE_TASK,EMPTY_STRING).trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        if(removeCommand.isEmpty()){","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_DONE_TASK_EMPTY);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        String[] taskDoneArray \u003d removeCommand.split(SEPARATOR);","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_TASK_COMPLETE);","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cInteger\u003e intArray \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"        for (String s: taskDoneArray) {","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"                int taskDoneIndex \u003d Integer.parseInt(s) - 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"                intArray.add(taskDoneIndex);","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"                if (taskDoneIndex \u003e listManager.getListSize() || taskDoneIndex \u003c 0) {","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"                    throw new CommandException(ErrorStaticString.ERROR_DONE_TASK_NOT_IN_LIST);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"            }catch (NumberFormatException e){","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"                System.out.println(ErrorStaticString.ERROR_DONE_INPUT_FORMAT);","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"        for(Integer i: intArray){","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"            listManager.completeTask(i, false);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":58}},{"path":"src/main/java/duke/Command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":" * Represent a command the echo back what was input by user","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"public class EchoCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Echo Command","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"     * @param userInput Command input by user to process","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    public EchoCommand(String userInput){","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"        super(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     * Remove command from string and echo back remaining string","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if string to echo is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand() throws CommandException {","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"        String removeCommand \u003d taskInput.replaceFirst(COMMAND_ECHO, EMPTY_STRING).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"        if(removeCommand.isEmpty()){","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_ECHO_INPUT);","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"        System.out.println(removeCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":33}},{"path":"src/main/java/duke/Command/FindDateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":" * Represent a command that filter out task with a specific date and print to user","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"public class FindDateCommand extends Command{","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     * Constructor for FindDateCommand","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     * @param taskInput Command input by user to process","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     * @param taskList Tasklist to interact with list of task","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    public FindDateCommand(String taskInput, TaskList taskList){","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"        super(taskInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     * Filter out date to search and convert to LocalDate object","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     * Pass searching of date to TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if list is empty or if date to search is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand() throws CommandException {","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        if(taskList.getListSize() \u003d\u003d 0){","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_LIST);","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        taskInput \u003d taskInput.replaceFirst(COMMAND_DATE_TASK,EMPTY_STRING).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        if(taskInput.isEmpty()){","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_DATE_INPUT);","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"        try {","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"            LocalDate localDate \u003d LocalDate.parse(convertStringToDate());","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"            taskList.printDate(localDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"        }catch (DateTimeParseException e ){","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"            System.out.println(ErrorStaticString.ERROR_DATE_TIME_PARSE);","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"     * Find first instance of a date by finding a string in a pattern:4int-2int-2int","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"     * @param stringToSearch String that contain date","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"     * @return Null if no date is found or return a matcher object that found date","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"    private Matcher findDate(String stringToSearch){","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"        Pattern pattern \u003d Pattern.compile(DATE_PATTERN);","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"        Matcher matcher \u003d pattern.matcher(stringToSearch);","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"        if(matcher.find()){","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"            return matcher;","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"        return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"     * Extract string containing date","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"     * @return string containing date or Empty String if no date found","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"    private String convertStringToDate(){","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"        Matcher dateMatcher \u003d findDate(taskInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"        if(dateMatcher !\u003d null){","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"            int startIndexOfDate \u003d dateMatcher.start();","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"            int endIndexOfDate \u003d dateMatcher.end();","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"            return taskInput.substring(startIndexOfDate,endIndexOfDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"kum-wh":81}},{"path":"src/main/java/duke/Command/FindKeywordCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Represent a command that filter out tasks containing a word and print to user","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"public class FindKeywordCommand extends Command{","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    private final TaskList taskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     * Constructor for FindKeywordCommand","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     * @param taskInput Command input by user to process","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"     * @param taskList Tasklist to interact with list of task","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    public FindKeywordCommand(String taskInput, TaskList taskList){","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"        super(taskInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"     * Filter out the word to search and pass the searching of the word to TaskList","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if list is empty or if word to search is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand() throws CommandException{","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"        if(taskList.getListSize() \u003d\u003d 0){","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_LIST);","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"        taskInput \u003d taskInput.replaceFirst(COMMAND_FIND_WORD,EMPTY_STRING).trim();","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        if(taskInput.isEmpty()){","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_WORD_INPUT);","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"        taskList.printWord(taskInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"kum-wh":41}},{"path":"src/main/java/duke/Command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Command;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Represent a command that handle showing all tasks to user","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    private final TaskList listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     * Constructor for ListCommand","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     * @param userInput Command Input by user to process","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"     * @param listManager Tasklist to interact with list of task","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    public ListCommand(String userInput, TaskList listManager){","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"        super(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"        this.listManager \u003d listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"     * Process list input to print whole list or list of a certain type","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     * Remove command by replacing command with empty string","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     * Remove need for using separators","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if list is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    public void executeCommand() throws CommandException {","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"        if(listManager.getListSize() \u003d\u003d 0){","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_LIST);","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        String removeCommand \u003d taskInput.replaceFirst(COMMAND_VIEW_LIST,EMPTY_STRING).trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        if(removeCommand.contains(COMMAND_ADD_TODO)){","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"                listManager.printToDo();","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"            }catch (CommandException e){","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"                e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"        }else if(removeCommand.contains(COMMAND_ADD_EVENT)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"                listManager.printEvent();","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"            }catch (CommandException e){","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"                e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"        }else if(removeCommand.contains(COMMAND_ADD_DEADLINE)){","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"                listManager.printDeadline();","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"            }catch (CommandException e){","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"                e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"        }else {","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"            listManager.printList();","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":59}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.Parser.Parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":" * Main Class of the Duke program","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":" * Handle the integration of classes to provide the necessary functions to the user","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    private final TaskList tasks;","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    private final Ui ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Duke class","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     * Creates an instance of all the necessary class for the program to run","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    public Duke(){","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     * Main function of Duke","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     * Integrate Ui class that handles taking in input of user with","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     * Parser class that handles response of input","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"     * Loop\\ until system is terminated","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    public void run(){","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"        ui.Greetings();","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"        do{","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"                Parser parser \u003d new Parser(fullCommand, tasks);","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"                isExit \u003d parser.isExit();","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"                if(!isExit) {","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"                    parser.handleInput();","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"            }catch(CommandException e){","lastModifiedDate":"2021-09-07"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"                ui.showError(e.getErrorMessage());","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"            }finally {","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"                ui.showLine();","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-15"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"        }while (!isExit);","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"        ui.Farewell();","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"     * Starts the programs","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"        new Duke().run();","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kum-wh":58,"-":3}},{"path":"src/main/java/duke/ErrorHandling/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.ErrorHandling;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":" * Represent error resulting from input of user","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"public class CommandException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"    private final String errorMessage;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"     * Constructor for CommandException","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"     * Assign error message of this instance of exception","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"     * @param errorMessage Error message to print","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    public CommandException(String errorMessage){","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     * Print Error Message","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    public void handleException(){","lastModifiedDate":"2021-09-07"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"        System.out.println(errorMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     * Get Error Message of error","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     * @return Error Message","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    public String getErrorMessage(){","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"        return errorMessage;","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kum-wh":34}},{"path":"src/main/java/duke/ErrorHandling/ErrorStaticString.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.ErrorHandling;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":" * Contain Error Messages","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"public class ErrorStaticString {","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_INPUT \u003d \"☹ OOPS!!! Input cannot be empty.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_UNKNOWN_COMMAND \u003d  \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" + \"\" +","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"                                                        \"Defaulting to Echo. Type !help to see the list of Commands\\n\";","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_LIST \u003d \"☹ OOPS!!! List is empty. Add tasks to the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_TODO_LIST \u003d \"☹ OOPS!!! There is no To Do task in list. Add To Do tasks to the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_EVENT_LIST \u003d \"☹ OOPS!!! There is no Event task in list. Add Events to the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_DEADLINE_LIST \u003d \"☹ OOPS!!! There is no Deadline task in list. Add Deadlines to the list.\";","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_DATE_SEARCH_LIST \u003d \"☹ OOPS!!! No tasks with date found.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_WORD_SEARCH_LIST \u003d \"☹ OOPS!!! No tasks with input word found.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_TODO_INPUT \u003d \"☹ OOPS!!! The description of a todo cannot be empty.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_EVENT_INPUT \u003d \"☹ OOPS!!! The description of a event cannot be empty.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_DEADLINE_INPUT \u003d \"☹ OOPS!!! The description of a deadline cannot be empty.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_ECHO_INPUT \u003d \"☹ OOPS!!! The description of a echo cannot be empty.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_EVENT_TIME \u003d \"☹ OOPS!!! The timing of the event not detected, use [at] to indicated date and time.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_DEADLINE_TIME \u003d \"☹ OOPS!!! The due date of a deadline not detected, use [by] to indicated date and time.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_DONE_TASK_NOT_IN_LIST \u003d\"☹ OOPS!!! Task done not found in list\";","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_DONE_TASK_EMPTY \u003d\"☹ OOPS!!! Cannot set task as complete without index.\";","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_DONE_INPUT_FORMAT \u003d \"☹ OOPS!!! Use only , and numbers to separate task to set as done.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_DELETE_TASK \u003d\"☹ OOPS!!! Cannot remove task that does not exist.\";","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_DELETE_TASK_EMPTY \u003d\"☹ OOPS!!! Cannot remove task without index.\";","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_DELETE_INPUT_FORMAT \u003d \"☹ OOPS!!! Use only , and numbers to separate task to delete.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_ARTBOT_LETTER_NOT_FOUND \u003d \"☹ OOPS!!! Something went wrong, character input cannot be drawn.\\n\" +","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"            \"Do not input space or symbols.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_ARTBOT_INPUT_EMPTY \u003d \"☹ OOPS!!! Input cannot be empty.\";","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_FILE_MESSAGE_CREATION \u003d \"☹ OOPS!!! Something went wrong with creating files\";","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_FILE_MESSAGE_READING \u003d \"☹ OOPS!!! Something went wrong with reading the files\";","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_FILE_MESSAGE_WRITING \u003d \"☹ OOPS!!! Something went wrong with writing to the files\";","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_FILE_MESSAGE_CLEARING \u003d \"☹ OOPS!!! Something went wrong with clearing contents of the files\";","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_DATE_TIME_PARSE \u003d \"☹ OOPS!!! Something went wrong with reading date or time\\n\" +","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"            \"Input will be read in as String\\n\" + \"Format of Date: YYYY-MM-DD\\n\" + \"Format of Time: HH:MM\";","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_DATE_INPUT \u003d \"☹ OOPS!!! Date Searched cannot be Empty.\";","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"    public static final String ERROR_EMPTY_WORD_INPUT \u003d \"☹ OOPS!!! Word Searched cannot be Empty.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"kum-wh":47}},{"path":"src/main/java/duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.Command.*;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":" * Main Class handling processing of input by user","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"public class Parser{","lastModifiedDate":"2021-09-25"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_VIEW_LIST \u003d \"list\";","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_ECHO \u003d \"echo\";","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_COMPLETE_TASK \u003d \"done\";","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_DATE_TASK \u003d \"date\";","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_FIND_WORD \u003d \"find\";","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_CLEAR_WORD \u003d \"clear\";","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    private static final String COMMAND_GUIDE_INDICATOR \u003d \"!\";","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    private static final String SPLITTER \u003d \";\";","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    private String userInput;","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    private final TaskList listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Parser","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"     * @param userInput User input to process","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"     * @param listManager Tasklist to interact with list of task","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"    public Parser(String userInput, TaskList listManager){","lastModifiedDate":"2021-09-25"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        this.listManager \u003d listManager;","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"     * Extract Command Category by checking starting string in input","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"     * @param userInput Single line of String containing one command","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"     * @return String representing task category","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"    private String taskCategory(String userInput) {","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"        if (userInput.startsWith(COMMAND_VIEW_LIST)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_VIEW_LIST;","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"        if (userInput.startsWith(COMMAND_ADD_DEADLINE)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_ADD_DEADLINE;","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"        if (userInput.startsWith(COMMAND_ADD_TODO)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_ADD_TODO;","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"        if (userInput.startsWith(COMMAND_ADD_EVENT)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_ADD_EVENT;","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"        if (userInput.startsWith(COMMAND_COMPLETE_TASK)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_COMPLETE_TASK;","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"        if (userInput.startsWith(COMMAND_ECHO)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_ECHO;","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"        if (userInput.startsWith(COMMAND_DELETE)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_DELETE;","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"        if (userInput.startsWith(COMMAND_DATE_TASK)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_DATE_TASK;","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"        if(userInput.startsWith(COMMAND_FIND_WORD)){","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_FIND_WORD;","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"        if(userInput.startsWith(COMMAND_CLEAR_WORD)){","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"            return COMMAND_CLEAR_WORD;","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"        return null;","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"     * Check if there is ToDo Command in input","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"     * @return if ToDo Command is present","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"    private boolean isTodo(){","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"        if(userInput.contains(COMMAND_ADD_TODO)){","lastModifiedDate":"2021-09-25"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"            userInput \u003d userInput.replaceAll(COMMAND_ADD_TODO,SPLITTER + COMMAND_ADD_TODO);","lastModifiedDate":"2021-09-25"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"            return true;","lastModifiedDate":"2021-09-25"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"        return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"     * Check if there is Event Command in input","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"     * @return if Event Command is present","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"    private boolean isEvent(){","lastModifiedDate":"2021-09-25"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"        if(userInput.contains(COMMAND_ADD_EVENT)){","lastModifiedDate":"2021-09-25"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"            userInput \u003d userInput.replaceAll(COMMAND_ADD_EVENT,SPLITTER + COMMAND_ADD_EVENT);","lastModifiedDate":"2021-09-25"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"            return true;","lastModifiedDate":"2021-09-25"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"        return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"     * Check if there is DeadLine Command in input","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"     * @return if DeadLine Command is present","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"    private boolean isDeadline(){","lastModifiedDate":"2021-09-25"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"        if(userInput.contains(COMMAND_ADD_DEADLINE)){","lastModifiedDate":"2021-09-25"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"            userInput \u003d userInput.replaceAll(COMMAND_ADD_DEADLINE,SPLITTER + COMMAND_ADD_DEADLINE);","lastModifiedDate":"2021-09-25"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"            return true;","lastModifiedDate":"2021-09-25"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"        return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"     * Check if Command input is list","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"     * @return if Command is list","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"    private boolean isList(){","lastModifiedDate":"2021-09-25"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"        return userInput.startsWith(COMMAND_VIEW_LIST);","lastModifiedDate":"2021-09-25"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"     * Check if Command input is exit","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"     * @return if Command is exit","lastModifiedDate":"2021-09-28"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"    public boolean isExit(){","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"        return userInput.startsWith(COMMAND_EXIT);","lastModifiedDate":"2021-09-25"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"     * Does initial checking of input before handing further checking to another function","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"     * Check if input is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"     * Check if input begin with \"!\"","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if input empty","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"    public void handleInput() throws CommandException{","lastModifiedDate":"2021-09-25"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"        if(userInput.isEmpty()){","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_INPUT);","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"        if(userInput.startsWith(COMMAND_GUIDE_INDICATOR)){","lastModifiedDate":"2021-09-25"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"            CommandGuide commandGuide \u003d new CommandGuide(userInput);","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"            commandGuide.executeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"        }else{","lastModifiedDate":"2021-09-25"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"            splitInputIfThereMoreThanOneCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"     * Check if Command is adding task to list","lastModifiedDate":"2021-09-28"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"     * if adding task to list, split command according to adding command word","lastModifiedDate":"2021-09-28"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"     * Allows for adding of multiple tasks in one line","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"     * Splitting input into multiple commands if command is for adding in task","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"kum-wh"},"content":"    private void splitInputIfThereMoreThanOneCommand() {","lastModifiedDate":"2021-09-25"},{"lineNumber":166,"author":{"gitId":"kum-wh"},"content":"        userInput \u003d userInput.replaceAll(SPLITTER,EMPTY_STRING);","lastModifiedDate":"2021-09-25"},{"lineNumber":167,"author":{"gitId":"kum-wh"},"content":"        boolean isAddingTask \u003d false;","lastModifiedDate":"2021-09-25"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"        if (!isList()) {","lastModifiedDate":"2021-09-25"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"            Boolean isTodo \u003d isTodo();","lastModifiedDate":"2021-09-27"},{"lineNumber":170,"author":{"gitId":"kum-wh"},"content":"            Boolean isEvent \u003d isEvent();","lastModifiedDate":"2021-09-27"},{"lineNumber":171,"author":{"gitId":"kum-wh"},"content":"            Boolean isDeadline \u003d isDeadline();","lastModifiedDate":"2021-09-27"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"            isAddingTask \u003d isTodo || isEvent || isDeadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":174,"author":{"gitId":"kum-wh"},"content":"        if(isAddingTask) {","lastModifiedDate":"2021-09-25"},{"lineNumber":175,"author":{"gitId":"kum-wh"},"content":"            String[] commandList \u003d userInput.split(SPLITTER);","lastModifiedDate":"2021-09-25"},{"lineNumber":176,"author":{"gitId":"kum-wh"},"content":"            for (int i \u003d 1; i \u003c commandList.length; i++) {","lastModifiedDate":"2021-09-25"},{"lineNumber":177,"author":{"gitId":"kum-wh"},"content":"                handleCommand(commandList[i]);","lastModifiedDate":"2021-09-25"},{"lineNumber":178,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":179,"author":{"gitId":"kum-wh"},"content":"        }else{","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"kum-wh"},"content":"            handleCommand(userInput);","lastModifiedDate":"2021-09-25"},{"lineNumber":181,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":182,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":184,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"kum-wh"},"content":"     * Handle One Command by Creating an instance of Command","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"kum-wh"},"content":"     * Hand execution of Command to instance of Command","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"kum-wh"},"content":"     * @param inputCommand String representing one Command, and it\u0027s relevant input","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"kum-wh"},"content":"    private void handleCommand(String inputCommand){","lastModifiedDate":"2021-09-25"},{"lineNumber":191,"author":{"gitId":"kum-wh"},"content":"        String commandCategory \u003d taskCategory(inputCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":192,"author":{"gitId":"kum-wh"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":193,"author":{"gitId":"kum-wh"},"content":"            switch (Objects.requireNonNull(commandCategory)) {","lastModifiedDate":"2021-09-25"},{"lineNumber":194,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_VIEW_LIST:","lastModifiedDate":"2021-09-25"},{"lineNumber":195,"author":{"gitId":"kum-wh"},"content":"                ListCommand listCommand \u003d new ListCommand(inputCommand, listManager);","lastModifiedDate":"2021-09-25"},{"lineNumber":196,"author":{"gitId":"kum-wh"},"content":"                try {","lastModifiedDate":"2021-09-25"},{"lineNumber":197,"author":{"gitId":"kum-wh"},"content":"                    listCommand.executeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":198,"author":{"gitId":"kum-wh"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":199,"author":{"gitId":"kum-wh"},"content":"                    e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":200,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":201,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-25"},{"lineNumber":202,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_COMPLETE_TASK:","lastModifiedDate":"2021-09-25"},{"lineNumber":203,"author":{"gitId":"kum-wh"},"content":"                DoneCommand doneCommand \u003d new DoneCommand(inputCommand, listManager);","lastModifiedDate":"2021-09-25"},{"lineNumber":204,"author":{"gitId":"kum-wh"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":205,"author":{"gitId":"kum-wh"},"content":"                    doneCommand.executeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":206,"author":{"gitId":"kum-wh"},"content":"                    listManager.printList();","lastModifiedDate":"2021-09-25"},{"lineNumber":207,"author":{"gitId":"kum-wh"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2021-09-27"},{"lineNumber":208,"author":{"gitId":"kum-wh"},"content":"                    e.handleException();","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-25"},{"lineNumber":211,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_ADD_EVENT:","lastModifiedDate":"2021-09-25"},{"lineNumber":212,"author":{"gitId":"kum-wh"},"content":"                AddEventCommand addEvent \u003d new AddEventCommand(inputCommand, listManager);","lastModifiedDate":"2021-09-25"},{"lineNumber":213,"author":{"gitId":"kum-wh"},"content":"                try {","lastModifiedDate":"2021-09-25"},{"lineNumber":214,"author":{"gitId":"kum-wh"},"content":"                    addEvent.executeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":215,"author":{"gitId":"kum-wh"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":216,"author":{"gitId":"kum-wh"},"content":"                    e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":217,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":218,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-25"},{"lineNumber":219,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_ADD_TODO:","lastModifiedDate":"2021-09-25"},{"lineNumber":220,"author":{"gitId":"kum-wh"},"content":"                AddToDoCommand addToDo \u003d new AddToDoCommand(inputCommand, listManager);","lastModifiedDate":"2021-09-25"},{"lineNumber":221,"author":{"gitId":"kum-wh"},"content":"                try {","lastModifiedDate":"2021-09-25"},{"lineNumber":222,"author":{"gitId":"kum-wh"},"content":"                    addToDo.executeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":223,"author":{"gitId":"kum-wh"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":224,"author":{"gitId":"kum-wh"},"content":"                    e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":225,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":226,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-25"},{"lineNumber":227,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2021-09-25"},{"lineNumber":228,"author":{"gitId":"kum-wh"},"content":"                AddDeadlineCommand addDeadline \u003d new AddDeadlineCommand(inputCommand, listManager);","lastModifiedDate":"2021-09-25"},{"lineNumber":229,"author":{"gitId":"kum-wh"},"content":"                try {","lastModifiedDate":"2021-09-25"},{"lineNumber":230,"author":{"gitId":"kum-wh"},"content":"                    addDeadline.executeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":231,"author":{"gitId":"kum-wh"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":232,"author":{"gitId":"kum-wh"},"content":"                    e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":233,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":234,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-25"},{"lineNumber":235,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_ECHO:","lastModifiedDate":"2021-09-25"},{"lineNumber":236,"author":{"gitId":"kum-wh"},"content":"                EchoCommand echoCommand \u003d new EchoCommand(inputCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":237,"author":{"gitId":"kum-wh"},"content":"                try {","lastModifiedDate":"2021-09-25"},{"lineNumber":238,"author":{"gitId":"kum-wh"},"content":"                    echoCommand.executeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":239,"author":{"gitId":"kum-wh"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":240,"author":{"gitId":"kum-wh"},"content":"                    e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":241,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":242,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-25"},{"lineNumber":243,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_DELETE:","lastModifiedDate":"2021-09-25"},{"lineNumber":244,"author":{"gitId":"kum-wh"},"content":"                DeleteCommand deleteCommand \u003d new DeleteCommand(inputCommand, listManager);","lastModifiedDate":"2021-09-25"},{"lineNumber":245,"author":{"gitId":"kum-wh"},"content":"                try {","lastModifiedDate":"2021-09-25"},{"lineNumber":246,"author":{"gitId":"kum-wh"},"content":"                    deleteCommand.executeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":247,"author":{"gitId":"kum-wh"},"content":"                } catch (CommandException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":248,"author":{"gitId":"kum-wh"},"content":"                    e.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":249,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-25"},{"lineNumber":250,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-27"},{"lineNumber":251,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_DATE_TASK:","lastModifiedDate":"2021-09-27"},{"lineNumber":252,"author":{"gitId":"kum-wh"},"content":"                FindDateCommand findDateCommand \u003d new FindDateCommand(inputCommand, listManager);","lastModifiedDate":"2021-09-27"},{"lineNumber":253,"author":{"gitId":"kum-wh"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":254,"author":{"gitId":"kum-wh"},"content":"                    findDateCommand.executeCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":255,"author":{"gitId":"kum-wh"},"content":"                }catch (CommandException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":256,"author":{"gitId":"kum-wh"},"content":"                    e.handleException();","lastModifiedDate":"2021-09-27"},{"lineNumber":257,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":258,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-27"},{"lineNumber":259,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_FIND_WORD:","lastModifiedDate":"2021-09-27"},{"lineNumber":260,"author":{"gitId":"kum-wh"},"content":"                FindKeywordCommand findKeywordCommand \u003d new FindKeywordCommand(inputCommand, listManager);","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"kum-wh"},"content":"                try {","lastModifiedDate":"2021-09-27"},{"lineNumber":262,"author":{"gitId":"kum-wh"},"content":"                    findKeywordCommand.executeCommand();","lastModifiedDate":"2021-09-27"},{"lineNumber":263,"author":{"gitId":"kum-wh"},"content":"                }catch (CommandException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"kum-wh"},"content":"                    e.handleException();","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-28"},{"lineNumber":267,"author":{"gitId":"kum-wh"},"content":"            case COMMAND_CLEAR_WORD:","lastModifiedDate":"2021-09-28"},{"lineNumber":268,"author":{"gitId":"kum-wh"},"content":"                ClearCommand clearCommand \u003d new ClearCommand(inputCommand, listManager);","lastModifiedDate":"2021-09-28"},{"lineNumber":269,"author":{"gitId":"kum-wh"},"content":"                clearCommand.executeCommand();","lastModifiedDate":"2021-09-28"},{"lineNumber":270,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-28"},{"lineNumber":271,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":272,"author":{"gitId":"kum-wh"},"content":"        }catch(NullPointerException e){","lastModifiedDate":"2021-09-25"},{"lineNumber":273,"author":{"gitId":"kum-wh"},"content":"            System.out.println(ErrorStaticString.ERROR_UNKNOWN_COMMAND);","lastModifiedDate":"2021-09-25"},{"lineNumber":274,"author":{"gitId":"kum-wh"},"content":"            EchoCommand echoCommand \u003d new EchoCommand(inputCommand);","lastModifiedDate":"2021-09-25"},{"lineNumber":275,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-25"},{"lineNumber":276,"author":{"gitId":"kum-wh"},"content":"                echoCommand.executeCommand();","lastModifiedDate":"2021-09-25"},{"lineNumber":277,"author":{"gitId":"kum-wh"},"content":"            } catch (CommandException echoE) {","lastModifiedDate":"2021-09-25"},{"lineNumber":278,"author":{"gitId":"kum-wh"},"content":"                echoE.handleException();","lastModifiedDate":"2021-09-25"},{"lineNumber":279,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":280,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":281,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":282,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":282}},{"path":"src/main/java/duke/Storage/FileRead.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.io.File;","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":" * Handle reading from file and","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":" * Making sense of String from file","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"public class FileRead extends Storage{","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    private final File file;","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    private final TaskList listManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     * Constructor for FileRead","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"     * Creates new arraylist to store task from text file","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"     * Create Tasklist to interact with arraylist after processing string in text file","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"     * @param file file to read from","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    public FileRead(File file){","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"        listManager \u003d new TaskList(taskList);","lastModifiedDate":"2021-09-25"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"        this.file \u003d file;","lastModifiedDate":"2021-09-25"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"     * Read from file and store each line into arraylist","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"     * @param inputFile file to read from","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"     * @return list of String from file","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"    private ArrayList\u003cString\u003e readFile(File inputFile){","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"            Scanner scanner \u003d new Scanner(inputFile);","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"            while(scanner.hasNext()){","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"                list.add(scanner.nextLine());","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"            System.out.println(ErrorStaticString.ERROR_FILE_MESSAGE_READING);","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"        return list;","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"     * Process String from files into task","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"     * @return list of task from file","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"    public ArrayList\u003cTask\u003e convertFileToTask() {","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cString\u003e stringList \u003d readFile(file);","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"        int taskIndex \u003d 0;","lastModifiedDate":"2021-09-25"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"        for (String s : stringList) {","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"            String[] splitString \u003d s.split(FILE_SEPARATOR);","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"            switch (splitString[FILE_TASK_TYPE_POSITION]){","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"            case FILE_TODO_STATUS:","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"                listManager.addTodo(splitString[FILE_TASK_DESCRIPTION_POSITION], true);","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-25"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"            case FILE_EVENT_STATUS:","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"                listManager.addEvent(splitString[FILE_TASK_DESCRIPTION_POSITION],splitString[FILE_TASK_DETAIL_POSITION], true);","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"                break;","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"            case FILE_DEADLINE_STATUS:","lastModifiedDate":"2021-09-25"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"                listManager.addDeadline(splitString[FILE_TASK_DESCRIPTION_POSITION],splitString[FILE_TASK_DETAIL_POSITION],true);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"            if (splitString[FILE_TASK_COMPLETE_POSITION].equals(FILE_COMPLETE_STATUS)){","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"                listManager.completeTask(taskIndex, true);","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"            taskIndex +\u003d 1;","lastModifiedDate":"2021-09-25"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"        return taskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":80}},{"path":"src/main/java/duke/Storage/FileWrite.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":" * Handles writing string to file","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"public class FileWrite extends Storage{","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"     * Append new string to file or","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     * Overwrite existing file with new string","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"     * @param s String to write to file","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"     * @param isAppend Boolean to indicate whether to overwrite file with new content or append to current file","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    public void writeToFile(String s, boolean isAppend){","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"        try {","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"            java.io.FileWriter fileWriter \u003d new java.io.FileWriter(file, isAppend);","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"            fileWriter.write(s);","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"            System.out.println(ErrorStaticString.ERROR_FILE_MESSAGE_WRITING);","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":27}},{"path":"src/main/java/duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import java.io.File;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":" * Handle interaction between Duke and text file","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":" * Create file if file is not found","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":" * Contain function to write to file","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":" * Contain function to read from file","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"public class Storage {","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    protected static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    protected static final String FILE_CREATED \u003d \"File created: \";","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    protected static final String FILE_MESSAGE_AT \u003d \" at \";","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    protected static final String FILE_SEPARATOR \u003d \";\";","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    protected static final String FILE_TODO_STATUS \u003d \"[T]\";","lastModifiedDate":"2021-09-25"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    protected static final String FILE_DEADLINE_STATUS \u003d \"[D]\";","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    protected static final String FILE_EVENT_STATUS \u003d \"[E]\";","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    protected static final String FILE_COMPLETE_STATUS \u003d \"[X]\";","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    protected static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    protected static final int FILE_TASK_TYPE_POSITION \u003d 0;","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    protected static final int FILE_TASK_COMPLETE_POSITION \u003d 1;","lastModifiedDate":"2021-09-25"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    protected static final int FILE_TASK_DESCRIPTION_POSITION \u003d 2;","lastModifiedDate":"2021-09-25"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    protected static final int FILE_TASK_DETAIL_POSITION \u003d 3;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    protected File file;","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Storage","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"     * Create duke.txt file if not found","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"     * Print file name and location if created","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"    public Storage(){","lastModifiedDate":"2021-09-25"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        try{","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"            file \u003d new File(FILE_NAME);","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"            if(file.createNewFile()){","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"                System.out.println(FILE_CREATED + file.getName() + FILE_MESSAGE_AT + file.getAbsolutePath());","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"        }catch(IOException e){","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"            System.out.println(ErrorStaticString.ERROR_FILE_MESSAGE_CREATION);","lastModifiedDate":"2021-09-25"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"     * Load task from text file into list","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"     * @return list of task from text file","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"    public ArrayList\u003cTask\u003e load(){","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"        FileRead fileReader \u003d new FileRead(file);","lastModifiedDate":"2021-09-25"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"        return fileReader.convertFileToTask();","lastModifiedDate":"2021-09-25"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"     * Write new task at end of text file","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"     * @param t Task to write into text file","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"    public void appendTask(Task t){","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"        FileWrite fileWrite \u003d new FileWrite();","lastModifiedDate":"2021-09-25"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"        stringBuilder.append(t.toFile());","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"        stringBuilder.append(System.lineSeparator());","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"        String stringToWrite \u003d stringBuilder.toString();","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"        fileWrite.writeToFile(stringToWrite, true);","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"     * Write all tasks in list to text file","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"     * @param list list of task to get task to write to text file","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"    public void writeTask(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2021-09-25"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2021-09-25"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"        for(Task t: list) {","lastModifiedDate":"2021-09-25"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"            stringBuilder.append(t.toFile());","lastModifiedDate":"2021-09-25"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"            stringBuilder.append(System.lineSeparator());","lastModifiedDate":"2021-09-25"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"        String stringToWrite \u003d stringBuilder.toString();","lastModifiedDate":"2021-09-25"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"        FileWrite fileWrite \u003d new FileWrite();","lastModifiedDate":"2021-09-25"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"        fileWrite.writeToFile(stringToWrite, false);","lastModifiedDate":"2021-09-25"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"     * Write empty string to text file to clear its content","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"    public void writeClearTask(){","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"        try {","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"            FileWriter fileWriter \u003d new FileWriter(file,false);","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"            fileWriter.write(EMPTY_STRING);","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"            fileWriter.close();","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"            System.out.println(ErrorStaticString.ERROR_FILE_MESSAGE_CLEARING);","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":102}},{"path":"src/main/java/duke/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"import duke.task.ToDo;","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":" * Serve as an interface for Arraylist storing tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":" * Responsible for manipulation and interaction of Arraylist","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"public class TaskList implements TaskListInterface {","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_TASK_ADDED \u003d \"Got it. I\u0027ve added this task: \";","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_TASK_IN_LIST \u003d \" tasks in the list.\";","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_LIST_TASK \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2021-09-15"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_LIST_TODO \u003d \"Here are the ToDo tasks in your list:\";","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_LIST_EVENT \u003d \"Here are the Event tasks in your list:\";","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_LIST_DEADLINE \u003d \"Here are the Deadline tasks in your list:\";","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_LIST_FIND \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_LIST_FIND_DATE \u003d \"Here are the tasks with matching dates in your list:\";","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_LIST_CLEAR \u003d \"List Cleared. All tasks removed.\";","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_TASK_NOW \u003d \"Now you have \";","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_DELETE \u003d \"Noted. I\u0027ve removed this task: \";","lastModifiedDate":"2021-09-15"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_SPACER \u003d \". \";","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    private static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2021-09-05"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"     * Constructor for list class to assign arraylist to be manipulated","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"     * @param list Arraylist that store tasks","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"    public TaskList(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2021-09-25"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        this.list \u003d list;","lastModifiedDate":"2021-09-04"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"     * Loops through list of task and print each task","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"     * @param listToPrint Arraylist containing tasks to print","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"    private void printer(ArrayList\u003cTask\u003e listToPrint){","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"        for(int i \u003d 0; i \u003c listToPrint.size(); i++){","lastModifiedDate":"2021-09-27"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"            int itemIndex\u003d i + 1;","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"            System.out.println(itemIndex + MESSAGE_SPACER + listToPrint.get(i).toString());","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"     * Print all task in list","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"    public void printList(){","lastModifiedDate":"2021-09-25"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_LIST_TASK);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"        printer(list);","lastModifiedDate":"2021-09-25"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"     * Print all task with a specific date","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"     * Sort out task with same date into new list","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"     * Print new list","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"     * @param dateSearched Date being search as LocalDate object","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if no task with date searched was found","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"    public void printDate(LocalDate dateSearched) throws CommandException{","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"        boolean haveDate \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cTask\u003e listOfTaskWithDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"        for (Task t: list){","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"            String date \u003d t.getDate(t.convertStringToDate(), true);","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"            if(!date.equals(EMPTY_STRING)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"                LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"                if (dateSearched.equals(localDate)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"                    haveDate \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"                    listOfTaskWithDate.add(t);","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"        if(!haveDate){","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_DATE_SEARCH_LIST);","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_LIST_FIND_DATE);","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"        printer(listOfTaskWithDate);","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"     * Print all tasks containing a specific string","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"     * Sort out all tasks containing the string to a new list","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"     * Print the new list","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"     * @param wordSearch String to be searched","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if no tasks with the word to be searched was found","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"    public void printWord(String wordSearch) throws CommandException{","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"        boolean haveWord \u003d false;","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cTask\u003e listOfTaskWithWord \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"        for(Task t : list){","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"            if(t.getDescription().contains(wordSearch)){","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"                listOfTaskWithWord.add(t);","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"                haveWord \u003d true;","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"        if(!haveWord){","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_WORD_SEARCH_LIST);","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_LIST_FIND);","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"        printer(listOfTaskWithWord);","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"     * Print all Todo task in list","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"     * Sort out all Todo task into new list","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"     * Print new list","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if no Todo task is found in list","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"    public void printToDo() throws CommandException {","lastModifiedDate":"2021-09-07"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"        boolean haveToDo \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cTask\u003e listOfToDo \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"        for(Task t: list){","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"            if(t instanceof ToDo){","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"                haveToDo \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"                listOfToDo.add(t);","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"        if(!haveToDo){","lastModifiedDate":"2021-09-07"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_TODO_LIST);","lastModifiedDate":"2021-09-25"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_LIST_TODO);","lastModifiedDate":"2021-09-28"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"        printer(listOfToDo);","lastModifiedDate":"2021-09-25"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"     * Print all Event Task in list","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"     * Sort out Event Task into a new list","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"     * Print new list","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if Event task is not found in list","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"    public void printEvent() throws CommandException{","lastModifiedDate":"2021-09-07"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"        boolean haveEvent \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cTask\u003e listOfEvent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"        for (Task t : list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"            if (t instanceof Event) {","lastModifiedDate":"2021-09-27"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"                haveEvent \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"                listOfEvent.add(t);","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"        if(!haveEvent){","lastModifiedDate":"2021-09-07"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_EVENT_LIST);","lastModifiedDate":"2021-09-25"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_LIST_EVENT);","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"        printer(listOfEvent);","lastModifiedDate":"2021-09-25"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"     * Print all Deadline task list","lastModifiedDate":"2021-09-28"},{"lineNumber":164,"author":{"gitId":"kum-wh"},"content":"     * Sort out Deadline task into new list","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"kum-wh"},"content":"     * Print new list","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"kum-wh"},"content":"     * @throws CommandException if Deadline task is not found in list","lastModifiedDate":"2021-09-28"},{"lineNumber":168,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":169,"author":{"gitId":"kum-wh"},"content":"    public void printDeadline() throws CommandException{","lastModifiedDate":"2021-09-07"},{"lineNumber":170,"author":{"gitId":"kum-wh"},"content":"        boolean haveDeadline \u003d false;","lastModifiedDate":"2021-09-07"},{"lineNumber":171,"author":{"gitId":"kum-wh"},"content":"        ArrayList\u003cTask\u003e listOfDeadline \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-25"},{"lineNumber":172,"author":{"gitId":"kum-wh"},"content":"        for (Task task : list) {","lastModifiedDate":"2021-09-27"},{"lineNumber":173,"author":{"gitId":"kum-wh"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2021-09-27"},{"lineNumber":174,"author":{"gitId":"kum-wh"},"content":"                haveDeadline \u003d true;","lastModifiedDate":"2021-09-07"},{"lineNumber":175,"author":{"gitId":"kum-wh"},"content":"                listOfDeadline.add(task);","lastModifiedDate":"2021-09-27"},{"lineNumber":176,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":177,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":178,"author":{"gitId":"kum-wh"},"content":"        if(!haveDeadline){","lastModifiedDate":"2021-09-07"},{"lineNumber":179,"author":{"gitId":"kum-wh"},"content":"            throw new CommandException(ErrorStaticString.ERROR_EMPTY_DEADLINE_LIST);","lastModifiedDate":"2021-09-25"},{"lineNumber":180,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":181,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_LIST_DEADLINE);","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"kum-wh"},"content":"        printer(listOfDeadline);","lastModifiedDate":"2021-09-25"},{"lineNumber":183,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":184,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":185,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"kum-wh"},"content":"     * Print message when task is added","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"kum-wh"},"content":"     * @param t Task added to the list","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"kum-wh"},"content":"    private void printAddItem(Task t){","lastModifiedDate":"2021-09-04"},{"lineNumber":191,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_TASK_ADDED + System.lineSeparator() + t.toString() + System.lineSeparator() + MESSAGE_TASK_NOW","lastModifiedDate":"2021-09-06"},{"lineNumber":192,"author":{"gitId":"kum-wh"},"content":"                + list.size() + MESSAGE_TASK_IN_LIST);","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":194,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":195,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"kum-wh"},"content":"     * Add ToDo task to list","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"kum-wh"},"content":"     * Print task added","lastModifiedDate":"2021-09-28"},{"lineNumber":198,"author":{"gitId":"kum-wh"},"content":"     * Write task to text file","lastModifiedDate":"2021-09-28"},{"lineNumber":199,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":200,"author":{"gitId":"kum-wh"},"content":"     * @param description Description of the task","lastModifiedDate":"2021-09-28"},{"lineNumber":201,"author":{"gitId":"kum-wh"},"content":"     * @param isFromFile Boolean variable representing if task added is from text file","lastModifiedDate":"2021-09-28"},{"lineNumber":202,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":203,"author":{"gitId":"kum-wh"},"content":"    public void addTodo(String description, boolean isFromFile){","lastModifiedDate":"2021-09-15"},{"lineNumber":204,"author":{"gitId":"kum-wh"},"content":"        Task t \u003d new ToDo(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":205,"author":{"gitId":"kum-wh"},"content":"        list.add(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":206,"author":{"gitId":"kum-wh"},"content":"        if(!isFromFile) {","lastModifiedDate":"2021-09-15"},{"lineNumber":207,"author":{"gitId":"kum-wh"},"content":"            printAddItem(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":208,"author":{"gitId":"kum-wh"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-25"},{"lineNumber":209,"author":{"gitId":"kum-wh"},"content":"            storage.appendTask(t);","lastModifiedDate":"2021-09-25"},{"lineNumber":210,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":211,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":212,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":213,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":214,"author":{"gitId":"kum-wh"},"content":"     * Add Event Task to list","lastModifiedDate":"2021-09-28"},{"lineNumber":215,"author":{"gitId":"kum-wh"},"content":"     * Print task added","lastModifiedDate":"2021-09-28"},{"lineNumber":216,"author":{"gitId":"kum-wh"},"content":"     * Write task to text file","lastModifiedDate":"2021-09-28"},{"lineNumber":217,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":218,"author":{"gitId":"kum-wh"},"content":"     * @param description Description of event","lastModifiedDate":"2021-09-28"},{"lineNumber":219,"author":{"gitId":"kum-wh"},"content":"     * @param eventDateTime Date and Time of event in String","lastModifiedDate":"2021-09-28"},{"lineNumber":220,"author":{"gitId":"kum-wh"},"content":"     * @param isFromFile Boolean variable representing if task added is from text file","lastModifiedDate":"2021-09-28"},{"lineNumber":221,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":222,"author":{"gitId":"kum-wh"},"content":"    public void addEvent (String description, String eventDateTime, boolean isFromFile){","lastModifiedDate":"2021-09-27"},{"lineNumber":223,"author":{"gitId":"kum-wh"},"content":"        Task t \u003d new Event(description, eventDateTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":224,"author":{"gitId":"kum-wh"},"content":"        list.add(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":225,"author":{"gitId":"kum-wh"},"content":"        if (!isFromFile) {","lastModifiedDate":"2021-09-15"},{"lineNumber":226,"author":{"gitId":"kum-wh"},"content":"            printAddItem(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":227,"author":{"gitId":"kum-wh"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-25"},{"lineNumber":228,"author":{"gitId":"kum-wh"},"content":"            storage.appendTask(t);","lastModifiedDate":"2021-09-25"},{"lineNumber":229,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":230,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":231,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":232,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":233,"author":{"gitId":"kum-wh"},"content":"     * Add Deadline Task to list","lastModifiedDate":"2021-09-28"},{"lineNumber":234,"author":{"gitId":"kum-wh"},"content":"     * Print task added","lastModifiedDate":"2021-09-28"},{"lineNumber":235,"author":{"gitId":"kum-wh"},"content":"     * Write task to text file","lastModifiedDate":"2021-09-28"},{"lineNumber":236,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":237,"author":{"gitId":"kum-wh"},"content":"     * @param description Description of deadline","lastModifiedDate":"2021-09-28"},{"lineNumber":238,"author":{"gitId":"kum-wh"},"content":"     * @param deadlineDateTime Date and Time of deadline in String","lastModifiedDate":"2021-09-28"},{"lineNumber":239,"author":{"gitId":"kum-wh"},"content":"     * @param isFromFile Boolean variable representing if task added is from text file","lastModifiedDate":"2021-09-28"},{"lineNumber":240,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":241,"author":{"gitId":"kum-wh"},"content":"    public void addDeadline(String description, String deadlineDateTime, boolean isFromFile){","lastModifiedDate":"2021-09-27"},{"lineNumber":242,"author":{"gitId":"kum-wh"},"content":"        Task t \u003d new Deadline(description, deadlineDateTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":243,"author":{"gitId":"kum-wh"},"content":"        list.add(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":244,"author":{"gitId":"kum-wh"},"content":"        if (!isFromFile) {","lastModifiedDate":"2021-09-15"},{"lineNumber":245,"author":{"gitId":"kum-wh"},"content":"            printAddItem(t);","lastModifiedDate":"2021-09-04"},{"lineNumber":246,"author":{"gitId":"kum-wh"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-25"},{"lineNumber":247,"author":{"gitId":"kum-wh"},"content":"            storage.appendTask(t);","lastModifiedDate":"2021-09-25"},{"lineNumber":248,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-04"},{"lineNumber":249,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":250,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":251,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":252,"author":{"gitId":"kum-wh"},"content":"     * Set task as done","lastModifiedDate":"2021-09-28"},{"lineNumber":253,"author":{"gitId":"kum-wh"},"content":"     * Print out task set as done","lastModifiedDate":"2021-09-28"},{"lineNumber":254,"author":{"gitId":"kum-wh"},"content":"     * Write whole list to text file to update task as done","lastModifiedDate":"2021-09-28"},{"lineNumber":255,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":256,"author":{"gitId":"kum-wh"},"content":"     * @param t Index of Task to set as done","lastModifiedDate":"2021-09-28"},{"lineNumber":257,"author":{"gitId":"kum-wh"},"content":"     * @param isFromFile Boolean variable representing if task added is from text file","lastModifiedDate":"2021-09-28"},{"lineNumber":258,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":259,"author":{"gitId":"kum-wh"},"content":"    public void completeTask(int t, boolean isFromFile){","lastModifiedDate":"2021-09-28"},{"lineNumber":260,"author":{"gitId":"kum-wh"},"content":"        Task doneTask \u003d list.get(t);","lastModifiedDate":"2021-09-05"},{"lineNumber":261,"author":{"gitId":"kum-wh"},"content":"        doneTask.setDone();","lastModifiedDate":"2021-09-05"},{"lineNumber":262,"author":{"gitId":"kum-wh"},"content":"        if (!isFromFile) {","lastModifiedDate":"2021-09-15"},{"lineNumber":263,"author":{"gitId":"kum-wh"},"content":"            System.out.println(doneTask.toString());","lastModifiedDate":"2021-09-15"},{"lineNumber":264,"author":{"gitId":"kum-wh"},"content":"            Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-25"},{"lineNumber":265,"author":{"gitId":"kum-wh"},"content":"            storage.writeTask(list);","lastModifiedDate":"2021-09-25"},{"lineNumber":266,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-15"},{"lineNumber":267,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":268,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":269,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":270,"author":{"gitId":"kum-wh"},"content":"     * Remove task from list","lastModifiedDate":"2021-09-28"},{"lineNumber":271,"author":{"gitId":"kum-wh"},"content":"     * Print task deleted","lastModifiedDate":"2021-09-28"},{"lineNumber":272,"author":{"gitId":"kum-wh"},"content":"     * Write whole list text file to remove task in text file","lastModifiedDate":"2021-09-28"},{"lineNumber":273,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":274,"author":{"gitId":"kum-wh"},"content":"     * @param t Index of Task to delete","lastModifiedDate":"2021-09-28"},{"lineNumber":275,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":276,"author":{"gitId":"kum-wh"},"content":"    public void deleteTask(int t){","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"kum-wh"},"content":"        Task removeTask \u003d list.get(t);","lastModifiedDate":"2021-09-15"},{"lineNumber":278,"author":{"gitId":"kum-wh"},"content":"        list.remove(t);","lastModifiedDate":"2021-09-15"},{"lineNumber":279,"author":{"gitId":"kum-wh"},"content":"        printDeleteTask(removeTask);","lastModifiedDate":"2021-09-25"},{"lineNumber":280,"author":{"gitId":"kum-wh"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-25"},{"lineNumber":281,"author":{"gitId":"kum-wh"},"content":"        storage.writeTask(list);","lastModifiedDate":"2021-09-25"},{"lineNumber":282,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":283,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":284,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":285,"author":{"gitId":"kum-wh"},"content":"     * Print task deleted message","lastModifiedDate":"2021-09-28"},{"lineNumber":286,"author":{"gitId":"kum-wh"},"content":"     * @param t Task to delete","lastModifiedDate":"2021-09-28"},{"lineNumber":287,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":288,"author":{"gitId":"kum-wh"},"content":"    private void printDeleteTask(Task t){","lastModifiedDate":"2021-09-25"},{"lineNumber":289,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_DELETE + System.lineSeparator() + t.toString() + System.lineSeparator() +","lastModifiedDate":"2021-09-25"},{"lineNumber":290,"author":{"gitId":"kum-wh"},"content":"                MESSAGE_TASK_NOW + list.size() + MESSAGE_TASK_IN_LIST);","lastModifiedDate":"2021-09-15"},{"lineNumber":291,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":292,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":293,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":294,"author":{"gitId":"kum-wh"},"content":"     * Remove all task in list","lastModifiedDate":"2021-09-28"},{"lineNumber":295,"author":{"gitId":"kum-wh"},"content":"     * Print list is empty","lastModifiedDate":"2021-09-28"},{"lineNumber":296,"author":{"gitId":"kum-wh"},"content":"     * Write empty string to text file to clear text file","lastModifiedDate":"2021-09-28"},{"lineNumber":297,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":298,"author":{"gitId":"kum-wh"},"content":"    public void clearTask(){","lastModifiedDate":"2021-09-28"},{"lineNumber":299,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_LIST_CLEAR);","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"kum-wh"},"content":"        list.clear();","lastModifiedDate":"2021-09-28"},{"lineNumber":301,"author":{"gitId":"kum-wh"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-28"},{"lineNumber":302,"author":{"gitId":"kum-wh"},"content":"        storage.writeClearTask();","lastModifiedDate":"2021-09-28"},{"lineNumber":303,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":306,"author":{"gitId":"kum-wh"},"content":"     * To get the number of tasks stored in the arraylist","lastModifiedDate":"2021-09-28"},{"lineNumber":307,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":308,"author":{"gitId":"kum-wh"},"content":"     * @return size of the arraylist","lastModifiedDate":"2021-09-28"},{"lineNumber":309,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":310,"author":{"gitId":"kum-wh"},"content":"    public int getListSize(){","lastModifiedDate":"2021-09-07"},{"lineNumber":311,"author":{"gitId":"kum-wh"},"content":"        return list.size();","lastModifiedDate":"2021-09-07"},{"lineNumber":312,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":313,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kum-wh":313}},{"path":"src/main/java/duke/TaskList/TaskListInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.TaskList;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"public interface TaskListInterface {","lastModifiedDate":"2021-09-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"    void printList() throws CommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"    void printDate(LocalDate dateSearched) throws CommandException;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"    void printWord(String wordSearch) throws CommandException;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"    void printToDo() throws CommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"    void printEvent() throws CommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    void printDeadline() throws CommandException;","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"    void addTodo(String description, boolean isFromFile);","lastModifiedDate":"2021-09-15"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"    void addEvent(String description, String eventDateTime, boolean isFromFile);","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    void addDeadline(String description, String deadlineDateTime, boolean isFromFile);","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    void completeTask(int t, boolean isFromFile);","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    void deleteTask(int t);","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    void clearTask();","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    int getListSize();","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"kum-wh":20}},{"path":"src/main/java/duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.Ui;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ArtBot.Logo;","lastModifiedDate":"2021-09-25"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-25"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":" * Handles Interaction between user and program","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":" * Contains function that greets user when program start","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":" * Contains function that bid farewell to user when program ends","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":" * Contains function that tell user what went wrong when an error is encountered","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":" * Contains function that print a line for readability","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"public class Ui {","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_HI \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + \"!help for Command List\\n\";","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    private static final String MESSAGE_BYE \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     * Called at start of program","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     * Greet user with message","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     * Handles message that is printed to user","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    public void Greetings(){","lastModifiedDate":"2021-09-25"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"        System.out.println(Logo.logo + Logo.divider + MESSAGE_HI + Logo.dividerWithoutNewLine);","lastModifiedDate":"2021-09-25"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"     * Called when program exit","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"     * Print a farewell message to user","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     * Handles message to be printed to user","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"    public void Farewell(){","lastModifiedDate":"2021-09-25"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"        System.out.println(MESSAGE_BYE + Logo.bye);","lastModifiedDate":"2021-09-25"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"     * Called before input is process and after","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"     * Draw a line before and after response of input","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"     * Improve readability of program","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"    public void showLine(){","lastModifiedDate":"2021-09-25"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        System.out.println(Logo.dividerWithoutNewLine);","lastModifiedDate":"2021-09-25"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"     * Read in input from user","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"     * Remove Spaces and convert to lower case","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"     * @return input from user in String","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"    public String readCommand(){","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"        return in.nextLine().toLowerCase().trim();","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"     * Called when error encountered","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"     * Print error message to user","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"     * @param error Error Message to print","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"    public void showError(String error){","lastModifiedDate":"2021-09-25"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"        System.out.println(error);","lastModifiedDate":"2021-09-25"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-25"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"kum-wh":66}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":" * Represent a DeadLine Task","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"public class Deadline extends Task{","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    private static final String DATE_SEPARATOR \u003d \"-\";","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    private static final String DATE_SEPARATOR_NEW \u003d \"/\";","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    private static final String TIME_SEPARATOR \u003d \":\";","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    private static final String TIME_SEPARATOR_NEW \u003d \".\";","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    private static final String TASK_SYMBOL \u003d \"[D]\";","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    private String deadlineDateTime;","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"     * Constructor for DeadLine Task","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"     * Set description of DeadLine","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"     * Set Date and Time of DeadLine","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    public Deadline(String description, String deadlineDateTime){","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"        this.deadlineDateTime \u003d deadlineDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"     * Find first instance of a date by finding a string in a pattern:4int-2int-2int","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"     * @param stringToSearch String that contain date","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"     * @return Null if no date is found or return a matcher object that found date","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"    private Matcher findDate(String stringToSearch){","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        Pattern pattern \u003d Pattern.compile(DATE_PATTERN);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        Matcher matcher \u003d pattern.matcher(stringToSearch);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        if(matcher.find()){","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"            return matcher;","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"        return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"     * Find first instance of time by finding a fixed pattern:2int:2int","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"     * @param stringToSearch String that contain time","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"     * @return null if no time found or return matcher object that found time","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"    private Matcher findTime(String stringToSearch){","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"        Pattern pattern \u003d Pattern.compile(TIME_PATTERN);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"        Matcher matcher \u003d pattern.matcher(stringToSearch);","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"        if(matcher.find()){","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"            return matcher;","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"        return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"     * Extract string containing date","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"     * @return string containing date or Empty String if no date found","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"    public String convertStringToDate(){","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"        Matcher dateMatcher \u003d findDate(deadlineDateTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"        if(dateMatcher !\u003d null){","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"            int startIndexOfDate \u003d dateMatcher.start();","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"            int endIndexOfDate \u003d dateMatcher.end();","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"            return deadlineDateTime.substring(startIndexOfDate,endIndexOfDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"     * Extract string containing Time","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"     * @return string containing time or Empty String if no time found","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"    private String convertStringToTime(){","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"        Matcher timeMatcher \u003d findTime(deadlineDateTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"        if(timeMatcher !\u003d null){","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"            int startIndexOfTime \u003d timeMatcher.start();","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"            int endIndexOfTime \u003d timeMatcher.end();","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"            return deadlineDateTime.substring(startIndexOfTime,endIndexOfTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"     * Process date in string form and reformat it","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"     * @param date String containing date of task","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"     * @param isForFile Boolean variable to decide format of date return","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"     * @return String of reformatted date depending on whether it being printed or save into text file","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"    public String getDate(String date, boolean isForFile) {","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"        if(!date.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"                LocalDate parseDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"                if (isForFile){","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"                    return parseDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"                return parseDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"            }catch (DateTimeParseException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"                System.out.println(ErrorStaticString.ERROR_DATE_TIME_PARSE);","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"                deadlineDateTime \u003d deadlineDateTime.replaceAll(DATE_SEPARATOR,DATE_SEPARATOR_NEW);","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"     * Process Time in string form and reformat it","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"     * @param time String containing time of task","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"     * @param isForFile Boolean variable to decide format of date return","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"     * @return String of reformatted  time depending on whether it being printed or save into text file","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"    private String getTime(String time, boolean isForFile) {","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"        if(!time.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"                LocalTime parseTime \u003d LocalTime.parse(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"                if(isForFile){","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"                    return parseTime.format(DateTimeFormatter.ofPattern(\"hh:mm\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"                return parseTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"            }catch (DateTimeParseException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"                System.out.println(ErrorStaticString.ERROR_DATE_TIME_PARSE);","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"                deadlineDateTime \u003d deadlineDateTime.replaceAll(TIME_SEPARATOR,TIME_SEPARATOR_NEW);","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"        if(getDate(convertStringToDate(),false).equals(EMPTY_STRING)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"            return deadlineDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"     * Format string to print to user","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"     * @return Formatted String containing date and time if present","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"    public String toString(){","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"    return TASK_SYMBOL + super.toString() + \"(by: \" + getTime(convertStringToTime(),false) + \" \" + getDate(convertStringToDate(),false) + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"     * Format string to write to text file","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"     * @return Formatted String containing date and time if present","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"    public String toFile(){","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"        return TASK_SYMBOL + SEPARATOR + super.toFile() + SEPARATOR + getTime(convertStringToTime(),true) + \" \" + getDate(convertStringToDate(),true);","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"kum-wh":163}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"import duke.ErrorHandling.ErrorStaticString;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":" * Represent a Event Task","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"public class Event extends Task{","lastModifiedDate":"2021-09-02"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    private static final String DATE_SEPARATOR \u003d \"-\";","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    private static final String DATE_SEPARATOR_NEW \u003d \"/\";","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    private static final String TIME_SEPARATOR \u003d \":\";","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    private static final String TIME_SEPARATOR_NEW \u003d \".\";","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"    private static final String TASK_SYMBOL \u003d \"[E]\";","lastModifiedDate":"2021-09-04"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"    private String eventDateTime;","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Event Task","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"     * Set description of event","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"     * Set Date and Time of Event","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    public Event(String description, String eventDateTime){","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"        super(description);","lastModifiedDate":"2021-09-02"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"        this.eventDateTime \u003d eventDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"     * Find first instance of a date by finding a string in a pattern:4int-2int-2int","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"     * @param stringToSearch String that contain date","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"     * @return Null if no date is found or return a matcher object that found date","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"    private Matcher findDate(String stringToSearch){","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"        Pattern pattern \u003d Pattern.compile(DATE_PATTERN);","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"        Matcher matcher \u003d pattern.matcher(stringToSearch);","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"        if(matcher.find()){","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"            return matcher;","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"        return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"     * Find first instance of time by finding a fixed pattern:2int:2int","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"     * @param stringToSearch String that contain time","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"     * @return null if no time found or return matcher object that found time","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"    private Matcher findTime(String stringToSearch){","lastModifiedDate":"2021-09-27"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"        Pattern pattern \u003d Pattern.compile(TIME_PATTERN);","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"        Matcher matcher \u003d pattern.matcher(stringToSearch);","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"        if(matcher.find()){","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"            return matcher;","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"        return null;","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"     * Extract string containing date","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"     * @return string containing date or Empty String if no date found","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"    public String convertStringToDate(){","lastModifiedDate":"2021-09-27"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"        Matcher dateMatcher \u003d findDate(eventDateTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"        if(dateMatcher !\u003d null){","lastModifiedDate":"2021-09-27"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"            int startIndexOfDate \u003d dateMatcher.start();","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"            int endIndexOfDate \u003d dateMatcher.end();","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"            return eventDateTime.substring(startIndexOfDate,endIndexOfDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2021-09-27"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"     * Extract string containing Time","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"     * @return string containing time or Empty String if no time found","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"    private String convertStringToTime(){","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"        Matcher timeMatcher \u003d findTime(eventDateTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"        if(timeMatcher !\u003d null){","lastModifiedDate":"2021-09-27"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"            int startIndexOfTime \u003d timeMatcher.start();","lastModifiedDate":"2021-09-27"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"            int endIndexOfTime \u003d timeMatcher.end();","lastModifiedDate":"2021-09-27"},{"lineNumber":89,"author":{"gitId":"kum-wh"},"content":"            return eventDateTime.substring(startIndexOfTime,endIndexOfTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":90,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"kum-wh"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2021-09-27"},{"lineNumber":92,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":94,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"kum-wh"},"content":"     * Process date in string form and reformat it","lastModifiedDate":"2021-09-28"},{"lineNumber":96,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":97,"author":{"gitId":"kum-wh"},"content":"     * @param date String containing date of task","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"kum-wh"},"content":"     * @param isForFile Boolean variable to decide format of date return","lastModifiedDate":"2021-09-28"},{"lineNumber":99,"author":{"gitId":"kum-wh"},"content":"     * @return String of reformatted date depending on whether it being printed or save into text file","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":101,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"kum-wh"},"content":"    public String getDate(String date, boolean isForFile) {","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"kum-wh"},"content":"        if(!date.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":104,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"kum-wh"},"content":"                LocalDate parseDate \u003d LocalDate.parse(date);","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"kum-wh"},"content":"                if(isForFile){","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"kum-wh"},"content":"                    return parseDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"kum-wh"},"content":"                return parseDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"kum-wh"},"content":"            }catch (DateTimeParseException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":111,"author":{"gitId":"kum-wh"},"content":"                System.out.println(ErrorStaticString.ERROR_DATE_TIME_PARSE);","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"kum-wh"},"content":"                eventDateTime \u003d eventDateTime.replaceAll(DATE_SEPARATOR,DATE_SEPARATOR_NEW);","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"kum-wh"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"kum-wh"},"content":"     * Process Time in string form and reformat it","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"kum-wh"},"content":"     * @param time String containing time of task","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"kum-wh"},"content":"     * @param isForFile Boolean variable to decide format of date return","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"kum-wh"},"content":"     * @return String of reformatted  time depending on whether it being printed or save into text file","lastModifiedDate":"2021-09-28"},{"lineNumber":124,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":125,"author":{"gitId":"kum-wh"},"content":"    private String getTime(String time, boolean isForFile) {","lastModifiedDate":"2021-09-27"},{"lineNumber":126,"author":{"gitId":"kum-wh"},"content":"        if(!time.isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"kum-wh"},"content":"            try {","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"kum-wh"},"content":"                LocalTime parseTime \u003d LocalTime.parse(time);","lastModifiedDate":"2021-09-27"},{"lineNumber":129,"author":{"gitId":"kum-wh"},"content":"                if(isForFile){","lastModifiedDate":"2021-09-27"},{"lineNumber":130,"author":{"gitId":"kum-wh"},"content":"                    return parseTime.format(DateTimeFormatter.ofPattern(\"hh:mm\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":131,"author":{"gitId":"kum-wh"},"content":"                }","lastModifiedDate":"2021-09-27"},{"lineNumber":132,"author":{"gitId":"kum-wh"},"content":"                return parseTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));","lastModifiedDate":"2021-09-27"},{"lineNumber":133,"author":{"gitId":"kum-wh"},"content":"            }catch (DateTimeParseException e){","lastModifiedDate":"2021-09-27"},{"lineNumber":134,"author":{"gitId":"kum-wh"},"content":"                System.out.println(ErrorStaticString.ERROR_DATE_TIME_PARSE);","lastModifiedDate":"2021-09-27"},{"lineNumber":135,"author":{"gitId":"kum-wh"},"content":"                eventDateTime \u003d eventDateTime.replaceAll(TIME_SEPARATOR,TIME_SEPARATOR_NEW);","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"kum-wh"},"content":"            }","lastModifiedDate":"2021-09-27"},{"lineNumber":137,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":138,"author":{"gitId":"kum-wh"},"content":"        if(getDate(convertStringToDate(),false).equals(EMPTY_STRING)) {","lastModifiedDate":"2021-09-27"},{"lineNumber":139,"author":{"gitId":"kum-wh"},"content":"            return eventDateTime;","lastModifiedDate":"2021-09-27"},{"lineNumber":140,"author":{"gitId":"kum-wh"},"content":"        }","lastModifiedDate":"2021-09-27"},{"lineNumber":141,"author":{"gitId":"kum-wh"},"content":"        return EMPTY_STRING;","lastModifiedDate":"2021-09-27"},{"lineNumber":142,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":143,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":144,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"kum-wh"},"content":"     * Format string to print to user","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"kum-wh"},"content":"     * @return Formatted String containing date and time if present","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":149,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":150,"author":{"gitId":"kum-wh"},"content":"    public String toString(){","lastModifiedDate":"2021-09-02"},{"lineNumber":151,"author":{"gitId":"kum-wh"},"content":"        return TASK_SYMBOL + super.toString() + \"(at: \" + getTime(convertStringToTime(),false) + \" \" + getDate(convertStringToDate(), false) + \")\";","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":153,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":154,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"kum-wh"},"content":"     * Format string to write to text file","lastModifiedDate":"2021-09-28"},{"lineNumber":156,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"kum-wh"},"content":"     * @return Formatted String containing date and time if present","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":159,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":160,"author":{"gitId":"kum-wh"},"content":"    public  String toFile(){","lastModifiedDate":"2021-09-15"},{"lineNumber":161,"author":{"gitId":"kum-wh"},"content":"        return TASK_SYMBOL + SEPARATOR + super.toFile() + SEPARATOR + getTime(convertStringToTime(),true) + \" \" + getDate(convertStringToDate(),true);","lastModifiedDate":"2021-09-27"},{"lineNumber":162,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":163,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"kum-wh":163}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":" * Represent a task to be done with a description of task","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"public class Task implements TaskInterface {","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"    private static final String COMPLETE_STATUS_ICON \u003d \"[X]\";","lastModifiedDate":"2021-09-15"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"    private static final String INCOMPLETE_STATUS_ICON \u003d \"[ ]\";","lastModifiedDate":"2021-09-15"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"    protected static final String DATE_PATTERN \u003d \"\\\\d{4}-\\\\d{1,2}-\\\\d{1,2}\";","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"    protected static final String TIME_PATTERN \u003d \"\\\\d{2}:\\\\d{2}\";","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"    protected static final String EMPTY_STRING \u003d \"\";","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"    protected static final String SEPARATOR \u003d \";\";","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    private final String description;","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"    private boolean isDone;","lastModifiedDate":"2021-09-05"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-02"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"     * Constructor for Task","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     * Set description of task","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     * Set tasks to be incomplete by default","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"     * @param description description of task","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    public Task(String description){","lastModifiedDate":"2021-09-02"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-02"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-09-02"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     * Set task as complete","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"    public void setDone(){","lastModifiedDate":"2021-09-04"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-09-02"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"     * Get date of task, Empty String by default","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"kum-wh"},"content":"     * @param date String containing date of task","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"kum-wh"},"content":"     * @param isForFile Boolean variable to decide format of date return","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"kum-wh"},"content":"     * @return Empty String by default representing no date in task","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"kum-wh"},"content":"    public String getDate(String date, boolean isForFile){return EMPTY_STRING;}","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"kum-wh"},"content":"     * Convert String into LocalDate","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kum-wh"},"content":"     * @return Empty String by default representing no date in task","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"kum-wh"},"content":"    public String convertStringToDate(){return EMPTY_STRING;}","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":53,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"kum-wh"},"content":"     * Get description of task","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kum-wh"},"content":"     * @return String description of task","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"kum-wh"},"content":"    public String getDescription(){","lastModifiedDate":"2021-09-02"},{"lineNumber":59,"author":{"gitId":"kum-wh"},"content":"        return description;","lastModifiedDate":"2021-09-02"},{"lineNumber":60,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":61,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":62,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"kum-wh"},"content":"     * Convert completion status of task into string form","lastModifiedDate":"2021-09-28"},{"lineNumber":64,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"kum-wh"},"content":"     * @return String representing if task is done","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"kum-wh"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2021-09-02"},{"lineNumber":68,"author":{"gitId":"kum-wh"},"content":"        return(isDone ? COMPLETE_STATUS_ICON : INCOMPLETE_STATUS_ICON);","lastModifiedDate":"2021-09-15"},{"lineNumber":69,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":70,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":71,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"kum-wh"},"content":"     * Set Task to print completion status and its description when printed","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"kum-wh"},"content":"     * @return String format of when task is printed","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"kum-wh"},"content":"    public String toString(){","lastModifiedDate":"2021-09-02"},{"lineNumber":77,"author":{"gitId":"kum-wh"},"content":"        return getStatusIcon() + description;","lastModifiedDate":"2021-09-04"},{"lineNumber":78,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-02"},{"lineNumber":79,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":80,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"kum-wh"},"content":"     * Set format of task to be saved into text file","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"kum-wh"},"content":"     * @return String format of when task is saved into text file","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"kum-wh"},"content":"    public String toFile(){","lastModifiedDate":"2021-09-15"},{"lineNumber":86,"author":{"gitId":"kum-wh"},"content":"        return getStatusIcon() + SEPARATOR + description;","lastModifiedDate":"2021-09-15"},{"lineNumber":87,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":88,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"kum-wh":88}},{"path":"src/main/java/duke/task/TaskInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.task;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"public interface TaskInterface {","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"    void setDone();","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"    String getDate(String date, boolean isForFile);","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"    String convertStringToDate();","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"    String getDescription();","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"    String getStatusIcon();","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"    String toString();","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"    String toFile();","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kum-wh":11}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"package duke.task;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":" * Represent one of the task object","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"public class ToDo extends Task{","lastModifiedDate":"2021-09-04"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"    private static final String TASK_SYMBOL \u003d \"[T]\";","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"     * Constructor for ToDo task","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"     * @param description Description of task","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"    public ToDo(String description){","lastModifiedDate":"2021-09-04"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"        super(description);","lastModifiedDate":"2021-09-04"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"     * Format string to print task to user","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"     * @return Formatted String","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-04"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"    public String toString() {","lastModifiedDate":"2021-09-04"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"        return TASK_SYMBOL + super.toString();","lastModifiedDate":"2021-09-04"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-04"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-15"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"     * Format string to save in text file","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"     *","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"     * @return Formatted String","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"    @Override","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"    public String toFile(){","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"        return TASK_SYMBOL + SEPARATOR + super.toFile();","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"    }","lastModifiedDate":"2021-09-15"},{"lineNumber":38,"author":{"gitId":"kum-wh"},"content":"}","lastModifiedDate":"2021-09-04"}],"authorContributionMap":{"kum-wh":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kum-wh"},"content":"echo Hi","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"kum-wh"},"content":"!echo hi","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"kum-wh"},"content":"list","lastModifiedDate":"2021-09-15"},{"lineNumber":4,"author":{"gitId":"kum-wh"},"content":"clear","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kum-wh"},"content":"find hi","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"kum-wh"},"content":"date 2020-10-10","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"todo watch et livestream event watch hankyuu livestream at midnight","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"kum-wh"},"content":"todo watch haxxnini livestream","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"kum-wh"},"content":"deadline reach radiant","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"kum-wh"},"content":"deadline reach legend by this season","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"kum-wh"},"content":"deadline reach gold by 20:00","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"kum-wh"},"content":"deadline reach silver by 2020-10-10","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"kum-wh"},"content":"deadline reach bronze by 20:00 2020-10-10","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"kum-wh"},"content":"date 2020-10-10","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"kum-wh"},"content":"date 2020\\10\\10","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"kum-wh"},"content":"event G2 vs Sentinel","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"kum-wh"},"content":"event G2 vs Sentinel at 10pm","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"event G2 vs Sentinel at 22:00","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"kum-wh"},"content":"event G2 vs Sentinel at 22:00 2020-10-10","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"kum-wh"},"content":"find G2","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"find hi","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"kum-wh"},"content":"list","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"kum-wh"},"content":"list todo","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"kum-wh"},"content":"list deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"kum-wh"},"content":"list event","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"kum-wh"},"content":"done 1,2,3","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"kum-wh"},"content":"delete 1,2","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"kum-wh"},"content":"list","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"kum-wh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"kum-wh"},"content":"random command","lastModifiedDate":"2021-09-15"},{"lineNumber":31,"author":{"gitId":"kum-wh"},"content":"clear","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"kum-wh"},"content":"list","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"kum-wh"},"content":"!help","lastModifiedDate":"2021-09-15"},{"lineNumber":34,"author":{"gitId":"kum-wh"},"content":"!list","lastModifiedDate":"2021-09-15"},{"lineNumber":35,"author":{"gitId":"kum-wh"},"content":"!event","lastModifiedDate":"2021-09-15"},{"lineNumber":36,"author":{"gitId":"kum-wh"},"content":"!deadline","lastModifiedDate":"2021-09-15"},{"lineNumber":37,"author":{"gitId":"kum-wh"},"content":"bye","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kum-wh":37}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"kum-wh"},"content":"del ACTUAL.txt","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"kum-wh"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.txt","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"kum-wh"},"content":"FC ACTUAL.txt EXPECTED.txt","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"kum-wh":3,"-":18}}]
