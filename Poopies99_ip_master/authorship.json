[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"   ____________________________________________________________","lastModifiedDate":"2021-08-25"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"     Hello! I\u0027m","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     ____         _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"     What can I do for you?","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Poopies99":4,"-":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"![DukeLogo](https://user-images.githubusercontent.com/69495787/134464789-b4193e01-2537-41b2-b782-8abff7851e53.png) ","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"\u003cimg src\u003d\"https://user-images.githubusercontent.com/69495787/134465925-5eaf528b-fdb8-48b3-a085-afd7dbf5450f.JPG\" width\u003d\"368\" height\u003d\"213\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"**Duke** is a productivity desktop app that is used through a **Command Line Interface (CLI)**. It is a fast and simple way to keep track of your schedule and tasks on the go.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"# Table of Content","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"- [Features](#Features)","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    * [Help](#help---Show-All-Valid-Commands)","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    * [List](#list---List-Down-All-Current-Tasks)","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    * [Add Task](#Add---Add-a-Task-to-Your-List)","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"        * [Todo](#Adding---A-Todo)","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"        * [Deadline](#Adding---A-deadline)","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"        * [Event](#Adding---An-event)","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"    * [Find](#Find---Show-All-Task-Related-to-Search-Terms)","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"    * [Done](#Done---Mark-a-Task-as-Done)","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"    * [Save](#Save---Save-All-Task-Into-Local-File)","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"    * [Bye](#Bye---Exit-the-Application)","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"- [Command Summary]()","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"## Quick Start","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"## Features","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"### Help - Show All Valid Commands","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"List down all valid commands and their formats","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"Format: `help`","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"Expected Outcome:","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"     Please input a valid request","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"     Duke can do the follow instructions","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"     1. Record Todo Task: todo (description)","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"Poopies99"},"content":"     2. Record Deadline Task: task (description) /by (date)","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"Poopies99"},"content":"     3. Record Event Task: event (description) /at (date)","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"Poopies99"},"content":"     4. List Down Recorded Tasks: list","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"Poopies99"},"content":"     5. Set Task After Completion: done (index on list)","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"Poopies99"},"content":"     6. Exit From Program: bye","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"Poopies99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":49,"author":{"gitId":"Poopies99"},"content":"### List - List Down All Current Tasks","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"Poopies99"},"content":"List down all current tasks in the task list","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"Poopies99"},"content":"Format `list`","lastModifiedDate":"2021-09-24"},{"lineNumber":54,"author":{"gitId":"Poopies99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"Poopies99"},"content":"These are the list of tasks you have","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"Poopies99"},"content":"________________________________________________________________","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"Poopies99"},"content":"     1.[E][ ] Read (at: Mon)","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"Poopies99"},"content":"     2.[E][ ] Bible Study (at: Tues)","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"Poopies99"},"content":"     3.[E][ ] Dinner (at: Wed)","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"Poopies99"},"content":"     4.[ ] CS2113T iP Submission (by: Thurs)","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"Poopies99"},"content":"________________________________________________________________","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"Poopies99"},"content":"```","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2019-07-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"Poopies99":55,"-":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-24"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-18"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import processors.ProcessManager;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"import processors.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"import processors.Parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"import commands.Command;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    //Initialise classes to run Duke","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    public static Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    public static TaskList tasklist \u003d new TaskList();","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    public static ProcessManager processManager \u003d new ProcessManager();","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    public static Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    public static Parser parser \u003d new Parser();","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"    public static Command command;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"     * Main method that greets user, load their saved tasks and runs the main method that continuously","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"     * take in input command from user until user inputs \u0027bye\u0027","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"        ui.welcomeMessage();","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"        storage.loadTasks(tasklist.taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"        String line;","lastModifiedDate":"2021-08-24"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2021-08-24"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"        boolean isProgress \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"        while (isProgress) {","lastModifiedDate":"2021-08-25"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"            line \u003d in.nextLine();","lastModifiedDate":"2021-08-24"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"            line \u003d line.trim();","lastModifiedDate":"2021-09-07"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"            command \u003d parser.decipher(line);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"            isProgress \u003d processManager.executeCommand(command, tasklist, line);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-08-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"Poopies99":36,"-":3}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import processors.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    public Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    public void execute(TaskList taskList) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"            throw new IOException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"        ui.goodbyeMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":21}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import exceptions.EventException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import exceptions.TodoException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import exceptions.DoneException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"import exceptions.DeadlineException;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"import exceptions.DeleteException;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    public void execute() throws DeadlineException,","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"            EventException, TodoException, DeleteException, DoneException, DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":14}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import exceptions.DeadlineException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    private static final String DEADLINE_KEYWORD \u003d \"/by\";","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"    private static final Integer DEADLINE_DIVIDER \u003d 9;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ZERO \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    private static final Integer TASK_DATE_DIVIDER \u003d 4;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"     * Function adds a Deadline into the list of task","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"     * @param line the input line from the user","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"     * @throws DeadlineException when the input line is invalid","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"    public void execute(TaskList taskList, String line) throws DeadlineException {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"        if (!line.contains(DEADLINE_KEYWORD)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"            throw new DeadlineException(\"Deadline Request Does Not Contain /by\");","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"        int dividerPosition \u003d line.indexOf(DEADLINE_KEYWORD);","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"        String description \u003d line.substring(DEADLINE_DIVIDER, dividerPosition).trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"        int descriptionLength \u003d description.length();","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"        if (descriptionLength \u003d\u003d ZERO) {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"            throw new DeadlineException(\"Deadline Request Does Not Contain A Description\");","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"        if (taskList.isDateExist(line.length(), dividerPosition)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"            throw new DeadlineException(\"Deadline Request Does Not Contain A Date\");","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"        String date \u003d line.substring(dividerPosition + TASK_DATE_DIVIDER);","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"        taskList.add(new Deadline(description, date));","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"        ui.printTaskMessage(taskList.getTask(taskList.getLastIndex()), taskList.size());","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":43}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import exceptions.DeleteException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ARRAY_INDEX_FINDER \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    private static final Integer TASK_DESCRIPTION_DIVIDER \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"    private static final Integer TASK_DATE_DIVIDER \u003d 4;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    private static final String DONE_DELETE_KEYWORD \u003d \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"     * Function deletes the task - from the list of tasks - specified by the user","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"     * @param line the input line from the user","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"     * @throws DeleteException when the input line is invalid","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"    public void execute(TaskList taskList, String line) throws DeleteException {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"        if (line.length() \u003d\u003d TASK_DATE_DIVIDER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"            throw new DeleteException(\"Request Does Not Contain A Number\");","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"        int dividerPosition \u003d line.indexOf(DONE_DELETE_KEYWORD);","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"        String number \u003d line.substring(dividerPosition + TASK_DESCRIPTION_DIVIDER);","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"        if (taskList.tryParse(number)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"            throw new DeleteException(\"Request Has Invalid Number\");","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"        int numberInTaskArray \u003d Integer.parseInt(number) - ARRAY_INDEX_FINDER;","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"        if (taskList.isNotOutOfBounds(numberInTaskArray)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"            throw new DeleteException(\"Array Out Of Bonds\");","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"        ui.printDeleteMessage(taskList.getTask(numberInTaskArray), taskList.size());","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"        taskList.delete(numberInTaskArray);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":41}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import exceptions.DoneException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"    private static final Integer DONE_LENGTH \u003d 4;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    private static final Integer TASK_DATE_DIVIDER \u003d 4;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"    private static final Integer TASK_DESCRIPTION_DIVIDER \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ARRAY_INDEX_FINDER \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    private static final String DONE_DELETE_KEYWORD \u003d \" \";","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"     * Function sets the isDone attribute of task in the task list to true","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"     * @param line the input line from the user","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"     * @throws DoneException when the input line is invalid","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"    public void execute(TaskList taskList, String line) throws DoneException {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"        if (line.length() \u003d\u003d TASK_DATE_DIVIDER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"            throw new DoneException(\"Request Does Not Contain A Number\");","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"        if (line.length() \u003d\u003d DONE_LENGTH) {","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"            throw new DoneException(\"Done Request Does Not Contain A Number\");","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"        int dividerPosition \u003d line.indexOf(DONE_DELETE_KEYWORD);","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"        String number \u003d line.substring(dividerPosition + TASK_DESCRIPTION_DIVIDER);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"        if (taskList.tryParse(number)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"            throw new DoneException(\"Done Request Has Invalid Number\");","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"        int numberInTaskArray \u003d Integer.parseInt(number) - ARRAY_INDEX_FINDER;","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"        if (taskList.isNotOutOfBounds(numberInTaskArray)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"            throw new DoneException(\"Index Of Task Does Not Exist\");","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Poopies99"},"content":"        taskList.getTask(numberInTaskArray).setIsDone();","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Poopies99"},"content":"        ui.printDoneMessage(taskList.getTask(numberInTaskArray));","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":46}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import exceptions.DeadlineException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import exceptions.EventException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"import tasks.Event;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    private static final String EVENT_KEYWORD \u003d \"/at\";","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    private static final Integer EVENT_DIVIDER \u003d 6;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ZERO \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    private static final Integer TASK_DATE_DIVIDER \u003d 4;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"     * Function adds an Event task into the task list","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"     * @param line the input line from the user","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"     * @throws EventException when the input line is invalid","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"    public void execute(TaskList taskList, String line) throws EventException {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"        if (!line.contains(EVENT_KEYWORD)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"            throw new EventException(\"Event Request Does Not Contain /at\");","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"        int dividerPosition \u003d line.indexOf(EVENT_KEYWORD);","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"        String description \u003d line.substring(EVENT_DIVIDER, dividerPosition).trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"        int descriptionLength \u003d description.length();","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"        if (descriptionLength \u003d\u003d ZERO) {","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"            throw new EventException(\"Event Request Does Not Contain A Description\");","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"        if (taskList.isDateExist(line.length(), dividerPosition)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"            throw new EventException(\"Event Request Does Not Contain A Date\");","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"        String date \u003d line.substring(dividerPosition + TASK_DATE_DIVIDER);","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"        taskList.add(new Event(description, date));","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Poopies99"},"content":"        ui.printTaskMessage(taskList.getTask(taskList.getLastIndex()), taskList.size());","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":44}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    private static final Integer FIND_DIVIDER \u003d 5;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"     * Function attempts to search through all return all the related task that","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"     * exists in the list","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"     * @param line the input line from the user","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"    public void execute(TaskList taskList, String line) {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"        String search \u003d line.substring(FIND_DIVIDER);","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"        for (Task t : taskList.taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"            if (t.getDescription().toLowerCase().contains(search)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"                result.add(t);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"        ui.printFindMessage(result);","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":28}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"     * Function calls the help method in ui that displays the accepted commands from the user","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    public void execute() {","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"        String output \u003d ui.help();","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"Poopies99":15}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"public class InvalidCommand extends Command{","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"     * Function runs due to invalid command from the user and throws an exception","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"     * @throws DukeException to the user","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    public void execute() throws DukeException {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"        throw new DukeException(\"Unknown Command\");","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":16}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"     * Function prints out the tasks found in the list","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    public void execute(TaskList taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"        ui.printListMessage(taskList.taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":16}},{"path":"src/main/java/commands/SavedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import processors.Storage;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"public class SavedCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    public Storage storage \u003d new Storage();","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"     * Function attempts to save the task list by calling the saveTasks method","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"     * in storage","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"     * @param taskList the list of tasks to be saved","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"     * @throws IOException when an error has occurred while saving","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"    public void execute(TaskList taskList) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"            storage.saveTasks(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"            throw new IOException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"        ui.printSavedMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":27}},{"path":"src/main/java/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import exceptions.TodoException;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import processors.TaskList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import processors.Ui;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"import tasks.Todo;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    private static final Integer TASK_DATE_DIVIDER \u003d 4;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"    private static final Integer TODO_DIVIDER \u003d 5;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    public static Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"     * Function saves a task into the list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"     * @param line the input string from the user","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"     * @throws TodoException when the input string is invalid","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"    public void execute(TaskList taskList, String line) throws TodoException{","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"        if (line.length() \u003d\u003d TASK_DATE_DIVIDER) {","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"            throw new TodoException(\"Todo Request Does Not Contain A Description\");","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"        String description \u003d line.substring(TODO_DIVIDER);","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"        taskList.add(new Todo(description));","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"        ui.printTaskMessage(taskList.getTask(taskList.getLastIndex()), taskList.size());","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":30}},{"path":"src/main/java/exceptions/AbstractException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"abstract class AbstractException extends Exception {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"    protected String statement;","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    public AbstractException(String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"        statement \u003d description;","lastModifiedDate":"2021-09-07"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"    public String printStatement() {","lastModifiedDate":"2021-09-16"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"        return statement + \"\\n\";","lastModifiedDate":"2021-09-16"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Poopies99":13}},{"path":"src/main/java/exceptions/DeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"public class DeadlineException extends AbstractException{","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"    public DeadlineException(String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"        super(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Poopies99":7}},{"path":"src/main/java/exceptions/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package exceptions;","lastModifiedDate":"2021-09-14"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"public class DeleteException extends AbstractException {","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"    public DeleteException(String description) {","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"        super(description);","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"Poopies99":7}},{"path":"src/main/java/exceptions/DoneException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"public class DoneException extends AbstractException {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"    public DoneException(String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"        super(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Poopies99":7}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"public class DukeException extends AbstractException {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"    public DukeException(String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"        super(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Poopies99":7}},{"path":"src/main/java/exceptions/EventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"public class EventException extends AbstractException {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"    public EventException(String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"        super(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Poopies99":7}},{"path":"src/main/java/exceptions/TodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package exceptions;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"public class TodoException extends AbstractException {","lastModifiedDate":"2021-09-07"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"    public TodoException(String description) {","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"        super(description);","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Poopies99":7}},{"path":"src/main/java/processors/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package processors;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import commands.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"public class Parser {","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    private static final String BYE \u003d \"bye\";","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"    private static final String EVENT \u003d \"event\";","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"    private static final String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    private static final String LIST \u003d \"list\";","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"    private static final String DELETE \u003d \"delete\";","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    private static final String DONE \u003d \"done\";","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    private static final String TODO \u003d \"todo\";","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    private static final String FIND \u003d \"find\";","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    private static final String SAVE \u003d \"save\";","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    private static final String HELP \u003d \"help\";","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"    public DeadlineCommand deadlineCommand \u003d new DeadlineCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"    public EventCommand eventCommand \u003d new EventCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"    public TodoCommand todoCommand \u003d new TodoCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"    public DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"    public DoneCommand doneCommand \u003d new DoneCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"    public ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"    public InvalidCommand invalidCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"    public SavedCommand savedCommand \u003d new SavedCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"    public FindCommand findCommand \u003d new FindCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"    public ByeCommand byeCommand \u003d new ByeCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"    public HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"     * Function takes the input line and identify the type of Command it is","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"     * before returning the specific Command class","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"     * @param line the input line from the user","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"     * @return the Command class that the user wants","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"    public Command decipher(String line) {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"        if (line.equals(BYE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"            return byeCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"        } else if (line.equals(LIST)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"            return listCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"        } else if (line.equals(HELP)) {","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"            return helpCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"Poopies99"},"content":"        } else if (line.startsWith(DELETE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Poopies99"},"content":"            return deleteCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Poopies99"},"content":"        } else if (line.startsWith(DONE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Poopies99"},"content":"            return doneCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Poopies99"},"content":"        } else if (line.startsWith(TODO)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Poopies99"},"content":"            return todoCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Poopies99"},"content":"        } else if (line.startsWith(DEADLINE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Poopies99"},"content":"            return deadlineCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Poopies99"},"content":"        } else if (line.startsWith(EVENT)){","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Poopies99"},"content":"            return eventCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Poopies99"},"content":"        } else if (line.startsWith(FIND)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Poopies99"},"content":"            return findCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Poopies99"},"content":"        } else if (line.startsWith(SAVE)) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Poopies99"},"content":"            return savedCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Poopies99"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Poopies99"},"content":"            return invalidCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":60}},{"path":"src/main/java/processors/ProcessManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package processors;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import commands.*;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import exceptions.EventException;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import exceptions.TodoException;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"import exceptions.DoneException;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"import exceptions.DeadlineException;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"import exceptions.DeleteException;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"public class ProcessManager {","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    public DeadlineCommand deadlineCommand \u003d new DeadlineCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    public EventCommand eventCommand \u003d new EventCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    public TodoCommand todoCommand \u003d new TodoCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"    public DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"    public DoneCommand doneCommand \u003d new DoneCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"    public ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"    public InvalidCommand invalidCommand \u003d new InvalidCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"    public SavedCommand savedCommand \u003d new SavedCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"    public FindCommand findCommand \u003d new FindCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"    public ByeCommand byeCommand \u003d new ByeCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"    public HelpCommand helpCommand \u003d new HelpCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-16"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"     * Function takes in a specific command and executes that Command","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"     * @param command the input Command that will be executed","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"     * @param taskList the current list of tasks in the programme","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"     * @param line the input string used to pass into the command that will be executed","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"     * @return true if the command is not a ByeCommand, otherwise it returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"    public Boolean executeCommand(Command command, TaskList taskList, String line) {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"        if (command instanceof DeadlineCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"                deadlineCommand.execute(taskList, line);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"            } catch (DeadlineException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"                ui.printDeadlineException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":42,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof EventCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Poopies99"},"content":"                eventCommand.execute(taskList, line);","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Poopies99"},"content":"            } catch (EventException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Poopies99"},"content":"                ui.printEventException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof TodoCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Poopies99"},"content":"                todoCommand.execute(taskList, line);","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Poopies99"},"content":"            } catch (TodoException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Poopies99"},"content":"                ui.printTodoException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof DeleteCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Poopies99"},"content":"                deleteCommand.execute(taskList, line);","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Poopies99"},"content":"            } catch (DeleteException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Poopies99"},"content":"                ui.printDeleteException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof DoneCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Poopies99"},"content":"                doneCommand.execute(taskList, line);","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Poopies99"},"content":"            } catch (DoneException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Poopies99"},"content":"                ui.printDoneException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof ListCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"Poopies99"},"content":"            listCommand.execute(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof InvalidCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-07"},{"lineNumber":70,"author":{"gitId":"Poopies99"},"content":"                invalidCommand.execute();","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"Poopies99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"Poopies99"},"content":"                ui.printDukeException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof SavedCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Poopies99"},"content":"                savedCommand.execute(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Poopies99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"Poopies99"},"content":"                ui.printIOException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":80,"author":{"gitId":"Poopies99"},"content":"            return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof FindCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"Poopies99"},"content":"            findCommand.execute(taskList, line);","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof ByeCommand) {","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"Poopies99"},"content":"                byeCommand.execute(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"Poopies99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"Poopies99"},"content":"                ui.printIOException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"Poopies99"},"content":"            return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"Poopies99"},"content":"        } else if (command instanceof HelpCommand) {","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"Poopies99"},"content":"            helpCommand.execute();","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":93,"author":{"gitId":"Poopies99"},"content":"        return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":95,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"Poopies99":95}},{"path":"src/main/java/processors/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package processors;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import tasks.Deadline;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import tasks.Event;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"import tasks.Todo;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"import java.io.File;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"public class Storage {","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    private static final String FILEPATH \u003d \"data/SavedTask.txt\";","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    private static final String DIVIDER \u003d \"|\";","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ZERO \u003d 0;","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ARRAY_INDEX_FINDER \u003d 1;","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"     * Used to call loadingTasks method and check for any exceptions that may be presented","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"     * and greets user based on whether programme has been previously ran","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"     * @param taskList lists of task to load from the local saved file","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"    public void loadTasks (ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"        Boolean isFirstTime \u003d false;","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"            isFirstTime \u003d loadingTasks(taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"            ui.printIOException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"            ui.printSecurityException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"        if (isFirstTime) {","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"            ui.printGreetings();","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"        } else {","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"            ui.printLoadMessage();","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"Poopies99"},"content":"            ui.printLoadMessageComplete();","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"Poopies99"},"content":"            ui.printListMessage(taskList);","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Poopies99"},"content":"     * Reads from local saved file and parse the task into taskList","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Poopies99"},"content":"     * @param taskList lists of task to load from the local saved file","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Poopies99"},"content":"     * @return true if it is the first time the user runs the programme, otherwise returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Poopies99"},"content":"     * @throws IOException if an error has occurred while creating the file","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Poopies99"},"content":"     * @throws SecurityException if file cannot be accessed","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Poopies99"},"content":"    public Boolean loadingTasks(ArrayList\u003cTask\u003e taskList) throws IOException, SecurityException {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Poopies99"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"Poopies99"},"content":"        try {","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"Poopies99"},"content":"            if (file.exists()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"Poopies99"},"content":"                Scanner fileScan \u003d new Scanner(file);","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"Poopies99"},"content":"                while (fileScan.hasNext()) {","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"Poopies99"},"content":"                    try {","lastModifiedDate":"2021-09-21"},{"lineNumber":61,"author":{"gitId":"Poopies99"},"content":"                        parseTasks(fileScan.nextLine(), taskList);","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Poopies99"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":63,"author":{"gitId":"Poopies99"},"content":"                        ui.printDukeException(e);","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Poopies99"},"content":"                        ui.printCorruptedLoadMessage();","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Poopies99"},"content":"                        return file.createNewFile();","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Poopies99"},"content":"                    }","lastModifiedDate":"2021-09-21"},{"lineNumber":67,"author":{"gitId":"Poopies99"},"content":"                }","lastModifiedDate":"2021-09-21"},{"lineNumber":68,"author":{"gitId":"Poopies99"},"content":"                return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"Poopies99"},"content":"            } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"Poopies99"},"content":"                return file.getParentFile().mkdirs();","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":72,"author":{"gitId":"Poopies99"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":73,"author":{"gitId":"Poopies99"},"content":"            throw new IOException(\"Something went wrong during file creation :( \");","lastModifiedDate":"2021-09-21"},{"lineNumber":74,"author":{"gitId":"Poopies99"},"content":"        } catch (SecurityException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":75,"author":{"gitId":"Poopies99"},"content":"            throw new SecurityException(\"File could not be accessed\");","lastModifiedDate":"2021-09-21"},{"lineNumber":76,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":77,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"Poopies99"},"content":"     * Functions loads tasks by parsing the string input, it then adds the Task into the taskList by","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"Poopies99"},"content":"     * calling the add method in ArrayList","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"Poopies99"},"content":"     * @param line Input String to be parsed","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"Poopies99"},"content":"     * @param list Input List for task to be saved into","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"Poopies99"},"content":"     * @throws DukeException Either when line has been corrupted or when task status cannot be recognized","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"Poopies99"},"content":"    public void parseTasks(String line, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"Poopies99"},"content":"        int dividerPosition1 \u003d line.indexOf(DIVIDER) + ARRAY_INDEX_FINDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"Poopies99"},"content":"        int dividerPosition2 \u003d line.indexOf(DIVIDER, dividerPosition1) + ARRAY_INDEX_FINDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"Poopies99"},"content":"        int dividerPosition3 \u003d line.indexOf(DIVIDER, dividerPosition2) + ARRAY_INDEX_FINDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"Poopies99"},"content":"        String name, by, isDone;","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"Poopies99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"Poopies99"},"content":"            name \u003d line.substring(dividerPosition1, dividerPosition2 - 1).trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"Poopies99"},"content":"            by \u003d line.substring(dividerPosition2, dividerPosition3 - 1).trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"Poopies99"},"content":"            isDone \u003d line.substring(dividerPosition3).trim();","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"Poopies99"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"Poopies99"},"content":"            throw new DukeException(\"Line corrupted, deleting corrupted line\");","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":98,"author":{"gitId":"Poopies99"},"content":"        String description \u003d name;","lastModifiedDate":"2021-09-22"},{"lineNumber":99,"author":{"gitId":"Poopies99"},"content":"        String date \u003d by;","lastModifiedDate":"2021-09-22"},{"lineNumber":100,"author":{"gitId":"Poopies99"},"content":"        String status \u003d isDone;","lastModifiedDate":"2021-09-22"},{"lineNumber":101,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":102,"author":{"gitId":"Poopies99"},"content":"        if (line.startsWith(\"T\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":103,"author":{"gitId":"Poopies99"},"content":"            list.add(new Todo(description));","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"Poopies99"},"content":"                checkStatus(status, list);","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"Poopies99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"Poopies99"},"content":"                e.printStatement();","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"Poopies99"},"content":"        } else if (line.startsWith(\"D\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":110,"author":{"gitId":"Poopies99"},"content":"            list.add(new Deadline(description, date));","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"Poopies99"},"content":"                checkStatus(status, list);","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"Poopies99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"Poopies99"},"content":"                e.printStatement();","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"Poopies99"},"content":"        } else if (line.startsWith(\"E\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"Poopies99"},"content":"            list.add(new Event(description, date));","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"Poopies99"},"content":"                checkStatus(status, list);","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"Poopies99"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"Poopies99"},"content":"                e.printStatement();","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"Poopies99"},"content":"        } else {","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"Poopies99"},"content":"            throw new DukeException(\"Task Status Syntax Not Recognised, Unable to Parse Request\");","lastModifiedDate":"2021-09-22"},{"lineNumber":125,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":129,"author":{"gitId":"Poopies99"},"content":"     * Function saves the lists in taskList into the local save file","lastModifiedDate":"2021-09-22"},{"lineNumber":130,"author":{"gitId":"Poopies99"},"content":"     * @param taskList list of tasks to save to the local save file","lastModifiedDate":"2021-09-22"},{"lineNumber":131,"author":{"gitId":"Poopies99"},"content":"     * @throws IOException when an error has occurred while trying to save the file","lastModifiedDate":"2021-09-22"},{"lineNumber":132,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":133,"author":{"gitId":"Poopies99"},"content":"    public void saveTasks(TaskList taskList) throws IOException {","lastModifiedDate":"2021-09-22"},{"lineNumber":134,"author":{"gitId":"Poopies99"},"content":"        FileWriter fileWrite \u003d new FileWriter(FILEPATH);","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"Poopies99"},"content":"        fileWrite.close();","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"Poopies99"},"content":"        for (Task task : taskList.taskList) {","lastModifiedDate":"2021-09-22"},{"lineNumber":137,"author":{"gitId":"Poopies99"},"content":"            try {","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"Poopies99"},"content":"                task.saveTask(FILEPATH);","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"Poopies99"},"content":"            } catch (IOException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"Poopies99"},"content":"                throw new IOException(\"Error Occurred While Saving File\");","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"Poopies99"},"content":"            }","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":146,"author":{"gitId":"Poopies99"},"content":"     * Functions checks whether the isDone attribute of the Task is valid and sets the attribute to Done","lastModifiedDate":"2021-09-22"},{"lineNumber":147,"author":{"gitId":"Poopies99"},"content":"     * when the attribute is true","lastModifiedDate":"2021-09-22"},{"lineNumber":148,"author":{"gitId":"Poopies99"},"content":"     * @param status the isDone value of the Task","lastModifiedDate":"2021-09-22"},{"lineNumber":149,"author":{"gitId":"Poopies99"},"content":"     * @param list the lists of Task currently in the programme","lastModifiedDate":"2021-09-22"},{"lineNumber":150,"author":{"gitId":"Poopies99"},"content":"     * @throws DukeException when the attribute of the Task is not valid","lastModifiedDate":"2021-09-22"},{"lineNumber":151,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":152,"author":{"gitId":"Poopies99"},"content":"    public void checkStatus(String status, ArrayList\u003cTask\u003e list) throws DukeException {","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"Poopies99"},"content":"        if (status.equals(\"true\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"Poopies99"},"content":"            list.get(getLastIndex(list)).setIsDone();","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"Poopies99"},"content":"        } else if (!status.equals(\"false\")) {","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"Poopies99"},"content":"            throw new DukeException(\"Invalid Status\");","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":161,"author":{"gitId":"Poopies99"},"content":"     * Function returns the last index of the list that is currently occupied","lastModifiedDate":"2021-09-22"},{"lineNumber":162,"author":{"gitId":"Poopies99"},"content":"     * @param list the lists of Task currently in the programme","lastModifiedDate":"2021-09-22"},{"lineNumber":163,"author":{"gitId":"Poopies99"},"content":"     * @return the integer value of the last index that is occupied","lastModifiedDate":"2021-09-22"},{"lineNumber":164,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":165,"author":{"gitId":"Poopies99"},"content":"    public int getLastIndex(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"Poopies99"},"content":"        int index \u003d list.size() - ARRAY_INDEX_FINDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"Poopies99"},"content":"        return Math.max(index, ZERO);","lastModifiedDate":"2021-09-21"},{"lineNumber":168,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"Poopies99":169}},{"path":"src/main/java/processors/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package processors;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"public class TaskList {","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"    private static final Integer KEYWORD_LENGTH \u003d 2;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ARRAY_INDEX_FINDER \u003d 1;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ZERO \u003d 0;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    public Ui ui \u003d new Ui();","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    public ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"     * Function adds a Task into the list","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"     * @param task Task to be added into the list","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"    public void add(Task task) {","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"        taskList.add(task);","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"     * Function removes a Task from the list base on the input index specified","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"     * @param index of the Task that is to be removed","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"    public void delete(int index) {","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"     * Function returns the Task from the list based on the input index specified","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"     * @param index of the Task that is to be returned","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"     * @return the task from the list specified by the input index","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"     * Function returns the integer value of the size of the list","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"     * @return the size of the list","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"Poopies99"},"content":"    public int size() {","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Poopies99"},"content":"        return taskList.size();","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"Poopies99"},"content":"     * Function attempts to parse the text into an integer value and","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"Poopies99"},"content":"     * returns false if the attempt is successful. This is to ensure that the input done command","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"Poopies99"},"content":"     * has a number that could be parsed","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"Poopies99"},"content":"     * @param text input text to be parsed","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"Poopies99"},"content":"     * @return true if the attempt is unsuccessful and false if the attempt was successful","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"Poopies99"},"content":"    public boolean tryParse(String text) {","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"Poopies99"},"content":"        try {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"Poopies99"},"content":"            Integer.parseInt(text);","lastModifiedDate":"2021-09-22"},{"lineNumber":57,"author":{"gitId":"Poopies99"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"Poopies99"},"content":"            return true;","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"Poopies99"},"content":"        return false;","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Poopies99"},"content":"     * Function returns the index of the last Task in the taskList. This is to","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Poopies99"},"content":"     * access the Task most recently added into the taskList","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Poopies99"},"content":"     * @return the maximum between zero and the index of the last Task in the taskList","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"Poopies99"},"content":"    public int getLastIndex() {","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"Poopies99"},"content":"        int index \u003d taskList.size() - ARRAY_INDEX_FINDER;","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"Poopies99"},"content":"        return Math.max(index, ZERO);","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Poopies99"},"content":"     * Functions checks whether the date of deadline or event exist and returns true if it does","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Poopies99"},"content":"     * and false if it does not. This is to ensure that the input Event or Deadline from the user","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Poopies99"},"content":"     * has a specified date","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Poopies99"},"content":"     * @param length the integer value of the length of the date","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"Poopies99"},"content":"     * @param index the index of the first character where the date starts","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"Poopies99"},"content":"     * @return true if date exist, otherwise it returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"Poopies99"},"content":"    public boolean isDateExist(int length, int index) {","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"Poopies99"},"content":"        return length \u003d\u003d index + KEYWORD_LENGTH + ARRAY_INDEX_FINDER;","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"Poopies99"},"content":"    /**","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"Poopies99"},"content":"     * Function checks whether the index of the list exist within the taskList","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"Poopies99"},"content":"     * This is to ensure that the user is not accessing the array that is out of bounds","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"Poopies99"},"content":"     * @param index the integer value of the index","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"Poopies99"},"content":"     * @return true if the index is out of bounds, otherwise returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"Poopies99"},"content":"     */","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"Poopies99"},"content":"    public boolean isNotOutOfBounds(int index) {","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"Poopies99"},"content":"        return taskList.isEmpty() || getLastIndex() \u003c index || index \u003c ZERO;","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"Poopies99":94}},{"path":"src/main/java/processors/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package processors;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import exceptions.EventException;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import exceptions.TodoException;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"import exceptions.DoneException;","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"import exceptions.DeadlineException;","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"import exceptions.DeleteException;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"import exceptions.DukeException;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"import tasks.Task;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"public class Ui {","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ZERO \u003d 0;","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    private static final Integer ARRAY_INDEX_FINDER \u003d 1;","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"    private static final String ADD_TASK_REPLY \u003d \"     Got it. I\u0027ve added this task:\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"    private static final String TASK_COMPLETED \u003d \"     Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"    private static final String LINE \u003d \"________________________________________________________________\";","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"    private static final String LINE_DIVIDER \u003d \"________________________________________________________________\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"    private static final String GAP \u003d \"     \";","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"    private static final String DELETED_TASK \u003d \"     Noted. I\u0027ve removed this task:\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"    private static final String EMPTY_LIST \u003d \"Nothing Has Been Added To The List Yet\\n\";","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"    private static final String FIND_LIST_RESULT \u003d \"     Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"    private static final String FIND_LIST_NO_RESULT \u003d \"     No relevant results found :(\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"    public void printTaskMessage(Task task, Integer index) {","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + ADD_TASK_REPLY","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"                + GAP + task.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"        getAddTaskReturn(index);","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"    public void printDoneMessage(Task task) {","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + TASK_COMPLETED + GAP + \"[X] \"","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"                + task.getDescription() + \"\\n\" + LINE;","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"Poopies99"},"content":"    public void printListMessage(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"Poopies99"},"content":"        String output \u003d \"These are the list of tasks you have\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"Poopies99"},"content":"        for (int i \u003d 0; list.size() \u003e i; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"Poopies99"},"content":"            String record \u003d GAP + (i + ARRAY_INDEX_FINDER) + \".\" + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"Poopies99"},"content":"            output \u003d output.concat(record);","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"Poopies99"},"content":"        if (list.size() \u003d\u003d ZERO) {","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"Poopies99"},"content":"            output \u003d output.concat(GAP + EMPTY_LIST);","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"Poopies99"},"content":"        output \u003d output.concat(LINE);","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"Poopies99"},"content":"    public void printDeleteMessage(Task task, Integer index) {","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + DELETED_TASK + GAP + task.toString();","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"Poopies99"},"content":"        getAddTaskReturn(index - ARRAY_INDEX_FINDER);","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":59,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":60,"author":{"gitId":"Poopies99"},"content":"    public void printFindMessage(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER;","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"Poopies99"},"content":"        if (list.size() \u003e ZERO) {","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"Poopies99"},"content":"            output \u003d output.concat(FIND_LIST_RESULT);","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"Poopies99"},"content":"        } else {","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"Poopies99"},"content":"            output \u003d output.concat(FIND_LIST_NO_RESULT);","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"Poopies99"},"content":"        for (int i \u003d 0; list.size() \u003e i; i++) {","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"Poopies99"},"content":"            String record \u003d GAP + (i + ARRAY_INDEX_FINDER) + \".\" + list.get(i).toString() + \"\\n\";","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"Poopies99"},"content":"            output \u003d output.concat(record);","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"Poopies99"},"content":"        }","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"Poopies99"},"content":"        output \u003d output.concat(LINE);","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"Poopies99"},"content":"    public void getAddTaskReturn(Integer i) {","lastModifiedDate":"2021-09-21"},{"lineNumber":78,"author":{"gitId":"Poopies99"},"content":"        String output \u003d \"     Now you have \" + (i) + \" tasks in the list.\\n\" + LINE;","lastModifiedDate":"2021-09-21"},{"lineNumber":79,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":80,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":81,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":82,"author":{"gitId":"Poopies99"},"content":"    public void goodbyeMessage() {","lastModifiedDate":"2021-09-21"},{"lineNumber":83,"author":{"gitId":"Poopies99"},"content":"        String output \u003d \"File has been saved!\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":84,"author":{"gitId":"Poopies99"},"content":"                + LINE_DIVIDER + GAP + \"Bye. Hope to see you again soon!\\n\" + LINE;","lastModifiedDate":"2021-09-21"},{"lineNumber":85,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":86,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":87,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":88,"author":{"gitId":"Poopies99"},"content":"    public void welcomeMessage() {","lastModifiedDate":"2021-09-21"},{"lineNumber":89,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER","lastModifiedDate":"2021-09-21"},{"lineNumber":90,"author":{"gitId":"Poopies99"},"content":"                + \"     Hello! I\u0027m\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":91,"author":{"gitId":"Poopies99"},"content":"                + \"     ____        _\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":92,"author":{"gitId":"Poopies99"},"content":"                + \"    |  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":93,"author":{"gitId":"Poopies99"},"content":"                + \"    | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":94,"author":{"gitId":"Poopies99"},"content":"                + \"    | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":95,"author":{"gitId":"Poopies99"},"content":"                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":96,"author":{"gitId":"Poopies99"},"content":"                + LINE;","lastModifiedDate":"2021-09-21"},{"lineNumber":97,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":100,"author":{"gitId":"Poopies99"},"content":"    public String help() {","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"Poopies99"},"content":"        return LINE_DIVIDER","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"Poopies99"},"content":"                + \"     Please input a valid request\\n\"","lastModifiedDate":"2021-09-22"},{"lineNumber":103,"author":{"gitId":"Poopies99"},"content":"                + \"     Duke can do the follow instructions\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":104,"author":{"gitId":"Poopies99"},"content":"                + \"     1. Record Todo Task: todo (description)\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":105,"author":{"gitId":"Poopies99"},"content":"                + \"     2. Record Deadline Task: task (description) /by (date)\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":106,"author":{"gitId":"Poopies99"},"content":"                + \"     3. Record Event Task: event (description) /at (date)\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":107,"author":{"gitId":"Poopies99"},"content":"                + \"     4. List Down Recorded Tasks: list\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":108,"author":{"gitId":"Poopies99"},"content":"                + \"     5. Set Task After Completion: done (index on list)\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":109,"author":{"gitId":"Poopies99"},"content":"                + \"     6. Exit From Program: bye\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-22"},{"lineNumber":110,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":111,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":112,"author":{"gitId":"Poopies99"},"content":"    public void printEventException(EventException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":113,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + e.printStatement() +","lastModifiedDate":"2021-09-21"},{"lineNumber":114,"author":{"gitId":"Poopies99"},"content":"                \"Invalid Event Request. Format: event (description) /at (Date)\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":115,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":116,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":117,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":118,"author":{"gitId":"Poopies99"},"content":"    public void printDeadlineException(DeadlineException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":119,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + e.printStatement()","lastModifiedDate":"2021-09-21"},{"lineNumber":120,"author":{"gitId":"Poopies99"},"content":"                + \"Invalid Deadline Request. Format: deadline (description) /by (Date)\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":121,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":122,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":123,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"Poopies99"},"content":"    public void printTodoException(TodoException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":125,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + e.printStatement()","lastModifiedDate":"2021-09-21"},{"lineNumber":126,"author":{"gitId":"Poopies99"},"content":"                + \"Invalid Todo Request. Format: todo (description)\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":127,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":128,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"Poopies99"},"content":"    public void printDoneException(DoneException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + e.printStatement()","lastModifiedDate":"2021-09-21"},{"lineNumber":132,"author":{"gitId":"Poopies99"},"content":"                + \"Invalid Done Request. Format: done (number)\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":136,"author":{"gitId":"Poopies99"},"content":"    public void printDeleteException(DeleteException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":137,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + e.printStatement()","lastModifiedDate":"2021-09-21"},{"lineNumber":138,"author":{"gitId":"Poopies99"},"content":"                + \"Invalid Delete Request. Format: delete (number)\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":139,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":140,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":141,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":142,"author":{"gitId":"Poopies99"},"content":"    public void printDukeException(DukeException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":143,"author":{"gitId":"Poopies99"},"content":"        String output \u003d e.printStatement() + help();","lastModifiedDate":"2021-09-21"},{"lineNumber":144,"author":{"gitId":"Poopies99"},"content":"        System.out.print(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":145,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":146,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":147,"author":{"gitId":"Poopies99"},"content":"    public void printIOException(IOException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":148,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + e.getMessage()","lastModifiedDate":"2021-09-21"},{"lineNumber":149,"author":{"gitId":"Poopies99"},"content":"                + \"Invalid Delete Request. Format: delete (number)\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":150,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":151,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":152,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":153,"author":{"gitId":"Poopies99"},"content":"    public void printSecurityException(SecurityException e) {","lastModifiedDate":"2021-09-21"},{"lineNumber":154,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + e.getMessage()","lastModifiedDate":"2021-09-21"},{"lineNumber":155,"author":{"gitId":"Poopies99"},"content":"                + \"Invalid Delete Request. Format: delete (number)\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-21"},{"lineNumber":157,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"Poopies99"},"content":"    public void printLoadMessage() {","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"Poopies99"},"content":"        System.out.println(\"Welcome back to Duke!\");","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"Poopies99"},"content":"        System.out.println(\"Give me a moment while I set things up for you\");","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"Poopies99"},"content":"        System.out.println(\"Loading Tasks...\");","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":165,"author":{"gitId":"Poopies99"},"content":"    public void printLoadMessageComplete() {","lastModifiedDate":"2021-09-21"},{"lineNumber":166,"author":{"gitId":"Poopies99"},"content":"        System.out.println(\"Task Successfully Imported\\n\");","lastModifiedDate":"2021-09-21"},{"lineNumber":167,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":168,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":169,"author":{"gitId":"Poopies99"},"content":"    public void printCorruptedLoadMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":170,"author":{"gitId":"Poopies99"},"content":"        System.out.println(\"Successfully Imported Uncorrupted Task\");","lastModifiedDate":"2021-09-22"},{"lineNumber":171,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":172,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":173,"author":{"gitId":"Poopies99"},"content":"    public void printGreetings() {","lastModifiedDate":"2021-09-21"},{"lineNumber":174,"author":{"gitId":"Poopies99"},"content":"        System.out.println(\"I am your very own schedule assistant here to enhance your everyday life\");","lastModifiedDate":"2021-09-21"},{"lineNumber":175,"author":{"gitId":"Poopies99"},"content":"        System.out.println(\"Type help to see what i can do!\");","lastModifiedDate":"2021-09-21"},{"lineNumber":176,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":177,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":178,"author":{"gitId":"Poopies99"},"content":"    public void printSavedMessage() {","lastModifiedDate":"2021-09-22"},{"lineNumber":179,"author":{"gitId":"Poopies99"},"content":"        String output \u003d LINE_DIVIDER + GAP + \"Your tasks has been saved\\n\" + LINE_DIVIDER;","lastModifiedDate":"2021-09-22"},{"lineNumber":180,"author":{"gitId":"Poopies99"},"content":"        System.out.println(output);","lastModifiedDate":"2021-09-22"},{"lineNumber":181,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":182,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"Poopies99":182}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"    protected String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    public Deadline(String description, String date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"        by \u003d date;","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    public String getBy() {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"        return by;","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"    public void setBy(String outcome) {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"        by \u003d outcome;","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"        return super.toString() + \" (by: \" + getBy() + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"    public String getClassType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"        return \"[D]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"    public void saveTask(String filePath) throws IOException {","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"        FileWriter fileWrite \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"        fileWrite.write(\"D | \" + getDescription() + \" | \" + getBy() + \" | \" + getDone() + \"\\n\");","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"        fileWrite.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Poopies99":38}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"public class Event extends Deadline{","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"    public Event(String description, String date) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"        super(description, date);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    public String getClassType() {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"        return \"[E]\";","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"        return getClassType() + getStatusIcon() + getDescription() + \" (at: \" + getBy() + \")\";","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"    public void saveTask(String filePath) throws IOException {","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"        FileWriter fileWrite \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"        fileWrite.write(\"E | \" + getDescription() + \" | \" + getBy() + \" | \" + getDone() + \"\\n\");","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"        fileWrite.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Poopies99":27}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"    protected String description;","lastModifiedDate":"2021-08-25"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-25"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-25"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-25"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-25"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"        return getStatusIcon() + getDescription();","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-25"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \";","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"    public String getDescription() {","lastModifiedDate":"2021-08-25"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"        return description;","lastModifiedDate":"2021-08-25"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-25"},{"lineNumber":27,"author":{"gitId":"Poopies99"},"content":"    public Boolean getDone() {","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"Poopies99"},"content":"        return isDone;","lastModifiedDate":"2021-09-14"},{"lineNumber":29,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"Poopies99"},"content":"    public abstract String getClassType();","lastModifiedDate":"2021-09-14"},{"lineNumber":32,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"Poopies99"},"content":"    public void setIsDone() {","lastModifiedDate":"2021-08-25"},{"lineNumber":34,"author":{"gitId":"Poopies99"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-25"},{"lineNumber":35,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-25"},{"lineNumber":36,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"Poopies99"},"content":"    public abstract void saveTask(String filePath) throws IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-08-25"}],"authorContributionMap":{"Poopies99":38}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"package tasks;","lastModifiedDate":"2021-09-07"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"    public String getClassType() {","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"        return \"[T]\";","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"Poopies99"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"Poopies99"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"Poopies99"},"content":"        return getClassType() + getStatusIcon() + getDescription();","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"Poopies99"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":20,"author":{"gitId":"Poopies99"},"content":"    @Override","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"Poopies99"},"content":"    public void saveTask(String filePath) throws IOException {","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"Poopies99"},"content":"        FileWriter fileWrite \u003d new FileWriter(filePath, true);","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"Poopies99"},"content":"        fileWrite.write(\"T | \" + getDescription() + \" | null | \" + getDone() + \"\\n\");","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"Poopies99"},"content":"        fileWrite.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"Poopies99"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"Poopies99"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Poopies99":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Poopies99"},"content":"todo Read Bible","lastModifiedDate":"2021-08-30"},{"lineNumber":2,"author":{"gitId":"Poopies99"},"content":"todo Devotion","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"Poopies99"},"content":"deadline CS2113T /by Tuesday","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"Poopies99"},"content":"event Project Meeting /at Monday 9-11pm","lastModifiedDate":"2021-08-30"},{"lineNumber":5,"author":{"gitId":"Poopies99"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"Poopies99"},"content":"done 3","lastModifiedDate":"2021-09-13"},{"lineNumber":7,"author":{"gitId":"Poopies99"},"content":"done 1","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"Poopies99"},"content":"done 4","lastModifiedDate":"2021-09-13"},{"lineNumber":9,"author":{"gitId":"Poopies99"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"Poopies99"},"content":"delete 3","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"Poopies99"},"content":"delete 1","lastModifiedDate":"2021-09-13"},{"lineNumber":12,"author":{"gitId":"Poopies99"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":13,"author":{"gitId":"Poopies99"},"content":"bye","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"Poopies99":13}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"Poopies99"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Poopies99":1,"-":37}}]
