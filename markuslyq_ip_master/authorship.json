[{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslyq"},"content":"package Duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"markuslyq"},"content":"import Duke.task.Deadline;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"markuslyq"},"content":"import Duke.task.Event;","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"markuslyq"},"content":"import Duke.task.Task;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"markuslyq"},"content":"import Duke.task.Todo;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"markuslyq"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"markuslyq"},"content":"public class Duke {","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"markuslyq"},"content":"    private static int taskCounter \u003d 0;","lastModifiedDate":"2021-09-06"},{"lineNumber":13,"author":{"gitId":"markuslyq"},"content":"    private static final Task[] tasks \u003d new Task[100];","lastModifiedDate":"2021-09-06"},{"lineNumber":14,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"markuslyq"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"markuslyq"},"content":"        printHeaderMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"markuslyq"},"content":"        handleInputs();","lastModifiedDate":"2021-09-06"},{"lineNumber":18,"author":{"gitId":"markuslyq"},"content":"        printByeMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"markuslyq"},"content":"    private static void handleInputs() {","lastModifiedDate":"2021-09-06"},{"lineNumber":22,"author":{"gitId":"markuslyq"},"content":"        String input \u003d getInput();","lastModifiedDate":"2021-09-06"},{"lineNumber":23,"author":{"gitId":"markuslyq"},"content":"        while (!input.equals(\"bye\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"markuslyq"},"content":"            //Splits the input string by WhiteSpace into an array of strings.","lastModifiedDate":"2021-09-06"},{"lineNumber":25,"author":{"gitId":"markuslyq"},"content":"            String[] splittedInput \u003d input.split(\" \");","lastModifiedDate":"2021-09-06"},{"lineNumber":26,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"markuslyq"},"content":"            try {","lastModifiedDate":"2021-09-06"},{"lineNumber":28,"author":{"gitId":"markuslyq"},"content":"                switch (splittedInput[0].toLowerCase()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":29,"author":{"gitId":"markuslyq"},"content":"                case \"todo\":","lastModifiedDate":"2021-09-06"},{"lineNumber":30,"author":{"gitId":"markuslyq"},"content":"                    addTodoTask(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":31,"author":{"gitId":"markuslyq"},"content":"                    break;","lastModifiedDate":"2021-09-06"},{"lineNumber":32,"author":{"gitId":"markuslyq"},"content":"                case \"deadline\":","lastModifiedDate":"2021-09-06"},{"lineNumber":33,"author":{"gitId":"markuslyq"},"content":"                    addDeadlineTask(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":34,"author":{"gitId":"markuslyq"},"content":"                    break;","lastModifiedDate":"2021-09-06"},{"lineNumber":35,"author":{"gitId":"markuslyq"},"content":"                case \"event\":","lastModifiedDate":"2021-09-06"},{"lineNumber":36,"author":{"gitId":"markuslyq"},"content":"                    addEventTask(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":37,"author":{"gitId":"markuslyq"},"content":"                    break;","lastModifiedDate":"2021-09-06"},{"lineNumber":38,"author":{"gitId":"markuslyq"},"content":"                case \"list\":","lastModifiedDate":"2021-09-06"},{"lineNumber":39,"author":{"gitId":"markuslyq"},"content":"                    printListMessage();","lastModifiedDate":"2021-09-06"},{"lineNumber":40,"author":{"gitId":"markuslyq"},"content":"                    break;","lastModifiedDate":"2021-09-06"},{"lineNumber":41,"author":{"gitId":"markuslyq"},"content":"                case \"done\":","lastModifiedDate":"2021-09-06"},{"lineNumber":42,"author":{"gitId":"markuslyq"},"content":"                    markTaskAsDone(splittedInput[1]);","lastModifiedDate":"2021-09-06"},{"lineNumber":43,"author":{"gitId":"markuslyq"},"content":"                    break;","lastModifiedDate":"2021-09-06"},{"lineNumber":44,"author":{"gitId":"markuslyq"},"content":"                case \"bye\":","lastModifiedDate":"2021-09-06"},{"lineNumber":45,"author":{"gitId":"markuslyq"},"content":"                    return;","lastModifiedDate":"2021-09-06"},{"lineNumber":46,"author":{"gitId":"markuslyq"},"content":"                default:","lastModifiedDate":"2021-09-06"},{"lineNumber":47,"author":{"gitId":"markuslyq"},"content":"                    throw new DukeException(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\" + System.lineSeparator()","lastModifiedDate":"2021-09-06"},{"lineNumber":48,"author":{"gitId":"markuslyq"},"content":"                            + \"Please enter a valid input!\" + System.lineSeparator()","lastModifiedDate":"2021-09-06"},{"lineNumber":49,"author":{"gitId":"markuslyq"},"content":"                            + \"i.e. todo, deadline, event, list, done or bye.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":50,"author":{"gitId":"markuslyq"},"content":"                }","lastModifiedDate":"2021-09-06"},{"lineNumber":51,"author":{"gitId":"markuslyq"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-06"},{"lineNumber":52,"author":{"gitId":"markuslyq"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2021-09-06"},{"lineNumber":53,"author":{"gitId":"markuslyq"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":54,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":55,"author":{"gitId":"markuslyq"},"content":"            input \u003d getInput();","lastModifiedDate":"2021-09-06"},{"lineNumber":56,"author":{"gitId":"markuslyq"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":57,"author":{"gitId":"markuslyq"},"content":"//","lastModifiedDate":"2021-09-06"},{"lineNumber":58,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":59,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":60,"author":{"gitId":"markuslyq"},"content":"    private static void printListMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":61,"author":{"gitId":"markuslyq"},"content":"        if (taskCounter \u003d\u003d 0) {","lastModifiedDate":"2021-09-06"},{"lineNumber":62,"author":{"gitId":"markuslyq"},"content":"            System.out.println(\"\\tThe list is empty!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":63,"author":{"gitId":"markuslyq"},"content":"        } else {","lastModifiedDate":"2021-09-06"},{"lineNumber":64,"author":{"gitId":"markuslyq"},"content":"            System.out.println(\"\\tHere\u0027s the list of your tasks: \");","lastModifiedDate":"2021-09-06"},{"lineNumber":65,"author":{"gitId":"markuslyq"},"content":"            for (int j \u003d 0; j \u003c taskCounter; j++) {","lastModifiedDate":"2021-09-06"},{"lineNumber":66,"author":{"gitId":"markuslyq"},"content":"                int itemNumber \u003d j + 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":67,"author":{"gitId":"markuslyq"},"content":"                System.out.println(\"\\t\" + itemNumber + \".\" + tasks[j].toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":68,"author":{"gitId":"markuslyq"},"content":"            }","lastModifiedDate":"2021-09-06"},{"lineNumber":69,"author":{"gitId":"markuslyq"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":70,"author":{"gitId":"markuslyq"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-06"},{"lineNumber":71,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":72,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":73,"author":{"gitId":"markuslyq"},"content":"    private static void markTaskAsDone(String s) {","lastModifiedDate":"2021-09-06"},{"lineNumber":74,"author":{"gitId":"markuslyq"},"content":"        int taskIndex \u003d Integer.parseInt(s) - 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":75,"author":{"gitId":"markuslyq"},"content":"        tasks[taskIndex].markAsDone();","lastModifiedDate":"2021-09-06"},{"lineNumber":76,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":77,"author":{"gitId":"markuslyq"},"content":"        System.out.println(\"\\tGood job! I\u0027ve marked this task as done: \");","lastModifiedDate":"2021-09-06"},{"lineNumber":78,"author":{"gitId":"markuslyq"},"content":"        System.out.println(\"\\t\" + tasks[taskIndex]);","lastModifiedDate":"2021-09-06"},{"lineNumber":79,"author":{"gitId":"markuslyq"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-06"},{"lineNumber":80,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":81,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":82,"author":{"gitId":"markuslyq"},"content":"    private static void printNewTaskMsg() {","lastModifiedDate":"2021-09-06"},{"lineNumber":83,"author":{"gitId":"markuslyq"},"content":"        int taskCount \u003d taskCounter + 1;","lastModifiedDate":"2021-09-06"},{"lineNumber":84,"author":{"gitId":"markuslyq"},"content":"        System.out.println(\"\\tAlright! I\u0027ve just added this task:\");","lastModifiedDate":"2021-09-06"},{"lineNumber":85,"author":{"gitId":"markuslyq"},"content":"        System.out.println(\"\\t\" + tasks[taskCounter].toString());","lastModifiedDate":"2021-09-06"},{"lineNumber":86,"author":{"gitId":"markuslyq"},"content":"        System.out.println(\"\\tYou now have \" + taskCount + \" tasks on your task list.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":87,"author":{"gitId":"markuslyq"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-06"},{"lineNumber":88,"author":{"gitId":"markuslyq"},"content":"        taskCounter++;","lastModifiedDate":"2021-09-06"},{"lineNumber":89,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":90,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":91,"author":{"gitId":"markuslyq"},"content":"    private static void addTodoTask(String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":92,"author":{"gitId":"markuslyq"},"content":"        //get the name of the task","lastModifiedDate":"2021-09-06"},{"lineNumber":93,"author":{"gitId":"markuslyq"},"content":"        String taskName \u003d getTodoTaskName(input);","lastModifiedDate":"2021-09-06"},{"lineNumber":94,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":95,"author":{"gitId":"markuslyq"},"content":"        //create new Todo task","lastModifiedDate":"2021-09-06"},{"lineNumber":96,"author":{"gitId":"markuslyq"},"content":"        tasks[taskCounter] \u003d new Todo(taskName);","lastModifiedDate":"2021-09-06"},{"lineNumber":97,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":98,"author":{"gitId":"markuslyq"},"content":"        printNewTaskMsg();","lastModifiedDate":"2021-09-06"},{"lineNumber":99,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":100,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":101,"author":{"gitId":"markuslyq"},"content":"    private static String getTodoTaskName(String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":102,"author":{"gitId":"markuslyq"},"content":"        int spaceIndex \u003d input.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-09-06"},{"lineNumber":103,"author":{"gitId":"markuslyq"},"content":"        String taskName \u003d input.substring(spaceIndex + 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":104,"author":{"gitId":"markuslyq"},"content":"        if (taskName.equals(\"todo\")) {","lastModifiedDate":"2021-09-06"},{"lineNumber":105,"author":{"gitId":"markuslyq"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of a todo task cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":106,"author":{"gitId":"markuslyq"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":107,"author":{"gitId":"markuslyq"},"content":"        return taskName;","lastModifiedDate":"2021-09-06"},{"lineNumber":108,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":109,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":110,"author":{"gitId":"markuslyq"},"content":"    private static void addEventTask(String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":111,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":112,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":113,"author":{"gitId":"markuslyq"},"content":"        //get the name of the task","lastModifiedDate":"2021-09-06"},{"lineNumber":114,"author":{"gitId":"markuslyq"},"content":"        int slashIndex \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-06"},{"lineNumber":115,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":116,"author":{"gitId":"markuslyq"},"content":"        String taskName \u003d getEventTaskName(input, slashIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":117,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":118,"author":{"gitId":"markuslyq"},"content":"        //get the due date of the task","lastModifiedDate":"2021-09-06"},{"lineNumber":119,"author":{"gitId":"markuslyq"},"content":"        String dueDate \u003d getDueDate(input, slashIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":120,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":121,"author":{"gitId":"markuslyq"},"content":"        //create new Event task","lastModifiedDate":"2021-09-06"},{"lineNumber":122,"author":{"gitId":"markuslyq"},"content":"        tasks[taskCounter] \u003d new Event(taskName, dueDate);","lastModifiedDate":"2021-09-06"},{"lineNumber":123,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":124,"author":{"gitId":"markuslyq"},"content":"        printNewTaskMsg();","lastModifiedDate":"2021-09-06"},{"lineNumber":125,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":126,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":127,"author":{"gitId":"markuslyq"},"content":"    private static String getEventTaskName(String input, int slashIndex) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":128,"author":{"gitId":"markuslyq"},"content":"        final int EVENT_WORD_LENGTH \u003d 6;","lastModifiedDate":"2021-09-06"},{"lineNumber":129,"author":{"gitId":"markuslyq"},"content":"        int taskNameLastIndex \u003d slashIndex - 1; //the last index of the tsak name","lastModifiedDate":"2021-09-06"},{"lineNumber":130,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":131,"author":{"gitId":"markuslyq"},"content":"        //if the slash is not present in the input","lastModifiedDate":"2021-09-06"},{"lineNumber":132,"author":{"gitId":"markuslyq"},"content":"        if (slashIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":133,"author":{"gitId":"markuslyq"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of an event task requires a task name\" + System.lineSeparator()","lastModifiedDate":"2021-09-06"},{"lineNumber":134,"author":{"gitId":"markuslyq"},"content":"                    + \"\\tfollowed by a front slash, and then a specific time after.\" + System.lineSeparator()","lastModifiedDate":"2021-09-06"},{"lineNumber":135,"author":{"gitId":"markuslyq"},"content":"                    + \"\\ti.e. event team project meeting /on 2-10-2019 2-4pm\");","lastModifiedDate":"2021-09-06"},{"lineNumber":136,"author":{"gitId":"markuslyq"},"content":"        } else if (taskNameLastIndex \u003c\u003d EVENT_WORD_LENGTH) { //if the slash exists but the task name is empty","lastModifiedDate":"2021-09-06"},{"lineNumber":137,"author":{"gitId":"markuslyq"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The name of an event task cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":138,"author":{"gitId":"markuslyq"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":139,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":140,"author":{"gitId":"markuslyq"},"content":"        String taskName \u003d input.substring(EVENT_WORD_LENGTH, taskNameLastIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":141,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":142,"author":{"gitId":"markuslyq"},"content":"        //if taskName are just filled with whitespaces","lastModifiedDate":"2021-09-06"},{"lineNumber":143,"author":{"gitId":"markuslyq"},"content":"        if (taskName.replace(\" \", \"\").isEmpty()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":144,"author":{"gitId":"markuslyq"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The name of an event task cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":145,"author":{"gitId":"markuslyq"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":146,"author":{"gitId":"markuslyq"},"content":"        return taskName;","lastModifiedDate":"2021-09-06"},{"lineNumber":147,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":148,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":149,"author":{"gitId":"markuslyq"},"content":"    private static String getDueDate(String input, int slashIndex) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":150,"author":{"gitId":"markuslyq"},"content":"        if (slashIndex + 1 \u003e\u003d input.length()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":151,"author":{"gitId":"markuslyq"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of this task type requires a specific time\");","lastModifiedDate":"2021-09-06"},{"lineNumber":152,"author":{"gitId":"markuslyq"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":153,"author":{"gitId":"markuslyq"},"content":"        return input.substring(slashIndex + 1);","lastModifiedDate":"2021-09-06"},{"lineNumber":154,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":155,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":156,"author":{"gitId":"markuslyq"},"content":"    private static void addDeadlineTask(String input) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":157,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":158,"author":{"gitId":"markuslyq"},"content":"        //get the name of the task","lastModifiedDate":"2021-09-06"},{"lineNumber":159,"author":{"gitId":"markuslyq"},"content":"        int slashIndex \u003d input.indexOf(\u0027/\u0027);","lastModifiedDate":"2021-09-06"},{"lineNumber":160,"author":{"gitId":"markuslyq"},"content":"        String taskName \u003d getDeadlineTaskName(input, slashIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":161,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":162,"author":{"gitId":"markuslyq"},"content":"        //get the due date of the task","lastModifiedDate":"2021-09-06"},{"lineNumber":163,"author":{"gitId":"markuslyq"},"content":"        String dueDate \u003d getDueDate(input, slashIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":164,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":165,"author":{"gitId":"markuslyq"},"content":"        //create new Deadline task","lastModifiedDate":"2021-09-06"},{"lineNumber":166,"author":{"gitId":"markuslyq"},"content":"        tasks[taskCounter] \u003d new Deadline(taskName, dueDate);","lastModifiedDate":"2021-09-06"},{"lineNumber":167,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":168,"author":{"gitId":"markuslyq"},"content":"        printNewTaskMsg();","lastModifiedDate":"2021-09-06"},{"lineNumber":169,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":170,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":171,"author":{"gitId":"markuslyq"},"content":"    private static String getDeadlineTaskName(String input, int slashIndex) throws DukeException {","lastModifiedDate":"2021-09-06"},{"lineNumber":172,"author":{"gitId":"markuslyq"},"content":"        final int DEADLINE_WORD_LENGTH \u003d 9;","lastModifiedDate":"2021-09-06"},{"lineNumber":173,"author":{"gitId":"markuslyq"},"content":"        int taskNameLastIndex \u003d slashIndex - 1; //the last index of the tsak name","lastModifiedDate":"2021-09-06"},{"lineNumber":174,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":175,"author":{"gitId":"markuslyq"},"content":"        //if the slash is not present in the input","lastModifiedDate":"2021-09-06"},{"lineNumber":176,"author":{"gitId":"markuslyq"},"content":"        if (slashIndex \u003d\u003d -1) {","lastModifiedDate":"2021-09-06"},{"lineNumber":177,"author":{"gitId":"markuslyq"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The description of an deadline task requires a task name\" + System.lineSeparator()","lastModifiedDate":"2021-09-06"},{"lineNumber":178,"author":{"gitId":"markuslyq"},"content":"                    + \"\\tfollowed by a front slash, and then a specific date/time after.\" + System.lineSeparator()","lastModifiedDate":"2021-09-06"},{"lineNumber":179,"author":{"gitId":"markuslyq"},"content":"                    + \"\\ti.e. deadline submit report /by 11-10-2019 5pm\");","lastModifiedDate":"2021-09-06"},{"lineNumber":180,"author":{"gitId":"markuslyq"},"content":"        } else if (taskNameLastIndex \u003c\u003d DEADLINE_WORD_LENGTH) { //if the slash exists but the task name is empty","lastModifiedDate":"2021-09-06"},{"lineNumber":181,"author":{"gitId":"markuslyq"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The name of an deadline task cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":182,"author":{"gitId":"markuslyq"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":183,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":184,"author":{"gitId":"markuslyq"},"content":"        String taskName \u003d input.substring(DEADLINE_WORD_LENGTH, taskNameLastIndex);","lastModifiedDate":"2021-09-06"},{"lineNumber":185,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":186,"author":{"gitId":"markuslyq"},"content":"        //if taskName are just filled with whitespaces","lastModifiedDate":"2021-09-06"},{"lineNumber":187,"author":{"gitId":"markuslyq"},"content":"        if (taskName.replace(\" \", \"\").isEmpty()) {","lastModifiedDate":"2021-09-06"},{"lineNumber":188,"author":{"gitId":"markuslyq"},"content":"            throw new DukeException(\"â˜¹ OOPS!!! The name of a deadline task cannot be empty.\");","lastModifiedDate":"2021-09-06"},{"lineNumber":189,"author":{"gitId":"markuslyq"},"content":"        }","lastModifiedDate":"2021-09-06"},{"lineNumber":190,"author":{"gitId":"markuslyq"},"content":"        return taskName;","lastModifiedDate":"2021-09-06"},{"lineNumber":191,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":192,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":193,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":194,"author":{"gitId":"markuslyq"},"content":"    private static String getInput() {","lastModifiedDate":"2021-09-06"},{"lineNumber":195,"author":{"gitId":"markuslyq"},"content":"        String input;","lastModifiedDate":"2021-09-06"},{"lineNumber":196,"author":{"gitId":"markuslyq"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-06"},{"lineNumber":197,"author":{"gitId":"markuslyq"},"content":"        input \u003d scanner.nextLine();","lastModifiedDate":"2021-09-06"},{"lineNumber":198,"author":{"gitId":"markuslyq"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-06"},{"lineNumber":199,"author":{"gitId":"markuslyq"},"content":"        return input;","lastModifiedDate":"2021-09-06"},{"lineNumber":200,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":201,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":202,"author":{"gitId":"markuslyq"},"content":"    private static void printByeMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":203,"author":{"gitId":"markuslyq"},"content":"        System.out.println(\"\\tGoodbye! Hope to see you again soon!\");","lastModifiedDate":"2021-09-06"},{"lineNumber":204,"author":{"gitId":"markuslyq"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-06"},{"lineNumber":205,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":206,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":207,"author":{"gitId":"markuslyq"},"content":"    private static void printHeaderMessage() {","lastModifiedDate":"2021-09-06"},{"lineNumber":208,"author":{"gitId":"markuslyq"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":209,"author":{"gitId":"markuslyq"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":210,"author":{"gitId":"markuslyq"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":211,"author":{"gitId":"markuslyq"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-09-06"},{"lineNumber":212,"author":{"gitId":"markuslyq"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2021-09-06"},{"lineNumber":213,"author":{"gitId":"markuslyq"},"content":"        System.out.println(logo);","lastModifiedDate":"2021-09-06"},{"lineNumber":214,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":215,"author":{"gitId":"markuslyq"},"content":"        System.out.println(\"\\tHey, how are you?\");","lastModifiedDate":"2021-09-06"},{"lineNumber":216,"author":{"gitId":"markuslyq"},"content":"        System.out.println(\"\\tWhat can I do for you today?\");","lastModifiedDate":"2021-09-06"},{"lineNumber":217,"author":{"gitId":"markuslyq"},"content":"        printLineSeparator();","lastModifiedDate":"2021-09-06"},{"lineNumber":218,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":219,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":220,"author":{"gitId":"markuslyq"},"content":"    private static void printLineSeparator() {","lastModifiedDate":"2021-09-06"},{"lineNumber":221,"author":{"gitId":"markuslyq"},"content":"        System.out.println(\"\\t----------------------------------------------------------------------\");","lastModifiedDate":"2021-09-06"},{"lineNumber":222,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":223,"author":{"gitId":"markuslyq"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"markuslyq":223}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslyq"},"content":"package Duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"markuslyq"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"markuslyq"},"content":"    public DukeException (String errorMsg) {","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"markuslyq"},"content":"        super(\"\\t\" + errorMsg + System.lineSeparator()","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"markuslyq"},"content":"        + \"\\t----------------------------------------------------------------------\");","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"markuslyq"},"content":"}","lastModifiedDate":"2021-09-06"}],"authorContributionMap":{"markuslyq":8}},{"path":"src/main/java/Duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslyq"},"content":"package Duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"markuslyq"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"markuslyq"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"markuslyq"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"markuslyq"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"markuslyq"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"markuslyq"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"markuslyq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"markuslyq"},"content":"        //get the preposition used","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"markuslyq"},"content":"        int spaceIndex \u003d by.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"markuslyq"},"content":"        String preposition \u003d by.substring(0, spaceIndex);","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"markuslyq"},"content":"        String dueDate \u003d by.substring(spaceIndex+1);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"markuslyq"},"content":"        //output message","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"markuslyq"},"content":"        return \"[D]\" + super.getStatusIcon() + super.toString() + \" (\" + preposition + \": \" + dueDate + \")\";    }","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"markuslyq"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"markuslyq":22}},{"path":"src/main/java/Duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslyq"},"content":"package Duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"markuslyq"},"content":"public class Event extends Task{","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"markuslyq"},"content":"    protected String by;","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"markuslyq"},"content":"    public Event(String description, String by) {","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"markuslyq"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"markuslyq"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"markuslyq"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"markuslyq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":15,"author":{"gitId":"markuslyq"},"content":"        //get the preposition used","lastModifiedDate":"2021-09-06"},{"lineNumber":16,"author":{"gitId":"markuslyq"},"content":"        int spaceIndex \u003d by.indexOf(\u0027 \u0027);","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"markuslyq"},"content":"        String preposition \u003d by.substring(0, spaceIndex);","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"markuslyq"},"content":"        String dueDate \u003d by.substring(spaceIndex+1);","lastModifiedDate":"2021-08-31"},{"lineNumber":19,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":20,"author":{"gitId":"markuslyq"},"content":"        //output message","lastModifiedDate":"2021-09-06"},{"lineNumber":21,"author":{"gitId":"markuslyq"},"content":"        return \"[E]\" + super.getStatusIcon() + super.toString() + \" (\" + preposition + \": \" + dueDate + \")\";","lastModifiedDate":"2021-08-31"},{"lineNumber":22,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"markuslyq"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"markuslyq":23}},{"path":"src/main/java/Duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslyq"},"content":"package Duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"markuslyq"},"content":"public class Task {","lastModifiedDate":"2021-08-23"},{"lineNumber":4,"author":{"gitId":"markuslyq"},"content":"    protected String description;","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"markuslyq"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-23"},{"lineNumber":6,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":7,"author":{"gitId":"markuslyq"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-23"},{"lineNumber":8,"author":{"gitId":"markuslyq"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-23"},{"lineNumber":9,"author":{"gitId":"markuslyq"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-23"},{"lineNumber":10,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":11,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":12,"author":{"gitId":"markuslyq"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-23"},{"lineNumber":13,"author":{"gitId":"markuslyq"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); // mark done task with X","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":16,"author":{"gitId":"markuslyq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"markuslyq"},"content":"        return description;","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":19,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":20,"author":{"gitId":"markuslyq"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-23"},{"lineNumber":21,"author":{"gitId":"markuslyq"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-23"},{"lineNumber":22,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-08-23"},{"lineNumber":23,"author":{"gitId":"markuslyq"},"content":"}","lastModifiedDate":"2021-08-23"}],"authorContributionMap":{"markuslyq":23}},{"path":"src/main/java/Duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"markuslyq"},"content":"package Duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"markuslyq"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"markuslyq"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"markuslyq"},"content":"        super(description);","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"markuslyq"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"markuslyq"},"content":"    @Override","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"markuslyq"},"content":"    public String toString() {","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"markuslyq"},"content":"        return \"[T]\" + super.getStatusIcon() + super.toString();","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"markuslyq"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"markuslyq"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"markuslyq":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"markuslyq"},"content":"bye","lastModifiedDate":"2021-09-02"}],"authorContributionMap":{"markuslyq":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"markuslyq"},"content":"diff ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"markuslyq":1,"-":33}}]
