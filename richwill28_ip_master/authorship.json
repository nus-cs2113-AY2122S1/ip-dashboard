[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-06"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-06"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"import duke.parser.Parser;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-06"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"public class Duke {","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    private TaskList taskList;","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"    private Ui ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"    private Storage storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"    /** Initializes scanner, storage, task list, and UI. */","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"    public Duke() {","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"        try {","lastModifiedDate":"2021-09-05"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"            taskList \u003d new TaskList(storage.loadData());","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"            ui.printMessage(e.getMessage());","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"            storage.createNewData(ui);","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"    /** Starts the main functionality of Duke. */","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"richwill28"},"content":"    public void startDuke() {","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"richwill28"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"richwill28"},"content":"        while (!isExit) {","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"richwill28"},"content":"            try {","lastModifiedDate":"2021-09-05"},{"lineNumber":35,"author":{"gitId":"richwill28"},"content":"                String userResponse \u003d ui.readUserResponse();","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"richwill28"},"content":"                Command command \u003d Parser.parse(userResponse);","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"richwill28"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"richwill28"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"richwill28"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"richwill28"},"content":"                ui.printMessage(e.getMessage());","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"richwill28"},"content":"            }","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":43,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"richwill28"},"content":"    /** Runs Duke. */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"richwill28"},"content":"    public void run() {","lastModifiedDate":"2021-08-30"},{"lineNumber":47,"author":{"gitId":"richwill28"},"content":"        ui.printGreeting();","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"richwill28"},"content":"        this.startDuke();","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"richwill28"},"content":"        ui.printGoodbye();","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":51,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":52,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-30"},{"lineNumber":53,"author":{"gitId":"richwill28"},"content":"     * Starts an instance of Duke.","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-30"},{"lineNumber":55,"author":{"gitId":"richwill28"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2021-08-30"},{"lineNumber":56,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-30"},{"lineNumber":57,"author":{"gitId":"richwill28"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-30"},{"lineNumber":58,"author":{"gitId":"richwill28"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2021-08-30"},{"lineNumber":59,"author":{"gitId":"richwill28"},"content":"        duke.run();","lastModifiedDate":"2021-08-30"},{"lineNumber":60,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"richwill28":60,"-":1}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.command;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"    private final Task task;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"        taskList.addTask(task);","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"        ui.printTaskAdded(task, taskList.getSize());","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"        storage.saveData(taskList.serialize());","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"richwill28":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.command;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"public abstract class Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"        return false;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"richwill28":16}},{"path":"src/main/java/duke/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.command;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"public enum CommandType {","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"    DEADLINE,","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"    DELETE,","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"    DONE,","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"    EVENT,","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"    EXIT,","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"    INVALID,","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"    LIST,","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"    TODO;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"     * Determines the correct command type from the input parameter.","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"     * @param param The first parameter of a user response.","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"     * @return The command type of the input parameter.","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"    public static CommandType of(String param) {","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"        for (CommandType commandType : CommandType.values()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"            if (param.equalsIgnoreCase(commandType.toString())) {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"                return commandType;","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"        return INVALID;","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"richwill28":27}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.command;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getSize()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_TASK_NUMBER);","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"        taskList.deleteTask(taskNumber - 1);","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"        ui.printTaskDeleted(task, taskList.getSize());","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"        storage.saveData(taskList.serialize());","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"richwill28":30}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.command;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    private final int taskNumber;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"    public DoneCommand(int taskNumber) {","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"        if (taskNumber \u003c\u003d 0 || taskNumber \u003e taskList.getSize()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_TASK_NUMBER);","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"        Task task \u003d taskList.getTask(taskNumber - 1);","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"        taskList.markTaskAsDone(taskNumber - 1);","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"        ui.printTaskMarkedAsDone(task, taskList.getSize());","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"        storage.saveData(taskList.serialize());","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"richwill28":30}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.command;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"    public ExitCommand() {}","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"    public boolean isExit() {","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"        return true;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {}","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"richwill28":17}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.command;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import duke.storage.Storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"    public ListCommand() {}","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"        ui.printTaskList(taskList);","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"richwill28":14}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.exception;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2021-09-05"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"    public DukeException(String message) {","lastModifiedDate":"2021-09-05"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"        super(message);","lastModifiedDate":"2021-09-05"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-05"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-05"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"    public String toString() {","lastModifiedDate":"2021-09-05"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"        return Ui.LINE + Ui.PADDING + getMessage() + System.lineSeparator() + Ui.LINE;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-05"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-05"}],"authorContributionMap":{"richwill28":14}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.parser;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"import duke.command.Command;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import duke.command.CommandType;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"import duke.command.DoneCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"import duke.task.Deadline;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"import duke.task.Event;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"import duke.task.Todo;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"public class Parser {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"    public static CommandType getCommandType(String userReponse) {","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"        String[] params \u003d userReponse.split(\" \", 2);","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"        return CommandType.of(params[0]);","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"     * Parses user response to the corresponding command.","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"     * @param userResponse User response.","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"     * @return The corresponding command.","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"     * @throws DukeException If response is invalid.","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"    public static Command parse(String userResponse) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"        CommandType commandType \u003d getCommandType(userResponse);","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"richwill28"},"content":"        switch (commandType) {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"richwill28"},"content":"        case DEADLINE:","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"richwill28"},"content":"            return parseDeadlineCommand(userResponse);","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"richwill28"},"content":"        case DELETE:","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"richwill28"},"content":"            return parseDeleteCommand(userResponse);","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"richwill28"},"content":"        case DONE:","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"richwill28"},"content":"            return parseDoneCommand(userResponse);","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"richwill28"},"content":"        case EVENT:","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"richwill28"},"content":"            return parseEventCommand(userResponse);","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"richwill28"},"content":"        case EXIT:","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"richwill28"},"content":"            return parseExitCommand(userResponse);","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"richwill28"},"content":"        case LIST:","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"richwill28"},"content":"            return parseListCommand(userResponse);","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"richwill28"},"content":"        case TODO:","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"richwill28"},"content":"            return parseTodoCommand(userResponse);","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"richwill28"},"content":"        case INVALID:","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"richwill28"},"content":"            // Fallthrough","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"richwill28"},"content":"        default:","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"richwill28"},"content":"    private static Command parseDeadlineCommand(String userResponse) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"richwill28"},"content":"        String[] params \u003d userResponse.replace(\"deadline\", \"\").split(\"/by\");","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"richwill28"},"content":"        if (params.length !\u003d 2) {","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"richwill28"},"content":"        String description \u003d params[0].strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"richwill28"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"richwill28"},"content":"        String by \u003d params[1].strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"richwill28"},"content":"        if (by.isBlank()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"richwill28"},"content":"        return new AddCommand(new Deadline(description, by));","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"richwill28"},"content":"    private static Command parseDeleteCommand(String userResponse) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"richwill28"},"content":"        String description \u003d userResponse.replace(\"delete\", \"\").strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"richwill28"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"richwill28"},"content":"            int taskNumber \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"richwill28"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"richwill28"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_NOT_NUMBER);","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"richwill28"},"content":"    private static Command parseDoneCommand(String userResponse) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"richwill28"},"content":"        String description \u003d userResponse.replace(\"done\", \"\").strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"richwill28"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"richwill28"},"content":"            int taskNumber \u003d Integer.parseInt(description);","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"richwill28"},"content":"            return new DoneCommand(taskNumber);","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"richwill28"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_NOT_NUMBER);","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"richwill28"},"content":"    private static Command parseEventCommand(String userResponse) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"richwill28"},"content":"        String[] params \u003d userResponse.replace(\"event\", \"\").split(\"/at\");","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"richwill28"},"content":"        if (params.length !\u003d 2) {","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"richwill28"},"content":"        String description \u003d params[0].strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"richwill28"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"richwill28"},"content":"        String by \u003d params[1].strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"richwill28"},"content":"        if (by.isBlank()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"richwill28"},"content":"        return new AddCommand(new Event(description, by));","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"richwill28"},"content":"    private static Command parseExitCommand(String userResponse) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"richwill28"},"content":"        boolean isValidResponse \u003d userResponse.equals(\"exit\");","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"richwill28"},"content":"        if (!isValidResponse) {","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"richwill28"},"content":"        return new ExitCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"richwill28"},"content":"    private static Command parseListCommand(String userResponse) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"richwill28"},"content":"        boolean isValidResponse \u003d userResponse.equals(\"list\");","lastModifiedDate":"2021-09-23"},{"lineNumber":125,"author":{"gitId":"richwill28"},"content":"        if (!isValidResponse) {","lastModifiedDate":"2021-09-23"},{"lineNumber":126,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":128,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":129,"author":{"gitId":"richwill28"},"content":"        return new ListCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":130,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":131,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":132,"author":{"gitId":"richwill28"},"content":"    private static Command parseTodoCommand(String userResponse) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":133,"author":{"gitId":"richwill28"},"content":"        String description \u003d userResponse.replace(\"todo\", \"\").strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":134,"author":{"gitId":"richwill28"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2021-09-23"},{"lineNumber":135,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_INVALID_COMMAND);","lastModifiedDate":"2021-09-23"},{"lineNumber":136,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":137,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":138,"author":{"gitId":"richwill28"},"content":"        return new AddCommand(new Todo(description));","lastModifiedDate":"2021-09-23"},{"lineNumber":139,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":140,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"richwill28":140}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.storage;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import java.io.File;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"import java.io.FileReader;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"import java.util.List;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"public class Storage {","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"    private static final String ROOT_DIRECTORY \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"    private static final String STORAGE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"    private static final String FILE_NAME \u003d \"duke.txt\";","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"    private static final Path PATH_TO_FILE \u003d Paths.get(ROOT_DIRECTORY, STORAGE_DIRECTORY, FILE_NAME);","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"    public Storage() {}","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"    /** Creates a new data file. */","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"    public void createNewData(Ui ui) {","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"            File file \u003d new File(PATH_TO_FILE.toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"            boolean isDirectoryCreated \u003d file.getParentFile().mkdirs();","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"            boolean isFileCreated \u003d file.createNewFile();","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"richwill28"},"content":"            if (!isDirectoryCreated || !isFileCreated) {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"richwill28"},"content":"                throw new IOException(Message.ERROR_CREATING_FILE);","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"richwill28"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"richwill28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"richwill28"},"content":"            ui.printMessage(Message.ERROR_CREATING_FILE);","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"richwill28"},"content":"     * Loads task data from a saved file.","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"richwill28"},"content":"     * @return Data stored in a list of strings.","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"richwill28"},"content":"     * @throws IOException If an I/O error occurs.","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"richwill28"},"content":"    public List\u003cString\u003e loadData() throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"richwill28"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"richwill28"},"content":"            FileReader fin \u003d new FileReader(PATH_TO_FILE.toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"richwill28"},"content":"            BufferedReader bin \u003d new BufferedReader(fin);","lastModifiedDate":"2021-09-23"},{"lineNumber":50,"author":{"gitId":"richwill28"},"content":"            List\u003cString\u003e data \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"richwill28"},"content":"            String line;","lastModifiedDate":"2021-09-23"},{"lineNumber":52,"author":{"gitId":"richwill28"},"content":"            while ((line \u003d bin.readLine()) !\u003d null) {","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"richwill28"},"content":"                data.add(line);","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"richwill28"},"content":"            }","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"richwill28"},"content":"            bin.close();","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"richwill28"},"content":"            return data;","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"richwill28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"richwill28"},"content":"            throw new IOException(Message.ERROR_RETRIEVING_DATA);","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":60,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"richwill28"},"content":"     * Saves task data to a file.","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"richwill28"},"content":"     * @param data Task data.","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"richwill28"},"content":"    public void saveData(String data) throws IOException {","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"richwill28"},"content":"        try {","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"richwill28"},"content":"            FileWriter fout \u003d new FileWriter(PATH_TO_FILE.toString());","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"richwill28"},"content":"            BufferedWriter bout \u003d new BufferedWriter(fout);","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"richwill28"},"content":"            bout.write(data);","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"richwill28"},"content":"            bout.close();","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"richwill28"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"richwill28"},"content":"            throw new IOException(Message.ERROR_SAVING_DATA);","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"richwill28":77}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"    /** Task deadline. */","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"    protected String by;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"     * Initializes the task description and deadline, and","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"     * sets initial status to \"not done\".","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"     * @param by Task deadline.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"     * Initializes the task description and deadline, and","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"     * sets initial status according to the given parameter.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"     * @param by Task deadline.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"     * @param isDone Initial status.","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"    public Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"richwill28"},"content":"    public String serialize() {","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"richwill28"},"content":"        return \"D\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + by;","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"richwill28"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"richwill28"},"content":"        return \"[\" + DEADLINE + \"]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"richwill28":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"public class Event extends Task {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"    /** Time period of the task. */","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"    protected String at;","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"     * Initializes the task description and deadline, and","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"     * sets initial status to \"not done\".","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"     * @param at Time period of the task.","lastModifiedDate":"2021-08-31"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-08-30"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"     * Initializes the task description and deadline, and","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"     * sets initial status according to the given parameter.","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"     * @param at Time period of the task.","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"     * @param isDone Initial status.","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"    public Event(String description, String at, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"richwill28"},"content":"    public String serialize() {","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"richwill28"},"content":"        return \"E\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + at;","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":38,"author":{"gitId":"richwill28"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":39,"author":{"gitId":"richwill28"},"content":"        return \"[\" + EVENT + \"]\" + super.toString() + \" (at: \" + at + \")\";","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":41,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"richwill28":41}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"import duke.ui.Message;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"public abstract class Task {","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"    protected static final String TODO \u003d \"T\";","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"    protected static final String DEADLINE \u003d \"D\";","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"    protected static final String EVENT \u003d \"E\";","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"    protected String description;","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-24"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"     * Initializes task description and sets the initial","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"     * status to \"not done\".","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-24"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-24"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-24"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-24"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"     * Initializes task description and sets the initial","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"     * status according to the given parameter.","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"     * @param isDone Initial status.","lastModifiedDate":"2021-09-13"},{"lineNumber":31,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":32,"author":{"gitId":"richwill28"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":33,"author":{"gitId":"richwill28"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-09-13"},{"lineNumber":34,"author":{"gitId":"richwill28"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":35,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":36,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"richwill28"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-24"},{"lineNumber":38,"author":{"gitId":"richwill28"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-24"},{"lineNumber":39,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":40,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":41,"author":{"gitId":"richwill28"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-24"},{"lineNumber":42,"author":{"gitId":"richwill28"},"content":"        isDone \u003d true;","lastModifiedDate":"2021-08-24"},{"lineNumber":43,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":44,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-24"},{"lineNumber":45,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-24"},{"lineNumber":46,"author":{"gitId":"richwill28"},"content":"     * Serializes task data.","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"richwill28"},"content":"     * @return Serialied task data.","lastModifiedDate":"2021-09-13"},{"lineNumber":49,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"richwill28"},"content":"    public String serialize() {","lastModifiedDate":"2021-09-13"},{"lineNumber":51,"author":{"gitId":"richwill28"},"content":"        return description;","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":55,"author":{"gitId":"richwill28"},"content":"     * Deserializes a line of string and match it to","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"richwill28"},"content":"     * the suitable task format.","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-24"},{"lineNumber":58,"author":{"gitId":"richwill28"},"content":"     * @param line A line of string.","lastModifiedDate":"2021-09-13"},{"lineNumber":59,"author":{"gitId":"richwill28"},"content":"     * @return The new task after deserialization.","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"richwill28"},"content":"     * @throws DukeException If string is in invalid format.","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-24"},{"lineNumber":62,"author":{"gitId":"richwill28"},"content":"    public static Task deserialize(String line) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"richwill28"},"content":"        try {","lastModifiedDate":"2021-09-13"},{"lineNumber":64,"author":{"gitId":"richwill28"},"content":"            String[] params \u003d line.split(\"\\\\s*[|]\\\\s*\");","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"richwill28"},"content":"            String taskType \u003d params[0];","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"richwill28"},"content":"            String description \u003d params[2];","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"richwill28"},"content":"            boolean isDone;","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"richwill28"},"content":"            switch(params[1]) {","lastModifiedDate":"2021-09-13"},{"lineNumber":70,"author":{"gitId":"richwill28"},"content":"            case \"0\":","lastModifiedDate":"2021-09-13"},{"lineNumber":71,"author":{"gitId":"richwill28"},"content":"                isDone \u003d false;","lastModifiedDate":"2021-09-13"},{"lineNumber":72,"author":{"gitId":"richwill28"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":73,"author":{"gitId":"richwill28"},"content":"            case \"1\":","lastModifiedDate":"2021-09-13"},{"lineNumber":74,"author":{"gitId":"richwill28"},"content":"                isDone \u003d true;","lastModifiedDate":"2021-09-13"},{"lineNumber":75,"author":{"gitId":"richwill28"},"content":"                break;","lastModifiedDate":"2021-09-13"},{"lineNumber":76,"author":{"gitId":"richwill28"},"content":"            default:","lastModifiedDate":"2021-09-13"},{"lineNumber":77,"author":{"gitId":"richwill28"},"content":"                throw new DukeException(Message.ERROR_DESERIALIZING_DATA);","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"richwill28"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":79,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"richwill28"},"content":"            switch (taskType) {","lastModifiedDate":"2021-09-13"},{"lineNumber":81,"author":{"gitId":"richwill28"},"content":"            case TODO:","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"richwill28"},"content":"                return new Todo(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":83,"author":{"gitId":"richwill28"},"content":"            case DEADLINE:","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"richwill28"},"content":"                String by \u003d params[3];","lastModifiedDate":"2021-09-13"},{"lineNumber":85,"author":{"gitId":"richwill28"},"content":"                return new Deadline(description, by, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":86,"author":{"gitId":"richwill28"},"content":"            case EVENT:","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"richwill28"},"content":"                String at \u003d params[3];","lastModifiedDate":"2021-09-13"},{"lineNumber":88,"author":{"gitId":"richwill28"},"content":"                return new Event(description, at, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":89,"author":{"gitId":"richwill28"},"content":"            default:","lastModifiedDate":"2021-09-13"},{"lineNumber":90,"author":{"gitId":"richwill28"},"content":"                throw new DukeException(Message.ERROR_DESERIALIZING_DATA);","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"richwill28"},"content":"            }","lastModifiedDate":"2021-09-13"},{"lineNumber":92,"author":{"gitId":"richwill28"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-13"},{"lineNumber":93,"author":{"gitId":"richwill28"},"content":"            throw new DukeException(Message.ERROR_DESERIALIZING_DATA);","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":95,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":96,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":97,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-08-24"},{"lineNumber":98,"author":{"gitId":"richwill28"},"content":"    public String toString() {","lastModifiedDate":"2021-08-24"},{"lineNumber":99,"author":{"gitId":"richwill28"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2021-08-24"},{"lineNumber":100,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-24"},{"lineNumber":101,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-08-24"}],"authorContributionMap":{"richwill28":101}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-08-30"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"import java.util.List;","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"import duke.ui.Ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"public class TaskList {","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"    public TaskList() {","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"    public TaskList(List\u003cString\u003e data) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"        taskList \u003d deserialize(data);","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-08-30"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"        taskList.add(task);","lastModifiedDate":"2021-08-30"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"    public int getSize() {","lastModifiedDate":"2021-08-30"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"        return taskList.size();","lastModifiedDate":"2021-08-30"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"        return taskList.get(index);","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":32,"author":{"gitId":"richwill28"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"richwill28"},"content":"        taskList.get(index).markAsDone();","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":35,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":36,"author":{"gitId":"richwill28"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2021-09-13"},{"lineNumber":37,"author":{"gitId":"richwill28"},"content":"        taskList.remove(index);","lastModifiedDate":"2021-09-13"},{"lineNumber":38,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":39,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":40,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":41,"author":{"gitId":"richwill28"},"content":"     * Serializes task data.","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":43,"author":{"gitId":"richwill28"},"content":"     * @return Serialied task data.","lastModifiedDate":"2021-09-13"},{"lineNumber":44,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"richwill28"},"content":"    public String serialize() {","lastModifiedDate":"2021-09-13"},{"lineNumber":46,"author":{"gitId":"richwill28"},"content":"        StringBuilder serializedData \u003d new StringBuilder();","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"richwill28"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2021-09-13"},{"lineNumber":48,"author":{"gitId":"richwill28"},"content":"            serializedData.append(task.serialize()).append(System.lineSeparator());","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":50,"author":{"gitId":"richwill28"},"content":"        return serializedData.toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":51,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":52,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":53,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-13"},{"lineNumber":54,"author":{"gitId":"richwill28"},"content":"     * Deserializes stored data and returns a new list.","lastModifiedDate":"2021-09-23"},{"lineNumber":55,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-13"},{"lineNumber":56,"author":{"gitId":"richwill28"},"content":"     * @param data Stored data.","lastModifiedDate":"2021-09-13"},{"lineNumber":57,"author":{"gitId":"richwill28"},"content":"     * @return The new task list after deserialization.","lastModifiedDate":"2021-09-13"},{"lineNumber":58,"author":{"gitId":"richwill28"},"content":"     * @throws DukeException If data is in invalid format.","lastModifiedDate":"2021-09-23"},{"lineNumber":59,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-13"},{"lineNumber":60,"author":{"gitId":"richwill28"},"content":"    public static List\u003cTask\u003e deserialize(List\u003cString\u003e data) throws DukeException {","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"richwill28"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"richwill28"},"content":"        for (String line : data) {","lastModifiedDate":"2021-09-13"},{"lineNumber":63,"author":{"gitId":"richwill28"},"content":"            taskList.add(Task.deserialize(line));","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-09-13"},{"lineNumber":65,"author":{"gitId":"richwill28"},"content":"        return taskList;","lastModifiedDate":"2021-09-13"},{"lineNumber":66,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":67,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":68,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":69,"author":{"gitId":"richwill28"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":70,"author":{"gitId":"richwill28"},"content":"        StringBuilder s \u003d new StringBuilder();","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"richwill28"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2021-08-30"},{"lineNumber":72,"author":{"gitId":"richwill28"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2021-08-30"},{"lineNumber":73,"author":{"gitId":"richwill28"},"content":"            s.append(Ui.PADDING).append(i + 1).append(\". \").append(task).append(System.lineSeparator());","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"richwill28"},"content":"        }","lastModifiedDate":"2021-08-30"},{"lineNumber":75,"author":{"gitId":"richwill28"},"content":"        return s.toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":77,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"richwill28":77}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.task;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"public class Todo extends Task {","lastModifiedDate":"2021-09-04"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"     * Initializes task description and set the initial","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"     * status to \"not done\".","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"     * @param description Task description.","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"        super(description);","lastModifiedDate":"2021-08-30"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-30"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-08-31"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"     * Initializes task description and sets the initial","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"     * status according to the given parameter.","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"     * @param description Task description.","lastModifiedDate":"2021-09-13"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"     * @param isDone Initial status.","lastModifiedDate":"2021-09-13"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-08-31"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2021-09-13"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"        super(description, isDone);","lastModifiedDate":"2021-09-13"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-09-13"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"    public String serialize() {","lastModifiedDate":"2021-09-13"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"        return \"T\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2021-09-13"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-13"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-13"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"    @Override","lastModifiedDate":"2021-08-30"},{"lineNumber":31,"author":{"gitId":"richwill28"},"content":"    public String toString() {","lastModifiedDate":"2021-08-30"},{"lineNumber":32,"author":{"gitId":"richwill28"},"content":"        return \"[\" + TODO + \"]\" + super.toString();","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-30"},{"lineNumber":34,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"richwill28":34}},{"path":"src/main/java/duke/ui/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.ui;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"public abstract class Message {","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"    public static final String EXPRESSION_BLUSH \u003d \"(//ω//)\";","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"    public static final String EXPRESSION_JOY \u003d \"(≧▽≦)\";","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"    public static final String EXPRESSION_SORRY \u003d \"(\u003e﹏\u003c) Gomennasai!\";","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"    public static final String ERROR_CREATING_FILE \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"            EXPRESSION_SORRY + \" I can\u0027t create a new file.\";","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"    public static final String ERROR_DESERIALIZING_DATA \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"            EXPRESSION_SORRY + \" The data is in invalid format. I can\u0027t deserialize it.\";","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"    public static final String ERROR_INVALID_COMMAND \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"            EXPRESSION_SORRY + \" I don\u0027t understand your command.\";","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"    public static final String ERROR_NOT_NUMBER \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"            EXPRESSION_SORRY + \" I can\u0027t convert it to a number.\";","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"    public static final String ERROR_RETRIEVING_DATA \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"            EXPRESSION_SORRY + \" I can\u0027t retrieve any data. Creating new file..\";","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"    public static final String ERROR_SAVING_DATA \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"            EXPRESSION_SORRY + \" Something went wrong. I can\u0027t save the data.\";","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"    public static final String ERROR_TASK_NUMBER \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"            EXPRESSION_SORRY + \" The task number is invalid.\";","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"richwill28":30}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"package duke.ui;","lastModifiedDate":"2021-09-06"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-06"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"import duke.task.Task;","lastModifiedDate":"2021-09-23"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"import duke.task.TaskList;","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"public class Ui {","lastModifiedDate":"2021-09-04"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"    public static final String LINE \u003d","lastModifiedDate":"2021-09-04"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"            \"    ____________________________________________________________\" + System.lineSeparator();","lastModifiedDate":"2021-09-04"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"    public static final String PADDING \u003d \"     \";","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"    public static final String LOGO \u003d","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"              PADDING + \"MMMMMMMMMMMMMMMMMMMMNmd+h/....`.omohMMMMMMMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMMMMNs.    `-`  `  `.  -sNMMMMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMMMN-  ` ` ...`.-````   `:oMMMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMN/   ` -+hmNNNNNNdh+.```  yMMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMN   `/mMMMNmNNNNMNNNNy:`  .hMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMh..-sNNMMNN+mNNNMMNNMNNd/ `NMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMM:`.mNNMMmNs.+NMNNMNNNNNNNmmMMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMm`hNNNMd/N-..yNmNNdNNNNNNNmMMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMMdNNNNm-+o....N+yN+oNNNNMNNMMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMMNNNNN:.+-....--.:yyodNNmdNMMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMMNNMNN.+oo-.....-ydN+hNNo-NNMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMMNMMMo+-yNN......-yo.yNN/:NNMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMMMMMM/..-o+`.........:dm+NMmMMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMMNNMMo:.............::hMNMMmNMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":29,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMMMNNMMhy............+:NMNdMNmMMMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":30,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMMMyohMMMNNm+.........-hmMMNNh-/mdMMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":31,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMmo-.`oNMNNMMMs:--..--/NmNMNy`    hMMMMMMMMMMMM\" + System.lineSeparator()","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"richwill28"},"content":"            + PADDING + \"MMMMMMMMMMMMN++o`.NNydNNy::::/:...ohNMs`    .hMMMMMMMMMMMM\" + System.lineSeparator();","lastModifiedDate":"2021-09-23"},{"lineNumber":33,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"richwill28"},"content":"    private final Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":36,"author":{"gitId":"richwill28"},"content":"    /** Reads user response. */","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"richwill28"},"content":"    public String readUserResponse() {","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"richwill28"},"content":"        return sc.nextLine().strip();","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"richwill28"},"content":"    /** Displays logo and greet user */","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"richwill28"},"content":"    public void printGreeting() {","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"richwill28"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":44,"author":{"gitId":"richwill28"},"content":"        System.out.println(LOGO);","lastModifiedDate":"2021-08-31"},{"lineNumber":45,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"richwill28"},"content":"                + \"Konnichiwa! I\u0027m your personal maid. Call me Maid-chan! \"","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"richwill28"},"content":"                + Message.EXPRESSION_BLUSH);","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"What can I do for you?\");","lastModifiedDate":"2021-08-31"},{"lineNumber":49,"author":{"gitId":"richwill28"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":50,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":51,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":52,"author":{"gitId":"richwill28"},"content":"    /** Displays goodbye message to user. */","lastModifiedDate":"2021-09-23"},{"lineNumber":53,"author":{"gitId":"richwill28"},"content":"    public void printGoodbye() {","lastModifiedDate":"2021-09-23"},{"lineNumber":54,"author":{"gitId":"richwill28"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-04"},{"lineNumber":55,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING","lastModifiedDate":"2021-09-23"},{"lineNumber":56,"author":{"gitId":"richwill28"},"content":"                + \"Bye ❤ Hope to see you again soon! \"","lastModifiedDate":"2021-09-23"},{"lineNumber":57,"author":{"gitId":"richwill28"},"content":"                + Message.EXPRESSION_JOY);","lastModifiedDate":"2021-09-23"},{"lineNumber":58,"author":{"gitId":"richwill28"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-08-31"},{"lineNumber":59,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-08-31"},{"lineNumber":60,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":61,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":62,"author":{"gitId":"richwill28"},"content":"     * Displays Message to user.","lastModifiedDate":"2021-09-23"},{"lineNumber":63,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":64,"author":{"gitId":"richwill28"},"content":"     * @param message Message.","lastModifiedDate":"2021-09-23"},{"lineNumber":65,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":66,"author":{"gitId":"richwill28"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2021-09-23"},{"lineNumber":67,"author":{"gitId":"richwill28"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":68,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + message);","lastModifiedDate":"2021-09-23"},{"lineNumber":69,"author":{"gitId":"richwill28"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":70,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":71,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":72,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":73,"author":{"gitId":"richwill28"},"content":"     * Displays to user the task added.","lastModifiedDate":"2021-09-23"},{"lineNumber":74,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":75,"author":{"gitId":"richwill28"},"content":"     * @param task The task added.","lastModifiedDate":"2021-09-23"},{"lineNumber":76,"author":{"gitId":"richwill28"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":77,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":78,"author":{"gitId":"richwill28"},"content":"    public void printTaskAdded(Task task, int size) {","lastModifiedDate":"2021-09-23"},{"lineNumber":79,"author":{"gitId":"richwill28"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":80,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"Noted. I\u0027ve added this task:\");","lastModifiedDate":"2021-09-23"},{"lineNumber":81,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"  \" + task);","lastModifiedDate":"2021-09-23"},{"lineNumber":82,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":83,"author":{"gitId":"richwill28"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":84,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":85,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":86,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":87,"author":{"gitId":"richwill28"},"content":"     * Displays to user the task deleted.","lastModifiedDate":"2021-09-23"},{"lineNumber":88,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":89,"author":{"gitId":"richwill28"},"content":"     * @param task The task deleted.","lastModifiedDate":"2021-09-23"},{"lineNumber":90,"author":{"gitId":"richwill28"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":91,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":92,"author":{"gitId":"richwill28"},"content":"    public void printTaskDeleted(Task task, int size) {","lastModifiedDate":"2021-09-23"},{"lineNumber":93,"author":{"gitId":"richwill28"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":94,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-23"},{"lineNumber":95,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"  \" + task);","lastModifiedDate":"2021-09-23"},{"lineNumber":96,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2021-09-23"},{"lineNumber":97,"author":{"gitId":"richwill28"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":98,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":99,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":100,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":101,"author":{"gitId":"richwill28"},"content":"     * Displays to user the task marked as done.","lastModifiedDate":"2021-09-23"},{"lineNumber":102,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":103,"author":{"gitId":"richwill28"},"content":"     * @param task The task marked as done.","lastModifiedDate":"2021-09-23"},{"lineNumber":104,"author":{"gitId":"richwill28"},"content":"     * @param size The size of the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":105,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":106,"author":{"gitId":"richwill28"},"content":"    public void printTaskMarkedAsDone(Task task, int size) {","lastModifiedDate":"2021-09-23"},{"lineNumber":107,"author":{"gitId":"richwill28"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":108,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"Good job! I\u0027ve marked this task as done:\");","lastModifiedDate":"2021-09-23"},{"lineNumber":109,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"  \" + task);","lastModifiedDate":"2021-09-23"},{"lineNumber":110,"author":{"gitId":"richwill28"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":111,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"richwill28"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"richwill28"},"content":"    /**","lastModifiedDate":"2021-09-23"},{"lineNumber":114,"author":{"gitId":"richwill28"},"content":"     * Displays to user the task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":115,"author":{"gitId":"richwill28"},"content":"     *","lastModifiedDate":"2021-09-23"},{"lineNumber":116,"author":{"gitId":"richwill28"},"content":"     * @param taskList The task list.","lastModifiedDate":"2021-09-23"},{"lineNumber":117,"author":{"gitId":"richwill28"},"content":"     */","lastModifiedDate":"2021-09-23"},{"lineNumber":118,"author":{"gitId":"richwill28"},"content":"    public void printTaskList(TaskList taskList) {","lastModifiedDate":"2021-09-23"},{"lineNumber":119,"author":{"gitId":"richwill28"},"content":"        System.out.print(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":120,"author":{"gitId":"richwill28"},"content":"        System.out.println(PADDING + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-09-23"},{"lineNumber":121,"author":{"gitId":"richwill28"},"content":"        System.out.print(taskList);","lastModifiedDate":"2021-09-23"},{"lineNumber":122,"author":{"gitId":"richwill28"},"content":"        System.out.println(LINE);","lastModifiedDate":"2021-09-23"},{"lineNumber":123,"author":{"gitId":"richwill28"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":124,"author":{"gitId":"richwill28"},"content":"}","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"richwill28":124}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"richwill28"},"content":"todo buy pen","lastModifiedDate":"2021-09-13"},{"lineNumber":2,"author":{"gitId":"richwill28"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":3,"author":{"gitId":"richwill28"},"content":"deadline watch movie /by Sunday","lastModifiedDate":"2021-09-13"},{"lineNumber":4,"author":{"gitId":"richwill28"},"content":"done 7","lastModifiedDate":"2021-09-13"},{"lineNumber":5,"author":{"gitId":"richwill28"},"content":"event shopping /at Mon 2-4pm","lastModifiedDate":"2021-09-13"},{"lineNumber":6,"author":{"gitId":"richwill28"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":7,"author":{"gitId":"richwill28"},"content":"done 5","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"richwill28"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2021-08-30"},{"lineNumber":9,"author":{"gitId":"richwill28"},"content":"done 3","lastModifiedDate":"2021-09-13"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"list","lastModifiedDate":"2021-08-30"},{"lineNumber":11,"author":{"gitId":"richwill28"},"content":"todo","lastModifiedDate":"2021-09-04"},{"lineNumber":12,"author":{"gitId":"richwill28"},"content":"blah","lastModifiedDate":"2021-09-04"},{"lineNumber":13,"author":{"gitId":"richwill28"},"content":"delete 3","lastModifiedDate":"2021-09-13"},{"lineNumber":14,"author":{"gitId":"richwill28"},"content":"delete 7","lastModifiedDate":"2021-09-13"},{"lineNumber":15,"author":{"gitId":"richwill28"},"content":"list","lastModifiedDate":"2021-09-13"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"bye","lastModifiedDate":"2021-08-30"}],"authorContributionMap":{"richwill28":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"richwill28"},"content":"javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"richwill28"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"richwill28":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"richwill28"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2021-09-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"richwill28"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2021-09-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"richwill28":2,"-":36}}]
