[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"# Duke User Guide","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"Duke is a **desktop app for managing tasks, optimized for use via a Command Line Interface (CLI)**. It is especially","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"efficient if you can type fast, and can be even faster than traditional Graphical User Interface (GUI) ","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"task managing apps.","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"## Quick Start","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"1. Ensure that you have `Java 11` or above installed in your computer.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"2. Download the latest `Duke.jar` from [here](https://github.com/BryanElmer/ip/releases/download/A-Release/Duke.jar).","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"3. Copy the jar file to the folder where you want to run Duke in.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"4. Open your terminal app and make sure that you are in the same working directory as your duke file.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"5. At the folder where you saved the jar file, run the command `java -jar Duke.jar` in your terminal app.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"6. In the case where Duke runs successfully, you should see the following output.","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"    ____        _        ","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"        Hello! I\u0027m Duke","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"        What can I do for you?","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"7. Type your command in the blank line under the horizontal separator and press Enter to execute.  ","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"    (Ex. typing `list` and pressing Enter will display your current task list.)","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"8. Refer to the features section below for details on each command.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"BryanElmer"},"content":"### Notes about the command format:","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"BryanElmer"},"content":"- Words in `UPPER-CASE` are parameters to be filled by the user. Here is a list of common parameters that will be used:","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"BryanElmer"},"content":"    - `TASK_NAME` represents the name of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"BryanElmer"},"content":"    - `DATE_TIME` represents the date and time to be specified by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"BryanElmer"},"content":"      - This parameter has to be in this format: `yyyy-mm-dd hh:mm`.","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"BryanElmer"},"content":"      - For example: `2021-10-01 16:35` which is equivalent to `10 Oct 2021 16:35`.","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"BryanElmer"},"content":"    - `INDEX` represents the index of the task in the task list.  ","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"BryanElmer"},"content":"        - For example: index **1** corresponds to the **first task** in the task list, ","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"BryanElmer"},"content":"          index **3** corresponds to the **third task**.","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"BryanElmer"},"content":"    - `KEYWORD` represents the keyword to be specified by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"BryanElmer"},"content":"    - `TASK_TYPE_CHAR` represents the type of task.","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"BryanElmer"},"content":"        - `T` represents a `Todo` task.","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"BryanElmer"},"content":"        - `D` represents a `Deadline` task.","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"BryanElmer"},"content":"        - `E` represents an `Event` task.","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"BryanElmer"},"content":"    - `STATUS_MARKER_INT` represents the completion status of the task in the data text file.","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"BryanElmer"},"content":"        - `0` represents an **undone** task.","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"BryanElmer"},"content":"        - `1` represents a **done** task.","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"BryanElmer"},"content":"- Items with `...` after them can be used more than once.","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"BryanElmer"},"content":"    - For example: `done INDEX...` means `done 1 2 3` is a valid command.","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"BryanElmer"},"content":"### Feature List:","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"BryanElmer"},"content":"- [Adding Todo Task: `todo`](#todo---adding-a-todo-task)","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"BryanElmer"},"content":"- [Adding Deadline Task: `deadline`](#deadline---adding-a-deadline-task)","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"BryanElmer"},"content":"- [Adding Event Task: `event`](#event---adding-an-event-task)","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"BryanElmer"},"content":"- [Listing all tasks: `list`](#list---listing-all-tasks)  ","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"BryanElmer"},"content":"- [Setting tasks as done: `done`](#done---setting-tasks-as-done)","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"BryanElmer"},"content":"- [Finding tasks by keyword: `find`](#find---finding-tasks-by-keyword)","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"BryanElmer"},"content":"- [Deleting tasks: `delete`](#delete---deleting-tasks)","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"BryanElmer"},"content":"- [Exiting the program: `bye`](#bye---exiting-the-program)","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"BryanElmer"},"content":"- [Saving the data](#saving-the-data)","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"BryanElmer"},"content":"- [Editing the data text file](#editing-the-data-text-file)","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"BryanElmer"},"content":"## `todo` - Adding a Todo Task","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"BryanElmer"},"content":"Adds a task of type `Todo` into your task list.  ","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"BryanElmer"},"content":"Format: `todo TASK_NAME`","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"BryanElmer"},"content":"Example of usage: `todo read book`","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"BryanElmer"},"content":"When added successfully, you should see the following message:","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"BryanElmer"},"content":"        Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"BryanElmer"},"content":"            [T][ ] read book","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"BryanElmer"},"content":"        Now you have 1 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"BryanElmer"},"content":"## `deadline` - Adding a Deadline Task","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"BryanElmer"},"content":"Adds a task of type `Deadline` into your task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"BryanElmer"},"content":"Format: `deadline TASK_NAME /by DATE_TIME`","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"BryanElmer"},"content":"Example of usage: `deadline return book /by 2021-10-01 18:00`","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"BryanElmer"},"content":"When added successfully, you should see the following message:","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"BryanElmer"},"content":"        Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"BryanElmer"},"content":"            [D][ ] return book (by: 01 Oct 2021 18:00)","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"BryanElmer"},"content":"        Now you have 2 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"BryanElmer"},"content":"***Note: `DATETIME` has to follow the specified format.***","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"BryanElmer"},"content":"## `event` - Adding an Event Task","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"BryanElmer"},"content":"Adds a task of type `Event` into your task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":114,"author":{"gitId":"BryanElmer"},"content":"Format: `event TASK_NAME /at DATE_TIME`","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":116,"author":{"gitId":"BryanElmer"},"content":"Example of usage: `event meeting /at 2021-10-02 16:35`","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"BryanElmer"},"content":"When added successfully, you should see the following message:","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"BryanElmer"},"content":"        Got it. I\u0027ve added this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"BryanElmer"},"content":"            [E][ ] meeting (at: 02 Oct 2021 16:35)","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"BryanElmer"},"content":"        Now you have 3 tasks in the list.","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"BryanElmer"},"content":"***Note: `DATETIME` has to follow the specified format.***","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"BryanElmer"},"content":"## `list` - Listing all tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":132,"author":{"gitId":"BryanElmer"},"content":"Lists all the tasks in your current task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"BryanElmer"},"content":"Format: `list`","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2019-07-29"},{"lineNumber":136,"author":{"gitId":"BryanElmer"},"content":"Example of usage: `list`","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"BryanElmer"},"content":"When successful, you should see the following message:","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2019-07-29"},{"lineNumber":140,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"BryanElmer"},"content":"        Here are the tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":143,"author":{"gitId":"BryanElmer"},"content":"        1. [T][ ] read book","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"BryanElmer"},"content":"        2. [D][ ] return book (by: 01 Oct 2021 18:00)","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"BryanElmer"},"content":"        3. [E][ ] meeting (at: 02 Oct 2021 16:35)","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"BryanElmer"},"content":"***Note: The tasks displayed in this example may be different than the one you have.***","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"BryanElmer"},"content":"## `done` - Setting tasks as done","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"BryanElmer"},"content":"Set status of indexes of tasks specified as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"BryanElmer"},"content":"Format: `done INDEX...`","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"BryanElmer"},"content":"Example of usage: `done 1 2`","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"BryanElmer"},"content":"When successful, you should see the following message:","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":162,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"BryanElmer"},"content":"        Nice! I\u0027ve marked these tasks as done:","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"BryanElmer"},"content":"            [T][X] read book","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"BryanElmer"},"content":"            [D][X] return book (by: 01 Oct 2021 18:00)","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":168,"author":{"gitId":"BryanElmer"},"content":"***Note: The tasks displayed in this example may be different from the ones you have.***  ","lastModifiedDate":"2021-09-30"},{"lineNumber":169,"author":{"gitId":"BryanElmer"},"content":"***Note: At least one index must be specified to run this command.***","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":171,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"BryanElmer"},"content":"## `find` - Finding tasks by keyword","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"BryanElmer"},"content":"Finds and displays all the tasks having the keyword in their names.","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"BryanElmer"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":178,"author":{"gitId":"BryanElmer"},"content":"Example of usage: `find book`","lastModifiedDate":"2021-09-30"},{"lineNumber":179,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"BryanElmer"},"content":"When successful, you should see the following message:","lastModifiedDate":"2021-09-30"},{"lineNumber":181,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"BryanElmer"},"content":"        Here are the matching tasks in your list:","lastModifiedDate":"2021-09-30"},{"lineNumber":184,"author":{"gitId":"BryanElmer"},"content":"        1. [T][X] read book","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"BryanElmer"},"content":"        1. [D][X] return book (by: 01 Oct 2021 18:00)","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":187,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":189,"author":{"gitId":"BryanElmer"},"content":"***Note: The keyword parameter cannot be empty.***","lastModifiedDate":"2021-09-30"},{"lineNumber":190,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":191,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":193,"author":{"gitId":"BryanElmer"},"content":"## `delete` - Deleting tasks","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"BryanElmer"},"content":"Delete indexes of tasks specified by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":196,"author":{"gitId":"BryanElmer"},"content":"Format: `delete INDEX...`","lastModifiedDate":"2021-09-30"},{"lineNumber":197,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":198,"author":{"gitId":"BryanElmer"},"content":"Example of usage: `delete 1 2`","lastModifiedDate":"2021-09-30"},{"lineNumber":199,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":200,"author":{"gitId":"BryanElmer"},"content":"When successful, you should see the following message:","lastModifiedDate":"2021-09-30"},{"lineNumber":201,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":202,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":203,"author":{"gitId":"BryanElmer"},"content":"        Noted. I\u0027ve removed this task:","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"BryanElmer"},"content":"            [T][X] read book","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"BryanElmer"},"content":"            [D][X] return book (by: 01 Oct 2021 18:00)","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"BryanElmer"},"content":"        Now you have 1 tasks in your list.","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":209,"author":{"gitId":"BryanElmer"},"content":"***Note: The tasks displayed in this example may be different from the ones you have.***","lastModifiedDate":"2021-09-30"},{"lineNumber":210,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":211,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":212,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":213,"author":{"gitId":"BryanElmer"},"content":"## `bye` - Exiting the program","lastModifiedDate":"2021-09-30"},{"lineNumber":214,"author":{"gitId":"BryanElmer"},"content":"Exits the program.","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":216,"author":{"gitId":"BryanElmer"},"content":"Format: `bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":218,"author":{"gitId":"BryanElmer"},"content":"Example of usage: `bye`","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"BryanElmer"},"content":"  ","lastModifiedDate":"2021-09-30"},{"lineNumber":220,"author":{"gitId":"BryanElmer"},"content":"When successful, you should see the following message:","lastModifiedDate":"2021-09-30"},{"lineNumber":221,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":222,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":223,"author":{"gitId":"BryanElmer"},"content":"        Bye. Hope to see you again soon!","lastModifiedDate":"2021-09-30"},{"lineNumber":224,"author":{"gitId":"BryanElmer"},"content":"    ____________________________________________________________","lastModifiedDate":"2021-09-30"},{"lineNumber":225,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":226,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":229,"author":{"gitId":"BryanElmer"},"content":"## Saving the data","lastModifiedDate":"2021-09-30"},{"lineNumber":230,"author":{"gitId":"BryanElmer"},"content":"Duke saves all the task data into a text file automatically after any command performed.  ","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"BryanElmer"},"content":"There is no need to save data manually.","lastModifiedDate":"2021-09-30"},{"lineNumber":232,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":233,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"},{"lineNumber":234,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":235,"author":{"gitId":"BryanElmer"},"content":"## Editing the data text file","lastModifiedDate":"2021-09-30"},{"lineNumber":236,"author":{"gitId":"BryanElmer"},"content":"Duke saves the task data into a text file `JAR_FILE_LOCATION/data/savedTasks.txt`. Although not recommended, you can","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"BryanElmer"},"content":"manually change the data in the text file.  ","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":239,"author":{"gitId":"BryanElmer"},"content":"Be sure to follow this exact formatting:  ","lastModifiedDate":"2021-09-30"},{"lineNumber":240,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":242,"author":{"gitId":"BryanElmer"},"content":"[TASK_TYPE_CHAR] | [STATUS_MARKER_INT] | TASK_NAME | DATE_TIME","lastModifiedDate":"2021-09-30"},{"lineNumber":243,"author":{"gitId":"BryanElmer"},"content":"```","lastModifiedDate":"2021-09-30"},{"lineNumber":244,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":245,"author":{"gitId":"BryanElmer"},"content":"***Note: If Duke is unable to run due to issues with text file, you must delete the data text file manually.***","lastModifiedDate":"2021-09-30"},{"lineNumber":246,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":247,"author":{"gitId":"BryanElmer"},"content":"---","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"BryanElmer":224,"-":23}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"import duke.Error.DukeException;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.Command;","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.ExitCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.DisplayManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"import duke.Storage.FileManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.Parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"    private final FileManager fileManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"    private final DisplayManager displayManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"    private final TaskManager taskManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"    private final Parser parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"    private final Scanner in;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"     * Initialise essential components for the program to function.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"     * @param filePath String containing the file path to save task data.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"        displayManager \u003d new DisplayManager();","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"        fileManager \u003d new FileManager(filePath);","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"        taskManager \u003d new TaskManager();","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"        try {","lastModifiedDate":"2021-09-07"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"            fileManager.load(taskManager, parser);","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"BryanElmer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"            displayManager.printErrorLoadingData();","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-07"},{"lineNumber":36,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":37,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"BryanElmer"},"content":"     * Runs the program until stated by user otherwise.","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"BryanElmer"},"content":"     * Waits for a user input and processes it.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"BryanElmer"},"content":"    public void run() {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"BryanElmer"},"content":"        displayManager.printStartGreet();","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"BryanElmer"},"content":"        String fullCommand;","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"BryanElmer"},"content":"        fullCommand \u003d in.nextLine().toLowerCase();","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"BryanElmer"},"content":"        while (true) {","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"BryanElmer"},"content":"            try {","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"BryanElmer"},"content":"                Command command \u003d parser.parse(taskManager, parser, fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"BryanElmer"},"content":"                if (command !\u003d null) {","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"BryanElmer"},"content":"                    command.execute();","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"BryanElmer"},"content":"                }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BryanElmer"},"content":"                if (command instanceof ExitCommand) {","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"BryanElmer"},"content":"                    break;","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"BryanElmer"},"content":"                }","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"BryanElmer"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2021-09-07"},{"lineNumber":56,"author":{"gitId":"BryanElmer"},"content":"                DisplayManager.printHorizontalSeparator();","lastModifiedDate":"2021-09-07"},{"lineNumber":57,"author":{"gitId":"BryanElmer"},"content":"                System.out.println(e);","lastModifiedDate":"2021-09-07"},{"lineNumber":58,"author":{"gitId":"BryanElmer"},"content":"                DisplayManager.printHorizontalSeparator();","lastModifiedDate":"2021-09-07"},{"lineNumber":59,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-07"},{"lineNumber":60,"author":{"gitId":"BryanElmer"},"content":"            fullCommand \u003d in.nextLine().toLowerCase();","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-25"},{"lineNumber":62,"author":{"gitId":"BryanElmer"},"content":"        displayManager.printEndGreet();","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":64,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2021-08-29"},{"lineNumber":66,"author":{"gitId":"BryanElmer"},"content":"        new Duke(\"data/savedTasks.txt\").run();","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"BryanElmer":64,"-":4}},{"path":"src/main/java/duke/Error/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.Error;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.DisplayManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":" * Class responsible for errors related to Duke.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2021-09-07"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"     * Creates a DukeException object and sets the error message.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"     * @param errorMessage String containing the error message to display.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2021-09-07"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"        super(errorMessage);","lastModifiedDate":"2021-09-07"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"    @Override","lastModifiedDate":"2021-09-07"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"    public String toString() {","lastModifiedDate":"2021-09-07"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"        return DisplayManager.DISPLAY_MESSAGE_INDENT + \"☹ OOPS!!! \" + getMessage();","lastModifiedDate":"2021-09-07"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-07"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-07"}],"authorContributionMap":{"BryanElmer":22}},{"path":"src/main/java/duke/Storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.Storage;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.Parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":"import java.io.File;","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"import java.io.FileWriter;","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"import java.util.Scanner;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":" * Class responsible for reading and writing into the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"public class FileManager {","lastModifiedDate":"2021-09-14"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"    public String fileDirectory;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"    public static String filePath;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"    public static final int INDEX_TYPE \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"    public static final int INDEX_STATUS \u003d 1;","lastModifiedDate":"2021-09-14"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"    public static final int INDEX_DESCRIPTION \u003d 2;","lastModifiedDate":"2021-09-14"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"    public static final int INDEX_DATETIME \u003d 3;","lastModifiedDate":"2021-09-14"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"     * Creates FileManager object and initialises filePath and fileDirectory.","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"     * @param filePath String containing the file path of the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"    public FileManager(String filePath) {","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"        FileManager.filePath \u003d filePath;","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"        String[] fileComponents \u003d filePath.split(\"/\");","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"BryanElmer"},"content":"        this.fileDirectory \u003d fileComponents[0];","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new directory and file when application is used for the first time.","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"BryanElmer"},"content":"     * Scans through the storage file and loads all the tasks into the taskManager.","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object for task operations.","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"BryanElmer"},"content":"     * @param parser Parser object for parsing operations.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"BryanElmer"},"content":"     * @throws IOException Error object when doing reading or writing operations in files.","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"BryanElmer"},"content":"    public void load(TaskManager taskManager, Parser parser) throws IOException{","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"BryanElmer"},"content":"        File dataDirectory \u003d new File(fileDirectory);","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"BryanElmer"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"BryanElmer"},"content":"        if (!dataDirectory.exists()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"BryanElmer"},"content":"            dataDirectory.mkdir();","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"BryanElmer"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2021-09-14"},{"lineNumber":50,"author":{"gitId":"BryanElmer"},"content":"            return;","lastModifiedDate":"2021-09-14"},{"lineNumber":51,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":52,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":53,"author":{"gitId":"BryanElmer"},"content":"        Scanner fileScanner \u003d new Scanner(dataFile);","lastModifiedDate":"2021-09-14"},{"lineNumber":54,"author":{"gitId":"BryanElmer"},"content":"        while (fileScanner.hasNext()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"BryanElmer"},"content":"            String data \u003d fileScanner.nextLine();","lastModifiedDate":"2021-09-14"},{"lineNumber":56,"author":{"gitId":"BryanElmer"},"content":"            String[] dataComponents \u003d data.split(\"\\\\|\");","lastModifiedDate":"2021-09-14"},{"lineNumber":57,"author":{"gitId":"BryanElmer"},"content":"            addSavedTask(taskManager, parser, dataComponents);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"BryanElmer"},"content":"     * Creates and adds all types of tasks that were saved in the storage file into the taskManager","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"BryanElmer"},"content":"     * by constructing a user input corresponding to the saved task.","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object for task operations.","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"BryanElmer"},"content":"     * @param parser Parser object for parsing operations.","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"BryanElmer"},"content":"     * @param dataComponents Array of strings containing the details of the saved task.","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"BryanElmer"},"content":"    public static void addSavedTask(TaskManager taskManager, Parser parser, String[] dataComponents) {","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"BryanElmer"},"content":"        String dataTaskType \u003d dataComponents[INDEX_TYPE];","lastModifiedDate":"2021-09-14"},{"lineNumber":70,"author":{"gitId":"BryanElmer"},"content":"        String taskInfo;","lastModifiedDate":"2021-09-14"},{"lineNumber":71,"author":{"gitId":"BryanElmer"},"content":"        boolean taskStatus \u003d dataComponents[INDEX_STATUS].trim().equals(\"1\");","lastModifiedDate":"2021-09-14"},{"lineNumber":72,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":73,"author":{"gitId":"BryanElmer"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":74,"author":{"gitId":"BryanElmer"},"content":"        for (String dataComponent : dataComponents) {","lastModifiedDate":"2021-09-14"},{"lineNumber":75,"author":{"gitId":"BryanElmer"},"content":"            dataComponents[i] \u003d dataComponent.trim();","lastModifiedDate":"2021-09-14"},{"lineNumber":76,"author":{"gitId":"BryanElmer"},"content":"            i++;","lastModifiedDate":"2021-09-14"},{"lineNumber":77,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"BryanElmer"},"content":"        switch (dataTaskType.trim()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":79,"author":{"gitId":"BryanElmer"},"content":"        case \"T\":","lastModifiedDate":"2021-09-14"},{"lineNumber":80,"author":{"gitId":"BryanElmer"},"content":"            taskInfo \u003d dataComponents[INDEX_DESCRIPTION];","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"BryanElmer"},"content":"            taskManager.addSavedToDo(taskInfo, taskStatus);","lastModifiedDate":"2021-09-14"},{"lineNumber":82,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":83,"author":{"gitId":"BryanElmer"},"content":"        case \"D\":","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"BryanElmer"},"content":"            taskInfo \u003d dataComponents[INDEX_DESCRIPTION] + \" /by \" + dataComponents[INDEX_DATETIME];","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"BryanElmer"},"content":"            taskManager.addSavedDeadline(parser, taskInfo, taskStatus);","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"BryanElmer"},"content":"        case \"E\":","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"BryanElmer"},"content":"            taskInfo \u003d dataComponents[INDEX_DESCRIPTION] + \" /at \" + dataComponents[INDEX_DATETIME];","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"BryanElmer"},"content":"            taskManager.addSavedEvent(parser, taskInfo, taskStatus);","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":91,"author":{"gitId":"BryanElmer"},"content":"        default:","lastModifiedDate":"2021-09-14"},{"lineNumber":92,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-14"},{"lineNumber":93,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":94,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":95,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":96,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"BryanElmer"},"content":"     * Updates the storage file to the latest task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"BryanElmer"},"content":"     * @param tasks ArrayList containing all the tasks in the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"BryanElmer"},"content":"     * @throws IOException Error object when doing reading or writing operations in files.","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"BryanElmer"},"content":"    public static void updateFile(ArrayList\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"BryanElmer"},"content":"        FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"BryanElmer"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-09-14"},{"lineNumber":104,"author":{"gitId":"BryanElmer"},"content":"            String data \u003d task.toDataFormat();","lastModifiedDate":"2021-09-14"},{"lineNumber":105,"author":{"gitId":"BryanElmer"},"content":"            fileWriter.write(data);","lastModifiedDate":"2021-09-14"},{"lineNumber":106,"author":{"gitId":"BryanElmer"},"content":"            fileWriter.write(System.lineSeparator());","lastModifiedDate":"2021-09-14"},{"lineNumber":107,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"BryanElmer"},"content":"        fileWriter.close();","lastModifiedDate":"2021-09-14"},{"lineNumber":109,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":110,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-14"}],"authorContributionMap":{"BryanElmer":110}},{"path":"src/main/java/duke/TaskList/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.task.Deadline;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.task.Event;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.task.ToDo;","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.DisplayManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"import duke.Storage.FileManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.Parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"import java.io.IOException;","lastModifiedDate":"2021-09-14"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"import java.util.List;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":" * Class responsible for managing and storing all types of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"public class TaskManager {","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"    public static final String STATUS_DONE \u003d \"X\";","lastModifiedDate":"2021-08-29"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"    public static boolean hasInvalidIndex \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"    private final int INDEX_DESCRIPTION \u003d 0;","lastModifiedDate":"2021-08-31"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"    private final int INDEX_DATETIME \u003d 1;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"    public static int getTaskCount() {","lastModifiedDate":"2021-08-29"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"        return tasks.size();","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new \u0027ToDo\u0027 type task and adds it into the list of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"BryanElmer"},"content":"     * Displays a message to the user upon completion.","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo String containing the description of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"BryanElmer"},"content":"    public void addToDoTask(String taskInfo) {","lastModifiedDate":"2021-08-29"},{"lineNumber":41,"author":{"gitId":"BryanElmer"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":42,"author":{"gitId":"BryanElmer"},"content":"            Task newTask \u003d new ToDo(taskInfo);","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"BryanElmer"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":44,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printCreateTask(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"BryanElmer"},"content":"            FileManager.updateFile(tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":46,"author":{"gitId":"BryanElmer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":47,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printErrorFileUpdate();","lastModifiedDate":"2021-09-14"},{"lineNumber":48,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":49,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new \u0027Deadline\u0027 type task and adds it into the list of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"BryanElmer"},"content":"     * Displays a message to the user upon completion.","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"BryanElmer"},"content":"     * @param parser Parser object used for parsing operations.","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo String containing the description and dateTime of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"BryanElmer"},"content":"    public void addDeadlineTask(Parser parser, String taskInfo) {","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"BryanElmer"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":59,"author":{"gitId":"BryanElmer"},"content":"            String[] taskComponents \u003d parser.splitTaskComponents(taskInfo);","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"BryanElmer"},"content":"            String dateTimeFormat \u003d parser.parseDateTime(taskComponents[INDEX_DATETIME]);","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"BryanElmer"},"content":"            Task newTask \u003d new Deadline(taskComponents[INDEX_DESCRIPTION], dateTimeFormat);","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"BryanElmer"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":63,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printCreateTask(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":64,"author":{"gitId":"BryanElmer"},"content":"            FileManager.updateFile(tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":65,"author":{"gitId":"BryanElmer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":66,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printErrorFileUpdate();","lastModifiedDate":"2021-09-14"},{"lineNumber":67,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":68,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new \u0027Event\u0027 type task and adds it into the list of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"BryanElmer"},"content":"     * Displays a message to the user upon completion.","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"BryanElmer"},"content":"     * @param parser Parser object used for parsing operations.","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo String containing the description and dateTime of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"BryanElmer"},"content":"    public void addEventTask(Parser parser, String taskInfo) {","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"BryanElmer"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":78,"author":{"gitId":"BryanElmer"},"content":"            String[] taskComponents \u003d parser.splitTaskComponents(taskInfo);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"BryanElmer"},"content":"            String dateTimeFormat \u003d parser.parseDateTime(taskComponents[INDEX_DATETIME]);","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"BryanElmer"},"content":"            Task newTask \u003d new Event(taskComponents[INDEX_DESCRIPTION], dateTimeFormat);","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"BryanElmer"},"content":"            tasks.add(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":82,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printCreateTask(newTask);","lastModifiedDate":"2021-09-12"},{"lineNumber":83,"author":{"gitId":"BryanElmer"},"content":"            FileManager.updateFile(tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":84,"author":{"gitId":"BryanElmer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":85,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printErrorFileUpdate();","lastModifiedDate":"2021-09-14"},{"lineNumber":86,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":87,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":88,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new \u0027Todo\u0027 type task and adds it into the list of tasks when loading tasks from storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"BryanElmer"},"content":"     * Updates the status of task according to the information from the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo String containing the details of the saved task.","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"BryanElmer"},"content":"     * @param isTaskDone Boolean value for task completed status.","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"BryanElmer"},"content":"    public void addSavedToDo(String taskInfo, boolean isTaskDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"BryanElmer"},"content":"        Task savedTask \u003d new ToDo(taskInfo);","lastModifiedDate":"2021-09-14"},{"lineNumber":97,"author":{"gitId":"BryanElmer"},"content":"        tasks.add(savedTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":98,"author":{"gitId":"BryanElmer"},"content":"        if (isTaskDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":99,"author":{"gitId":"BryanElmer"},"content":"            tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":100,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":101,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":102,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":103,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new \u0027Deadline\u0027 type task and adds it into the list of tasks when loading tasks from storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"BryanElmer"},"content":"     * Updates the status of task according to the information from the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":106,"author":{"gitId":"BryanElmer"},"content":"     * @param parser Parser object used for parsing operations.","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo String containing the details of the saved task.","lastModifiedDate":"2021-09-30"},{"lineNumber":108,"author":{"gitId":"BryanElmer"},"content":"     * @param isTaskDone Boolean value for task completed status.","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"BryanElmer"},"content":"    public void addSavedDeadline(Parser parser, String taskInfo, boolean isTaskDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"BryanElmer"},"content":"        String[] taskComponents \u003d parser.splitTaskComponents(taskInfo);","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"BryanElmer"},"content":"        Task savedTask \u003d new Deadline(taskComponents[INDEX_DESCRIPTION], taskComponents[INDEX_DATETIME]);","lastModifiedDate":"2021-09-14"},{"lineNumber":113,"author":{"gitId":"BryanElmer"},"content":"        tasks.add(savedTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":114,"author":{"gitId":"BryanElmer"},"content":"        if (isTaskDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"BryanElmer"},"content":"            tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":116,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":117,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":118,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":119,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new \u0027Event\u0027 type task and adds it into the list of tasks when loading from storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"BryanElmer"},"content":"     * Updates the status of the task according to the information from the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"BryanElmer"},"content":"     * @param parser Parser object used for parsing operations.","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo String containing the details of the saved task.","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"BryanElmer"},"content":"     * @param isTaskDone Boolean value for task completed status.","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"BryanElmer"},"content":"    public void addSavedEvent(Parser parser, String taskInfo, boolean isTaskDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"BryanElmer"},"content":"        String[] taskComponents \u003d parser.splitTaskComponents(taskInfo);","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"BryanElmer"},"content":"        Task savedTask \u003d new Event(taskComponents[INDEX_DESCRIPTION], taskComponents[INDEX_DATETIME]);","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"BryanElmer"},"content":"        tasks.add(savedTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"BryanElmer"},"content":"        if (isTaskDone) {","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"BryanElmer"},"content":"            tasks.get(tasks.size() - 1).markAsDone();","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":134,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":135,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"BryanElmer"},"content":"     * Searches the task list and prints out all tasks that have the keyword in their names.","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"BryanElmer"},"content":"     * @param keyword String containing the keyword being searched.","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"BryanElmer"},"content":"    public void findTask(String keyword) {","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"BryanElmer"},"content":"        List\u003cTask\u003e queryResults \u003d tasks.stream()","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"BryanElmer"},"content":"                .filter((task) -\u003e task.getDescription().contains(keyword))","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"BryanElmer"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"BryanElmer"},"content":"        DisplayManager.printFindResult(queryResults);","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"BryanElmer"},"content":"     * Filters out and returns the indexes of tasks that are out of range of the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"BryanElmer"},"content":"     * @param indexes Array of integers containing the indexes of tasks taken in consideration.","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"BryanElmer"},"content":"     * @return Array of integers containing indexes that are out of range.","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"BryanElmer"},"content":"    private int[] filterOutOfRangeIndexes(int[] indexes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"BryanElmer"},"content":"        int[] outOfRangeIndexes \u003d new int[indexes.length];","lastModifiedDate":"2021-08-29"},{"lineNumber":154,"author":{"gitId":"BryanElmer"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":155,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":156,"author":{"gitId":"BryanElmer"},"content":"        for (int index : indexes) {","lastModifiedDate":"2021-08-29"},{"lineNumber":157,"author":{"gitId":"BryanElmer"},"content":"            if (index - 1 \u003e\u003d tasks.size()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":158,"author":{"gitId":"BryanElmer"},"content":"                outOfRangeIndexes[count] \u003d index;","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"BryanElmer"},"content":"                count++;","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"BryanElmer"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":164,"author":{"gitId":"BryanElmer"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":166,"author":{"gitId":"BryanElmer"},"content":"        return Arrays.copyOf(outOfRangeIndexes, count);","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":170,"author":{"gitId":"BryanElmer"},"content":"     * Filters out and returns the indexes of tasks that are valid in the task list when setting tasks as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":171,"author":{"gitId":"BryanElmer"},"content":"     * @param indexes Array of integers containing the indexes of tasks taken in consideration.","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"BryanElmer"},"content":"     * @return Array of integers containing the indexes of tasks that are valid to set as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":174,"author":{"gitId":"BryanElmer"},"content":"    private int[] filterValidIndexes(int[] indexes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":175,"author":{"gitId":"BryanElmer"},"content":"        int[] validIndexes \u003d new int[indexes.length];","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"BryanElmer"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":177,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"BryanElmer"},"content":"        for (int index : indexes) {","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"BryanElmer"},"content":"            if (!(index - 1 \u003e\u003d tasks.size()) \u0026\u0026 !(tasks.get(index - 1).getStatusIcon().equals(STATUS_DONE))) {","lastModifiedDate":"2021-09-14"},{"lineNumber":180,"author":{"gitId":"BryanElmer"},"content":"                validIndexes[count] \u003d index;","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"BryanElmer"},"content":"                count++;","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":183,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":184,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":185,"author":{"gitId":"BryanElmer"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":186,"author":{"gitId":"BryanElmer"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":187,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":188,"author":{"gitId":"BryanElmer"},"content":"        return Arrays.copyOf(validIndexes, count);","lastModifiedDate":"2021-08-29"},{"lineNumber":189,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":190,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":191,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"BryanElmer"},"content":"     * Filters out and returns the indexes of tasks that are valid in the task list when deleting tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":193,"author":{"gitId":"BryanElmer"},"content":"     * @param indexes Array of integers containing the indexes of tasks taken in consideration.","lastModifiedDate":"2021-09-30"},{"lineNumber":194,"author":{"gitId":"BryanElmer"},"content":"     * @return Array of integers containing the indexes of tasks that are valid to delete.","lastModifiedDate":"2021-09-30"},{"lineNumber":195,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":196,"author":{"gitId":"BryanElmer"},"content":"    private int[] filterValidDeleteIndexes(int[] indexes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":197,"author":{"gitId":"BryanElmer"},"content":"        int[] validIndexes \u003d new int[indexes.length];","lastModifiedDate":"2021-09-14"},{"lineNumber":198,"author":{"gitId":"BryanElmer"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":199,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":200,"author":{"gitId":"BryanElmer"},"content":"        for (int index : indexes) {","lastModifiedDate":"2021-09-14"},{"lineNumber":201,"author":{"gitId":"BryanElmer"},"content":"            if (!(index - 1\u003e\u003d tasks.size()) ) {","lastModifiedDate":"2021-09-14"},{"lineNumber":202,"author":{"gitId":"BryanElmer"},"content":"                validIndexes[count] \u003d index;","lastModifiedDate":"2021-09-14"},{"lineNumber":203,"author":{"gitId":"BryanElmer"},"content":"                count++;","lastModifiedDate":"2021-09-14"},{"lineNumber":204,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":205,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":206,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":207,"author":{"gitId":"BryanElmer"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":208,"author":{"gitId":"BryanElmer"},"content":"            return null;","lastModifiedDate":"2021-09-14"},{"lineNumber":209,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":210,"author":{"gitId":"BryanElmer"},"content":"        return Arrays.copyOf(validIndexes, count);","lastModifiedDate":"2021-09-14"},{"lineNumber":211,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":212,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":213,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":214,"author":{"gitId":"BryanElmer"},"content":"     * Filters out and returns the indexes of tasks that are done.","lastModifiedDate":"2021-09-30"},{"lineNumber":215,"author":{"gitId":"BryanElmer"},"content":"     * @param indexes Array of integers containing the indexes of tasks taken in consideration.","lastModifiedDate":"2021-09-30"},{"lineNumber":216,"author":{"gitId":"BryanElmer"},"content":"     * @return Array of integers containing the indexes of tasks that have been done.","lastModifiedDate":"2021-09-30"},{"lineNumber":217,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":218,"author":{"gitId":"BryanElmer"},"content":"    private int[] filterDoneIndexes(int[] indexes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":219,"author":{"gitId":"BryanElmer"},"content":"        int[] doneIndexes \u003d new int[indexes.length];","lastModifiedDate":"2021-08-29"},{"lineNumber":220,"author":{"gitId":"BryanElmer"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":221,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":222,"author":{"gitId":"BryanElmer"},"content":"        for (int index : indexes) {","lastModifiedDate":"2021-08-29"},{"lineNumber":223,"author":{"gitId":"BryanElmer"},"content":"            if (!(index - 1 \u003e\u003d tasks.size()) \u0026\u0026 tasks.get(index - 1).getStatusIcon().equals(STATUS_DONE)) {","lastModifiedDate":"2021-09-14"},{"lineNumber":224,"author":{"gitId":"BryanElmer"},"content":"                doneIndexes[count] \u003d index;","lastModifiedDate":"2021-08-29"},{"lineNumber":225,"author":{"gitId":"BryanElmer"},"content":"                count++;","lastModifiedDate":"2021-08-29"},{"lineNumber":226,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":227,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":228,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":229,"author":{"gitId":"BryanElmer"},"content":"        if (count \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":230,"author":{"gitId":"BryanElmer"},"content":"            return null;","lastModifiedDate":"2021-08-29"},{"lineNumber":231,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":232,"author":{"gitId":"BryanElmer"},"content":"        return Arrays.copyOf(doneIndexes, count);","lastModifiedDate":"2021-08-29"},{"lineNumber":233,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":234,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":235,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":236,"author":{"gitId":"BryanElmer"},"content":"     * Filters indexes of tasks from the input that are out of range, valid, and done,","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"BryanElmer"},"content":"     * then marks all tasks with valid indexes as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"BryanElmer"},"content":"     * Displays to the users the tasks that are set as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":239,"author":{"gitId":"BryanElmer"},"content":"     * Displays to the users the indexes of tasks that are out of range.","lastModifiedDate":"2021-09-30"},{"lineNumber":240,"author":{"gitId":"BryanElmer"},"content":"     * Displays to the users the indexes of tasks that have been done before.","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo String containing the indexes of tasks to be set as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":242,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":243,"author":{"gitId":"BryanElmer"},"content":"    public void setAsDone(String taskInfo) {","lastModifiedDate":"2021-08-29"},{"lineNumber":244,"author":{"gitId":"BryanElmer"},"content":"        int[] indexes \u003d filterIndexes(taskInfo);","lastModifiedDate":"2021-08-29"},{"lineNumber":245,"author":{"gitId":"BryanElmer"},"content":"        int[] outOfRangeIndexes \u003d filterOutOfRangeIndexes(indexes);","lastModifiedDate":"2021-08-29"},{"lineNumber":246,"author":{"gitId":"BryanElmer"},"content":"        int[] validIndexes \u003d filterValidIndexes(indexes);","lastModifiedDate":"2021-08-29"},{"lineNumber":247,"author":{"gitId":"BryanElmer"},"content":"        int[] doneIndexes \u003d filterDoneIndexes(indexes);","lastModifiedDate":"2021-08-29"},{"lineNumber":248,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":249,"author":{"gitId":"BryanElmer"},"content":"        if (validIndexes !\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":250,"author":{"gitId":"BryanElmer"},"content":"            for (int validIndex : validIndexes) {","lastModifiedDate":"2021-08-29"},{"lineNumber":251,"author":{"gitId":"BryanElmer"},"content":"                tasks.get(validIndex - 1).markAsDone();","lastModifiedDate":"2021-09-12"},{"lineNumber":252,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":253,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":254,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":255,"author":{"gitId":"BryanElmer"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":256,"author":{"gitId":"BryanElmer"},"content":"            FileManager.updateFile(tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":257,"author":{"gitId":"BryanElmer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":258,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printErrorMarkDoneUpdate();","lastModifiedDate":"2021-09-14"},{"lineNumber":259,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":260,"author":{"gitId":"BryanElmer"},"content":"        DisplayManager.printSetAsDoneResult(tasks, outOfRangeIndexes, validIndexes, doneIndexes);","lastModifiedDate":"2021-08-29"},{"lineNumber":261,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":262,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":263,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":264,"author":{"gitId":"BryanElmer"},"content":"     * Filters indexes of tasks from the input that are out of range, and valid,","lastModifiedDate":"2021-09-30"},{"lineNumber":265,"author":{"gitId":"BryanElmer"},"content":"     * then deletes all the tasks with the valid indexes.","lastModifiedDate":"2021-09-30"},{"lineNumber":266,"author":{"gitId":"BryanElmer"},"content":"     * Displays to the users the tasks that are successfully deleted.","lastModifiedDate":"2021-09-30"},{"lineNumber":267,"author":{"gitId":"BryanElmer"},"content":"     * Displays to the users the indexes of tasks that are out of range.","lastModifiedDate":"2021-09-30"},{"lineNumber":268,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo String containing the indexes of tasks to be deleted.","lastModifiedDate":"2021-09-30"},{"lineNumber":269,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":270,"author":{"gitId":"BryanElmer"},"content":"    public void deleteTask(String taskInfo) {","lastModifiedDate":"2021-09-12"},{"lineNumber":271,"author":{"gitId":"BryanElmer"},"content":"        int[] indexes \u003d filterIndexes(taskInfo);","lastModifiedDate":"2021-09-12"},{"lineNumber":272,"author":{"gitId":"BryanElmer"},"content":"        int[] outOfRangeIndexes \u003d filterOutOfRangeIndexes(indexes);","lastModifiedDate":"2021-09-12"},{"lineNumber":273,"author":{"gitId":"BryanElmer"},"content":"        int[] validIndexes \u003d filterValidDeleteIndexes(indexes);","lastModifiedDate":"2021-09-14"},{"lineNumber":274,"author":{"gitId":"BryanElmer"},"content":"        ArrayList\u003cTask\u003e deletedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-12"},{"lineNumber":275,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":276,"author":{"gitId":"BryanElmer"},"content":"        if (validIndexes !\u003d null) {","lastModifiedDate":"2021-09-12"},{"lineNumber":277,"author":{"gitId":"BryanElmer"},"content":"            for (int validIndex : validIndexes) {","lastModifiedDate":"2021-09-12"},{"lineNumber":278,"author":{"gitId":"BryanElmer"},"content":"                deletedTasks.add(tasks.get(validIndex - 1));","lastModifiedDate":"2021-09-12"},{"lineNumber":279,"author":{"gitId":"BryanElmer"},"content":"                tasks.set(validIndex - 1, null);","lastModifiedDate":"2021-09-12"},{"lineNumber":280,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-12"},{"lineNumber":281,"author":{"gitId":"BryanElmer"},"content":"            tasks.removeIf(Objects::isNull);","lastModifiedDate":"2021-09-14"},{"lineNumber":282,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-12"},{"lineNumber":283,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":284,"author":{"gitId":"BryanElmer"},"content":"        try {","lastModifiedDate":"2021-09-14"},{"lineNumber":285,"author":{"gitId":"BryanElmer"},"content":"            FileManager.updateFile(tasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":286,"author":{"gitId":"BryanElmer"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-09-14"},{"lineNumber":287,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printErrorDeleteUpdate();","lastModifiedDate":"2021-09-14"},{"lineNumber":288,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":289,"author":{"gitId":"BryanElmer"},"content":"        DisplayManager.printDeleteTasksResult(deletedTasks, outOfRangeIndexes, tasks.size());","lastModifiedDate":"2021-09-12"},{"lineNumber":290,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-12"},{"lineNumber":291,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":292,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":293,"author":{"gitId":"BryanElmer"},"content":"     * Retrieves and displays all the tasks in the current task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":294,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":295,"author":{"gitId":"BryanElmer"},"content":"    public void getAndPrintTaskList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":296,"author":{"gitId":"BryanElmer"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":297,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printErrorList();","lastModifiedDate":"2021-08-29"},{"lineNumber":298,"author":{"gitId":"BryanElmer"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":299,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printMultipleTasks(tasks);","lastModifiedDate":"2021-09-12"},{"lineNumber":300,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":301,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":302,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":303,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":304,"author":{"gitId":"BryanElmer"},"content":"     * Splits the input string into elements and filters out those that are numbers from those","lastModifiedDate":"2021-09-30"},{"lineNumber":305,"author":{"gitId":"BryanElmer"},"content":"     * that are not.","lastModifiedDate":"2021-09-30"},{"lineNumber":306,"author":{"gitId":"BryanElmer"},"content":"     * Displays the elements that are non-integer.","lastModifiedDate":"2021-09-30"},{"lineNumber":307,"author":{"gitId":"BryanElmer"},"content":"     * Returns an array of integers containing integer indexes.","lastModifiedDate":"2021-09-30"},{"lineNumber":308,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo String from user input containing all possible indexes.","lastModifiedDate":"2021-09-30"},{"lineNumber":309,"author":{"gitId":"BryanElmer"},"content":"     * @return Array of integers containing integer indexes.","lastModifiedDate":"2021-09-30"},{"lineNumber":310,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":311,"author":{"gitId":"BryanElmer"},"content":"    private static int[] filterIndexes(String taskInfo) {","lastModifiedDate":"2021-09-30"},{"lineNumber":312,"author":{"gitId":"BryanElmer"},"content":"        String[] inputs \u003d taskInfo.split(\" \");","lastModifiedDate":"2021-08-29"},{"lineNumber":313,"author":{"gitId":"BryanElmer"},"content":"        int[] indexes \u003d new int[inputs.length];","lastModifiedDate":"2021-08-29"},{"lineNumber":314,"author":{"gitId":"BryanElmer"},"content":"        int indexCount \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":315,"author":{"gitId":"BryanElmer"},"content":"        String[] invalidIndexes \u003d new String[inputs.length];","lastModifiedDate":"2021-08-29"},{"lineNumber":316,"author":{"gitId":"BryanElmer"},"content":"        int invalidCount \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":317,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":318,"author":{"gitId":"BryanElmer"},"content":"        for (String input : inputs) {","lastModifiedDate":"2021-08-29"},{"lineNumber":319,"author":{"gitId":"BryanElmer"},"content":"            try {","lastModifiedDate":"2021-08-29"},{"lineNumber":320,"author":{"gitId":"BryanElmer"},"content":"                int index \u003d Integer.parseInt(input);","lastModifiedDate":"2021-08-29"},{"lineNumber":321,"author":{"gitId":"BryanElmer"},"content":"                indexes[indexCount] \u003d index;","lastModifiedDate":"2021-08-29"},{"lineNumber":322,"author":{"gitId":"BryanElmer"},"content":"                indexCount++;","lastModifiedDate":"2021-08-29"},{"lineNumber":323,"author":{"gitId":"BryanElmer"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-08-29"},{"lineNumber":324,"author":{"gitId":"BryanElmer"},"content":"                invalidIndexes[invalidCount] \u003d input;","lastModifiedDate":"2021-08-29"},{"lineNumber":325,"author":{"gitId":"BryanElmer"},"content":"                invalidCount++;","lastModifiedDate":"2021-08-29"},{"lineNumber":326,"author":{"gitId":"BryanElmer"},"content":"                hasInvalidIndex \u003d true;","lastModifiedDate":"2021-08-29"},{"lineNumber":327,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-08-29"},{"lineNumber":328,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":329,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":330,"author":{"gitId":"BryanElmer"},"content":"        if (invalidCount !\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":331,"author":{"gitId":"BryanElmer"},"content":"            DisplayManager.printErrorIndex(invalidIndexes, invalidCount);","lastModifiedDate":"2021-08-29"},{"lineNumber":332,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":333,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":334,"author":{"gitId":"BryanElmer"},"content":"        return Arrays.copyOf(indexes, indexCount);","lastModifiedDate":"2021-08-29"},{"lineNumber":335,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":336,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BryanElmer":336}},{"path":"src/main/java/duke/TaskList/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":" * Base parent of all command classes.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"public class Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"    protected TaskManager taskManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"     * Creates a Command object and sets taskManager object.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"    public Command(TaskManager taskManager) {","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"        this.taskManager \u003d taskManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"    public void execute() {}","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BryanElmer":20}},{"path":"src/main/java/duke/TaskList/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.Parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" * Class responsible for adding \u0027Deadline\u0027 type task.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"    protected Parser parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"    protected String component;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new DeadlineTask object, sets TaskManager and Parser object, and command component.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object used to perform operations.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"     * @param parser Parser object used to perform parsing operations.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"     * @param component String containing details of deadline task to add.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"    public DeadlineCommand(TaskManager taskManager, Parser parser, String component) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"        super(taskManager);","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"        this.component \u003d component;","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"     * Creates and adds a new deadline to the list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"    public void execute() {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"        taskManager.addDeadlineTask(parser, component);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BryanElmer":32}},{"path":"src/main/java/duke/TaskList/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":" * Class responsible for deleting tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"    protected String component;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     * Creates a delete command object and sets TaskManager object and command components.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object used to perform operations.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"     * @param component String containing indexes of tasks to be deleted.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"    public DeleteCommand(TaskManager taskManager, String component) {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"        super(taskManager);","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"        this.component \u003d component;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"     * Deletes tasks listed.","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"    public void execute() {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"        taskManager.deleteTask(component);","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BryanElmer":29}},{"path":"src/main/java/duke/TaskList/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.Parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" * Class responsible to add \u0027Event\u0027 type task.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"    protected Parser parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"    protected String component;","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"     * Creates a EventCommand object, sets TaskManager object and command components.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object used to perform operations.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"     * @param parser Parser object used to perform parsing operations.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"     * @param component String containing details of event to add.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"    public EventCommand(TaskManager taskManager, Parser parser, String component) {","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"        super(taskManager);","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"        this.parser \u003d parser;","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"        this.component \u003d component;","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"     * Creates and adds a new event to the list of tasks.","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"    public void execute() {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"        taskManager.addEventTask(parser, component);","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BryanElmer":32}},{"path":"src/main/java/duke/TaskList/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.command;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":" * Class responsible to exit the program.","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"     * Creates an ExitCommand object.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"    public ExitCommand() {","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"        super(null);","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"BryanElmer":14}},{"path":"src/main/java/duke/TaskList/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.command;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":"    protected String component;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"     * Creates a FindCommand object, sets TaskManager object and command component.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object used to do task operations.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"     * @param component String containing keyword for searching.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"    public FindCommand(TaskManager taskManager, String component) {","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"        super(taskManager);","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"        this.component \u003d component;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"     * Finds and prints all the tasks that contain the keyword used.","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"    public void execute() {","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"        taskManager.findTask(component);","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"BryanElmer":26}},{"path":"src/main/java/duke/TaskList/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.command;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":" * Class responsible to display the list of all tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"     * Creates a ListCommand object and sets the TaskManager object.","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object used to perform task operations.","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"    public ListCommand(TaskManager taskManager) {","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"        super(taskManager);","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"     * Prints the latest version of the task list.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"    public void execute() {","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"        taskManager.getAndPrintTaskList();","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"BryanElmer":24}},{"path":"src/main/java/duke/TaskList/command/SetDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":" * Class responsible to set tasks as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"public class SetDoneCommand extends Command{","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"    protected String component;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     * Creates a SetDoneCommand object, sets TaskManager object and command components.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object used to perform operations.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"     * @param component String containing indexes of tasks to be set as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"    public SetDoneCommand(TaskManager taskManager, String component) {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"        super(taskManager);","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"        this.component \u003d component;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"     * Set tasks listed as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"    public void execute() {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"        taskManager.setAsDone(component);","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BryanElmer":28}},{"path":"src/main/java/duke/TaskList/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.command;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":" * Class responsible to add \u0027ToDo\u0027 type task.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"    protected String component;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     * Created a ToDoCommand object, sets TaskManager object and command components.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object used to perform operations.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"     * @param component String containing details of todo task to add.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"    public ToDoCommand(TaskManager taskManager, String component) {","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"        super(taskManager);","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"        this.component \u003d component;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"     * Creates a todo task.","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"    public void execute() {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"        taskManager.addToDoTask(component);","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BryanElmer":28}},{"path":"src/main/java/duke/TaskList/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.DisplayManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":" * Class of task with type \u0027Deadline\u0027.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"public class Deadline extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"    private String dateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new \u0027Deadline\u0027 type task, sets the description and dateTime of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"     * @param description String of task name.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"     * @param dateTime String of deadline of task.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"    public Deadline(String description, String dateTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"        this.taskType \u003d \"D\";","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns the format used to display the task to the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"     * @return String data used for displaying to user.","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"        return DisplayManager.createListBox(this.taskType, this.getStatusIcon()) + \" \" + super.toString() + \" (by: \" + this.dateTime + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns the format used in the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"BryanElmer"},"content":"     * @return String data used in storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"BryanElmer"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"BryanElmer"},"content":"        return super.toDataFormat() + \" | \" + this.dateTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BryanElmer":38}},{"path":"src/main/java/duke/TaskList/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.DisplayManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":" * Class of task with type \u0027Event\u0027.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"public class Event extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"    private String dateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new \u0027Event\u0027 type task, sets the description and dateTime of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"     * @param description String of task name.","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"     * @param dateTime String containing time or date of event.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"    public Event(String description, String dateTime) {","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"        this.taskType \u003d \"E\";","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns the format used to display the task to the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"     * @return String data used for displaying to user.","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"        return DisplayManager.createListBox(this.taskType, this.getStatusIcon()) + \" \" + super.toString() + \" (at: \" + this.dateTime + \")\";","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns the format used in the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"BryanElmer"},"content":"     * @return String data used in storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"BryanElmer"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"BryanElmer"},"content":"        return super.toDataFormat() + \" | \" + this.dateTime;","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BryanElmer":38}},{"path":"src/main/java/duke/TaskList/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":" * Base class for all types of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"public class Task {","lastModifiedDate":"2021-08-22"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"    protected String description;","lastModifiedDate":"2021-08-22"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"    protected boolean isDone;","lastModifiedDate":"2021-08-22"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"    protected String taskType \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new Task object, sets the task name, done status to false, and task type as empty by default.","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"     * @param description","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"    public Task(String description) {","lastModifiedDate":"2021-08-22"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-08-22"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-08-22"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"        this.taskType \u003d \"\";","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"     * Returns the completion status of the task; X if done, otherwise blank.","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"     * @return String marker for the completion status of a task.","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-08-22"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"        return (this.isDone ? \"X\" : \" \");","lastModifiedDate":"2021-08-22"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"    public String getDescription() {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"BryanElmer"},"content":"        return this.description;","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"BryanElmer"},"content":"    public String getTaskType() {","lastModifiedDate":"2021-09-14"},{"lineNumber":37,"author":{"gitId":"BryanElmer"},"content":"        return this.taskType;","lastModifiedDate":"2021-09-14"},{"lineNumber":38,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":39,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-22"},{"lineNumber":40,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"BryanElmer"},"content":"     * Marks a task as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"BryanElmer"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-08-22"},{"lineNumber":44,"author":{"gitId":"BryanElmer"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-08-22"},{"lineNumber":45,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-22"},{"lineNumber":46,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":47,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns the format used to display the task to the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"BryanElmer"},"content":"     * @return String data used for displaying to user.","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"BryanElmer"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BryanElmer"},"content":"        return this.description;","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":54,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":55,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns the format used in the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"BryanElmer"},"content":"     * @return String data used in storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"BryanElmer"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-09-14"},{"lineNumber":60,"author":{"gitId":"BryanElmer"},"content":"        return this.taskType + \" | \" + (getStatusIcon().equals(TaskManager.STATUS_DONE) ? \"1\" : \"0\")","lastModifiedDate":"2021-09-14"},{"lineNumber":61,"author":{"gitId":"BryanElmer"},"content":"                + \" | \" + this.description;","lastModifiedDate":"2021-09-14"},{"lineNumber":62,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":63,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-08-22"}],"authorContributionMap":{"BryanElmer":63}},{"path":"src/main/java/duke/TaskList/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.TaskList.task;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"import duke.Ui.DisplayManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":" * Class of task with type \u0027Todo\u0027.","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"public class ToDo extends Task {","lastModifiedDate":"2021-08-29"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"     * Creates a new \u0027Todo\u0027 type task, sets the description of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"     * @param description String of task name.","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"    public ToDo(String description) {","lastModifiedDate":"2021-08-29"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"        super(description);","lastModifiedDate":"2021-08-29"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"        this.taskType \u003d \"T\";","lastModifiedDate":"2021-08-29"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns the format used to display the task to the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"     * @return String data used for displaying to user.","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"    public String toString() {","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"        return DisplayManager.createListBox(this.taskType, this.getStatusIcon()) + \" \" + super.toString();","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns the format used in the storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"     * @return String data used in storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"    public String toDataFormat() {","lastModifiedDate":"2021-09-14"},{"lineNumber":33,"author":{"gitId":"BryanElmer"},"content":"        return super.toDataFormat();","lastModifiedDate":"2021-09-14"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":35,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BryanElmer":35}},{"path":"src/main/java/duke/Ui/DisplayManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.Ui;","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.task.Task;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-07"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-14"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":"import java.util.List;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":" * Class responsible for displaying messages and errors to the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"public class DisplayManager {","lastModifiedDate":"2021-08-29"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"    public static final String DISPLAY_HORIZONTAL_SEPARATOR \u003d \"    _________________________\" +","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"            \"___________________________________\";","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"    public static final String DISPLAY_MESSAGE_INDENT \u003d \"        \";","lastModifiedDate":"2021-08-31"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"    public static final String DISPLAY_TASK_INDENT \u003d \"    \";","lastModifiedDate":"2021-08-31"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"    private static final String DISPLAY_LOGO \u003d \"    ____        _        \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"            + \"   |  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"            + \"   | | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":"            + \"   | |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2021-08-29"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"            + \"   |____/ \\\\__,_|_|\\\\_\\\\___|\";","lastModifiedDate":"2021-08-29"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"    private static final String DISPLAY_GREET_START \u003d DISPLAY_HORIZONTAL_SEPARATOR + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"            \"        Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"            \"        What can I do for you?\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"            DISPLAY_HORIZONTAL_SEPARATOR;","lastModifiedDate":"2021-08-31"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"    private static final String DISPLAY_GREET_END \u003d DISPLAY_HORIZONTAL_SEPARATOR + \"\\n\" +","lastModifiedDate":"2021-08-31"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"            \"        Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2021-08-29"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"            DISPLAY_HORIZONTAL_SEPARATOR;","lastModifiedDate":"2021-08-31"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-31"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"     * Displays the welcome message.","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"    public void printStartGreet() {","lastModifiedDate":"2021-08-29"},{"lineNumber":35,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_LOGO);","lastModifiedDate":"2021-09-14"},{"lineNumber":36,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_GREET_START);","lastModifiedDate":"2021-08-29"},{"lineNumber":37,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":38,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":39,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"BryanElmer"},"content":"     * Displays the goodbye message.","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"BryanElmer"},"content":"    public void printEndGreet() {","lastModifiedDate":"2021-08-29"},{"lineNumber":43,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_GREET_END);","lastModifiedDate":"2021-08-29"},{"lineNumber":44,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":45,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":46,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"BryanElmer"},"content":"     * Displays the horizontal separator.","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"BryanElmer"},"content":"    public static void printHorizontalSeparator() {","lastModifiedDate":"2021-08-29"},{"lineNumber":50,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_HORIZONTAL_SEPARATOR);","lastModifiedDate":"2021-08-29"},{"lineNumber":51,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":52,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":53,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns a UI placeholder to store strings by using square brackets.","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"BryanElmer"},"content":"     * @param content String to be inserted between the brackets.","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"BryanElmer"},"content":"     * @return String containing the fully made UI element.","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"BryanElmer"},"content":"    private static String createBox(String content) {","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"BryanElmer"},"content":"        return \"[\" + content + \"]\";","lastModifiedDate":"2021-08-29"},{"lineNumber":60,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":61,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":62,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"BryanElmer"},"content":"     * Creates and returns two UI placeholders containing task type and task completion status.","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"BryanElmer"},"content":"     * @param taskType Single character string containing the type of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"BryanElmer"},"content":"     * @param taskStatus Single marking character to mark status of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"BryanElmer"},"content":"     * @return String containing the fully made UI element.","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"BryanElmer"},"content":"    public static String createListBox(String taskType, String taskStatus) {","lastModifiedDate":"2021-08-29"},{"lineNumber":69,"author":{"gitId":"BryanElmer"},"content":"        return createBox(taskType) + createBox(taskStatus);","lastModifiedDate":"2021-08-29"},{"lineNumber":70,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":71,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":72,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays the message for successfully creating a new task.","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"BryanElmer"},"content":"     * @param task Task successfully added into the list of tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"BryanElmer"},"content":"    public static void printCreateTask(Task task) {","lastModifiedDate":"2021-08-29"},{"lineNumber":77,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":78,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_MESSAGE_INDENT + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":79,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_MESSAGE_INDENT + DISPLAY_TASK_INDENT + task);","lastModifiedDate":"2021-08-29"},{"lineNumber":80,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_MESSAGE_INDENT + \"Now you have \" + (TaskManager.getTaskCount()) + \" tasks in the list.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":81,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":82,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":83,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":84,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays the message for listing all the tasks in the current task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"BryanElmer"},"content":"     * @param tasks ArrayList of tasks in the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"BryanElmer"},"content":"    public static void printMultipleTasks(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2021-09-14"},{"lineNumber":89,"author":{"gitId":"BryanElmer"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":90,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":91,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_MESSAGE_INDENT + \"Here are the tasks in your list:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":92,"author":{"gitId":"BryanElmer"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-08-29"},{"lineNumber":93,"author":{"gitId":"BryanElmer"},"content":"            System.out.println(DISPLAY_MESSAGE_INDENT + (counter + 1) + \". \" + task);","lastModifiedDate":"2021-08-29"},{"lineNumber":94,"author":{"gitId":"BryanElmer"},"content":"            counter++;","lastModifiedDate":"2021-08-29"},{"lineNumber":95,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":96,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":97,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":98,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":99,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":100,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays the message of tasks successfully set as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":101,"author":{"gitId":"BryanElmer"},"content":"     * @param tasks ArrayList of tasks to set as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":102,"author":{"gitId":"BryanElmer"},"content":"     * @param validIndexes Array of integers containing the indexes of tasks successfully set as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":103,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":104,"author":{"gitId":"BryanElmer"},"content":"    private static void printMultipleValidSetDone(ArrayList\u003cTask\u003e tasks, int[] validIndexes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DisplayManager.DISPLAY_MESSAGE_INDENT + \"Nice! I\u0027ve marked these tasks as done:\");","lastModifiedDate":"2021-08-29"},{"lineNumber":106,"author":{"gitId":"BryanElmer"},"content":"        for (int validIndex : validIndexes) {","lastModifiedDate":"2021-08-29"},{"lineNumber":107,"author":{"gitId":"BryanElmer"},"content":"            System.out.println(DISPLAY_MESSAGE_INDENT + DISPLAY_TASK_INDENT + tasks.get(validIndex - 1));","lastModifiedDate":"2021-09-14"},{"lineNumber":108,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":109,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":110,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":111,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays the message of tasks that were already done before when setting tasks as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"BryanElmer"},"content":"     * @param doneIndexes Array of integer containing the indexes of tasks that were already done before.","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"BryanElmer"},"content":"    private static void printMultipleAlreadyDone(int[] doneIndexes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"BryanElmer"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":117,"author":{"gitId":"BryanElmer"},"content":"        for (int doneIndex : doneIndexes) {","lastModifiedDate":"2021-08-29"},{"lineNumber":118,"author":{"gitId":"BryanElmer"},"content":"            System.out.println(DISPLAY_MESSAGE_INDENT + \"Ignoring entry \" + doneIndex","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"BryanElmer"},"content":"                    + \" as it has been done before.\");","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":121,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":122,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":123,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays the message of tasks that were successfully deleted.","lastModifiedDate":"2021-09-30"},{"lineNumber":125,"author":{"gitId":"BryanElmer"},"content":"     * @param deletedTasks ArrayList of tasks that were deleted.","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"BryanElmer"},"content":"    private static void printMultipleValidDelete(ArrayList\u003cTask\u003e deletedTasks) {","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"BryanElmer"},"content":"        if (!deletedTasks.isEmpty()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":129,"author":{"gitId":"BryanElmer"},"content":"            System.out.println(DisplayManager.DISPLAY_MESSAGE_INDENT + \"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2021-09-14"},{"lineNumber":130,"author":{"gitId":"BryanElmer"},"content":"            for (Task deletedTask : deletedTasks) {","lastModifiedDate":"2021-09-14"},{"lineNumber":131,"author":{"gitId":"BryanElmer"},"content":"                System.out.println(DISPLAY_MESSAGE_INDENT + DISPLAY_TASK_INDENT + deletedTask);","lastModifiedDate":"2021-09-14"},{"lineNumber":132,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-14"},{"lineNumber":133,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":134,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":135,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":136,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays the message of tasks that were out of range.","lastModifiedDate":"2021-09-30"},{"lineNumber":138,"author":{"gitId":"BryanElmer"},"content":"     * @param outOfRangeIndexes Array of integers containing the indexes of tasks that are out of range.","lastModifiedDate":"2021-09-30"},{"lineNumber":139,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":140,"author":{"gitId":"BryanElmer"},"content":"    private static void printMultipleOutOfRange(int[] outOfRangeIndexes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":141,"author":{"gitId":"BryanElmer"},"content":"        System.out.print(\"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":142,"author":{"gitId":"BryanElmer"},"content":"        for (int outOfRangeIndex : outOfRangeIndexes) {","lastModifiedDate":"2021-08-29"},{"lineNumber":143,"author":{"gitId":"BryanElmer"},"content":"            System.out.println(DISPLAY_MESSAGE_INDENT + \"Entry \" + outOfRangeIndex + \" does not exist.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":144,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":145,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":146,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":147,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays the whole message of the results after setting tasks as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"BryanElmer"},"content":"     * @param tasks ArrayList of tasks in the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"BryanElmer"},"content":"     * @param outOfRangeIndexes Array of integers containing indexes of tasks that are out of range.","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"BryanElmer"},"content":"     * @param validIndexes Array of integers containing indexes of tasks that are valid to set as done.","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"BryanElmer"},"content":"     * @param doneIndexes Array of integers containing indexes of tasks already done before.","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"BryanElmer"},"content":"    public static void printSetAsDoneResult(","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"BryanElmer"},"content":"            ArrayList\u003cTask\u003e tasks, int[] outOfRangeIndexes, int[] validIndexes, int[] doneIndexes) {","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"BryanElmer"},"content":"        int outOfRangeCount, validIndexCount, doneIndexCount;","lastModifiedDate":"2021-08-29"},{"lineNumber":158,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":159,"author":{"gitId":"BryanElmer"},"content":"        if (outOfRangeIndexes \u003d\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":160,"author":{"gitId":"BryanElmer"},"content":"            outOfRangeCount \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":161,"author":{"gitId":"BryanElmer"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":162,"author":{"gitId":"BryanElmer"},"content":"            outOfRangeCount \u003d outOfRangeIndexes.length;","lastModifiedDate":"2021-08-29"},{"lineNumber":163,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":164,"author":{"gitId":"BryanElmer"},"content":"        if (validIndexes \u003d\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":165,"author":{"gitId":"BryanElmer"},"content":"            validIndexCount \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":166,"author":{"gitId":"BryanElmer"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":167,"author":{"gitId":"BryanElmer"},"content":"            validIndexCount \u003d validIndexes.length;","lastModifiedDate":"2021-08-29"},{"lineNumber":168,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":169,"author":{"gitId":"BryanElmer"},"content":"        if (doneIndexes \u003d\u003d null) {","lastModifiedDate":"2021-08-29"},{"lineNumber":170,"author":{"gitId":"BryanElmer"},"content":"            doneIndexCount \u003d 0;","lastModifiedDate":"2021-08-29"},{"lineNumber":171,"author":{"gitId":"BryanElmer"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":172,"author":{"gitId":"BryanElmer"},"content":"            doneIndexCount \u003d doneIndexes.length;","lastModifiedDate":"2021-08-29"},{"lineNumber":173,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":174,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":175,"author":{"gitId":"BryanElmer"},"content":"        if (outOfRangeCount + validIndexCount + doneIndexCount \u003d\u003d 0 \u0026\u0026 TaskManager.hasInvalidIndex) {","lastModifiedDate":"2021-08-29"},{"lineNumber":176,"author":{"gitId":"BryanElmer"},"content":"            printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":177,"author":{"gitId":"BryanElmer"},"content":"            TaskManager.hasInvalidIndex \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":178,"author":{"gitId":"BryanElmer"},"content":"            return;","lastModifiedDate":"2021-08-29"},{"lineNumber":179,"author":{"gitId":"BryanElmer"},"content":"        } else if (outOfRangeCount + validIndexCount + doneIndexCount \u003d\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":180,"author":{"gitId":"BryanElmer"},"content":"            return;","lastModifiedDate":"2021-08-29"},{"lineNumber":181,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":182,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":183,"author":{"gitId":"BryanElmer"},"content":"        if (!TaskManager.hasInvalidIndex) {","lastModifiedDate":"2021-08-29"},{"lineNumber":184,"author":{"gitId":"BryanElmer"},"content":"            printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":185,"author":{"gitId":"BryanElmer"},"content":"        } else {","lastModifiedDate":"2021-08-29"},{"lineNumber":186,"author":{"gitId":"BryanElmer"},"content":"            TaskManager.hasInvalidIndex \u003d false;","lastModifiedDate":"2021-08-29"},{"lineNumber":187,"author":{"gitId":"BryanElmer"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2021-08-29"},{"lineNumber":188,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":189,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":190,"author":{"gitId":"BryanElmer"},"content":"        if (validIndexCount !\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":191,"author":{"gitId":"BryanElmer"},"content":"            printMultipleValidSetDone(tasks, validIndexes);","lastModifiedDate":"2021-09-14"},{"lineNumber":192,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":193,"author":{"gitId":"BryanElmer"},"content":"        if (doneIndexCount !\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":194,"author":{"gitId":"BryanElmer"},"content":"            printMultipleAlreadyDone(doneIndexes);","lastModifiedDate":"2021-09-14"},{"lineNumber":195,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":196,"author":{"gitId":"BryanElmer"},"content":"        if (outOfRangeCount !\u003d 0) {","lastModifiedDate":"2021-08-29"},{"lineNumber":197,"author":{"gitId":"BryanElmer"},"content":"            printMultipleOutOfRange(outOfRangeIndexes);","lastModifiedDate":"2021-09-14"},{"lineNumber":198,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":199,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":200,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":201,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":202,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":203,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":204,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays the whole message of the results after deleting tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":205,"author":{"gitId":"BryanElmer"},"content":"     * @param deletedTasks ArrayList of tasks deleted successfully.","lastModifiedDate":"2021-09-30"},{"lineNumber":206,"author":{"gitId":"BryanElmer"},"content":"     * @param outOfRangeIndexes Array of integers containing indexes of tasks that are out of range.","lastModifiedDate":"2021-09-30"},{"lineNumber":207,"author":{"gitId":"BryanElmer"},"content":"     * @param taskCount Number of tasks in the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":208,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":209,"author":{"gitId":"BryanElmer"},"content":"    public static void printDeleteTasksResult(ArrayList\u003cTask\u003e deletedTasks, int[] outOfRangeIndexes, int taskCount) {","lastModifiedDate":"2021-09-14"},{"lineNumber":210,"author":{"gitId":"BryanElmer"},"content":"        int outOfRangeCount;","lastModifiedDate":"2021-09-14"},{"lineNumber":211,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":212,"author":{"gitId":"BryanElmer"},"content":"        if (outOfRangeIndexes \u003d\u003d null) {","lastModifiedDate":"2021-09-14"},{"lineNumber":213,"author":{"gitId":"BryanElmer"},"content":"            outOfRangeCount \u003d 0;","lastModifiedDate":"2021-09-14"},{"lineNumber":214,"author":{"gitId":"BryanElmer"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":215,"author":{"gitId":"BryanElmer"},"content":"            outOfRangeCount \u003d outOfRangeIndexes.length;","lastModifiedDate":"2021-09-14"},{"lineNumber":216,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":217,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":218,"author":{"gitId":"BryanElmer"},"content":"        if (outOfRangeCount \u003d\u003d 0 \u0026\u0026 deletedTasks.isEmpty() \u0026\u0026 TaskManager.hasInvalidIndex) {","lastModifiedDate":"2021-09-14"},{"lineNumber":219,"author":{"gitId":"BryanElmer"},"content":"            printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":220,"author":{"gitId":"BryanElmer"},"content":"            TaskManager.hasInvalidIndex \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":221,"author":{"gitId":"BryanElmer"},"content":"            return;","lastModifiedDate":"2021-09-14"},{"lineNumber":222,"author":{"gitId":"BryanElmer"},"content":"        } else if (outOfRangeCount \u003d\u003d 0 \u0026\u0026 deletedTasks.isEmpty()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":223,"author":{"gitId":"BryanElmer"},"content":"            return;","lastModifiedDate":"2021-09-14"},{"lineNumber":224,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":225,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":226,"author":{"gitId":"BryanElmer"},"content":"        if (!TaskManager.hasInvalidIndex) {","lastModifiedDate":"2021-09-14"},{"lineNumber":227,"author":{"gitId":"BryanElmer"},"content":"            printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":228,"author":{"gitId":"BryanElmer"},"content":"        } else {","lastModifiedDate":"2021-09-14"},{"lineNumber":229,"author":{"gitId":"BryanElmer"},"content":"            TaskManager.hasInvalidIndex \u003d false;","lastModifiedDate":"2021-09-14"},{"lineNumber":230,"author":{"gitId":"BryanElmer"},"content":"            System.out.print(\"\\n\");","lastModifiedDate":"2021-09-14"},{"lineNumber":231,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":232,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":233,"author":{"gitId":"BryanElmer"},"content":"        printMultipleValidDelete(deletedTasks);","lastModifiedDate":"2021-09-14"},{"lineNumber":234,"author":{"gitId":"BryanElmer"},"content":"        if (outOfRangeCount !\u003d 0) {","lastModifiedDate":"2021-09-14"},{"lineNumber":235,"author":{"gitId":"BryanElmer"},"content":"            printMultipleOutOfRange(outOfRangeIndexes);","lastModifiedDate":"2021-09-14"},{"lineNumber":236,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":237,"author":{"gitId":"BryanElmer"},"content":"        if (!deletedTasks.isEmpty()) {","lastModifiedDate":"2021-09-14"},{"lineNumber":238,"author":{"gitId":"BryanElmer"},"content":"            System.out.println(DISPLAY_MESSAGE_INDENT + \"Now you have \" + taskCount + \" tasks in your list.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":239,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-14"},{"lineNumber":240,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":241,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":242,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":243,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":244,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays the whole message of results after searching for a keyword name in task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":245,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":246,"author":{"gitId":"BryanElmer"},"content":"    public static void printFindResult(List\u003cTask\u003e queryResults) {","lastModifiedDate":"2021-09-29"},{"lineNumber":247,"author":{"gitId":"BryanElmer"},"content":"        int counter \u003d 0;","lastModifiedDate":"2021-09-29"},{"lineNumber":248,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-29"},{"lineNumber":249,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_MESSAGE_INDENT + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2021-09-29"},{"lineNumber":250,"author":{"gitId":"BryanElmer"},"content":"        for (Task queryResult : queryResults) {","lastModifiedDate":"2021-09-29"},{"lineNumber":251,"author":{"gitId":"BryanElmer"},"content":"            System.out.println(DISPLAY_MESSAGE_INDENT + (counter + 1) + \". \" + queryResult);","lastModifiedDate":"2021-09-29"},{"lineNumber":252,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":253,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-29"},{"lineNumber":254,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":256,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":257,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays error message of having no tasks when listing all the tasks in the task list.","lastModifiedDate":"2021-09-30"},{"lineNumber":258,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":259,"author":{"gitId":"BryanElmer"},"content":"    public static void printErrorList() {","lastModifiedDate":"2021-08-29"},{"lineNumber":260,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":261,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_MESSAGE_INDENT + \"No tasks found in the list.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":262,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-08-29"},{"lineNumber":263,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":264,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-08-29"},{"lineNumber":265,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":266,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays error message of indexes that are invalid.","lastModifiedDate":"2021-09-30"},{"lineNumber":267,"author":{"gitId":"BryanElmer"},"content":"     * @param invalidIndexes Array of strings containing invalid task indexes.","lastModifiedDate":"2021-09-30"},{"lineNumber":268,"author":{"gitId":"BryanElmer"},"content":"     * @param invalidCount Number of invalid indexes.","lastModifiedDate":"2021-09-30"},{"lineNumber":269,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":270,"author":{"gitId":"BryanElmer"},"content":"    public static void printErrorIndex(String[] invalidIndexes, int invalidCount) {","lastModifiedDate":"2021-08-29"},{"lineNumber":271,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":272,"author":{"gitId":"BryanElmer"},"content":"        for (int i \u003d 0; i \u003c invalidCount; i++) {","lastModifiedDate":"2021-08-29"},{"lineNumber":273,"author":{"gitId":"BryanElmer"},"content":"            System.out.println(DISPLAY_MESSAGE_INDENT + invalidIndexes[i] + \" is not a valid index.\");","lastModifiedDate":"2021-08-29"},{"lineNumber":274,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-08-29"},{"lineNumber":275,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-08-29"},{"lineNumber":276,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":277,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":278,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays error message of loading data from storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":279,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":280,"author":{"gitId":"BryanElmer"},"content":"    public void printErrorLoadingData() {","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":282,"author":{"gitId":"BryanElmer"},"content":"        System.out.println( DISPLAY_MESSAGE_INDENT + \"Error while trying to load data file\");","lastModifiedDate":"2021-09-14"},{"lineNumber":283,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":284,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":285,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":286,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":287,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays error message of updating data into storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":288,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":289,"author":{"gitId":"BryanElmer"},"content":"    public static void printErrorFileUpdate() {","lastModifiedDate":"2021-09-14"},{"lineNumber":290,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":291,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_MESSAGE_INDENT + \"Error while trying to update tasks into file\");","lastModifiedDate":"2021-09-14"},{"lineNumber":292,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":293,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":294,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":295,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":296,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays error message of updating status of tasks into storage file.","lastModifiedDate":"2021-09-30"},{"lineNumber":297,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":298,"author":{"gitId":"BryanElmer"},"content":"    public static void printErrorMarkDoneUpdate() {","lastModifiedDate":"2021-09-14"},{"lineNumber":299,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":300,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(DISPLAY_MESSAGE_INDENT + \"Error occurred while updating file after marking tasks as done.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":301,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":302,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":303,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-14"},{"lineNumber":304,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":305,"author":{"gitId":"BryanElmer"},"content":"     * Creates and displays error message of updating storage file after deleting tasks.","lastModifiedDate":"2021-09-30"},{"lineNumber":306,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":307,"author":{"gitId":"BryanElmer"},"content":"    public static void printErrorDeleteUpdate() {","lastModifiedDate":"2021-09-14"},{"lineNumber":308,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":309,"author":{"gitId":"BryanElmer"},"content":"        System.out.println(\"Error occurred when trying to save file after deleting task.\");","lastModifiedDate":"2021-09-14"},{"lineNumber":310,"author":{"gitId":"BryanElmer"},"content":"        printHorizontalSeparator();","lastModifiedDate":"2021-09-14"},{"lineNumber":311,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-14"},{"lineNumber":312,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-08-29"}],"authorContributionMap":{"BryanElmer":312}},{"path":"src/main/java/duke/Ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"package duke.Ui;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"import duke.Error.DukeException;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.TaskManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.Command;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.DeadlineCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.DeleteCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.EventCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.ExitCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.FindCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.ListCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.SetDoneCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"BryanElmer"},"content":"import duke.TaskList.command.ToDoCommand;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"BryanElmer"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"BryanElmer"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"BryanElmer"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"BryanElmer"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"BryanElmer"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"BryanElmer"},"content":" * Class responsible to parse user commands.","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"public class Parser {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"    private static final int INDEX_COMMAND \u003d 0;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":"    private static final int INDEX_TASK_INFO \u003d 1;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"BryanElmer"},"content":"    private static final int INDEX_DATE \u003d 0;","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"BryanElmer"},"content":"    private static final int INDEX_TIME \u003d 1;","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"BryanElmer"},"content":"    private static final String DATE_TIME_FORMAT \u003d \"dd MMM yyyy HH:mm\";","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"BryanElmer"},"content":"    private static final String COMMAND_LIST_TASK \u003d \"list\";","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"BryanElmer"},"content":"    private static final String COMMAND_ADD_TODO \u003d \"todo\";","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"BryanElmer"},"content":"    private static final String COMMAND_ADD_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"BryanElmer"},"content":"    private static final String COMMAND_ADD_EVENT \u003d \"event\";","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"BryanElmer"},"content":"    private static final String COMMAND_FINISH_TASK \u003d \"done\";","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"BryanElmer"},"content":"    private static final String COMMAND_DELETE_TASK \u003d \"delete\";","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"BryanElmer"},"content":"    private static final String COMMAND_FIND_TASK \u003d \"find\";","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"BryanElmer"},"content":"    private static final String COMMAND_EXIT \u003d \"bye\";","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"BryanElmer"},"content":"     * Extracts the command type from the full user input.","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"BryanElmer"},"content":"     * @param fullCommand String containing the full command from the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"BryanElmer"},"content":"     * @return String containing the command type from the user input.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"BryanElmer"},"content":"    public String extractCommand(String fullCommand) {","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"BryanElmer"},"content":"        String[] inputs \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"BryanElmer"},"content":"        return inputs[INDEX_COMMAND];","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":52,"author":{"gitId":"BryanElmer"},"content":"     * Extracts the indexes or task info from the full user input.","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"BryanElmer"},"content":"     * @param fullCommand String containing the full command from the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"BryanElmer"},"content":"     * @return String containing indexes or task info from the user input.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"BryanElmer"},"content":"    public String extractTaskInfo(String fullCommand) {","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"BryanElmer"},"content":"        String[] inputs \u003d fullCommand.split(\" \", 2);","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"BryanElmer"},"content":"        return inputs[INDEX_TASK_INFO];","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"BryanElmer"},"content":"     * Splits the task description from dateTime for \u0027deadline\u0027 and \u0027event\u0027 task types.","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"BryanElmer"},"content":"     * @param taskInfo contains the information of the task.","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"BryanElmer"},"content":"     * @return Array of strings where index 0: description, and index 1: dateTime.","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"BryanElmer"},"content":"    public String[] splitTaskComponents(String taskInfo) {","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"BryanElmer"},"content":"        String[] taskComponents;","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"BryanElmer"},"content":"        taskComponents \u003d taskInfo.replace(\"/\", \"#/\").split(\"#\");","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":70,"author":{"gitId":"BryanElmer"},"content":"        for (int i \u003d 0; i \u003c taskComponents.length; i++) {","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"BryanElmer"},"content":"            String taskComponent \u003d taskComponents[i].replaceAll(\"/by\", \"\");","lastModifiedDate":"2021-09-28"},{"lineNumber":72,"author":{"gitId":"BryanElmer"},"content":"            taskComponent \u003d taskComponent.replaceAll(\"/at\", \"\");","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"BryanElmer"},"content":"            taskComponents[i] \u003d taskComponent.trim();","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":75,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"BryanElmer"},"content":"        return taskComponents;","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"BryanElmer"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"BryanElmer"},"content":"     * This function processes the command from the user and returns the corresponding command object to be executed.","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"BryanElmer"},"content":"     * @param taskManager TaskManager object used to perform task operations.","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"BryanElmer"},"content":"     * @param parser Parser object used to perform parsing operations.","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"BryanElmer"},"content":"     * @param fullCommand String containing full command from user.","lastModifiedDate":"2021-09-29"},{"lineNumber":84,"author":{"gitId":"BryanElmer"},"content":"     * @return Corresponding command object from user command.","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"BryanElmer"},"content":"     * @throws DukeException Handles the errors related to Duke.","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"BryanElmer"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"BryanElmer"},"content":"    public Command parse(TaskManager taskManager, Parser parser, String fullCommand) throws DukeException {","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"BryanElmer"},"content":"        Command command;","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"BryanElmer"},"content":"        String taskInfo;","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"BryanElmer"},"content":"        String commandType \u003d extractCommand(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"BryanElmer"},"content":"        switch(commandType) {","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"BryanElmer"},"content":"        case COMMAND_LIST_TASK:","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"BryanElmer"},"content":"            command \u003d new ListCommand(taskManager);","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":96,"author":{"gitId":"BryanElmer"},"content":"        case COMMAND_ADD_TODO:","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"BryanElmer"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"BryanElmer"},"content":"                taskInfo \u003d extractTaskInfo(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"BryanElmer"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"BryanElmer"},"content":"                throw new DukeException(\"The description of \" + commandType + \" cannot be empty.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"BryanElmer"},"content":"            command \u003d new ToDoCommand(taskManager, taskInfo);","lastModifiedDate":"2021-09-29"},{"lineNumber":103,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"BryanElmer"},"content":"        case COMMAND_ADD_DEADLINE:","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"BryanElmer"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"BryanElmer"},"content":"                taskInfo \u003d extractTaskInfo(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":107,"author":{"gitId":"BryanElmer"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"BryanElmer"},"content":"                throw new DukeException(\"The description of \" + commandType + \" cannot be empty.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"BryanElmer"},"content":"            command \u003d new DeadlineCommand(taskManager, parser, taskInfo);","lastModifiedDate":"2021-09-29"},{"lineNumber":111,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":112,"author":{"gitId":"BryanElmer"},"content":"        case COMMAND_ADD_EVENT:","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"BryanElmer"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"BryanElmer"},"content":"                taskInfo \u003d extractTaskInfo(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"BryanElmer"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"BryanElmer"},"content":"                throw new DukeException(\"The description of \" + commandType + \" cannot be empty.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"BryanElmer"},"content":"            command \u003d new EventCommand(taskManager, parser, taskInfo);","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":120,"author":{"gitId":"BryanElmer"},"content":"        case COMMAND_FINISH_TASK:","lastModifiedDate":"2021-09-29"},{"lineNumber":121,"author":{"gitId":"BryanElmer"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"BryanElmer"},"content":"                taskInfo \u003d extractTaskInfo(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"BryanElmer"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"BryanElmer"},"content":"                throw new DukeException(\"The description of \" + commandType + \" cannot be empty.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"BryanElmer"},"content":"            command \u003d new SetDoneCommand(taskManager, taskInfo);","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"BryanElmer"},"content":"        case COMMAND_DELETE_TASK:","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"BryanElmer"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"BryanElmer"},"content":"                taskInfo \u003d extractTaskInfo(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"BryanElmer"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"BryanElmer"},"content":"                throw new DukeException(\"The description of \" + commandType + \" cannot be empty.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"BryanElmer"},"content":"            command \u003d new DeleteCommand(taskManager, taskInfo);","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"BryanElmer"},"content":"        case COMMAND_FIND_TASK:","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"BryanElmer"},"content":"            try {","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"BryanElmer"},"content":"                taskInfo \u003d extractTaskInfo(fullCommand);","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"BryanElmer"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"BryanElmer"},"content":"                throw new DukeException(\"The description of \" + commandType + \" cannot be empty.\");","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"BryanElmer"},"content":"            }","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"BryanElmer"},"content":"            command \u003d new FindCommand(taskManager, taskInfo);","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"BryanElmer"},"content":"        case COMMAND_EXIT:","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"BryanElmer"},"content":"            command \u003d new ExitCommand();","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"BryanElmer"},"content":"            break;","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"BryanElmer"},"content":"        default:","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"BryanElmer"},"content":"            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"BryanElmer"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"BryanElmer"},"content":"        return command;","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":153,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":154,"author":{"gitId":"BryanElmer"},"content":"    public String parseDateTime(String dateTime) {","lastModifiedDate":"2021-09-30"},{"lineNumber":155,"author":{"gitId":"BryanElmer"},"content":"        String[] dateTimeComponents \u003d dateTime.split(\" \");","lastModifiedDate":"2021-09-30"},{"lineNumber":156,"author":{"gitId":"BryanElmer"},"content":"        LocalDate date \u003d LocalDate.parse(dateTimeComponents[INDEX_DATE]);","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"BryanElmer"},"content":"        LocalTime time \u003d LocalTime.parse(dateTimeComponents[INDEX_TIME]);","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"BryanElmer"},"content":"        LocalDateTime localDateTime \u003d LocalDateTime.of(date, time);","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"BryanElmer"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":160,"author":{"gitId":"BryanElmer"},"content":"        return localDateTime.format(DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"BryanElmer"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":162,"author":{"gitId":"BryanElmer"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"BryanElmer":162}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BryanElmer"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":2,"author":{"gitId":"BryanElmer"},"content":"todo read book","lastModifiedDate":"2021-08-31"},{"lineNumber":3,"author":{"gitId":"BryanElmer"},"content":"deadline return book /by June 6th","lastModifiedDate":"2021-08-31"},{"lineNumber":4,"author":{"gitId":"BryanElmer"},"content":"event project meeting /at Aug 6th 2-4pm","lastModifiedDate":"2021-08-31"},{"lineNumber":5,"author":{"gitId":"BryanElmer"},"content":"todo join sports club","lastModifiedDate":"2021-08-31"},{"lineNumber":6,"author":{"gitId":"BryanElmer"},"content":"done 1 4","lastModifiedDate":"2021-08-31"},{"lineNumber":7,"author":{"gitId":"BryanElmer"},"content":"todo borrow book","lastModifiedDate":"2021-08-31"},{"lineNumber":8,"author":{"gitId":"BryanElmer"},"content":"list","lastModifiedDate":"2021-08-31"},{"lineNumber":9,"author":{"gitId":"BryanElmer"},"content":"deadline return book /by Sunday","lastModifiedDate":"2021-08-31"},{"lineNumber":10,"author":{"gitId":"BryanElmer"},"content":"event project meeting /at Mon 2-4pm","lastModifiedDate":"2021-08-31"},{"lineNumber":11,"author":{"gitId":"BryanElmer"},"content":"bye","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"BryanElmer":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"BryanElmer"},"content":"if ERRORLEVEL 1 (","lastModifiedDate":"2021-08-31"},{"lineNumber":23,"author":{"gitId":"BryanElmer"},"content":"    echo different","lastModifiedDate":"2021-08-31"},{"lineNumber":24,"author":{"gitId":"BryanElmer"},"content":") else (","lastModifiedDate":"2021-08-31"},{"lineNumber":25,"author":{"gitId":"BryanElmer"},"content":"   echo same","lastModifiedDate":"2021-08-31"},{"lineNumber":26,"author":{"gitId":"BryanElmer"},"content":")","lastModifiedDate":"2021-08-31"}],"authorContributionMap":{"BryanElmer":5,"-":21}}]
